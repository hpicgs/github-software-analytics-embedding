var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b2) => {
  for (var prop in b2 || (b2 = {}))
    if (__hasOwnProp.call(b2, prop))
      __defNormalProp(a, prop, b2[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b2)) {
      if (__propIsEnum.call(b2, prop))
        __defNormalProp(a, prop, b2[prop]);
    }
  return a;
};
var __spreadProps = (a, b2) => __defProps(a, __getOwnPropDescs(b2));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
function _mergeNamespaces(n2, m2) {
  m2.forEach(function(e2) {
    e2 && typeof e2 !== "string" && !Array.isArray(e2) && Object.keys(e2).forEach(function(k2) {
      if (k2 !== "default" && !(k2 in n2)) {
        var d2 = Object.getOwnPropertyDescriptor(e2, k2);
        Object.defineProperty(n2, k2, d2.get ? d2 : {
          enumerable: true,
          get: function() {
            return e2[k2];
          }
        });
      }
    });
  });
  return Object.freeze(n2);
}
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function getAugmentedNamespace(n2) {
  if (n2.__esModule)
    return n2;
  var a = Object.defineProperty({}, "__esModule", { value: true });
  Object.keys(n2).forEach(function(k2) {
    var d2 = Object.getOwnPropertyDescriptor(n2, k2);
    Object.defineProperty(a, k2, d2.get ? d2 : {
      enumerable: true,
      get: function() {
        return n2[k2];
      }
    });
  });
  return a;
}
var reactDom = { exports: {} };
var reactDom_production_min = {};
var react = { exports: {} };
var react_production_min = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var l$2 = Symbol.for("react.element"), n$2 = Symbol.for("react.portal"), p$3 = Symbol.for("react.fragment"), q$2 = Symbol.for("react.strict_mode"), r$1 = Symbol.for("react.profiler"), t$2 = Symbol.for("react.provider"), u = Symbol.for("react.context"), v$1 = Symbol.for("react.forward_ref"), w$1 = Symbol.for("react.suspense"), x$1 = Symbol.for("react.memo"), y$1 = Symbol.for("react.lazy"), z$2 = Symbol.iterator;
function A$2(a) {
  if (a === null || typeof a !== "object")
    return null;
  a = z$2 && a[z$2] || a["@@iterator"];
  return typeof a === "function" ? a : null;
}
var B$1 = { isMounted: function() {
  return false;
}, enqueueForceUpdate: function() {
}, enqueueReplaceState: function() {
}, enqueueSetState: function() {
} }, C$1 = Object.assign, D$1 = {};
function E$1(a, b2, e2) {
  this.props = a;
  this.context = b2;
  this.refs = D$1;
  this.updater = e2 || B$1;
}
E$1.prototype.isReactComponent = {};
E$1.prototype.setState = function(a, b2) {
  if (typeof a !== "object" && typeof a !== "function" && a != null)
    throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
  this.updater.enqueueSetState(this, a, b2, "setState");
};
E$1.prototype.forceUpdate = function(a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};
function F() {
}
F.prototype = E$1.prototype;
function G$1(a, b2, e2) {
  this.props = a;
  this.context = b2;
  this.refs = D$1;
  this.updater = e2 || B$1;
}
var H$1 = G$1.prototype = new F();
H$1.constructor = G$1;
C$1(H$1, E$1.prototype);
H$1.isPureReactComponent = true;
var I$1 = Array.isArray, J = Object.prototype.hasOwnProperty, K$1 = { current: null }, L$1 = { key: true, ref: true, __self: true, __source: true };
function M$1(a, b2, e2) {
  var d2, c2 = {}, k2 = null, h2 = null;
  if (b2 != null)
    for (d2 in b2.ref !== void 0 && (h2 = b2.ref), b2.key !== void 0 && (k2 = "" + b2.key), b2)
      J.call(b2, d2) && !L$1.hasOwnProperty(d2) && (c2[d2] = b2[d2]);
  var g2 = arguments.length - 2;
  if (g2 === 1)
    c2.children = e2;
  else if (1 < g2) {
    for (var f2 = Array(g2), m2 = 0; m2 < g2; m2++)
      f2[m2] = arguments[m2 + 2];
    c2.children = f2;
  }
  if (a && a.defaultProps)
    for (d2 in g2 = a.defaultProps, g2)
      c2[d2] === void 0 && (c2[d2] = g2[d2]);
  return { $$typeof: l$2, type: a, key: k2, ref: h2, props: c2, _owner: K$1.current };
}
function N$1(a, b2) {
  return { $$typeof: l$2, type: a.type, key: b2, ref: a.ref, props: a.props, _owner: a._owner };
}
function O$1(a) {
  return typeof a === "object" && a !== null && a.$$typeof === l$2;
}
function escape$1(a) {
  var b2 = { "=": "=0", ":": "=2" };
  return "$" + a.replace(/[=:]/g, function(a2) {
    return b2[a2];
  });
}
var P$1 = /\/+/g;
function Q$1(a, b2) {
  return typeof a === "object" && a !== null && a.key != null ? escape$1("" + a.key) : b2.toString(36);
}
function R$1(a, b2, e2, d2, c2) {
  var k2 = typeof a;
  if (k2 === "undefined" || k2 === "boolean")
    a = null;
  var h2 = false;
  if (a === null)
    h2 = true;
  else
    switch (k2) {
      case "string":
      case "number":
        h2 = true;
        break;
      case "object":
        switch (a.$$typeof) {
          case l$2:
          case n$2:
            h2 = true;
        }
    }
  if (h2)
    return h2 = a, c2 = c2(h2), a = d2 === "" ? "." + Q$1(h2, 0) : d2, I$1(c2) ? (e2 = "", a != null && (e2 = a.replace(P$1, "$&/") + "/"), R$1(c2, b2, e2, "", function(a2) {
      return a2;
    })) : c2 != null && (O$1(c2) && (c2 = N$1(c2, e2 + (!c2.key || h2 && h2.key === c2.key ? "" : ("" + c2.key).replace(P$1, "$&/") + "/") + a)), b2.push(c2)), 1;
  h2 = 0;
  d2 = d2 === "" ? "." : d2 + ":";
  if (I$1(a))
    for (var g2 = 0; g2 < a.length; g2++) {
      k2 = a[g2];
      var f2 = d2 + Q$1(k2, g2);
      h2 += R$1(k2, b2, e2, f2, c2);
    }
  else if (f2 = A$2(a), typeof f2 === "function")
    for (a = f2.call(a), g2 = 0; !(k2 = a.next()).done; )
      k2 = k2.value, f2 = d2 + Q$1(k2, g2++), h2 += R$1(k2, b2, e2, f2, c2);
  else if (k2 === "object")
    throw b2 = String(a), Error("Objects are not valid as a React child (found: " + (b2 === "[object Object]" ? "object with keys {" + Object.keys(a).join(", ") + "}" : b2) + "). If you meant to render a collection of children, use an array instead.");
  return h2;
}
function S$1(a, b2, e2) {
  if (a == null)
    return a;
  var d2 = [], c2 = 0;
  R$1(a, d2, "", "", function(a2) {
    return b2.call(e2, a2, c2++);
  });
  return d2;
}
function T$1(a) {
  if (a._status === -1) {
    var b2 = a._result;
    b2 = b2();
    b2.then(function(b3) {
      if (a._status === 0 || a._status === -1)
        a._status = 1, a._result = b3;
    }, function(b3) {
      if (a._status === 0 || a._status === -1)
        a._status = 2, a._result = b3;
    });
    a._status === -1 && (a._status = 0, a._result = b2);
  }
  if (a._status === 1)
    return a._result.default;
  throw a._result;
}
var U$1 = { current: null }, V$1 = { transition: null }, W$1 = { ReactCurrentDispatcher: U$1, ReactCurrentBatchConfig: V$1, ReactCurrentOwner: K$1 };
react_production_min.Children = { map: S$1, forEach: function(a, b2, e2) {
  S$1(a, function() {
    b2.apply(this, arguments);
  }, e2);
}, count: function(a) {
  var b2 = 0;
  S$1(a, function() {
    b2++;
  });
  return b2;
}, toArray: function(a) {
  return S$1(a, function(a2) {
    return a2;
  }) || [];
}, only: function(a) {
  if (!O$1(a))
    throw Error("React.Children.only expected to receive a single React element child.");
  return a;
} };
react_production_min.Component = E$1;
react_production_min.Fragment = p$3;
react_production_min.Profiler = r$1;
react_production_min.PureComponent = G$1;
react_production_min.StrictMode = q$2;
react_production_min.Suspense = w$1;
react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W$1;
react_production_min.cloneElement = function(a, b2, e2) {
  if (a === null || a === void 0)
    throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a + ".");
  var d2 = C$1({}, a.props), c2 = a.key, k2 = a.ref, h2 = a._owner;
  if (b2 != null) {
    b2.ref !== void 0 && (k2 = b2.ref, h2 = K$1.current);
    b2.key !== void 0 && (c2 = "" + b2.key);
    if (a.type && a.type.defaultProps)
      var g2 = a.type.defaultProps;
    for (f2 in b2)
      J.call(b2, f2) && !L$1.hasOwnProperty(f2) && (d2[f2] = b2[f2] === void 0 && g2 !== void 0 ? g2[f2] : b2[f2]);
  }
  var f2 = arguments.length - 2;
  if (f2 === 1)
    d2.children = e2;
  else if (1 < f2) {
    g2 = Array(f2);
    for (var m2 = 0; m2 < f2; m2++)
      g2[m2] = arguments[m2 + 2];
    d2.children = g2;
  }
  return { $$typeof: l$2, type: a.type, key: c2, ref: k2, props: d2, _owner: h2 };
};
react_production_min.createContext = function(a) {
  a = { $$typeof: u, _currentValue: a, _currentValue2: a, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null };
  a.Provider = { $$typeof: t$2, _context: a };
  return a.Consumer = a;
};
react_production_min.createElement = M$1;
react_production_min.createFactory = function(a) {
  var b2 = M$1.bind(null, a);
  b2.type = a;
  return b2;
};
react_production_min.createRef = function() {
  return { current: null };
};
react_production_min.forwardRef = function(a) {
  return { $$typeof: v$1, render: a };
};
react_production_min.isValidElement = O$1;
react_production_min.lazy = function(a) {
  return { $$typeof: y$1, _payload: { _status: -1, _result: a }, _init: T$1 };
};
react_production_min.memo = function(a, b2) {
  return { $$typeof: x$1, type: a, compare: b2 === void 0 ? null : b2 };
};
react_production_min.startTransition = function(a) {
  var b2 = V$1.transition;
  V$1.transition = {};
  try {
    a();
  } finally {
    V$1.transition = b2;
  }
};
react_production_min.unstable_act = function() {
  throw Error("act(...) is not supported in production builds of React.");
};
react_production_min.useCallback = function(a, b2) {
  return U$1.current.useCallback(a, b2);
};
react_production_min.useContext = function(a) {
  return U$1.current.useContext(a);
};
react_production_min.useDebugValue = function() {
};
react_production_min.useDeferredValue = function(a) {
  return U$1.current.useDeferredValue(a);
};
react_production_min.useEffect = function(a, b2) {
  return U$1.current.useEffect(a, b2);
};
react_production_min.useId = function() {
  return U$1.current.useId();
};
react_production_min.useImperativeHandle = function(a, b2, e2) {
  return U$1.current.useImperativeHandle(a, b2, e2);
};
react_production_min.useInsertionEffect = function(a, b2) {
  return U$1.current.useInsertionEffect(a, b2);
};
react_production_min.useLayoutEffect = function(a, b2) {
  return U$1.current.useLayoutEffect(a, b2);
};
react_production_min.useMemo = function(a, b2) {
  return U$1.current.useMemo(a, b2);
};
react_production_min.useReducer = function(a, b2, e2) {
  return U$1.current.useReducer(a, b2, e2);
};
react_production_min.useRef = function(a) {
  return U$1.current.useRef(a);
};
react_production_min.useState = function(a) {
  return U$1.current.useState(a);
};
react_production_min.useSyncExternalStore = function(a, b2, e2) {
  return U$1.current.useSyncExternalStore(a, b2, e2);
};
react_production_min.useTransition = function() {
  return U$1.current.useTransition();
};
react_production_min.version = "18.1.0";
{
  react.exports = react_production_min;
}
var React = react.exports;
var React$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ _mergeNamespaces({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": React
}, [react.exports]));
var scheduler = { exports: {} };
var scheduler_production_min = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
(function(exports) {
  function f2(a, b2) {
    var c2 = a.length;
    a.push(b2);
    a:
      for (; 0 < c2; ) {
        var d2 = c2 - 1 >>> 1, e2 = a[d2];
        if (0 < g2(e2, b2))
          a[d2] = b2, a[c2] = e2, c2 = d2;
        else
          break a;
      }
  }
  function h2(a) {
    return a.length === 0 ? null : a[0];
  }
  function k2(a) {
    if (a.length === 0)
      return null;
    var b2 = a[0], c2 = a.pop();
    if (c2 !== b2) {
      a[0] = c2;
      a:
        for (var d2 = 0, e2 = a.length, w2 = e2 >>> 1; d2 < w2; ) {
          var m2 = 2 * (d2 + 1) - 1, C2 = a[m2], n2 = m2 + 1, x2 = a[n2];
          if (0 > g2(C2, c2))
            n2 < e2 && 0 > g2(x2, C2) ? (a[d2] = x2, a[n2] = c2, d2 = n2) : (a[d2] = C2, a[m2] = c2, d2 = m2);
          else if (n2 < e2 && 0 > g2(x2, c2))
            a[d2] = x2, a[n2] = c2, d2 = n2;
          else
            break a;
        }
    }
    return b2;
  }
  function g2(a, b2) {
    var c2 = a.sortIndex - b2.sortIndex;
    return c2 !== 0 ? c2 : a.id - b2.id;
  }
  if (typeof performance === "object" && typeof performance.now === "function") {
    var l2 = performance;
    exports.unstable_now = function() {
      return l2.now();
    };
  } else {
    var p2 = Date, q2 = p2.now();
    exports.unstable_now = function() {
      return p2.now() - q2;
    };
  }
  var r2 = [], t2 = [], u2 = 1, v2 = null, y2 = 3, z2 = false, A2 = false, B2 = false, D2 = typeof setTimeout === "function" ? setTimeout : null, E2 = typeof clearTimeout === "function" ? clearTimeout : null, F2 = typeof setImmediate !== "undefined" ? setImmediate : null;
  typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function G2(a) {
    for (var b2 = h2(t2); b2 !== null; ) {
      if (b2.callback === null)
        k2(t2);
      else if (b2.startTime <= a)
        k2(t2), b2.sortIndex = b2.expirationTime, f2(r2, b2);
      else
        break;
      b2 = h2(t2);
    }
  }
  function H2(a) {
    B2 = false;
    G2(a);
    if (!A2)
      if (h2(r2) !== null)
        A2 = true, I2(J2);
      else {
        var b2 = h2(t2);
        b2 !== null && K2(H2, b2.startTime - a);
      }
  }
  function J2(a, b2) {
    A2 = false;
    B2 && (B2 = false, E2(L2), L2 = -1);
    z2 = true;
    var c2 = y2;
    try {
      G2(b2);
      for (v2 = h2(r2); v2 !== null && (!(v2.expirationTime > b2) || a && !M2()); ) {
        var d2 = v2.callback;
        if (typeof d2 === "function") {
          v2.callback = null;
          y2 = v2.priorityLevel;
          var e2 = d2(v2.expirationTime <= b2);
          b2 = exports.unstable_now();
          typeof e2 === "function" ? v2.callback = e2 : v2 === h2(r2) && k2(r2);
          G2(b2);
        } else
          k2(r2);
        v2 = h2(r2);
      }
      if (v2 !== null)
        var w2 = true;
      else {
        var m2 = h2(t2);
        m2 !== null && K2(H2, m2.startTime - b2);
        w2 = false;
      }
      return w2;
    } finally {
      v2 = null, y2 = c2, z2 = false;
    }
  }
  var N2 = false, O2 = null, L2 = -1, P2 = 5, Q2 = -1;
  function M2() {
    return exports.unstable_now() - Q2 < P2 ? false : true;
  }
  function R2() {
    if (O2 !== null) {
      var a = exports.unstable_now();
      Q2 = a;
      var b2 = true;
      try {
        b2 = O2(true, a);
      } finally {
        b2 ? S2() : (N2 = false, O2 = null);
      }
    } else
      N2 = false;
  }
  var S2;
  if (typeof F2 === "function")
    S2 = function() {
      F2(R2);
    };
  else if (typeof MessageChannel !== "undefined") {
    var T2 = new MessageChannel(), U2 = T2.port2;
    T2.port1.onmessage = R2;
    S2 = function() {
      U2.postMessage(null);
    };
  } else
    S2 = function() {
      D2(R2, 0);
    };
  function I2(a) {
    O2 = a;
    N2 || (N2 = true, S2());
  }
  function K2(a, b2) {
    L2 = D2(function() {
      a(exports.unstable_now());
    }, b2);
  }
  exports.unstable_IdlePriority = 5;
  exports.unstable_ImmediatePriority = 1;
  exports.unstable_LowPriority = 4;
  exports.unstable_NormalPriority = 3;
  exports.unstable_Profiling = null;
  exports.unstable_UserBlockingPriority = 2;
  exports.unstable_cancelCallback = function(a) {
    a.callback = null;
  };
  exports.unstable_continueExecution = function() {
    A2 || z2 || (A2 = true, I2(J2));
  };
  exports.unstable_forceFrameRate = function(a) {
    0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P2 = 0 < a ? Math.floor(1e3 / a) : 5;
  };
  exports.unstable_getCurrentPriorityLevel = function() {
    return y2;
  };
  exports.unstable_getFirstCallbackNode = function() {
    return h2(r2);
  };
  exports.unstable_next = function(a) {
    switch (y2) {
      case 1:
      case 2:
      case 3:
        var b2 = 3;
        break;
      default:
        b2 = y2;
    }
    var c2 = y2;
    y2 = b2;
    try {
      return a();
    } finally {
      y2 = c2;
    }
  };
  exports.unstable_pauseExecution = function() {
  };
  exports.unstable_requestPaint = function() {
  };
  exports.unstable_runWithPriority = function(a, b2) {
    switch (a) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;
      default:
        a = 3;
    }
    var c2 = y2;
    y2 = a;
    try {
      return b2();
    } finally {
      y2 = c2;
    }
  };
  exports.unstable_scheduleCallback = function(a, b2, c2) {
    var d2 = exports.unstable_now();
    typeof c2 === "object" && c2 !== null ? (c2 = c2.delay, c2 = typeof c2 === "number" && 0 < c2 ? d2 + c2 : d2) : c2 = d2;
    switch (a) {
      case 1:
        var e2 = -1;
        break;
      case 2:
        e2 = 250;
        break;
      case 5:
        e2 = 1073741823;
        break;
      case 4:
        e2 = 1e4;
        break;
      default:
        e2 = 5e3;
    }
    e2 = c2 + e2;
    a = { id: u2++, callback: b2, priorityLevel: a, startTime: c2, expirationTime: e2, sortIndex: -1 };
    c2 > d2 ? (a.sortIndex = c2, f2(t2, a), h2(r2) === null && a === h2(t2) && (B2 ? (E2(L2), L2 = -1) : B2 = true, K2(H2, c2 - d2))) : (a.sortIndex = e2, f2(r2, a), A2 || z2 || (A2 = true, I2(J2)));
    return a;
  };
  exports.unstable_shouldYield = M2;
  exports.unstable_wrapCallback = function(a) {
    var b2 = y2;
    return function() {
      var c2 = y2;
      y2 = b2;
      try {
        return a.apply(this, arguments);
      } finally {
        y2 = c2;
      }
    };
  };
})(scheduler_production_min);
{
  scheduler.exports = scheduler_production_min;
}
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aa = react.exports, ba = scheduler.exports;
function p$2(a) {
  for (var b2 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c2 = 1; c2 < arguments.length; c2++)
    b2 += "&args[]=" + encodeURIComponent(arguments[c2]);
  return "Minified React error #" + a + "; visit " + b2 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var da = /* @__PURE__ */ new Set(), ea = {};
function fa(a, b2) {
  ha(a, b2);
  ha(a + "Capture", b2);
}
function ha(a, b2) {
  ea[a] = b2;
  for (a = 0; a < b2.length; a++)
    da.add(b2[a]);
}
var ia = !(typeof window === "undefined" || typeof window.document === "undefined" || typeof window.document.createElement === "undefined"), ja = Object.prototype.hasOwnProperty, ka = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, la = {}, ma = {};
function na(a) {
  if (ja.call(ma, a))
    return true;
  if (ja.call(la, a))
    return false;
  if (ka.test(a))
    return ma[a] = true;
  la[a] = true;
  return false;
}
function oa(a, b2, c2, d2) {
  if (c2 !== null && c2.type === 0)
    return false;
  switch (typeof b2) {
    case "function":
    case "symbol":
      return true;
    case "boolean":
      if (d2)
        return false;
      if (c2 !== null)
        return !c2.acceptsBooleans;
      a = a.toLowerCase().slice(0, 5);
      return a !== "data-" && a !== "aria-";
    default:
      return false;
  }
}
function pa(a, b2, c2, d2) {
  if (b2 === null || typeof b2 === "undefined" || oa(a, b2, c2, d2))
    return true;
  if (d2)
    return false;
  if (c2 !== null)
    switch (c2.type) {
      case 3:
        return !b2;
      case 4:
        return b2 === false;
      case 5:
        return isNaN(b2);
      case 6:
        return isNaN(b2) || 1 > b2;
    }
  return false;
}
function t$1(a, b2, c2, d2, e2, f2, g2) {
  this.acceptsBooleans = b2 === 2 || b2 === 3 || b2 === 4;
  this.attributeName = d2;
  this.attributeNamespace = e2;
  this.mustUseProperty = c2;
  this.propertyName = a;
  this.type = b2;
  this.sanitizeURL = f2;
  this.removeEmptyString = g2;
}
var z$1 = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a) {
  z$1[a] = new t$1(a, 0, false, a, null, false, false);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a) {
  var b2 = a[0];
  z$1[b2] = new t$1(b2, 1, false, a[1], null, false, false);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a) {
  z$1[a] = new t$1(a, 2, false, a.toLowerCase(), null, false, false);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a) {
  z$1[a] = new t$1(a, 2, false, a, null, false, false);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a) {
  z$1[a] = new t$1(a, 3, false, a.toLowerCase(), null, false, false);
});
["checked", "multiple", "muted", "selected"].forEach(function(a) {
  z$1[a] = new t$1(a, 3, true, a, null, false, false);
});
["capture", "download"].forEach(function(a) {
  z$1[a] = new t$1(a, 4, false, a, null, false, false);
});
["cols", "rows", "size", "span"].forEach(function(a) {
  z$1[a] = new t$1(a, 6, false, a, null, false, false);
});
["rowSpan", "start"].forEach(function(a) {
  z$1[a] = new t$1(a, 5, false, a.toLowerCase(), null, false, false);
});
var qa = /[\-:]([a-z])/g;
function ra(a) {
  return a[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a) {
  var b2 = a.replace(qa, ra);
  z$1[b2] = new t$1(b2, 1, false, a, null, false, false);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a) {
  var b2 = a.replace(qa, ra);
  z$1[b2] = new t$1(b2, 1, false, a, "http://www.w3.org/1999/xlink", false, false);
});
["xml:base", "xml:lang", "xml:space"].forEach(function(a) {
  var b2 = a.replace(qa, ra);
  z$1[b2] = new t$1(b2, 1, false, a, "http://www.w3.org/XML/1998/namespace", false, false);
});
["tabIndex", "crossOrigin"].forEach(function(a) {
  z$1[a] = new t$1(a, 1, false, a.toLowerCase(), null, false, false);
});
z$1.xlinkHref = new t$1("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
["src", "href", "action", "formAction"].forEach(function(a) {
  z$1[a] = new t$1(a, 1, false, a.toLowerCase(), null, true, true);
});
function sa(a, b2, c2, d2) {
  var e2 = z$1.hasOwnProperty(b2) ? z$1[b2] : null;
  if (e2 !== null ? e2.type !== 0 : d2 || !(2 < b2.length) || b2[0] !== "o" && b2[0] !== "O" || b2[1] !== "n" && b2[1] !== "N")
    pa(b2, c2, e2, d2) && (c2 = null), d2 || e2 === null ? na(b2) && (c2 === null ? a.removeAttribute(b2) : a.setAttribute(b2, "" + c2)) : e2.mustUseProperty ? a[e2.propertyName] = c2 === null ? e2.type === 3 ? false : "" : c2 : (b2 = e2.attributeName, d2 = e2.attributeNamespace, c2 === null ? a.removeAttribute(b2) : (e2 = e2.type, c2 = e2 === 3 || e2 === 4 && c2 === true ? "" : "" + c2, d2 ? a.setAttributeNS(d2, b2, c2) : a.setAttribute(b2, c2)));
}
var ta = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, ua = Symbol.for("react.element"), va = Symbol.for("react.portal"), wa = Symbol.for("react.fragment"), xa = Symbol.for("react.strict_mode"), za = Symbol.for("react.profiler"), Aa = Symbol.for("react.provider"), Ba = Symbol.for("react.context"), Ca = Symbol.for("react.forward_ref"), Da = Symbol.for("react.suspense"), Ea = Symbol.for("react.suspense_list"), Fa = Symbol.for("react.memo"), Ga = Symbol.for("react.lazy");
var Ha = Symbol.for("react.offscreen");
var Ia = Symbol.iterator;
function Ja(a) {
  if (a === null || typeof a !== "object")
    return null;
  a = Ia && a[Ia] || a["@@iterator"];
  return typeof a === "function" ? a : null;
}
var A$1 = Object.assign, Ka;
function La(a) {
  if (Ka === void 0)
    try {
      throw Error();
    } catch (c2) {
      var b2 = c2.stack.trim().match(/\n( *(at )?)/);
      Ka = b2 && b2[1] || "";
    }
  return "\n" + Ka + a;
}
var Ma = false;
function Na(a, b2) {
  if (!a || Ma)
    return "";
  Ma = true;
  var c2 = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (b2)
      if (b2 = function() {
        throw Error();
      }, Object.defineProperty(b2.prototype, "props", { set: function() {
        throw Error();
      } }), typeof Reflect === "object" && Reflect.construct) {
        try {
          Reflect.construct(b2, []);
        } catch (l2) {
          var d2 = l2;
        }
        Reflect.construct(a, [], b2);
      } else {
        try {
          b2.call();
        } catch (l2) {
          d2 = l2;
        }
        a.call(b2.prototype);
      }
    else {
      try {
        throw Error();
      } catch (l2) {
        d2 = l2;
      }
      a();
    }
  } catch (l2) {
    if (l2 && d2 && typeof l2.stack === "string") {
      for (var e2 = l2.stack.split("\n"), f2 = d2.stack.split("\n"), g2 = e2.length - 1, h2 = f2.length - 1; 1 <= g2 && 0 <= h2 && e2[g2] !== f2[h2]; )
        h2--;
      for (; 1 <= g2 && 0 <= h2; g2--, h2--)
        if (e2[g2] !== f2[h2]) {
          if (g2 !== 1 || h2 !== 1) {
            do
              if (g2--, h2--, 0 > h2 || e2[g2] !== f2[h2]) {
                var k2 = "\n" + e2[g2].replace(" at new ", " at ");
                a.displayName && k2.includes("<anonymous>") && (k2 = k2.replace("<anonymous>", a.displayName));
                return k2;
              }
            while (1 <= g2 && 0 <= h2);
          }
          break;
        }
    }
  } finally {
    Ma = false, Error.prepareStackTrace = c2;
  }
  return (a = a ? a.displayName || a.name : "") ? La(a) : "";
}
function Oa(a) {
  switch (a.tag) {
    case 5:
      return La(a.type);
    case 16:
      return La("Lazy");
    case 13:
      return La("Suspense");
    case 19:
      return La("SuspenseList");
    case 0:
    case 2:
    case 15:
      return a = Na(a.type, false), a;
    case 11:
      return a = Na(a.type.render, false), a;
    case 1:
      return a = Na(a.type, true), a;
    default:
      return "";
  }
}
function Pa(a) {
  if (a == null)
    return null;
  if (typeof a === "function")
    return a.displayName || a.name || null;
  if (typeof a === "string")
    return a;
  switch (a) {
    case wa:
      return "Fragment";
    case va:
      return "Portal";
    case za:
      return "Profiler";
    case xa:
      return "StrictMode";
    case Da:
      return "Suspense";
    case Ea:
      return "SuspenseList";
  }
  if (typeof a === "object")
    switch (a.$$typeof) {
      case Ba:
        return (a.displayName || "Context") + ".Consumer";
      case Aa:
        return (a._context.displayName || "Context") + ".Provider";
      case Ca:
        var b2 = a.render;
        a = a.displayName;
        a || (a = b2.displayName || b2.name || "", a = a !== "" ? "ForwardRef(" + a + ")" : "ForwardRef");
        return a;
      case Fa:
        return b2 = a.displayName || null, b2 !== null ? b2 : Pa(a.type) || "Memo";
      case Ga:
        b2 = a._payload;
        a = a._init;
        try {
          return Pa(a(b2));
        } catch (c2) {
        }
    }
  return null;
}
function Qa(a) {
  var b2 = a.type;
  switch (a.tag) {
    case 24:
      return "Cache";
    case 9:
      return (b2.displayName || "Context") + ".Consumer";
    case 10:
      return (b2._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return a = b2.render, a = a.displayName || a.name || "", b2.displayName || (a !== "" ? "ForwardRef(" + a + ")" : "ForwardRef");
    case 7:
      return "Fragment";
    case 5:
      return b2;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return Pa(b2);
    case 8:
      return b2 === xa ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if (typeof b2 === "function")
        return b2.displayName || b2.name || null;
      if (typeof b2 === "string")
        return b2;
  }
  return null;
}
function Ra(a) {
  switch (typeof a) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return a;
    case "object":
      return a;
    default:
      return "";
  }
}
function Sa(a) {
  var b2 = a.type;
  return (a = a.nodeName) && a.toLowerCase() === "input" && (b2 === "checkbox" || b2 === "radio");
}
function Ta(a) {
  var b2 = Sa(a) ? "checked" : "value", c2 = Object.getOwnPropertyDescriptor(a.constructor.prototype, b2), d2 = "" + a[b2];
  if (!a.hasOwnProperty(b2) && typeof c2 !== "undefined" && typeof c2.get === "function" && typeof c2.set === "function") {
    var e2 = c2.get, f2 = c2.set;
    Object.defineProperty(a, b2, { configurable: true, get: function() {
      return e2.call(this);
    }, set: function(a2) {
      d2 = "" + a2;
      f2.call(this, a2);
    } });
    Object.defineProperty(a, b2, { enumerable: c2.enumerable });
    return { getValue: function() {
      return d2;
    }, setValue: function(a2) {
      d2 = "" + a2;
    }, stopTracking: function() {
      a._valueTracker = null;
      delete a[b2];
    } };
  }
}
function Ua(a) {
  a._valueTracker || (a._valueTracker = Ta(a));
}
function Va(a) {
  if (!a)
    return false;
  var b2 = a._valueTracker;
  if (!b2)
    return true;
  var c2 = b2.getValue();
  var d2 = "";
  a && (d2 = Sa(a) ? a.checked ? "true" : "false" : a.value);
  a = d2;
  return a !== c2 ? (b2.setValue(a), true) : false;
}
function Wa(a) {
  a = a || (typeof document !== "undefined" ? document : void 0);
  if (typeof a === "undefined")
    return null;
  try {
    return a.activeElement || a.body;
  } catch (b2) {
    return a.body;
  }
}
function Xa(a, b2) {
  var c2 = b2.checked;
  return A$1({}, b2, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: c2 != null ? c2 : a._wrapperState.initialChecked });
}
function Ya(a, b2) {
  var c2 = b2.defaultValue == null ? "" : b2.defaultValue, d2 = b2.checked != null ? b2.checked : b2.defaultChecked;
  c2 = Ra(b2.value != null ? b2.value : c2);
  a._wrapperState = { initialChecked: d2, initialValue: c2, controlled: b2.type === "checkbox" || b2.type === "radio" ? b2.checked != null : b2.value != null };
}
function Za(a, b2) {
  b2 = b2.checked;
  b2 != null && sa(a, "checked", b2, false);
}
function $a(a, b2) {
  Za(a, b2);
  var c2 = Ra(b2.value), d2 = b2.type;
  if (c2 != null)
    if (d2 === "number") {
      if (c2 === 0 && a.value === "" || a.value != c2)
        a.value = "" + c2;
    } else
      a.value !== "" + c2 && (a.value = "" + c2);
  else if (d2 === "submit" || d2 === "reset") {
    a.removeAttribute("value");
    return;
  }
  b2.hasOwnProperty("value") ? bb(a, b2.type, c2) : b2.hasOwnProperty("defaultValue") && bb(a, b2.type, Ra(b2.defaultValue));
  b2.checked == null && b2.defaultChecked != null && (a.defaultChecked = !!b2.defaultChecked);
}
function cb(a, b2, c2) {
  if (b2.hasOwnProperty("value") || b2.hasOwnProperty("defaultValue")) {
    var d2 = b2.type;
    if (!(d2 !== "submit" && d2 !== "reset" || b2.value !== void 0 && b2.value !== null))
      return;
    b2 = "" + a._wrapperState.initialValue;
    c2 || b2 === a.value || (a.value = b2);
    a.defaultValue = b2;
  }
  c2 = a.name;
  c2 !== "" && (a.name = "");
  a.defaultChecked = !!a._wrapperState.initialChecked;
  c2 !== "" && (a.name = c2);
}
function bb(a, b2, c2) {
  if (b2 !== "number" || Wa(a.ownerDocument) !== a)
    c2 == null ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c2 && (a.defaultValue = "" + c2);
}
var db = Array.isArray;
function eb(a, b2, c2, d2) {
  a = a.options;
  if (b2) {
    b2 = {};
    for (var e2 = 0; e2 < c2.length; e2++)
      b2["$" + c2[e2]] = true;
    for (c2 = 0; c2 < a.length; c2++)
      e2 = b2.hasOwnProperty("$" + a[c2].value), a[c2].selected !== e2 && (a[c2].selected = e2), e2 && d2 && (a[c2].defaultSelected = true);
  } else {
    c2 = "" + Ra(c2);
    b2 = null;
    for (e2 = 0; e2 < a.length; e2++) {
      if (a[e2].value === c2) {
        a[e2].selected = true;
        d2 && (a[e2].defaultSelected = true);
        return;
      }
      b2 !== null || a[e2].disabled || (b2 = a[e2]);
    }
    b2 !== null && (b2.selected = true);
  }
}
function fb(a, b2) {
  if (b2.dangerouslySetInnerHTML != null)
    throw Error(p$2(91));
  return A$1({}, b2, { value: void 0, defaultValue: void 0, children: "" + a._wrapperState.initialValue });
}
function gb(a, b2) {
  var c2 = b2.value;
  if (c2 == null) {
    c2 = b2.children;
    b2 = b2.defaultValue;
    if (c2 != null) {
      if (b2 != null)
        throw Error(p$2(92));
      if (db(c2)) {
        if (1 < c2.length)
          throw Error(p$2(93));
        c2 = c2[0];
      }
      b2 = c2;
    }
    b2 == null && (b2 = "");
    c2 = b2;
  }
  a._wrapperState = { initialValue: Ra(c2) };
}
function hb(a, b2) {
  var c2 = Ra(b2.value), d2 = Ra(b2.defaultValue);
  c2 != null && (c2 = "" + c2, c2 !== a.value && (a.value = c2), b2.defaultValue == null && a.defaultValue !== c2 && (a.defaultValue = c2));
  d2 != null && (a.defaultValue = "" + d2);
}
function ib(a) {
  var b2 = a.textContent;
  b2 === a._wrapperState.initialValue && b2 !== "" && b2 !== null && (a.value = b2);
}
function jb(a) {
  switch (a) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function kb(a, b2) {
  return a == null || a === "http://www.w3.org/1999/xhtml" ? jb(b2) : a === "http://www.w3.org/2000/svg" && b2 === "foreignObject" ? "http://www.w3.org/1999/xhtml" : a;
}
var lb, mb = function(a) {
  return typeof MSApp !== "undefined" && MSApp.execUnsafeLocalFunction ? function(b2, c2, d2, e2) {
    MSApp.execUnsafeLocalFunction(function() {
      return a(b2, c2, d2, e2);
    });
  } : a;
}(function(a, b2) {
  if (a.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in a)
    a.innerHTML = b2;
  else {
    lb = lb || document.createElement("div");
    lb.innerHTML = "<svg>" + b2.valueOf().toString() + "</svg>";
    for (b2 = lb.firstChild; a.firstChild; )
      a.removeChild(a.firstChild);
    for (; b2.firstChild; )
      a.appendChild(b2.firstChild);
  }
});
function nb(a, b2) {
  if (b2) {
    var c2 = a.firstChild;
    if (c2 && c2 === a.lastChild && c2.nodeType === 3) {
      c2.nodeValue = b2;
      return;
    }
  }
  a.textContent = b2;
}
var ob = {
  animationIterationCount: true,
  aspectRatio: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
}, pb = ["Webkit", "ms", "Moz", "O"];
Object.keys(ob).forEach(function(a) {
  pb.forEach(function(b2) {
    b2 = b2 + a.charAt(0).toUpperCase() + a.substring(1);
    ob[b2] = ob[a];
  });
});
function qb(a, b2, c2) {
  return b2 == null || typeof b2 === "boolean" || b2 === "" ? "" : c2 || typeof b2 !== "number" || b2 === 0 || ob.hasOwnProperty(a) && ob[a] ? ("" + b2).trim() : b2 + "px";
}
function rb(a, b2) {
  a = a.style;
  for (var c2 in b2)
    if (b2.hasOwnProperty(c2)) {
      var d2 = c2.indexOf("--") === 0, e2 = qb(c2, b2[c2], d2);
      c2 === "float" && (c2 = "cssFloat");
      d2 ? a.setProperty(c2, e2) : a[c2] = e2;
    }
}
var sb = A$1({ menuitem: true }, { area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true });
function tb(a, b2) {
  if (b2) {
    if (sb[a] && (b2.children != null || b2.dangerouslySetInnerHTML != null))
      throw Error(p$2(137, a));
    if (b2.dangerouslySetInnerHTML != null) {
      if (b2.children != null)
        throw Error(p$2(60));
      if (typeof b2.dangerouslySetInnerHTML !== "object" || !("__html" in b2.dangerouslySetInnerHTML))
        throw Error(p$2(61));
    }
    if (b2.style != null && typeof b2.style !== "object")
      throw Error(p$2(62));
  }
}
function ub(a, b2) {
  if (a.indexOf("-") === -1)
    return typeof b2.is === "string";
  switch (a) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return false;
    default:
      return true;
  }
}
var vb = null;
function wb(a) {
  a = a.target || a.srcElement || window;
  a.correspondingUseElement && (a = a.correspondingUseElement);
  return a.nodeType === 3 ? a.parentNode : a;
}
var xb = null, yb = null, zb = null;
function Ab(a) {
  if (a = Bb(a)) {
    if (typeof xb !== "function")
      throw Error(p$2(280));
    var b2 = a.stateNode;
    b2 && (b2 = Cb(b2), xb(a.stateNode, a.type, b2));
  }
}
function Db(a) {
  yb ? zb ? zb.push(a) : zb = [a] : yb = a;
}
function Eb() {
  if (yb) {
    var a = yb, b2 = zb;
    zb = yb = null;
    Ab(a);
    if (b2)
      for (a = 0; a < b2.length; a++)
        Ab(b2[a]);
  }
}
function Fb(a, b2) {
  return a(b2);
}
function Gb() {
}
var Hb = false;
function Ib(a, b2, c2) {
  if (Hb)
    return a(b2, c2);
  Hb = true;
  try {
    return Fb(a, b2, c2);
  } finally {
    if (Hb = false, yb !== null || zb !== null)
      Gb(), Eb();
  }
}
function Jb(a, b2) {
  var c2 = a.stateNode;
  if (c2 === null)
    return null;
  var d2 = Cb(c2);
  if (d2 === null)
    return null;
  c2 = d2[b2];
  a:
    switch (b2) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
      case "onMouseEnter":
        (d2 = !d2.disabled) || (a = a.type, d2 = !(a === "button" || a === "input" || a === "select" || a === "textarea"));
        a = !d2;
        break a;
      default:
        a = false;
    }
  if (a)
    return null;
  if (c2 && typeof c2 !== "function")
    throw Error(p$2(231, b2, typeof c2));
  return c2;
}
var Kb = false;
if (ia)
  try {
    var Lb = {};
    Object.defineProperty(Lb, "passive", { get: function() {
      Kb = true;
    } });
    window.addEventListener("test", Lb, Lb);
    window.removeEventListener("test", Lb, Lb);
  } catch (a) {
    Kb = false;
  }
function Mb(a, b2, c2, d2, e2, f2, g2, h2, k2) {
  var l2 = Array.prototype.slice.call(arguments, 3);
  try {
    b2.apply(c2, l2);
  } catch (n2) {
    this.onError(n2);
  }
}
var Nb = false, Ob = null, Pb = false, Qb = null, Rb = { onError: function(a) {
  Nb = true;
  Ob = a;
} };
function Sb(a, b2, c2, d2, e2, f2, g2, h2, k2) {
  Nb = false;
  Ob = null;
  Mb.apply(Rb, arguments);
}
function Tb(a, b2, c2, d2, e2, f2, g2, h2, k2) {
  Sb.apply(this, arguments);
  if (Nb) {
    if (Nb) {
      var l2 = Ob;
      Nb = false;
      Ob = null;
    } else
      throw Error(p$2(198));
    Pb || (Pb = true, Qb = l2);
  }
}
function Ub(a) {
  var b2 = a, c2 = a;
  if (a.alternate)
    for (; b2.return; )
      b2 = b2.return;
  else {
    a = b2;
    do
      b2 = a, (b2.flags & 4098) !== 0 && (c2 = b2.return), a = b2.return;
    while (a);
  }
  return b2.tag === 3 ? c2 : null;
}
function Vb(a) {
  if (a.tag === 13) {
    var b2 = a.memoizedState;
    b2 === null && (a = a.alternate, a !== null && (b2 = a.memoizedState));
    if (b2 !== null)
      return b2.dehydrated;
  }
  return null;
}
function Wb(a) {
  if (Ub(a) !== a)
    throw Error(p$2(188));
}
function Xb(a) {
  var b2 = a.alternate;
  if (!b2) {
    b2 = Ub(a);
    if (b2 === null)
      throw Error(p$2(188));
    return b2 !== a ? null : a;
  }
  for (var c2 = a, d2 = b2; ; ) {
    var e2 = c2.return;
    if (e2 === null)
      break;
    var f2 = e2.alternate;
    if (f2 === null) {
      d2 = e2.return;
      if (d2 !== null) {
        c2 = d2;
        continue;
      }
      break;
    }
    if (e2.child === f2.child) {
      for (f2 = e2.child; f2; ) {
        if (f2 === c2)
          return Wb(e2), a;
        if (f2 === d2)
          return Wb(e2), b2;
        f2 = f2.sibling;
      }
      throw Error(p$2(188));
    }
    if (c2.return !== d2.return)
      c2 = e2, d2 = f2;
    else {
      for (var g2 = false, h2 = e2.child; h2; ) {
        if (h2 === c2) {
          g2 = true;
          c2 = e2;
          d2 = f2;
          break;
        }
        if (h2 === d2) {
          g2 = true;
          d2 = e2;
          c2 = f2;
          break;
        }
        h2 = h2.sibling;
      }
      if (!g2) {
        for (h2 = f2.child; h2; ) {
          if (h2 === c2) {
            g2 = true;
            c2 = f2;
            d2 = e2;
            break;
          }
          if (h2 === d2) {
            g2 = true;
            d2 = f2;
            c2 = e2;
            break;
          }
          h2 = h2.sibling;
        }
        if (!g2)
          throw Error(p$2(189));
      }
    }
    if (c2.alternate !== d2)
      throw Error(p$2(190));
  }
  if (c2.tag !== 3)
    throw Error(p$2(188));
  return c2.stateNode.current === c2 ? a : b2;
}
function Yb(a) {
  a = Xb(a);
  return a !== null ? Zb(a) : null;
}
function Zb(a) {
  if (a.tag === 5 || a.tag === 6)
    return a;
  for (a = a.child; a !== null; ) {
    var b2 = Zb(a);
    if (b2 !== null)
      return b2;
    a = a.sibling;
  }
  return null;
}
var $b = ba.unstable_scheduleCallback, ac = ba.unstable_cancelCallback, bc = ba.unstable_shouldYield, cc = ba.unstable_requestPaint, B = ba.unstable_now, dc = ba.unstable_getCurrentPriorityLevel, ec = ba.unstable_ImmediatePriority, fc = ba.unstable_UserBlockingPriority, gc = ba.unstable_NormalPriority, hc = ba.unstable_LowPriority, ic = ba.unstable_IdlePriority, jc = null, kc = null;
function lc(a) {
  if (kc && typeof kc.onCommitFiberRoot === "function")
    try {
      kc.onCommitFiberRoot(jc, a, void 0, (a.current.flags & 128) === 128);
    } catch (b2) {
    }
}
var nc = Math.clz32 ? Math.clz32 : mc, oc = Math.log, pc = Math.LN2;
function mc(a) {
  a >>>= 0;
  return a === 0 ? 32 : 31 - (oc(a) / pc | 0) | 0;
}
var qc = 64, rc = 4194304;
function sc(a) {
  switch (a & -a) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return a & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return a & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return a;
  }
}
function tc(a, b2) {
  var c2 = a.pendingLanes;
  if (c2 === 0)
    return 0;
  var d2 = 0, e2 = a.suspendedLanes, f2 = a.pingedLanes, g2 = c2 & 268435455;
  if (g2 !== 0) {
    var h2 = g2 & ~e2;
    h2 !== 0 ? d2 = sc(h2) : (f2 &= g2, f2 !== 0 && (d2 = sc(f2)));
  } else
    g2 = c2 & ~e2, g2 !== 0 ? d2 = sc(g2) : f2 !== 0 && (d2 = sc(f2));
  if (d2 === 0)
    return 0;
  if (b2 !== 0 && b2 !== d2 && (b2 & e2) === 0 && (e2 = d2 & -d2, f2 = b2 & -b2, e2 >= f2 || e2 === 16 && (f2 & 4194240) !== 0))
    return b2;
  (d2 & 4) !== 0 && (d2 |= c2 & 16);
  b2 = a.entangledLanes;
  if (b2 !== 0)
    for (a = a.entanglements, b2 &= d2; 0 < b2; )
      c2 = 31 - nc(b2), e2 = 1 << c2, d2 |= a[c2], b2 &= ~e2;
  return d2;
}
function uc(a, b2) {
  switch (a) {
    case 1:
    case 2:
    case 4:
      return b2 + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return b2 + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function vc(a, b2) {
  for (var c2 = a.suspendedLanes, d2 = a.pingedLanes, e2 = a.expirationTimes, f2 = a.pendingLanes; 0 < f2; ) {
    var g2 = 31 - nc(f2), h2 = 1 << g2, k2 = e2[g2];
    if (k2 === -1) {
      if ((h2 & c2) === 0 || (h2 & d2) !== 0)
        e2[g2] = uc(h2, b2);
    } else
      k2 <= b2 && (a.expiredLanes |= h2);
    f2 &= ~h2;
  }
}
function wc(a) {
  a = a.pendingLanes & -1073741825;
  return a !== 0 ? a : a & 1073741824 ? 1073741824 : 0;
}
function xc() {
  var a = qc;
  qc <<= 1;
  (qc & 4194240) === 0 && (qc = 64);
  return a;
}
function yc(a) {
  for (var b2 = [], c2 = 0; 31 > c2; c2++)
    b2.push(a);
  return b2;
}
function zc(a, b2, c2) {
  a.pendingLanes |= b2;
  b2 !== 536870912 && (a.suspendedLanes = 0, a.pingedLanes = 0);
  a = a.eventTimes;
  b2 = 31 - nc(b2);
  a[b2] = c2;
}
function Ac(a, b2) {
  var c2 = a.pendingLanes & ~b2;
  a.pendingLanes = b2;
  a.suspendedLanes = 0;
  a.pingedLanes = 0;
  a.expiredLanes &= b2;
  a.mutableReadLanes &= b2;
  a.entangledLanes &= b2;
  b2 = a.entanglements;
  var d2 = a.eventTimes;
  for (a = a.expirationTimes; 0 < c2; ) {
    var e2 = 31 - nc(c2), f2 = 1 << e2;
    b2[e2] = 0;
    d2[e2] = -1;
    a[e2] = -1;
    c2 &= ~f2;
  }
}
function Bc(a, b2) {
  var c2 = a.entangledLanes |= b2;
  for (a = a.entanglements; c2; ) {
    var d2 = 31 - nc(c2), e2 = 1 << d2;
    e2 & b2 | a[d2] & b2 && (a[d2] |= b2);
    c2 &= ~e2;
  }
}
var C = 0;
function Cc(a) {
  a &= -a;
  return 1 < a ? 4 < a ? (a & 268435455) !== 0 ? 16 : 536870912 : 4 : 1;
}
var Dc, Ec, Fc, Gc, Hc, Ic = false, Jc = [], Kc = null, Lc = null, Mc = null, Nc = /* @__PURE__ */ new Map(), Oc = /* @__PURE__ */ new Map(), Pc = [], Qc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function Rc(a, b2) {
  switch (a) {
    case "focusin":
    case "focusout":
      Kc = null;
      break;
    case "dragenter":
    case "dragleave":
      Lc = null;
      break;
    case "mouseover":
    case "mouseout":
      Mc = null;
      break;
    case "pointerover":
    case "pointerout":
      Nc.delete(b2.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Oc.delete(b2.pointerId);
  }
}
function Sc(a, b2, c2, d2, e2, f2) {
  if (a === null || a.nativeEvent !== f2)
    return a = { blockedOn: b2, domEventName: c2, eventSystemFlags: d2, nativeEvent: f2, targetContainers: [e2] }, b2 !== null && (b2 = Bb(b2), b2 !== null && Ec(b2)), a;
  a.eventSystemFlags |= d2;
  b2 = a.targetContainers;
  e2 !== null && b2.indexOf(e2) === -1 && b2.push(e2);
  return a;
}
function Tc(a, b2, c2, d2, e2) {
  switch (b2) {
    case "focusin":
      return Kc = Sc(Kc, a, b2, c2, d2, e2), true;
    case "dragenter":
      return Lc = Sc(Lc, a, b2, c2, d2, e2), true;
    case "mouseover":
      return Mc = Sc(Mc, a, b2, c2, d2, e2), true;
    case "pointerover":
      var f2 = e2.pointerId;
      Nc.set(f2, Sc(Nc.get(f2) || null, a, b2, c2, d2, e2));
      return true;
    case "gotpointercapture":
      return f2 = e2.pointerId, Oc.set(f2, Sc(Oc.get(f2) || null, a, b2, c2, d2, e2)), true;
  }
  return false;
}
function Uc(a) {
  var b2 = Vc(a.target);
  if (b2 !== null) {
    var c2 = Ub(b2);
    if (c2 !== null) {
      if (b2 = c2.tag, b2 === 13) {
        if (b2 = Vb(c2), b2 !== null) {
          a.blockedOn = b2;
          Hc(a.priority, function() {
            Fc(c2);
          });
          return;
        }
      } else if (b2 === 3 && c2.stateNode.current.memoizedState.isDehydrated) {
        a.blockedOn = c2.tag === 3 ? c2.stateNode.containerInfo : null;
        return;
      }
    }
  }
  a.blockedOn = null;
}
function Wc(a) {
  if (a.blockedOn !== null)
    return false;
  for (var b2 = a.targetContainers; 0 < b2.length; ) {
    var c2 = Xc(a.domEventName, a.eventSystemFlags, b2[0], a.nativeEvent);
    if (c2 === null) {
      c2 = a.nativeEvent;
      var d2 = new c2.constructor(c2.type, c2);
      vb = d2;
      c2.target.dispatchEvent(d2);
      vb = null;
    } else
      return b2 = Bb(c2), b2 !== null && Ec(b2), a.blockedOn = c2, false;
    b2.shift();
  }
  return true;
}
function Yc(a, b2, c2) {
  Wc(a) && c2.delete(b2);
}
function Zc() {
  Ic = false;
  Kc !== null && Wc(Kc) && (Kc = null);
  Lc !== null && Wc(Lc) && (Lc = null);
  Mc !== null && Wc(Mc) && (Mc = null);
  Nc.forEach(Yc);
  Oc.forEach(Yc);
}
function $c(a, b2) {
  a.blockedOn === b2 && (a.blockedOn = null, Ic || (Ic = true, ba.unstable_scheduleCallback(ba.unstable_NormalPriority, Zc)));
}
function ad(a) {
  function b2(b3) {
    return $c(b3, a);
  }
  if (0 < Jc.length) {
    $c(Jc[0], a);
    for (var c2 = 1; c2 < Jc.length; c2++) {
      var d2 = Jc[c2];
      d2.blockedOn === a && (d2.blockedOn = null);
    }
  }
  Kc !== null && $c(Kc, a);
  Lc !== null && $c(Lc, a);
  Mc !== null && $c(Mc, a);
  Nc.forEach(b2);
  Oc.forEach(b2);
  for (c2 = 0; c2 < Pc.length; c2++)
    d2 = Pc[c2], d2.blockedOn === a && (d2.blockedOn = null);
  for (; 0 < Pc.length && (c2 = Pc[0], c2.blockedOn === null); )
    Uc(c2), c2.blockedOn === null && Pc.shift();
}
var bd = ta.ReactCurrentBatchConfig, cd = true;
function dd(a, b2, c2, d2) {
  var e2 = C, f2 = bd.transition;
  bd.transition = null;
  try {
    C = 1, ed(a, b2, c2, d2);
  } finally {
    C = e2, bd.transition = f2;
  }
}
function fd(a, b2, c2, d2) {
  var e2 = C, f2 = bd.transition;
  bd.transition = null;
  try {
    C = 4, ed(a, b2, c2, d2);
  } finally {
    C = e2, bd.transition = f2;
  }
}
function ed(a, b2, c2, d2) {
  if (cd) {
    var e2 = Xc(a, b2, c2, d2);
    if (e2 === null)
      gd(a, b2, d2, hd, c2), Rc(a, d2);
    else if (Tc(e2, a, b2, c2, d2))
      d2.stopPropagation();
    else if (Rc(a, d2), b2 & 4 && -1 < Qc.indexOf(a)) {
      for (; e2 !== null; ) {
        var f2 = Bb(e2);
        f2 !== null && Dc(f2);
        f2 = Xc(a, b2, c2, d2);
        f2 === null && gd(a, b2, d2, hd, c2);
        if (f2 === e2)
          break;
        e2 = f2;
      }
      e2 !== null && d2.stopPropagation();
    } else
      gd(a, b2, d2, null, c2);
  }
}
var hd = null;
function Xc(a, b2, c2, d2) {
  hd = null;
  a = wb(d2);
  a = Vc(a);
  if (a !== null)
    if (b2 = Ub(a), b2 === null)
      a = null;
    else if (c2 = b2.tag, c2 === 13) {
      a = Vb(b2);
      if (a !== null)
        return a;
      a = null;
    } else if (c2 === 3) {
      if (b2.stateNode.current.memoizedState.isDehydrated)
        return b2.tag === 3 ? b2.stateNode.containerInfo : null;
      a = null;
    } else
      b2 !== a && (a = null);
  hd = a;
  return null;
}
function id(a) {
  switch (a) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (dc()) {
        case ec:
          return 1;
        case fc:
          return 4;
        case gc:
        case hc:
          return 16;
        case ic:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var jd = null, kd = null, ld = null;
function md() {
  if (ld)
    return ld;
  var a, b2 = kd, c2 = b2.length, d2, e2 = "value" in jd ? jd.value : jd.textContent, f2 = e2.length;
  for (a = 0; a < c2 && b2[a] === e2[a]; a++)
    ;
  var g2 = c2 - a;
  for (d2 = 1; d2 <= g2 && b2[c2 - d2] === e2[f2 - d2]; d2++)
    ;
  return ld = e2.slice(a, 1 < d2 ? 1 - d2 : void 0);
}
function nd(a) {
  var b2 = a.keyCode;
  "charCode" in a ? (a = a.charCode, a === 0 && b2 === 13 && (a = 13)) : a = b2;
  a === 10 && (a = 13);
  return 32 <= a || a === 13 ? a : 0;
}
function od() {
  return true;
}
function pd() {
  return false;
}
function qd(a) {
  function b2(b3, d2, e2, f2, g2) {
    this._reactName = b3;
    this._targetInst = e2;
    this.type = d2;
    this.nativeEvent = f2;
    this.target = g2;
    this.currentTarget = null;
    for (var c2 in a)
      a.hasOwnProperty(c2) && (b3 = a[c2], this[c2] = b3 ? b3(f2) : f2[c2]);
    this.isDefaultPrevented = (f2.defaultPrevented != null ? f2.defaultPrevented : f2.returnValue === false) ? od : pd;
    this.isPropagationStopped = pd;
    return this;
  }
  A$1(b2.prototype, { preventDefault: function() {
    this.defaultPrevented = true;
    var a2 = this.nativeEvent;
    a2 && (a2.preventDefault ? a2.preventDefault() : typeof a2.returnValue !== "unknown" && (a2.returnValue = false), this.isDefaultPrevented = od);
  }, stopPropagation: function() {
    var a2 = this.nativeEvent;
    a2 && (a2.stopPropagation ? a2.stopPropagation() : typeof a2.cancelBubble !== "unknown" && (a2.cancelBubble = true), this.isPropagationStopped = od);
  }, persist: function() {
  }, isPersistent: od });
  return b2;
}
var rd = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(a) {
  return a.timeStamp || Date.now();
}, defaultPrevented: 0, isTrusted: 0 }, sd = qd(rd), td = A$1({}, rd, { view: 0, detail: 0 }), ud = qd(td), vd, wd, xd, zd = A$1({}, td, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: yd, button: 0, buttons: 0, relatedTarget: function(a) {
  return a.relatedTarget === void 0 ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
}, movementX: function(a) {
  if ("movementX" in a)
    return a.movementX;
  a !== xd && (xd && a.type === "mousemove" ? (vd = a.screenX - xd.screenX, wd = a.screenY - xd.screenY) : wd = vd = 0, xd = a);
  return vd;
}, movementY: function(a) {
  return "movementY" in a ? a.movementY : wd;
} }), Ad = qd(zd), Bd = A$1({}, zd, { dataTransfer: 0 }), Cd = qd(Bd), Dd = A$1({}, td, { relatedTarget: 0 }), Ed = qd(Dd), Fd = A$1({}, rd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), Gd = qd(Fd), Hd = A$1({}, rd, { clipboardData: function(a) {
  return "clipboardData" in a ? a.clipboardData : window.clipboardData;
} }), Id = qd(Hd), Jd = A$1({}, rd, { data: 0 }), Kd = qd(Jd), Ld = {
  Esc: "Escape",
  Spacebar: " ",
  Left: "ArrowLeft",
  Up: "ArrowUp",
  Right: "ArrowRight",
  Down: "ArrowDown",
  Del: "Delete",
  Win: "OS",
  Menu: "ContextMenu",
  Apps: "ContextMenu",
  Scroll: "ScrollLock",
  MozPrintableKey: "Unidentified"
}, Md = {
  8: "Backspace",
  9: "Tab",
  12: "Clear",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  19: "Pause",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  45: "Insert",
  46: "Delete",
  112: "F1",
  113: "F2",
  114: "F3",
  115: "F4",
  116: "F5",
  117: "F6",
  118: "F7",
  119: "F8",
  120: "F9",
  121: "F10",
  122: "F11",
  123: "F12",
  144: "NumLock",
  145: "ScrollLock",
  224: "Meta"
}, Nd = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
function Od(a) {
  var b2 = this.nativeEvent;
  return b2.getModifierState ? b2.getModifierState(a) : (a = Nd[a]) ? !!b2[a] : false;
}
function yd() {
  return Od;
}
var Pd = A$1({}, td, { key: function(a) {
  if (a.key) {
    var b2 = Ld[a.key] || a.key;
    if (b2 !== "Unidentified")
      return b2;
  }
  return a.type === "keypress" ? (a = nd(a), a === 13 ? "Enter" : String.fromCharCode(a)) : a.type === "keydown" || a.type === "keyup" ? Md[a.keyCode] || "Unidentified" : "";
}, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: yd, charCode: function(a) {
  return a.type === "keypress" ? nd(a) : 0;
}, keyCode: function(a) {
  return a.type === "keydown" || a.type === "keyup" ? a.keyCode : 0;
}, which: function(a) {
  return a.type === "keypress" ? nd(a) : a.type === "keydown" || a.type === "keyup" ? a.keyCode : 0;
} }), Qd = qd(Pd), Rd = A$1({}, zd, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Sd = qd(Rd), Td = A$1({}, td, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: yd }), Ud = qd(Td), Vd = A$1({}, rd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), Wd = qd(Vd), Xd = A$1({}, zd, {
  deltaX: function(a) {
    return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
  },
  deltaY: function(a) {
    return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
  },
  deltaZ: 0,
  deltaMode: 0
}), Yd = qd(Xd), Zd = [9, 13, 27, 32], $d = ia && "CompositionEvent" in window, ae = null;
ia && "documentMode" in document && (ae = document.documentMode);
var be = ia && "TextEvent" in window && !ae, ce = ia && (!$d || ae && 8 < ae && 11 >= ae), de = String.fromCharCode(32), ee = false;
function fe(a, b2) {
  switch (a) {
    case "keyup":
      return Zd.indexOf(b2.keyCode) !== -1;
    case "keydown":
      return b2.keyCode !== 229;
    case "keypress":
    case "mousedown":
    case "focusout":
      return true;
    default:
      return false;
  }
}
function ge(a) {
  a = a.detail;
  return typeof a === "object" && "data" in a ? a.data : null;
}
var he = false;
function ie(a, b2) {
  switch (a) {
    case "compositionend":
      return ge(b2);
    case "keypress":
      if (b2.which !== 32)
        return null;
      ee = true;
      return de;
    case "textInput":
      return a = b2.data, a === de && ee ? null : a;
    default:
      return null;
  }
}
function je(a, b2) {
  if (he)
    return a === "compositionend" || !$d && fe(a, b2) ? (a = md(), ld = kd = jd = null, he = false, a) : null;
  switch (a) {
    case "paste":
      return null;
    case "keypress":
      if (!(b2.ctrlKey || b2.altKey || b2.metaKey) || b2.ctrlKey && b2.altKey) {
        if (b2.char && 1 < b2.char.length)
          return b2.char;
        if (b2.which)
          return String.fromCharCode(b2.which);
      }
      return null;
    case "compositionend":
      return ce && b2.locale !== "ko" ? null : b2.data;
    default:
      return null;
  }
}
var ke = { color: true, date: true, datetime: true, "datetime-local": true, email: true, month: true, number: true, password: true, range: true, search: true, tel: true, text: true, time: true, url: true, week: true };
function le(a) {
  var b2 = a && a.nodeName && a.nodeName.toLowerCase();
  return b2 === "input" ? !!ke[a.type] : b2 === "textarea" ? true : false;
}
function me(a, b2, c2, d2) {
  Db(d2);
  b2 = ne(b2, "onChange");
  0 < b2.length && (c2 = new sd("onChange", "change", null, c2, d2), a.push({ event: c2, listeners: b2 }));
}
var oe = null, pe = null;
function qe(a) {
  re(a, 0);
}
function se(a) {
  var b2 = te(a);
  if (Va(b2))
    return a;
}
function ue(a, b2) {
  if (a === "change")
    return b2;
}
var ve = false;
if (ia) {
  var we;
  if (ia) {
    var xe = "oninput" in document;
    if (!xe) {
      var ye = document.createElement("div");
      ye.setAttribute("oninput", "return;");
      xe = typeof ye.oninput === "function";
    }
    we = xe;
  } else
    we = false;
  ve = we && (!document.documentMode || 9 < document.documentMode);
}
function ze() {
  oe && (oe.detachEvent("onpropertychange", Ae), pe = oe = null);
}
function Ae(a) {
  if (a.propertyName === "value" && se(pe)) {
    var b2 = [];
    me(b2, pe, a, wb(a));
    Ib(qe, b2);
  }
}
function Be(a, b2, c2) {
  a === "focusin" ? (ze(), oe = b2, pe = c2, oe.attachEvent("onpropertychange", Ae)) : a === "focusout" && ze();
}
function Ce(a) {
  if (a === "selectionchange" || a === "keyup" || a === "keydown")
    return se(pe);
}
function De(a, b2) {
  if (a === "click")
    return se(b2);
}
function Ee(a, b2) {
  if (a === "input" || a === "change")
    return se(b2);
}
function Fe(a, b2) {
  return a === b2 && (a !== 0 || 1 / a === 1 / b2) || a !== a && b2 !== b2;
}
var Ge = typeof Object.is === "function" ? Object.is : Fe;
function He(a, b2) {
  if (Ge(a, b2))
    return true;
  if (typeof a !== "object" || a === null || typeof b2 !== "object" || b2 === null)
    return false;
  var c2 = Object.keys(a), d2 = Object.keys(b2);
  if (c2.length !== d2.length)
    return false;
  for (d2 = 0; d2 < c2.length; d2++) {
    var e2 = c2[d2];
    if (!ja.call(b2, e2) || !Ge(a[e2], b2[e2]))
      return false;
  }
  return true;
}
function Ie(a) {
  for (; a && a.firstChild; )
    a = a.firstChild;
  return a;
}
function Je(a, b2) {
  var c2 = Ie(a);
  a = 0;
  for (var d2; c2; ) {
    if (c2.nodeType === 3) {
      d2 = a + c2.textContent.length;
      if (a <= b2 && d2 >= b2)
        return { node: c2, offset: b2 - a };
      a = d2;
    }
    a: {
      for (; c2; ) {
        if (c2.nextSibling) {
          c2 = c2.nextSibling;
          break a;
        }
        c2 = c2.parentNode;
      }
      c2 = void 0;
    }
    c2 = Ie(c2);
  }
}
function Ke(a, b2) {
  return a && b2 ? a === b2 ? true : a && a.nodeType === 3 ? false : b2 && b2.nodeType === 3 ? Ke(a, b2.parentNode) : "contains" in a ? a.contains(b2) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b2) & 16) : false : false;
}
function Le() {
  for (var a = window, b2 = Wa(); b2 instanceof a.HTMLIFrameElement; ) {
    try {
      var c2 = typeof b2.contentWindow.location.href === "string";
    } catch (d2) {
      c2 = false;
    }
    if (c2)
      a = b2.contentWindow;
    else
      break;
    b2 = Wa(a.document);
  }
  return b2;
}
function Me(a) {
  var b2 = a && a.nodeName && a.nodeName.toLowerCase();
  return b2 && (b2 === "input" && (a.type === "text" || a.type === "search" || a.type === "tel" || a.type === "url" || a.type === "password") || b2 === "textarea" || a.contentEditable === "true");
}
function Ne(a) {
  var b2 = Le(), c2 = a.focusedElem, d2 = a.selectionRange;
  if (b2 !== c2 && c2 && c2.ownerDocument && Ke(c2.ownerDocument.documentElement, c2)) {
    if (d2 !== null && Me(c2)) {
      if (b2 = d2.start, a = d2.end, a === void 0 && (a = b2), "selectionStart" in c2)
        c2.selectionStart = b2, c2.selectionEnd = Math.min(a, c2.value.length);
      else if (a = (b2 = c2.ownerDocument || document) && b2.defaultView || window, a.getSelection) {
        a = a.getSelection();
        var e2 = c2.textContent.length, f2 = Math.min(d2.start, e2);
        d2 = d2.end === void 0 ? f2 : Math.min(d2.end, e2);
        !a.extend && f2 > d2 && (e2 = d2, d2 = f2, f2 = e2);
        e2 = Je(c2, f2);
        var g2 = Je(c2, d2);
        e2 && g2 && (a.rangeCount !== 1 || a.anchorNode !== e2.node || a.anchorOffset !== e2.offset || a.focusNode !== g2.node || a.focusOffset !== g2.offset) && (b2 = b2.createRange(), b2.setStart(e2.node, e2.offset), a.removeAllRanges(), f2 > d2 ? (a.addRange(b2), a.extend(g2.node, g2.offset)) : (b2.setEnd(g2.node, g2.offset), a.addRange(b2)));
      }
    }
    b2 = [];
    for (a = c2; a = a.parentNode; )
      a.nodeType === 1 && b2.push({ element: a, left: a.scrollLeft, top: a.scrollTop });
    typeof c2.focus === "function" && c2.focus();
    for (c2 = 0; c2 < b2.length; c2++)
      a = b2[c2], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;
  }
}
var Oe = ia && "documentMode" in document && 11 >= document.documentMode, Pe = null, Qe = null, Re = null, Se = false;
function Te(a, b2, c2) {
  var d2 = c2.window === c2 ? c2.document : c2.nodeType === 9 ? c2 : c2.ownerDocument;
  Se || Pe == null || Pe !== Wa(d2) || (d2 = Pe, "selectionStart" in d2 && Me(d2) ? d2 = { start: d2.selectionStart, end: d2.selectionEnd } : (d2 = (d2.ownerDocument && d2.ownerDocument.defaultView || window).getSelection(), d2 = { anchorNode: d2.anchorNode, anchorOffset: d2.anchorOffset, focusNode: d2.focusNode, focusOffset: d2.focusOffset }), Re && He(Re, d2) || (Re = d2, d2 = ne(Qe, "onSelect"), 0 < d2.length && (b2 = new sd("onSelect", "select", null, b2, c2), a.push({ event: b2, listeners: d2 }), b2.target = Pe)));
}
function Ue(a, b2) {
  var c2 = {};
  c2[a.toLowerCase()] = b2.toLowerCase();
  c2["Webkit" + a] = "webkit" + b2;
  c2["Moz" + a] = "moz" + b2;
  return c2;
}
var Ve = { animationend: Ue("Animation", "AnimationEnd"), animationiteration: Ue("Animation", "AnimationIteration"), animationstart: Ue("Animation", "AnimationStart"), transitionend: Ue("Transition", "TransitionEnd") }, We = {}, Xe = {};
ia && (Xe = document.createElement("div").style, "AnimationEvent" in window || (delete Ve.animationend.animation, delete Ve.animationiteration.animation, delete Ve.animationstart.animation), "TransitionEvent" in window || delete Ve.transitionend.transition);
function Ye(a) {
  if (We[a])
    return We[a];
  if (!Ve[a])
    return a;
  var b2 = Ve[a], c2;
  for (c2 in b2)
    if (b2.hasOwnProperty(c2) && c2 in Xe)
      return We[a] = b2[c2];
  return a;
}
var Ze = Ye("animationend"), $e = Ye("animationiteration"), af = Ye("animationstart"), bf = Ye("transitionend"), cf = /* @__PURE__ */ new Map(), df = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
function ef(a, b2) {
  cf.set(a, b2);
  fa(b2, [a]);
}
for (var ff = 0; ff < df.length; ff++) {
  var gf = df[ff], hf = gf.toLowerCase(), jf = gf[0].toUpperCase() + gf.slice(1);
  ef(hf, "on" + jf);
}
ef(Ze, "onAnimationEnd");
ef($e, "onAnimationIteration");
ef(af, "onAnimationStart");
ef("dblclick", "onDoubleClick");
ef("focusin", "onFocus");
ef("focusout", "onBlur");
ef(bf, "onTransitionEnd");
ha("onMouseEnter", ["mouseout", "mouseover"]);
ha("onMouseLeave", ["mouseout", "mouseover"]);
ha("onPointerEnter", ["pointerout", "pointerover"]);
ha("onPointerLeave", ["pointerout", "pointerover"]);
fa("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
fa("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
fa("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
fa("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var kf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), lf = new Set("cancel close invalid load scroll toggle".split(" ").concat(kf));
function mf(a, b2, c2) {
  var d2 = a.type || "unknown-event";
  a.currentTarget = c2;
  Tb(d2, b2, void 0, a);
  a.currentTarget = null;
}
function re(a, b2) {
  b2 = (b2 & 4) !== 0;
  for (var c2 = 0; c2 < a.length; c2++) {
    var d2 = a[c2], e2 = d2.event;
    d2 = d2.listeners;
    a: {
      var f2 = void 0;
      if (b2)
        for (var g2 = d2.length - 1; 0 <= g2; g2--) {
          var h2 = d2[g2], k2 = h2.instance, l2 = h2.currentTarget;
          h2 = h2.listener;
          if (k2 !== f2 && e2.isPropagationStopped())
            break a;
          mf(e2, h2, l2);
          f2 = k2;
        }
      else
        for (g2 = 0; g2 < d2.length; g2++) {
          h2 = d2[g2];
          k2 = h2.instance;
          l2 = h2.currentTarget;
          h2 = h2.listener;
          if (k2 !== f2 && e2.isPropagationStopped())
            break a;
          mf(e2, h2, l2);
          f2 = k2;
        }
    }
  }
  if (Pb)
    throw a = Qb, Pb = false, Qb = null, a;
}
function D(a, b2) {
  var c2 = b2[nf];
  c2 === void 0 && (c2 = b2[nf] = /* @__PURE__ */ new Set());
  var d2 = a + "__bubble";
  c2.has(d2) || (of$1(b2, a, 2, false), c2.add(d2));
}
function pf(a, b2, c2) {
  var d2 = 0;
  b2 && (d2 |= 4);
  of$1(c2, a, d2, b2);
}
var qf = "_reactListening" + Math.random().toString(36).slice(2);
function rf(a) {
  if (!a[qf]) {
    a[qf] = true;
    da.forEach(function(b3) {
      b3 !== "selectionchange" && (lf.has(b3) || pf(b3, false, a), pf(b3, true, a));
    });
    var b2 = a.nodeType === 9 ? a : a.ownerDocument;
    b2 === null || b2[qf] || (b2[qf] = true, pf("selectionchange", false, b2));
  }
}
function of$1(a, b2, c2, d2) {
  switch (id(b2)) {
    case 1:
      var e2 = dd;
      break;
    case 4:
      e2 = fd;
      break;
    default:
      e2 = ed;
  }
  c2 = e2.bind(null, b2, c2, a);
  e2 = void 0;
  !Kb || b2 !== "touchstart" && b2 !== "touchmove" && b2 !== "wheel" || (e2 = true);
  d2 ? e2 !== void 0 ? a.addEventListener(b2, c2, { capture: true, passive: e2 }) : a.addEventListener(b2, c2, true) : e2 !== void 0 ? a.addEventListener(b2, c2, { passive: e2 }) : a.addEventListener(b2, c2, false);
}
function gd(a, b2, c2, d2, e2) {
  var f2 = d2;
  if ((b2 & 1) === 0 && (b2 & 2) === 0 && d2 !== null)
    a:
      for (; ; ) {
        if (d2 === null)
          return;
        var g2 = d2.tag;
        if (g2 === 3 || g2 === 4) {
          var h2 = d2.stateNode.containerInfo;
          if (h2 === e2 || h2.nodeType === 8 && h2.parentNode === e2)
            break;
          if (g2 === 4)
            for (g2 = d2.return; g2 !== null; ) {
              var k2 = g2.tag;
              if (k2 === 3 || k2 === 4) {
                if (k2 = g2.stateNode.containerInfo, k2 === e2 || k2.nodeType === 8 && k2.parentNode === e2)
                  return;
              }
              g2 = g2.return;
            }
          for (; h2 !== null; ) {
            g2 = Vc(h2);
            if (g2 === null)
              return;
            k2 = g2.tag;
            if (k2 === 5 || k2 === 6) {
              d2 = f2 = g2;
              continue a;
            }
            h2 = h2.parentNode;
          }
        }
        d2 = d2.return;
      }
  Ib(function() {
    var d3 = f2, e3 = wb(c2), g3 = [];
    a: {
      var h3 = cf.get(a);
      if (h3 !== void 0) {
        var k3 = sd, m2 = a;
        switch (a) {
          case "keypress":
            if (nd(c2) === 0)
              break a;
          case "keydown":
          case "keyup":
            k3 = Qd;
            break;
          case "focusin":
            m2 = "focus";
            k3 = Ed;
            break;
          case "focusout":
            m2 = "blur";
            k3 = Ed;
            break;
          case "beforeblur":
          case "afterblur":
            k3 = Ed;
            break;
          case "click":
            if (c2.button === 2)
              break a;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            k3 = Ad;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            k3 = Cd;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            k3 = Ud;
            break;
          case Ze:
          case $e:
          case af:
            k3 = Gd;
            break;
          case bf:
            k3 = Wd;
            break;
          case "scroll":
            k3 = ud;
            break;
          case "wheel":
            k3 = Yd;
            break;
          case "copy":
          case "cut":
          case "paste":
            k3 = Id;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            k3 = Sd;
        }
        var w2 = (b2 & 4) !== 0, J2 = !w2 && a === "scroll", v2 = w2 ? h3 !== null ? h3 + "Capture" : null : h3;
        w2 = [];
        for (var x2 = d3, r2; x2 !== null; ) {
          r2 = x2;
          var F2 = r2.stateNode;
          r2.tag === 5 && F2 !== null && (r2 = F2, v2 !== null && (F2 = Jb(x2, v2), F2 != null && w2.push(sf(x2, F2, r2))));
          if (J2)
            break;
          x2 = x2.return;
        }
        0 < w2.length && (h3 = new k3(h3, m2, null, c2, e3), g3.push({ event: h3, listeners: w2 }));
      }
    }
    if ((b2 & 7) === 0) {
      a: {
        h3 = a === "mouseover" || a === "pointerover";
        k3 = a === "mouseout" || a === "pointerout";
        if (h3 && c2 !== vb && (m2 = c2.relatedTarget || c2.fromElement) && (Vc(m2) || m2[tf]))
          break a;
        if (k3 || h3) {
          h3 = e3.window === e3 ? e3 : (h3 = e3.ownerDocument) ? h3.defaultView || h3.parentWindow : window;
          if (k3) {
            if (m2 = c2.relatedTarget || c2.toElement, k3 = d3, m2 = m2 ? Vc(m2) : null, m2 !== null && (J2 = Ub(m2), m2 !== J2 || m2.tag !== 5 && m2.tag !== 6))
              m2 = null;
          } else
            k3 = null, m2 = d3;
          if (k3 !== m2) {
            w2 = Ad;
            F2 = "onMouseLeave";
            v2 = "onMouseEnter";
            x2 = "mouse";
            if (a === "pointerout" || a === "pointerover")
              w2 = Sd, F2 = "onPointerLeave", v2 = "onPointerEnter", x2 = "pointer";
            J2 = k3 == null ? h3 : te(k3);
            r2 = m2 == null ? h3 : te(m2);
            h3 = new w2(F2, x2 + "leave", k3, c2, e3);
            h3.target = J2;
            h3.relatedTarget = r2;
            F2 = null;
            Vc(e3) === d3 && (w2 = new w2(v2, x2 + "enter", m2, c2, e3), w2.target = r2, w2.relatedTarget = J2, F2 = w2);
            J2 = F2;
            if (k3 && m2)
              b: {
                w2 = k3;
                v2 = m2;
                x2 = 0;
                for (r2 = w2; r2; r2 = uf(r2))
                  x2++;
                r2 = 0;
                for (F2 = v2; F2; F2 = uf(F2))
                  r2++;
                for (; 0 < x2 - r2; )
                  w2 = uf(w2), x2--;
                for (; 0 < r2 - x2; )
                  v2 = uf(v2), r2--;
                for (; x2--; ) {
                  if (w2 === v2 || v2 !== null && w2 === v2.alternate)
                    break b;
                  w2 = uf(w2);
                  v2 = uf(v2);
                }
                w2 = null;
              }
            else
              w2 = null;
            k3 !== null && vf(g3, h3, k3, w2, false);
            m2 !== null && J2 !== null && vf(g3, J2, m2, w2, true);
          }
        }
      }
      a: {
        h3 = d3 ? te(d3) : window;
        k3 = h3.nodeName && h3.nodeName.toLowerCase();
        if (k3 === "select" || k3 === "input" && h3.type === "file")
          var Z = ue;
        else if (le(h3))
          if (ve)
            Z = Ee;
          else {
            Z = Ce;
            var ya = Be;
          }
        else
          (k3 = h3.nodeName) && k3.toLowerCase() === "input" && (h3.type === "checkbox" || h3.type === "radio") && (Z = De);
        if (Z && (Z = Z(a, d3))) {
          me(g3, Z, c2, e3);
          break a;
        }
        ya && ya(a, h3, d3);
        a === "focusout" && (ya = h3._wrapperState) && ya.controlled && h3.type === "number" && bb(h3, "number", h3.value);
      }
      ya = d3 ? te(d3) : window;
      switch (a) {
        case "focusin":
          if (le(ya) || ya.contentEditable === "true")
            Pe = ya, Qe = d3, Re = null;
          break;
        case "focusout":
          Re = Qe = Pe = null;
          break;
        case "mousedown":
          Se = true;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          Se = false;
          Te(g3, c2, e3);
          break;
        case "selectionchange":
          if (Oe)
            break;
        case "keydown":
        case "keyup":
          Te(g3, c2, e3);
      }
      var ab;
      if ($d)
        b: {
          switch (a) {
            case "compositionstart":
              var ca = "onCompositionStart";
              break b;
            case "compositionend":
              ca = "onCompositionEnd";
              break b;
            case "compositionupdate":
              ca = "onCompositionUpdate";
              break b;
          }
          ca = void 0;
        }
      else
        he ? fe(a, c2) && (ca = "onCompositionEnd") : a === "keydown" && c2.keyCode === 229 && (ca = "onCompositionStart");
      ca && (ce && c2.locale !== "ko" && (he || ca !== "onCompositionStart" ? ca === "onCompositionEnd" && he && (ab = md()) : (jd = e3, kd = "value" in jd ? jd.value : jd.textContent, he = true)), ya = ne(d3, ca), 0 < ya.length && (ca = new Kd(ca, a, null, c2, e3), g3.push({ event: ca, listeners: ya }), ab ? ca.data = ab : (ab = ge(c2), ab !== null && (ca.data = ab))));
      if (ab = be ? ie(a, c2) : je(a, c2))
        d3 = ne(d3, "onBeforeInput"), 0 < d3.length && (e3 = new Kd("onBeforeInput", "beforeinput", null, c2, e3), g3.push({ event: e3, listeners: d3 }), e3.data = ab);
    }
    re(g3, b2);
  });
}
function sf(a, b2, c2) {
  return { instance: a, listener: b2, currentTarget: c2 };
}
function ne(a, b2) {
  for (var c2 = b2 + "Capture", d2 = []; a !== null; ) {
    var e2 = a, f2 = e2.stateNode;
    e2.tag === 5 && f2 !== null && (e2 = f2, f2 = Jb(a, c2), f2 != null && d2.unshift(sf(a, f2, e2)), f2 = Jb(a, b2), f2 != null && d2.push(sf(a, f2, e2)));
    a = a.return;
  }
  return d2;
}
function uf(a) {
  if (a === null)
    return null;
  do
    a = a.return;
  while (a && a.tag !== 5);
  return a ? a : null;
}
function vf(a, b2, c2, d2, e2) {
  for (var f2 = b2._reactName, g2 = []; c2 !== null && c2 !== d2; ) {
    var h2 = c2, k2 = h2.alternate, l2 = h2.stateNode;
    if (k2 !== null && k2 === d2)
      break;
    h2.tag === 5 && l2 !== null && (h2 = l2, e2 ? (k2 = Jb(c2, f2), k2 != null && g2.unshift(sf(c2, k2, h2))) : e2 || (k2 = Jb(c2, f2), k2 != null && g2.push(sf(c2, k2, h2))));
    c2 = c2.return;
  }
  g2.length !== 0 && a.push({ event: b2, listeners: g2 });
}
var wf = /\r\n?/g, xf = /\u0000|\uFFFD/g;
function yf(a) {
  return (typeof a === "string" ? a : "" + a).replace(wf, "\n").replace(xf, "");
}
function zf(a, b2, c2) {
  b2 = yf(b2);
  if (yf(a) !== b2 && c2)
    throw Error(p$2(425));
}
function Af() {
}
var Bf = null, Cf = null;
function Df(a, b2) {
  return a === "textarea" || a === "noscript" || typeof b2.children === "string" || typeof b2.children === "number" || typeof b2.dangerouslySetInnerHTML === "object" && b2.dangerouslySetInnerHTML !== null && b2.dangerouslySetInnerHTML.__html != null;
}
var Ef = typeof setTimeout === "function" ? setTimeout : void 0, Ff = typeof clearTimeout === "function" ? clearTimeout : void 0, Gf = typeof Promise === "function" ? Promise : void 0, If = typeof queueMicrotask === "function" ? queueMicrotask : typeof Gf !== "undefined" ? function(a) {
  return Gf.resolve(null).then(a).catch(Hf);
} : Ef;
function Hf(a) {
  setTimeout(function() {
    throw a;
  });
}
function Jf(a, b2) {
  var c2 = b2, d2 = 0;
  do {
    var e2 = c2.nextSibling;
    a.removeChild(c2);
    if (e2 && e2.nodeType === 8)
      if (c2 = e2.data, c2 === "/$") {
        if (d2 === 0) {
          a.removeChild(e2);
          ad(b2);
          return;
        }
        d2--;
      } else
        c2 !== "$" && c2 !== "$?" && c2 !== "$!" || d2++;
    c2 = e2;
  } while (c2);
  ad(b2);
}
function Kf(a) {
  for (; a != null; a = a.nextSibling) {
    var b2 = a.nodeType;
    if (b2 === 1 || b2 === 3)
      break;
    if (b2 === 8) {
      b2 = a.data;
      if (b2 === "$" || b2 === "$!" || b2 === "$?")
        break;
      if (b2 === "/$")
        return null;
    }
  }
  return a;
}
function Lf(a) {
  a = a.previousSibling;
  for (var b2 = 0; a; ) {
    if (a.nodeType === 8) {
      var c2 = a.data;
      if (c2 === "$" || c2 === "$!" || c2 === "$?") {
        if (b2 === 0)
          return a;
        b2--;
      } else
        c2 === "/$" && b2++;
    }
    a = a.previousSibling;
  }
  return null;
}
var Mf = Math.random().toString(36).slice(2), Nf = "__reactFiber$" + Mf, Of = "__reactProps$" + Mf, tf = "__reactContainer$" + Mf, nf = "__reactEvents$" + Mf, Pf = "__reactListeners$" + Mf, Qf = "__reactHandles$" + Mf;
function Vc(a) {
  var b2 = a[Nf];
  if (b2)
    return b2;
  for (var c2 = a.parentNode; c2; ) {
    if (b2 = c2[tf] || c2[Nf]) {
      c2 = b2.alternate;
      if (b2.child !== null || c2 !== null && c2.child !== null)
        for (a = Lf(a); a !== null; ) {
          if (c2 = a[Nf])
            return c2;
          a = Lf(a);
        }
      return b2;
    }
    a = c2;
    c2 = a.parentNode;
  }
  return null;
}
function Bb(a) {
  a = a[Nf] || a[tf];
  return !a || a.tag !== 5 && a.tag !== 6 && a.tag !== 13 && a.tag !== 3 ? null : a;
}
function te(a) {
  if (a.tag === 5 || a.tag === 6)
    return a.stateNode;
  throw Error(p$2(33));
}
function Cb(a) {
  return a[Of] || null;
}
var Rf = [], Sf = -1;
function Tf(a) {
  return { current: a };
}
function E(a) {
  0 > Sf || (a.current = Rf[Sf], Rf[Sf] = null, Sf--);
}
function G(a, b2) {
  Sf++;
  Rf[Sf] = a.current;
  a.current = b2;
}
var Uf = {}, H = Tf(Uf), Vf = Tf(false), Wf = Uf;
function Xf(a, b2) {
  var c2 = a.type.contextTypes;
  if (!c2)
    return Uf;
  var d2 = a.stateNode;
  if (d2 && d2.__reactInternalMemoizedUnmaskedChildContext === b2)
    return d2.__reactInternalMemoizedMaskedChildContext;
  var e2 = {}, f2;
  for (f2 in c2)
    e2[f2] = b2[f2];
  d2 && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b2, a.__reactInternalMemoizedMaskedChildContext = e2);
  return e2;
}
function Yf(a) {
  a = a.childContextTypes;
  return a !== null && a !== void 0;
}
function Zf() {
  E(Vf);
  E(H);
}
function $f(a, b2, c2) {
  if (H.current !== Uf)
    throw Error(p$2(168));
  G(H, b2);
  G(Vf, c2);
}
function ag(a, b2, c2) {
  var d2 = a.stateNode;
  b2 = b2.childContextTypes;
  if (typeof d2.getChildContext !== "function")
    return c2;
  d2 = d2.getChildContext();
  for (var e2 in d2)
    if (!(e2 in b2))
      throw Error(p$2(108, Qa(a) || "Unknown", e2));
  return A$1({}, c2, d2);
}
function bg(a) {
  a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || Uf;
  Wf = H.current;
  G(H, a);
  G(Vf, Vf.current);
  return true;
}
function cg(a, b2, c2) {
  var d2 = a.stateNode;
  if (!d2)
    throw Error(p$2(169));
  c2 ? (a = ag(a, b2, Wf), d2.__reactInternalMemoizedMergedChildContext = a, E(Vf), E(H), G(H, a)) : E(Vf);
  G(Vf, c2);
}
var dg = null, eg = false, fg = false;
function gg(a) {
  dg === null ? dg = [a] : dg.push(a);
}
function hg(a) {
  eg = true;
  gg(a);
}
function ig() {
  if (!fg && dg !== null) {
    fg = true;
    var a = 0, b2 = C;
    try {
      var c2 = dg;
      for (C = 1; a < c2.length; a++) {
        var d2 = c2[a];
        do
          d2 = d2(true);
        while (d2 !== null);
      }
      dg = null;
      eg = false;
    } catch (e2) {
      throw dg !== null && (dg = dg.slice(a + 1)), $b(ec, ig), e2;
    } finally {
      C = b2, fg = false;
    }
  }
  return null;
}
var jg = ta.ReactCurrentBatchConfig;
function kg(a, b2) {
  if (a && a.defaultProps) {
    b2 = A$1({}, b2);
    a = a.defaultProps;
    for (var c2 in a)
      b2[c2] === void 0 && (b2[c2] = a[c2]);
    return b2;
  }
  return b2;
}
var lg = Tf(null), mg = null, ng = null, og = null;
function pg() {
  og = ng = mg = null;
}
function qg(a) {
  var b2 = lg.current;
  E(lg);
  a._currentValue = b2;
}
function rg(a, b2, c2) {
  for (; a !== null; ) {
    var d2 = a.alternate;
    (a.childLanes & b2) !== b2 ? (a.childLanes |= b2, d2 !== null && (d2.childLanes |= b2)) : d2 !== null && (d2.childLanes & b2) !== b2 && (d2.childLanes |= b2);
    if (a === c2)
      break;
    a = a.return;
  }
}
function sg(a, b2) {
  mg = a;
  og = ng = null;
  a = a.dependencies;
  a !== null && a.firstContext !== null && ((a.lanes & b2) !== 0 && (tg = true), a.firstContext = null);
}
function ug(a) {
  var b2 = a._currentValue;
  if (og !== a)
    if (a = { context: a, memoizedValue: b2, next: null }, ng === null) {
      if (mg === null)
        throw Error(p$2(308));
      ng = a;
      mg.dependencies = { lanes: 0, firstContext: a };
    } else
      ng = ng.next = a;
  return b2;
}
var vg = null, wg = false;
function xg(a) {
  a.updateQueue = { baseState: a.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
}
function yg(a, b2) {
  a = a.updateQueue;
  b2.updateQueue === a && (b2.updateQueue = { baseState: a.baseState, firstBaseUpdate: a.firstBaseUpdate, lastBaseUpdate: a.lastBaseUpdate, shared: a.shared, effects: a.effects });
}
function zg(a, b2) {
  return { eventTime: a, lane: b2, tag: 0, payload: null, callback: null, next: null };
}
function Ag(a, b2) {
  var c2 = a.updateQueue;
  c2 !== null && (c2 = c2.shared, Bg(a) ? (a = c2.interleaved, a === null ? (b2.next = b2, vg === null ? vg = [c2] : vg.push(c2)) : (b2.next = a.next, a.next = b2), c2.interleaved = b2) : (a = c2.pending, a === null ? b2.next = b2 : (b2.next = a.next, a.next = b2), c2.pending = b2));
}
function Cg(a, b2, c2) {
  b2 = b2.updateQueue;
  if (b2 !== null && (b2 = b2.shared, (c2 & 4194240) !== 0)) {
    var d2 = b2.lanes;
    d2 &= a.pendingLanes;
    c2 |= d2;
    b2.lanes = c2;
    Bc(a, c2);
  }
}
function Dg(a, b2) {
  var c2 = a.updateQueue, d2 = a.alternate;
  if (d2 !== null && (d2 = d2.updateQueue, c2 === d2)) {
    var e2 = null, f2 = null;
    c2 = c2.firstBaseUpdate;
    if (c2 !== null) {
      do {
        var g2 = { eventTime: c2.eventTime, lane: c2.lane, tag: c2.tag, payload: c2.payload, callback: c2.callback, next: null };
        f2 === null ? e2 = f2 = g2 : f2 = f2.next = g2;
        c2 = c2.next;
      } while (c2 !== null);
      f2 === null ? e2 = f2 = b2 : f2 = f2.next = b2;
    } else
      e2 = f2 = b2;
    c2 = { baseState: d2.baseState, firstBaseUpdate: e2, lastBaseUpdate: f2, shared: d2.shared, effects: d2.effects };
    a.updateQueue = c2;
    return;
  }
  a = c2.lastBaseUpdate;
  a === null ? c2.firstBaseUpdate = b2 : a.next = b2;
  c2.lastBaseUpdate = b2;
}
function Eg(a, b2, c2, d2) {
  var e2 = a.updateQueue;
  wg = false;
  var f2 = e2.firstBaseUpdate, g2 = e2.lastBaseUpdate, h2 = e2.shared.pending;
  if (h2 !== null) {
    e2.shared.pending = null;
    var k2 = h2, l2 = k2.next;
    k2.next = null;
    g2 === null ? f2 = l2 : g2.next = l2;
    g2 = k2;
    var n2 = a.alternate;
    n2 !== null && (n2 = n2.updateQueue, h2 = n2.lastBaseUpdate, h2 !== g2 && (h2 === null ? n2.firstBaseUpdate = l2 : h2.next = l2, n2.lastBaseUpdate = k2));
  }
  if (f2 !== null) {
    var u2 = e2.baseState;
    g2 = 0;
    n2 = l2 = k2 = null;
    h2 = f2;
    do {
      var q2 = h2.lane, y2 = h2.eventTime;
      if ((d2 & q2) === q2) {
        n2 !== null && (n2 = n2.next = {
          eventTime: y2,
          lane: 0,
          tag: h2.tag,
          payload: h2.payload,
          callback: h2.callback,
          next: null
        });
        a: {
          var m2 = a, w2 = h2;
          q2 = b2;
          y2 = c2;
          switch (w2.tag) {
            case 1:
              m2 = w2.payload;
              if (typeof m2 === "function") {
                u2 = m2.call(y2, u2, q2);
                break a;
              }
              u2 = m2;
              break a;
            case 3:
              m2.flags = m2.flags & -65537 | 128;
            case 0:
              m2 = w2.payload;
              q2 = typeof m2 === "function" ? m2.call(y2, u2, q2) : m2;
              if (q2 === null || q2 === void 0)
                break a;
              u2 = A$1({}, u2, q2);
              break a;
            case 2:
              wg = true;
          }
        }
        h2.callback !== null && h2.lane !== 0 && (a.flags |= 64, q2 = e2.effects, q2 === null ? e2.effects = [h2] : q2.push(h2));
      } else
        y2 = { eventTime: y2, lane: q2, tag: h2.tag, payload: h2.payload, callback: h2.callback, next: null }, n2 === null ? (l2 = n2 = y2, k2 = u2) : n2 = n2.next = y2, g2 |= q2;
      h2 = h2.next;
      if (h2 === null)
        if (h2 = e2.shared.pending, h2 === null)
          break;
        else
          q2 = h2, h2 = q2.next, q2.next = null, e2.lastBaseUpdate = q2, e2.shared.pending = null;
    } while (1);
    n2 === null && (k2 = u2);
    e2.baseState = k2;
    e2.firstBaseUpdate = l2;
    e2.lastBaseUpdate = n2;
    b2 = e2.shared.interleaved;
    if (b2 !== null) {
      e2 = b2;
      do
        g2 |= e2.lane, e2 = e2.next;
      while (e2 !== b2);
    } else
      f2 === null && (e2.shared.lanes = 0);
    Fg |= g2;
    a.lanes = g2;
    a.memoizedState = u2;
  }
}
function Gg(a, b2, c2) {
  a = b2.effects;
  b2.effects = null;
  if (a !== null)
    for (b2 = 0; b2 < a.length; b2++) {
      var d2 = a[b2], e2 = d2.callback;
      if (e2 !== null) {
        d2.callback = null;
        d2 = c2;
        if (typeof e2 !== "function")
          throw Error(p$2(191, e2));
        e2.call(d2);
      }
    }
}
var Hg = new aa.Component().refs;
function Ig(a, b2, c2, d2) {
  b2 = a.memoizedState;
  c2 = c2(d2, b2);
  c2 = c2 === null || c2 === void 0 ? b2 : A$1({}, b2, c2);
  a.memoizedState = c2;
  a.lanes === 0 && (a.updateQueue.baseState = c2);
}
var Mg = { isMounted: function(a) {
  return (a = a._reactInternals) ? Ub(a) === a : false;
}, enqueueSetState: function(a, b2, c2) {
  a = a._reactInternals;
  var d2 = Jg(), e2 = Kg(a), f2 = zg(d2, e2);
  f2.payload = b2;
  c2 !== void 0 && c2 !== null && (f2.callback = c2);
  Ag(a, f2);
  b2 = Lg(a, e2, d2);
  b2 !== null && Cg(b2, a, e2);
}, enqueueReplaceState: function(a, b2, c2) {
  a = a._reactInternals;
  var d2 = Jg(), e2 = Kg(a), f2 = zg(d2, e2);
  f2.tag = 1;
  f2.payload = b2;
  c2 !== void 0 && c2 !== null && (f2.callback = c2);
  Ag(a, f2);
  b2 = Lg(a, e2, d2);
  b2 !== null && Cg(b2, a, e2);
}, enqueueForceUpdate: function(a, b2) {
  a = a._reactInternals;
  var c2 = Jg(), d2 = Kg(a), e2 = zg(c2, d2);
  e2.tag = 2;
  b2 !== void 0 && b2 !== null && (e2.callback = b2);
  Ag(a, e2);
  b2 = Lg(a, d2, c2);
  b2 !== null && Cg(b2, a, d2);
} };
function Ng(a, b2, c2, d2, e2, f2, g2) {
  a = a.stateNode;
  return typeof a.shouldComponentUpdate === "function" ? a.shouldComponentUpdate(d2, f2, g2) : b2.prototype && b2.prototype.isPureReactComponent ? !He(c2, d2) || !He(e2, f2) : true;
}
function Og(a, b2, c2) {
  var d2 = false, e2 = Uf;
  var f2 = b2.contextType;
  typeof f2 === "object" && f2 !== null ? f2 = ug(f2) : (e2 = Yf(b2) ? Wf : H.current, d2 = b2.contextTypes, f2 = (d2 = d2 !== null && d2 !== void 0) ? Xf(a, e2) : Uf);
  b2 = new b2(c2, f2);
  a.memoizedState = b2.state !== null && b2.state !== void 0 ? b2.state : null;
  b2.updater = Mg;
  a.stateNode = b2;
  b2._reactInternals = a;
  d2 && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e2, a.__reactInternalMemoizedMaskedChildContext = f2);
  return b2;
}
function Pg(a, b2, c2, d2) {
  a = b2.state;
  typeof b2.componentWillReceiveProps === "function" && b2.componentWillReceiveProps(c2, d2);
  typeof b2.UNSAFE_componentWillReceiveProps === "function" && b2.UNSAFE_componentWillReceiveProps(c2, d2);
  b2.state !== a && Mg.enqueueReplaceState(b2, b2.state, null);
}
function Qg(a, b2, c2, d2) {
  var e2 = a.stateNode;
  e2.props = c2;
  e2.state = a.memoizedState;
  e2.refs = Hg;
  xg(a);
  var f2 = b2.contextType;
  typeof f2 === "object" && f2 !== null ? e2.context = ug(f2) : (f2 = Yf(b2) ? Wf : H.current, e2.context = Xf(a, f2));
  e2.state = a.memoizedState;
  f2 = b2.getDerivedStateFromProps;
  typeof f2 === "function" && (Ig(a, b2, f2, c2), e2.state = a.memoizedState);
  typeof b2.getDerivedStateFromProps === "function" || typeof e2.getSnapshotBeforeUpdate === "function" || typeof e2.UNSAFE_componentWillMount !== "function" && typeof e2.componentWillMount !== "function" || (b2 = e2.state, typeof e2.componentWillMount === "function" && e2.componentWillMount(), typeof e2.UNSAFE_componentWillMount === "function" && e2.UNSAFE_componentWillMount(), b2 !== e2.state && Mg.enqueueReplaceState(e2, e2.state, null), Eg(a, c2, e2, d2), e2.state = a.memoizedState);
  typeof e2.componentDidMount === "function" && (a.flags |= 4194308);
}
var Rg = [], Sg = 0, Tg = null, Ug = 0, Vg = [], Wg = 0, Xg = null, Yg = 1, Zg = "";
function $g(a, b2) {
  Rg[Sg++] = Ug;
  Rg[Sg++] = Tg;
  Tg = a;
  Ug = b2;
}
function ah(a, b2, c2) {
  Vg[Wg++] = Yg;
  Vg[Wg++] = Zg;
  Vg[Wg++] = Xg;
  Xg = a;
  var d2 = Yg;
  a = Zg;
  var e2 = 32 - nc(d2) - 1;
  d2 &= ~(1 << e2);
  c2 += 1;
  var f2 = 32 - nc(b2) + e2;
  if (30 < f2) {
    var g2 = e2 - e2 % 5;
    f2 = (d2 & (1 << g2) - 1).toString(32);
    d2 >>= g2;
    e2 -= g2;
    Yg = 1 << 32 - nc(b2) + e2 | c2 << e2 | d2;
    Zg = f2 + a;
  } else
    Yg = 1 << f2 | c2 << e2 | d2, Zg = a;
}
function bh(a) {
  a.return !== null && ($g(a, 1), ah(a, 1, 0));
}
function ch(a) {
  for (; a === Tg; )
    Tg = Rg[--Sg], Rg[Sg] = null, Ug = Rg[--Sg], Rg[Sg] = null;
  for (; a === Xg; )
    Xg = Vg[--Wg], Vg[Wg] = null, Zg = Vg[--Wg], Vg[Wg] = null, Yg = Vg[--Wg], Vg[Wg] = null;
}
var dh = null, eh = null, I = false, fh = null;
function gh(a, b2) {
  var c2 = hh(5, null, null, 0);
  c2.elementType = "DELETED";
  c2.stateNode = b2;
  c2.return = a;
  b2 = a.deletions;
  b2 === null ? (a.deletions = [c2], a.flags |= 16) : b2.push(c2);
}
function ih(a, b2) {
  switch (a.tag) {
    case 5:
      var c2 = a.type;
      b2 = b2.nodeType !== 1 || c2.toLowerCase() !== b2.nodeName.toLowerCase() ? null : b2;
      return b2 !== null ? (a.stateNode = b2, dh = a, eh = Kf(b2.firstChild), true) : false;
    case 6:
      return b2 = a.pendingProps === "" || b2.nodeType !== 3 ? null : b2, b2 !== null ? (a.stateNode = b2, dh = a, eh = null, true) : false;
    case 13:
      return b2 = b2.nodeType !== 8 ? null : b2, b2 !== null ? (c2 = Xg !== null ? { id: Yg, overflow: Zg } : null, a.memoizedState = { dehydrated: b2, treeContext: c2, retryLane: 1073741824 }, c2 = hh(18, null, null, 0), c2.stateNode = b2, c2.return = a, a.child = c2, dh = a, eh = null, true) : false;
    default:
      return false;
  }
}
function jh(a) {
  return (a.mode & 1) !== 0 && (a.flags & 128) === 0;
}
function kh(a) {
  if (I) {
    var b2 = eh;
    if (b2) {
      var c2 = b2;
      if (!ih(a, b2)) {
        if (jh(a))
          throw Error(p$2(418));
        b2 = Kf(c2.nextSibling);
        var d2 = dh;
        b2 && ih(a, b2) ? gh(d2, c2) : (a.flags = a.flags & -4097 | 2, I = false, dh = a);
      }
    } else {
      if (jh(a))
        throw Error(p$2(418));
      a.flags = a.flags & -4097 | 2;
      I = false;
      dh = a;
    }
  }
}
function lh(a) {
  for (a = a.return; a !== null && a.tag !== 5 && a.tag !== 3 && a.tag !== 13; )
    a = a.return;
  dh = a;
}
function mh(a) {
  if (a !== dh)
    return false;
  if (!I)
    return lh(a), I = true, false;
  var b2;
  (b2 = a.tag !== 3) && !(b2 = a.tag !== 5) && (b2 = a.type, b2 = b2 !== "head" && b2 !== "body" && !Df(a.type, a.memoizedProps));
  if (b2 && (b2 = eh)) {
    if (jh(a)) {
      for (a = eh; a; )
        a = Kf(a.nextSibling);
      throw Error(p$2(418));
    }
    for (; b2; )
      gh(a, b2), b2 = Kf(b2.nextSibling);
  }
  lh(a);
  if (a.tag === 13) {
    a = a.memoizedState;
    a = a !== null ? a.dehydrated : null;
    if (!a)
      throw Error(p$2(317));
    a: {
      a = a.nextSibling;
      for (b2 = 0; a; ) {
        if (a.nodeType === 8) {
          var c2 = a.data;
          if (c2 === "/$") {
            if (b2 === 0) {
              eh = Kf(a.nextSibling);
              break a;
            }
            b2--;
          } else
            c2 !== "$" && c2 !== "$!" && c2 !== "$?" || b2++;
        }
        a = a.nextSibling;
      }
      eh = null;
    }
  } else
    eh = dh ? Kf(a.stateNode.nextSibling) : null;
  return true;
}
function nh() {
  eh = dh = null;
  I = false;
}
function oh(a) {
  fh === null ? fh = [a] : fh.push(a);
}
function ph(a, b2, c2) {
  a = c2.ref;
  if (a !== null && typeof a !== "function" && typeof a !== "object") {
    if (c2._owner) {
      c2 = c2._owner;
      if (c2) {
        if (c2.tag !== 1)
          throw Error(p$2(309));
        var d2 = c2.stateNode;
      }
      if (!d2)
        throw Error(p$2(147, a));
      var e2 = d2, f2 = "" + a;
      if (b2 !== null && b2.ref !== null && typeof b2.ref === "function" && b2.ref._stringRef === f2)
        return b2.ref;
      b2 = function(a2) {
        var b3 = e2.refs;
        b3 === Hg && (b3 = e2.refs = {});
        a2 === null ? delete b3[f2] : b3[f2] = a2;
      };
      b2._stringRef = f2;
      return b2;
    }
    if (typeof a !== "string")
      throw Error(p$2(284));
    if (!c2._owner)
      throw Error(p$2(290, a));
  }
  return a;
}
function qh(a, b2) {
  a = Object.prototype.toString.call(b2);
  throw Error(p$2(31, a === "[object Object]" ? "object with keys {" + Object.keys(b2).join(", ") + "}" : a));
}
function rh(a) {
  var b2 = a._init;
  return b2(a._payload);
}
function sh(a) {
  function b2(b3, c3) {
    if (a) {
      var d3 = b3.deletions;
      d3 === null ? (b3.deletions = [c3], b3.flags |= 16) : d3.push(c3);
    }
  }
  function c2(c3, d3) {
    if (!a)
      return null;
    for (; d3 !== null; )
      b2(c3, d3), d3 = d3.sibling;
    return null;
  }
  function d2(a2, b3) {
    for (a2 = /* @__PURE__ */ new Map(); b3 !== null; )
      b3.key !== null ? a2.set(b3.key, b3) : a2.set(b3.index, b3), b3 = b3.sibling;
    return a2;
  }
  function e2(a2, b3) {
    a2 = th(a2, b3);
    a2.index = 0;
    a2.sibling = null;
    return a2;
  }
  function f2(b3, c3, d3) {
    b3.index = d3;
    if (!a)
      return b3.flags |= 1048576, c3;
    d3 = b3.alternate;
    if (d3 !== null)
      return d3 = d3.index, d3 < c3 ? (b3.flags |= 2, c3) : d3;
    b3.flags |= 2;
    return c3;
  }
  function g2(b3) {
    a && b3.alternate === null && (b3.flags |= 2);
    return b3;
  }
  function h2(a2, b3, c3, d3) {
    if (b3 === null || b3.tag !== 6)
      return b3 = uh(c3, a2.mode, d3), b3.return = a2, b3;
    b3 = e2(b3, c3);
    b3.return = a2;
    return b3;
  }
  function k2(a2, b3, c3, d3) {
    var f3 = c3.type;
    if (f3 === wa)
      return n2(a2, b3, c3.props.children, d3, c3.key);
    if (b3 !== null && (b3.elementType === f3 || typeof f3 === "object" && f3 !== null && f3.$$typeof === Ga && rh(f3) === b3.type))
      return d3 = e2(b3, c3.props), d3.ref = ph(a2, b3, c3), d3.return = a2, d3;
    d3 = vh(c3.type, c3.key, c3.props, null, a2.mode, d3);
    d3.ref = ph(a2, b3, c3);
    d3.return = a2;
    return d3;
  }
  function l2(a2, b3, c3, d3) {
    if (b3 === null || b3.tag !== 4 || b3.stateNode.containerInfo !== c3.containerInfo || b3.stateNode.implementation !== c3.implementation)
      return b3 = wh(c3, a2.mode, d3), b3.return = a2, b3;
    b3 = e2(b3, c3.children || []);
    b3.return = a2;
    return b3;
  }
  function n2(a2, b3, c3, d3, f3) {
    if (b3 === null || b3.tag !== 7)
      return b3 = xh(c3, a2.mode, d3, f3), b3.return = a2, b3;
    b3 = e2(b3, c3);
    b3.return = a2;
    return b3;
  }
  function u2(a2, b3, c3) {
    if (typeof b3 === "string" && b3 !== "" || typeof b3 === "number")
      return b3 = uh("" + b3, a2.mode, c3), b3.return = a2, b3;
    if (typeof b3 === "object" && b3 !== null) {
      switch (b3.$$typeof) {
        case ua:
          return c3 = vh(b3.type, b3.key, b3.props, null, a2.mode, c3), c3.ref = ph(a2, null, b3), c3.return = a2, c3;
        case va:
          return b3 = wh(b3, a2.mode, c3), b3.return = a2, b3;
        case Ga:
          var d3 = b3._init;
          return u2(a2, d3(b3._payload), c3);
      }
      if (db(b3) || Ja(b3))
        return b3 = xh(b3, a2.mode, c3, null), b3.return = a2, b3;
      qh(a2, b3);
    }
    return null;
  }
  function q2(a2, b3, c3, d3) {
    var e3 = b3 !== null ? b3.key : null;
    if (typeof c3 === "string" && c3 !== "" || typeof c3 === "number")
      return e3 !== null ? null : h2(a2, b3, "" + c3, d3);
    if (typeof c3 === "object" && c3 !== null) {
      switch (c3.$$typeof) {
        case ua:
          return c3.key === e3 ? k2(a2, b3, c3, d3) : null;
        case va:
          return c3.key === e3 ? l2(a2, b3, c3, d3) : null;
        case Ga:
          return e3 = c3._init, q2(a2, b3, e3(c3._payload), d3);
      }
      if (db(c3) || Ja(c3))
        return e3 !== null ? null : n2(a2, b3, c3, d3, null);
      qh(a2, c3);
    }
    return null;
  }
  function y2(a2, b3, c3, d3, e3) {
    if (typeof d3 === "string" && d3 !== "" || typeof d3 === "number")
      return a2 = a2.get(c3) || null, h2(b3, a2, "" + d3, e3);
    if (typeof d3 === "object" && d3 !== null) {
      switch (d3.$$typeof) {
        case ua:
          return a2 = a2.get(d3.key === null ? c3 : d3.key) || null, k2(b3, a2, d3, e3);
        case va:
          return a2 = a2.get(d3.key === null ? c3 : d3.key) || null, l2(b3, a2, d3, e3);
        case Ga:
          var f3 = d3._init;
          return y2(a2, b3, c3, f3(d3._payload), e3);
      }
      if (db(d3) || Ja(d3))
        return a2 = a2.get(c3) || null, n2(b3, a2, d3, e3, null);
      qh(b3, d3);
    }
    return null;
  }
  function m2(e3, g3, h3, k3) {
    for (var l3 = null, n3 = null, r2 = g3, m3 = g3 = 0, x2 = null; r2 !== null && m3 < h3.length; m3++) {
      r2.index > m3 ? (x2 = r2, r2 = null) : x2 = r2.sibling;
      var v2 = q2(e3, r2, h3[m3], k3);
      if (v2 === null) {
        r2 === null && (r2 = x2);
        break;
      }
      a && r2 && v2.alternate === null && b2(e3, r2);
      g3 = f2(v2, g3, m3);
      n3 === null ? l3 = v2 : n3.sibling = v2;
      n3 = v2;
      r2 = x2;
    }
    if (m3 === h3.length)
      return c2(e3, r2), I && $g(e3, m3), l3;
    if (r2 === null) {
      for (; m3 < h3.length; m3++)
        r2 = u2(e3, h3[m3], k3), r2 !== null && (g3 = f2(r2, g3, m3), n3 === null ? l3 = r2 : n3.sibling = r2, n3 = r2);
      I && $g(e3, m3);
      return l3;
    }
    for (r2 = d2(e3, r2); m3 < h3.length; m3++)
      x2 = y2(r2, e3, m3, h3[m3], k3), x2 !== null && (a && x2.alternate !== null && r2.delete(x2.key === null ? m3 : x2.key), g3 = f2(x2, g3, m3), n3 === null ? l3 = x2 : n3.sibling = x2, n3 = x2);
    a && r2.forEach(function(a2) {
      return b2(e3, a2);
    });
    I && $g(e3, m3);
    return l3;
  }
  function w2(e3, g3, h3, k3) {
    var l3 = Ja(h3);
    if (typeof l3 !== "function")
      throw Error(p$2(150));
    h3 = l3.call(h3);
    if (h3 == null)
      throw Error(p$2(151));
    for (var n3 = l3 = null, m3 = g3, r2 = g3 = 0, x2 = null, v2 = h3.next(); m3 !== null && !v2.done; r2++, v2 = h3.next()) {
      m3.index > r2 ? (x2 = m3, m3 = null) : x2 = m3.sibling;
      var w3 = q2(e3, m3, v2.value, k3);
      if (w3 === null) {
        m3 === null && (m3 = x2);
        break;
      }
      a && m3 && w3.alternate === null && b2(e3, m3);
      g3 = f2(w3, g3, r2);
      n3 === null ? l3 = w3 : n3.sibling = w3;
      n3 = w3;
      m3 = x2;
    }
    if (v2.done)
      return c2(e3, m3), I && $g(e3, r2), l3;
    if (m3 === null) {
      for (; !v2.done; r2++, v2 = h3.next())
        v2 = u2(e3, v2.value, k3), v2 !== null && (g3 = f2(v2, g3, r2), n3 === null ? l3 = v2 : n3.sibling = v2, n3 = v2);
      I && $g(e3, r2);
      return l3;
    }
    for (m3 = d2(e3, m3); !v2.done; r2++, v2 = h3.next())
      v2 = y2(m3, e3, r2, v2.value, k3), v2 !== null && (a && v2.alternate !== null && m3.delete(v2.key === null ? r2 : v2.key), g3 = f2(v2, g3, r2), n3 === null ? l3 = v2 : n3.sibling = v2, n3 = v2);
    a && m3.forEach(function(a2) {
      return b2(e3, a2);
    });
    I && $g(e3, r2);
    return l3;
  }
  function J2(a2, d3, f3, h3) {
    typeof f3 === "object" && f3 !== null && f3.type === wa && f3.key === null && (f3 = f3.props.children);
    if (typeof f3 === "object" && f3 !== null) {
      switch (f3.$$typeof) {
        case ua:
          a: {
            for (var k3 = f3.key, l3 = d3; l3 !== null; ) {
              if (l3.key === k3) {
                k3 = f3.type;
                if (k3 === wa) {
                  if (l3.tag === 7) {
                    c2(a2, l3.sibling);
                    d3 = e2(l3, f3.props.children);
                    d3.return = a2;
                    a2 = d3;
                    break a;
                  }
                } else if (l3.elementType === k3 || typeof k3 === "object" && k3 !== null && k3.$$typeof === Ga && rh(k3) === l3.type) {
                  c2(a2, l3.sibling);
                  d3 = e2(l3, f3.props);
                  d3.ref = ph(a2, l3, f3);
                  d3.return = a2;
                  a2 = d3;
                  break a;
                }
                c2(a2, l3);
                break;
              } else
                b2(a2, l3);
              l3 = l3.sibling;
            }
            f3.type === wa ? (d3 = xh(f3.props.children, a2.mode, h3, f3.key), d3.return = a2, a2 = d3) : (h3 = vh(f3.type, f3.key, f3.props, null, a2.mode, h3), h3.ref = ph(a2, d3, f3), h3.return = a2, a2 = h3);
          }
          return g2(a2);
        case va:
          a: {
            for (l3 = f3.key; d3 !== null; ) {
              if (d3.key === l3)
                if (d3.tag === 4 && d3.stateNode.containerInfo === f3.containerInfo && d3.stateNode.implementation === f3.implementation) {
                  c2(a2, d3.sibling);
                  d3 = e2(d3, f3.children || []);
                  d3.return = a2;
                  a2 = d3;
                  break a;
                } else {
                  c2(a2, d3);
                  break;
                }
              else
                b2(a2, d3);
              d3 = d3.sibling;
            }
            d3 = wh(f3, a2.mode, h3);
            d3.return = a2;
            a2 = d3;
          }
          return g2(a2);
        case Ga:
          return l3 = f3._init, J2(a2, d3, l3(f3._payload), h3);
      }
      if (db(f3))
        return m2(a2, d3, f3, h3);
      if (Ja(f3))
        return w2(a2, d3, f3, h3);
      qh(a2, f3);
    }
    return typeof f3 === "string" && f3 !== "" || typeof f3 === "number" ? (f3 = "" + f3, d3 !== null && d3.tag === 6 ? (c2(a2, d3.sibling), d3 = e2(d3, f3), d3.return = a2, a2 = d3) : (c2(a2, d3), d3 = uh(f3, a2.mode, h3), d3.return = a2, a2 = d3), g2(a2)) : c2(a2, d3);
  }
  return J2;
}
var yh = sh(true), zh = sh(false), Ah = {}, Bh = Tf(Ah), Ch = Tf(Ah), Dh = Tf(Ah);
function Eh(a) {
  if (a === Ah)
    throw Error(p$2(174));
  return a;
}
function Fh(a, b2) {
  G(Dh, b2);
  G(Ch, a);
  G(Bh, Ah);
  a = b2.nodeType;
  switch (a) {
    case 9:
    case 11:
      b2 = (b2 = b2.documentElement) ? b2.namespaceURI : kb(null, "");
      break;
    default:
      a = a === 8 ? b2.parentNode : b2, b2 = a.namespaceURI || null, a = a.tagName, b2 = kb(b2, a);
  }
  E(Bh);
  G(Bh, b2);
}
function Gh() {
  E(Bh);
  E(Ch);
  E(Dh);
}
function Hh(a) {
  Eh(Dh.current);
  var b2 = Eh(Bh.current);
  var c2 = kb(b2, a.type);
  b2 !== c2 && (G(Ch, a), G(Bh, c2));
}
function Ih(a) {
  Ch.current === a && (E(Bh), E(Ch));
}
var K = Tf(0);
function Jh(a) {
  for (var b2 = a; b2 !== null; ) {
    if (b2.tag === 13) {
      var c2 = b2.memoizedState;
      if (c2 !== null && (c2 = c2.dehydrated, c2 === null || c2.data === "$?" || c2.data === "$!"))
        return b2;
    } else if (b2.tag === 19 && b2.memoizedProps.revealOrder !== void 0) {
      if ((b2.flags & 128) !== 0)
        return b2;
    } else if (b2.child !== null) {
      b2.child.return = b2;
      b2 = b2.child;
      continue;
    }
    if (b2 === a)
      break;
    for (; b2.sibling === null; ) {
      if (b2.return === null || b2.return === a)
        return null;
      b2 = b2.return;
    }
    b2.sibling.return = b2.return;
    b2 = b2.sibling;
  }
  return null;
}
var Kh = [];
function Lh() {
  for (var a = 0; a < Kh.length; a++)
    Kh[a]._workInProgressVersionPrimary = null;
  Kh.length = 0;
}
var Mh = ta.ReactCurrentDispatcher, Nh = ta.ReactCurrentBatchConfig, Oh = 0, L = null, M = null, N = null, Ph = false, Qh = false, Rh = 0, Sh = 0;
function O() {
  throw Error(p$2(321));
}
function Th(a, b2) {
  if (b2 === null)
    return false;
  for (var c2 = 0; c2 < b2.length && c2 < a.length; c2++)
    if (!Ge(a[c2], b2[c2]))
      return false;
  return true;
}
function Uh(a, b2, c2, d2, e2, f2) {
  Oh = f2;
  L = b2;
  b2.memoizedState = null;
  b2.updateQueue = null;
  b2.lanes = 0;
  Mh.current = a === null || a.memoizedState === null ? Vh : Wh;
  a = c2(d2, e2);
  if (Qh) {
    f2 = 0;
    do {
      Qh = false;
      Rh = 0;
      if (25 <= f2)
        throw Error(p$2(301));
      f2 += 1;
      N = M = null;
      b2.updateQueue = null;
      Mh.current = Xh;
      a = c2(d2, e2);
    } while (Qh);
  }
  Mh.current = Yh;
  b2 = M !== null && M.next !== null;
  Oh = 0;
  N = M = L = null;
  Ph = false;
  if (b2)
    throw Error(p$2(300));
  return a;
}
function Zh() {
  var a = Rh !== 0;
  Rh = 0;
  return a;
}
function $h() {
  var a = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
  N === null ? L.memoizedState = N = a : N = N.next = a;
  return N;
}
function ai() {
  if (M === null) {
    var a = L.alternate;
    a = a !== null ? a.memoizedState : null;
  } else
    a = M.next;
  var b2 = N === null ? L.memoizedState : N.next;
  if (b2 !== null)
    N = b2, M = a;
  else {
    if (a === null)
      throw Error(p$2(310));
    M = a;
    a = { memoizedState: M.memoizedState, baseState: M.baseState, baseQueue: M.baseQueue, queue: M.queue, next: null };
    N === null ? L.memoizedState = N = a : N = N.next = a;
  }
  return N;
}
function bi(a, b2) {
  return typeof b2 === "function" ? b2(a) : b2;
}
function ci(a) {
  var b2 = ai(), c2 = b2.queue;
  if (c2 === null)
    throw Error(p$2(311));
  c2.lastRenderedReducer = a;
  var d2 = M, e2 = d2.baseQueue, f2 = c2.pending;
  if (f2 !== null) {
    if (e2 !== null) {
      var g2 = e2.next;
      e2.next = f2.next;
      f2.next = g2;
    }
    d2.baseQueue = e2 = f2;
    c2.pending = null;
  }
  if (e2 !== null) {
    f2 = e2.next;
    d2 = d2.baseState;
    var h2 = g2 = null, k2 = null, l2 = f2;
    do {
      var n2 = l2.lane;
      if ((Oh & n2) === n2)
        k2 !== null && (k2 = k2.next = { lane: 0, action: l2.action, hasEagerState: l2.hasEagerState, eagerState: l2.eagerState, next: null }), d2 = l2.hasEagerState ? l2.eagerState : a(d2, l2.action);
      else {
        var u2 = {
          lane: n2,
          action: l2.action,
          hasEagerState: l2.hasEagerState,
          eagerState: l2.eagerState,
          next: null
        };
        k2 === null ? (h2 = k2 = u2, g2 = d2) : k2 = k2.next = u2;
        L.lanes |= n2;
        Fg |= n2;
      }
      l2 = l2.next;
    } while (l2 !== null && l2 !== f2);
    k2 === null ? g2 = d2 : k2.next = h2;
    Ge(d2, b2.memoizedState) || (tg = true);
    b2.memoizedState = d2;
    b2.baseState = g2;
    b2.baseQueue = k2;
    c2.lastRenderedState = d2;
  }
  a = c2.interleaved;
  if (a !== null) {
    e2 = a;
    do
      f2 = e2.lane, L.lanes |= f2, Fg |= f2, e2 = e2.next;
    while (e2 !== a);
  } else
    e2 === null && (c2.lanes = 0);
  return [b2.memoizedState, c2.dispatch];
}
function di(a) {
  var b2 = ai(), c2 = b2.queue;
  if (c2 === null)
    throw Error(p$2(311));
  c2.lastRenderedReducer = a;
  var d2 = c2.dispatch, e2 = c2.pending, f2 = b2.memoizedState;
  if (e2 !== null) {
    c2.pending = null;
    var g2 = e2 = e2.next;
    do
      f2 = a(f2, g2.action), g2 = g2.next;
    while (g2 !== e2);
    Ge(f2, b2.memoizedState) || (tg = true);
    b2.memoizedState = f2;
    b2.baseQueue === null && (b2.baseState = f2);
    c2.lastRenderedState = f2;
  }
  return [f2, d2];
}
function ei() {
}
function fi(a, b2) {
  var c2 = L, d2 = ai(), e2 = b2(), f2 = !Ge(d2.memoizedState, e2);
  f2 && (d2.memoizedState = e2, tg = true);
  d2 = d2.queue;
  gi(hi.bind(null, c2, d2, a), [a]);
  if (d2.getSnapshot !== b2 || f2 || N !== null && N.memoizedState.tag & 1) {
    c2.flags |= 2048;
    ii(9, ji.bind(null, c2, d2, e2, b2), void 0, null);
    if (P === null)
      throw Error(p$2(349));
    (Oh & 30) !== 0 || ki(c2, b2, e2);
  }
  return e2;
}
function ki(a, b2, c2) {
  a.flags |= 16384;
  a = { getSnapshot: b2, value: c2 };
  b2 = L.updateQueue;
  b2 === null ? (b2 = { lastEffect: null, stores: null }, L.updateQueue = b2, b2.stores = [a]) : (c2 = b2.stores, c2 === null ? b2.stores = [a] : c2.push(a));
}
function ji(a, b2, c2, d2) {
  b2.value = c2;
  b2.getSnapshot = d2;
  li(b2) && Lg(a, 1, -1);
}
function hi(a, b2, c2) {
  return c2(function() {
    li(b2) && Lg(a, 1, -1);
  });
}
function li(a) {
  var b2 = a.getSnapshot;
  a = a.value;
  try {
    var c2 = b2();
    return !Ge(a, c2);
  } catch (d2) {
    return true;
  }
}
function mi(a) {
  var b2 = $h();
  typeof a === "function" && (a = a());
  b2.memoizedState = b2.baseState = a;
  a = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: bi, lastRenderedState: a };
  b2.queue = a;
  a = a.dispatch = ni.bind(null, L, a);
  return [b2.memoizedState, a];
}
function ii(a, b2, c2, d2) {
  a = { tag: a, create: b2, destroy: c2, deps: d2, next: null };
  b2 = L.updateQueue;
  b2 === null ? (b2 = { lastEffect: null, stores: null }, L.updateQueue = b2, b2.lastEffect = a.next = a) : (c2 = b2.lastEffect, c2 === null ? b2.lastEffect = a.next = a : (d2 = c2.next, c2.next = a, a.next = d2, b2.lastEffect = a));
  return a;
}
function oi() {
  return ai().memoizedState;
}
function pi(a, b2, c2, d2) {
  var e2 = $h();
  L.flags |= a;
  e2.memoizedState = ii(1 | b2, c2, void 0, d2 === void 0 ? null : d2);
}
function qi(a, b2, c2, d2) {
  var e2 = ai();
  d2 = d2 === void 0 ? null : d2;
  var f2 = void 0;
  if (M !== null) {
    var g2 = M.memoizedState;
    f2 = g2.destroy;
    if (d2 !== null && Th(d2, g2.deps)) {
      e2.memoizedState = ii(b2, c2, f2, d2);
      return;
    }
  }
  L.flags |= a;
  e2.memoizedState = ii(1 | b2, c2, f2, d2);
}
function ri(a, b2) {
  return pi(8390656, 8, a, b2);
}
function gi(a, b2) {
  return qi(2048, 8, a, b2);
}
function si(a, b2) {
  return qi(4, 2, a, b2);
}
function ti(a, b2) {
  return qi(4, 4, a, b2);
}
function ui(a, b2) {
  if (typeof b2 === "function")
    return a = a(), b2(a), function() {
      b2(null);
    };
  if (b2 !== null && b2 !== void 0)
    return a = a(), b2.current = a, function() {
      b2.current = null;
    };
}
function vi(a, b2, c2) {
  c2 = c2 !== null && c2 !== void 0 ? c2.concat([a]) : null;
  return qi(4, 4, ui.bind(null, b2, a), c2);
}
function wi() {
}
function xi(a, b2) {
  var c2 = ai();
  b2 = b2 === void 0 ? null : b2;
  var d2 = c2.memoizedState;
  if (d2 !== null && b2 !== null && Th(b2, d2[1]))
    return d2[0];
  c2.memoizedState = [a, b2];
  return a;
}
function yi(a, b2) {
  var c2 = ai();
  b2 = b2 === void 0 ? null : b2;
  var d2 = c2.memoizedState;
  if (d2 !== null && b2 !== null && Th(b2, d2[1]))
    return d2[0];
  a = a();
  c2.memoizedState = [a, b2];
  return a;
}
function zi(a, b2, c2) {
  if ((Oh & 21) === 0)
    return a.baseState && (a.baseState = false, tg = true), a.memoizedState = c2;
  Ge(c2, b2) || (c2 = xc(), L.lanes |= c2, Fg |= c2, a.baseState = true);
  return b2;
}
function Ai(a, b2) {
  var c2 = C;
  C = c2 !== 0 && 4 > c2 ? c2 : 4;
  a(true);
  var d2 = Nh.transition;
  Nh.transition = {};
  try {
    a(false), b2();
  } finally {
    C = c2, Nh.transition = d2;
  }
}
function Bi() {
  return ai().memoizedState;
}
function Ci(a, b2, c2) {
  var d2 = Kg(a);
  c2 = { lane: d2, action: c2, hasEagerState: false, eagerState: null, next: null };
  Di(a) ? Ei(b2, c2) : (Fi(a, b2, c2), c2 = Jg(), a = Lg(a, d2, c2), a !== null && Gi(a, b2, d2));
}
function ni(a, b2, c2) {
  var d2 = Kg(a), e2 = { lane: d2, action: c2, hasEagerState: false, eagerState: null, next: null };
  if (Di(a))
    Ei(b2, e2);
  else {
    Fi(a, b2, e2);
    var f2 = a.alternate;
    if (a.lanes === 0 && (f2 === null || f2.lanes === 0) && (f2 = b2.lastRenderedReducer, f2 !== null))
      try {
        var g2 = b2.lastRenderedState, h2 = f2(g2, c2);
        e2.hasEagerState = true;
        e2.eagerState = h2;
        if (Ge(h2, g2))
          return;
      } catch (k2) {
      } finally {
      }
    c2 = Jg();
    a = Lg(a, d2, c2);
    a !== null && Gi(a, b2, d2);
  }
}
function Di(a) {
  var b2 = a.alternate;
  return a === L || b2 !== null && b2 === L;
}
function Ei(a, b2) {
  Qh = Ph = true;
  var c2 = a.pending;
  c2 === null ? b2.next = b2 : (b2.next = c2.next, c2.next = b2);
  a.pending = b2;
}
function Fi(a, b2, c2) {
  Bg(a) ? (a = b2.interleaved, a === null ? (c2.next = c2, vg === null ? vg = [b2] : vg.push(b2)) : (c2.next = a.next, a.next = c2), b2.interleaved = c2) : (a = b2.pending, a === null ? c2.next = c2 : (c2.next = a.next, a.next = c2), b2.pending = c2);
}
function Gi(a, b2, c2) {
  if ((c2 & 4194240) !== 0) {
    var d2 = b2.lanes;
    d2 &= a.pendingLanes;
    c2 |= d2;
    b2.lanes = c2;
    Bc(a, c2);
  }
}
var Yh = { readContext: ug, useCallback: O, useContext: O, useEffect: O, useImperativeHandle: O, useInsertionEffect: O, useLayoutEffect: O, useMemo: O, useReducer: O, useRef: O, useState: O, useDebugValue: O, useDeferredValue: O, useTransition: O, useMutableSource: O, useSyncExternalStore: O, useId: O, unstable_isNewReconciler: false }, Vh = { readContext: ug, useCallback: function(a, b2) {
  $h().memoizedState = [a, b2 === void 0 ? null : b2];
  return a;
}, useContext: ug, useEffect: ri, useImperativeHandle: function(a, b2, c2) {
  c2 = c2 !== null && c2 !== void 0 ? c2.concat([a]) : null;
  return pi(4194308, 4, ui.bind(null, b2, a), c2);
}, useLayoutEffect: function(a, b2) {
  return pi(4194308, 4, a, b2);
}, useInsertionEffect: function(a, b2) {
  return pi(4, 2, a, b2);
}, useMemo: function(a, b2) {
  var c2 = $h();
  b2 = b2 === void 0 ? null : b2;
  a = a();
  c2.memoizedState = [a, b2];
  return a;
}, useReducer: function(a, b2, c2) {
  var d2 = $h();
  b2 = c2 !== void 0 ? c2(b2) : b2;
  d2.memoizedState = d2.baseState = b2;
  a = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: a, lastRenderedState: b2 };
  d2.queue = a;
  a = a.dispatch = Ci.bind(null, L, a);
  return [d2.memoizedState, a];
}, useRef: function(a) {
  var b2 = $h();
  a = { current: a };
  return b2.memoizedState = a;
}, useState: mi, useDebugValue: wi, useDeferredValue: function(a) {
  return $h().memoizedState = a;
}, useTransition: function() {
  var a = mi(false), b2 = a[0];
  a = Ai.bind(null, a[1]);
  $h().memoizedState = a;
  return [b2, a];
}, useMutableSource: function() {
}, useSyncExternalStore: function(a, b2, c2) {
  var d2 = L, e2 = $h();
  if (I) {
    if (c2 === void 0)
      throw Error(p$2(407));
    c2 = c2();
  } else {
    c2 = b2();
    if (P === null)
      throw Error(p$2(349));
    (Oh & 30) !== 0 || ki(d2, b2, c2);
  }
  e2.memoizedState = c2;
  var f2 = { value: c2, getSnapshot: b2 };
  e2.queue = f2;
  ri(hi.bind(null, d2, f2, a), [a]);
  d2.flags |= 2048;
  ii(9, ji.bind(null, d2, f2, c2, b2), void 0, null);
  return c2;
}, useId: function() {
  var a = $h(), b2 = P.identifierPrefix;
  if (I) {
    var c2 = Zg;
    var d2 = Yg;
    c2 = (d2 & ~(1 << 32 - nc(d2) - 1)).toString(32) + c2;
    b2 = ":" + b2 + "R" + c2;
    c2 = Rh++;
    0 < c2 && (b2 += "H" + c2.toString(32));
    b2 += ":";
  } else
    c2 = Sh++, b2 = ":" + b2 + "r" + c2.toString(32) + ":";
  return a.memoizedState = b2;
}, unstable_isNewReconciler: false }, Wh = {
  readContext: ug,
  useCallback: xi,
  useContext: ug,
  useEffect: gi,
  useImperativeHandle: vi,
  useInsertionEffect: si,
  useLayoutEffect: ti,
  useMemo: yi,
  useReducer: ci,
  useRef: oi,
  useState: function() {
    return ci(bi);
  },
  useDebugValue: wi,
  useDeferredValue: function(a) {
    var b2 = ai();
    return zi(b2, M.memoizedState, a);
  },
  useTransition: function() {
    var a = ci(bi)[0], b2 = ai().memoizedState;
    return [a, b2];
  },
  useMutableSource: ei,
  useSyncExternalStore: fi,
  useId: Bi,
  unstable_isNewReconciler: false
}, Xh = { readContext: ug, useCallback: xi, useContext: ug, useEffect: gi, useImperativeHandle: vi, useInsertionEffect: si, useLayoutEffect: ti, useMemo: yi, useReducer: di, useRef: oi, useState: function() {
  return di(bi);
}, useDebugValue: wi, useDeferredValue: function(a) {
  var b2 = ai();
  return M === null ? b2.memoizedState = a : zi(b2, M.memoizedState, a);
}, useTransition: function() {
  var a = di(bi)[0], b2 = ai().memoizedState;
  return [a, b2];
}, useMutableSource: ei, useSyncExternalStore: fi, useId: Bi, unstable_isNewReconciler: false };
function Hi(a, b2) {
  try {
    var c2 = "", d2 = b2;
    do
      c2 += Oa(d2), d2 = d2.return;
    while (d2);
    var e2 = c2;
  } catch (f2) {
    e2 = "\nError generating stack: " + f2.message + "\n" + f2.stack;
  }
  return { value: a, source: b2, stack: e2 };
}
function Ii(a, b2) {
  try {
    console.error(b2.value);
  } catch (c2) {
    setTimeout(function() {
      throw c2;
    });
  }
}
var Ji = typeof WeakMap === "function" ? WeakMap : Map;
function Ki(a, b2, c2) {
  c2 = zg(-1, c2);
  c2.tag = 3;
  c2.payload = { element: null };
  var d2 = b2.value;
  c2.callback = function() {
    Li || (Li = true, Mi = d2);
    Ii(a, b2);
  };
  return c2;
}
function Ni(a, b2, c2) {
  c2 = zg(-1, c2);
  c2.tag = 3;
  var d2 = a.type.getDerivedStateFromError;
  if (typeof d2 === "function") {
    var e2 = b2.value;
    c2.payload = function() {
      return d2(e2);
    };
    c2.callback = function() {
      Ii(a, b2);
    };
  }
  var f2 = a.stateNode;
  f2 !== null && typeof f2.componentDidCatch === "function" && (c2.callback = function() {
    Ii(a, b2);
    typeof d2 !== "function" && (Oi === null ? Oi = /* @__PURE__ */ new Set([this]) : Oi.add(this));
    var c3 = b2.stack;
    this.componentDidCatch(b2.value, { componentStack: c3 !== null ? c3 : "" });
  });
  return c2;
}
function Pi(a, b2, c2) {
  var d2 = a.pingCache;
  if (d2 === null) {
    d2 = a.pingCache = new Ji();
    var e2 = /* @__PURE__ */ new Set();
    d2.set(b2, e2);
  } else
    e2 = d2.get(b2), e2 === void 0 && (e2 = /* @__PURE__ */ new Set(), d2.set(b2, e2));
  e2.has(c2) || (e2.add(c2), a = Qi.bind(null, a, b2, c2), b2.then(a, a));
}
function Ri(a) {
  do {
    var b2;
    if (b2 = a.tag === 13)
      b2 = a.memoizedState, b2 = b2 !== null ? b2.dehydrated !== null ? true : false : true;
    if (b2)
      return a;
    a = a.return;
  } while (a !== null);
  return null;
}
function Si(a, b2, c2, d2, e2) {
  if ((a.mode & 1) === 0)
    return a === b2 ? a.flags |= 65536 : (a.flags |= 128, c2.flags |= 131072, c2.flags &= -52805, c2.tag === 1 && (c2.alternate === null ? c2.tag = 17 : (b2 = zg(-1, 1), b2.tag = 2, Ag(c2, b2))), c2.lanes |= 1), a;
  a.flags |= 65536;
  a.lanes = e2;
  return a;
}
var Ti, Ui, Vi, Wi;
Ti = function(a, b2) {
  for (var c2 = b2.child; c2 !== null; ) {
    if (c2.tag === 5 || c2.tag === 6)
      a.appendChild(c2.stateNode);
    else if (c2.tag !== 4 && c2.child !== null) {
      c2.child.return = c2;
      c2 = c2.child;
      continue;
    }
    if (c2 === b2)
      break;
    for (; c2.sibling === null; ) {
      if (c2.return === null || c2.return === b2)
        return;
      c2 = c2.return;
    }
    c2.sibling.return = c2.return;
    c2 = c2.sibling;
  }
};
Ui = function() {
};
Vi = function(a, b2, c2, d2) {
  var e2 = a.memoizedProps;
  if (e2 !== d2) {
    a = b2.stateNode;
    Eh(Bh.current);
    var f2 = null;
    switch (c2) {
      case "input":
        e2 = Xa(a, e2);
        d2 = Xa(a, d2);
        f2 = [];
        break;
      case "select":
        e2 = A$1({}, e2, { value: void 0 });
        d2 = A$1({}, d2, { value: void 0 });
        f2 = [];
        break;
      case "textarea":
        e2 = fb(a, e2);
        d2 = fb(a, d2);
        f2 = [];
        break;
      default:
        typeof e2.onClick !== "function" && typeof d2.onClick === "function" && (a.onclick = Af);
    }
    tb(c2, d2);
    var g2;
    c2 = null;
    for (l2 in e2)
      if (!d2.hasOwnProperty(l2) && e2.hasOwnProperty(l2) && e2[l2] != null)
        if (l2 === "style") {
          var h2 = e2[l2];
          for (g2 in h2)
            h2.hasOwnProperty(g2) && (c2 || (c2 = {}), c2[g2] = "");
        } else
          l2 !== "dangerouslySetInnerHTML" && l2 !== "children" && l2 !== "suppressContentEditableWarning" && l2 !== "suppressHydrationWarning" && l2 !== "autoFocus" && (ea.hasOwnProperty(l2) ? f2 || (f2 = []) : (f2 = f2 || []).push(l2, null));
    for (l2 in d2) {
      var k2 = d2[l2];
      h2 = e2 != null ? e2[l2] : void 0;
      if (d2.hasOwnProperty(l2) && k2 !== h2 && (k2 != null || h2 != null))
        if (l2 === "style")
          if (h2) {
            for (g2 in h2)
              !h2.hasOwnProperty(g2) || k2 && k2.hasOwnProperty(g2) || (c2 || (c2 = {}), c2[g2] = "");
            for (g2 in k2)
              k2.hasOwnProperty(g2) && h2[g2] !== k2[g2] && (c2 || (c2 = {}), c2[g2] = k2[g2]);
          } else
            c2 || (f2 || (f2 = []), f2.push(l2, c2)), c2 = k2;
        else
          l2 === "dangerouslySetInnerHTML" ? (k2 = k2 ? k2.__html : void 0, h2 = h2 ? h2.__html : void 0, k2 != null && h2 !== k2 && (f2 = f2 || []).push(l2, k2)) : l2 === "children" ? typeof k2 !== "string" && typeof k2 !== "number" || (f2 = f2 || []).push(l2, "" + k2) : l2 !== "suppressContentEditableWarning" && l2 !== "suppressHydrationWarning" && (ea.hasOwnProperty(l2) ? (k2 != null && l2 === "onScroll" && D("scroll", a), f2 || h2 === k2 || (f2 = [])) : (f2 = f2 || []).push(l2, k2));
    }
    c2 && (f2 = f2 || []).push("style", c2);
    var l2 = f2;
    if (b2.updateQueue = l2)
      b2.flags |= 4;
  }
};
Wi = function(a, b2, c2, d2) {
  c2 !== d2 && (b2.flags |= 4);
};
function Xi(a, b2) {
  if (!I)
    switch (a.tailMode) {
      case "hidden":
        b2 = a.tail;
        for (var c2 = null; b2 !== null; )
          b2.alternate !== null && (c2 = b2), b2 = b2.sibling;
        c2 === null ? a.tail = null : c2.sibling = null;
        break;
      case "collapsed":
        c2 = a.tail;
        for (var d2 = null; c2 !== null; )
          c2.alternate !== null && (d2 = c2), c2 = c2.sibling;
        d2 === null ? b2 || a.tail === null ? a.tail = null : a.tail.sibling = null : d2.sibling = null;
    }
}
function Q(a) {
  var b2 = a.alternate !== null && a.alternate.child === a.child, c2 = 0, d2 = 0;
  if (b2)
    for (var e2 = a.child; e2 !== null; )
      c2 |= e2.lanes | e2.childLanes, d2 |= e2.subtreeFlags & 14680064, d2 |= e2.flags & 14680064, e2.return = a, e2 = e2.sibling;
  else
    for (e2 = a.child; e2 !== null; )
      c2 |= e2.lanes | e2.childLanes, d2 |= e2.subtreeFlags, d2 |= e2.flags, e2.return = a, e2 = e2.sibling;
  a.subtreeFlags |= d2;
  a.childLanes = c2;
  return b2;
}
function Yi(a, b2, c2) {
  var d2 = b2.pendingProps;
  ch(b2);
  switch (b2.tag) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return Q(b2), null;
    case 1:
      return Yf(b2.type) && Zf(), Q(b2), null;
    case 3:
      d2 = b2.stateNode;
      Gh();
      E(Vf);
      E(H);
      Lh();
      d2.pendingContext && (d2.context = d2.pendingContext, d2.pendingContext = null);
      if (a === null || a.child === null)
        mh(b2) ? b2.flags |= 4 : a === null || a.memoizedState.isDehydrated && (b2.flags & 256) === 0 || (b2.flags |= 1024, fh !== null && (Zi(fh), fh = null));
      Ui(a, b2);
      Q(b2);
      return null;
    case 5:
      Ih(b2);
      var e2 = Eh(Dh.current);
      c2 = b2.type;
      if (a !== null && b2.stateNode != null)
        Vi(a, b2, c2, d2, e2), a.ref !== b2.ref && (b2.flags |= 512, b2.flags |= 2097152);
      else {
        if (!d2) {
          if (b2.stateNode === null)
            throw Error(p$2(166));
          Q(b2);
          return null;
        }
        a = Eh(Bh.current);
        if (mh(b2)) {
          d2 = b2.stateNode;
          c2 = b2.type;
          var f2 = b2.memoizedProps;
          d2[Nf] = b2;
          d2[Of] = f2;
          a = (b2.mode & 1) !== 0;
          switch (c2) {
            case "dialog":
              D("cancel", d2);
              D("close", d2);
              break;
            case "iframe":
            case "object":
            case "embed":
              D("load", d2);
              break;
            case "video":
            case "audio":
              for (e2 = 0; e2 < kf.length; e2++)
                D(kf[e2], d2);
              break;
            case "source":
              D("error", d2);
              break;
            case "img":
            case "image":
            case "link":
              D("error", d2);
              D("load", d2);
              break;
            case "details":
              D("toggle", d2);
              break;
            case "input":
              Ya(d2, f2);
              D("invalid", d2);
              break;
            case "select":
              d2._wrapperState = { wasMultiple: !!f2.multiple };
              D("invalid", d2);
              break;
            case "textarea":
              gb(d2, f2), D("invalid", d2);
          }
          tb(c2, f2);
          e2 = null;
          for (var g2 in f2)
            if (f2.hasOwnProperty(g2)) {
              var h2 = f2[g2];
              g2 === "children" ? typeof h2 === "string" ? d2.textContent !== h2 && (f2.suppressHydrationWarning !== true && zf(d2.textContent, h2, a), e2 = ["children", h2]) : typeof h2 === "number" && d2.textContent !== "" + h2 && (f2.suppressHydrationWarning !== true && zf(d2.textContent, h2, a), e2 = ["children", "" + h2]) : ea.hasOwnProperty(g2) && h2 != null && g2 === "onScroll" && D("scroll", d2);
            }
          switch (c2) {
            case "input":
              Ua(d2);
              cb(d2, f2, true);
              break;
            case "textarea":
              Ua(d2);
              ib(d2);
              break;
            case "select":
            case "option":
              break;
            default:
              typeof f2.onClick === "function" && (d2.onclick = Af);
          }
          d2 = e2;
          b2.updateQueue = d2;
          d2 !== null && (b2.flags |= 4);
        } else {
          g2 = e2.nodeType === 9 ? e2 : e2.ownerDocument;
          a === "http://www.w3.org/1999/xhtml" && (a = jb(c2));
          a === "http://www.w3.org/1999/xhtml" ? c2 === "script" ? (a = g2.createElement("div"), a.innerHTML = "<script><\/script>", a = a.removeChild(a.firstChild)) : typeof d2.is === "string" ? a = g2.createElement(c2, { is: d2.is }) : (a = g2.createElement(c2), c2 === "select" && (g2 = a, d2.multiple ? g2.multiple = true : d2.size && (g2.size = d2.size))) : a = g2.createElementNS(a, c2);
          a[Nf] = b2;
          a[Of] = d2;
          Ti(a, b2, false, false);
          b2.stateNode = a;
          a: {
            g2 = ub(c2, d2);
            switch (c2) {
              case "dialog":
                D("cancel", a);
                D("close", a);
                e2 = d2;
                break;
              case "iframe":
              case "object":
              case "embed":
                D("load", a);
                e2 = d2;
                break;
              case "video":
              case "audio":
                for (e2 = 0; e2 < kf.length; e2++)
                  D(kf[e2], a);
                e2 = d2;
                break;
              case "source":
                D("error", a);
                e2 = d2;
                break;
              case "img":
              case "image":
              case "link":
                D("error", a);
                D("load", a);
                e2 = d2;
                break;
              case "details":
                D("toggle", a);
                e2 = d2;
                break;
              case "input":
                Ya(a, d2);
                e2 = Xa(a, d2);
                D("invalid", a);
                break;
              case "option":
                e2 = d2;
                break;
              case "select":
                a._wrapperState = { wasMultiple: !!d2.multiple };
                e2 = A$1({}, d2, { value: void 0 });
                D("invalid", a);
                break;
              case "textarea":
                gb(a, d2);
                e2 = fb(a, d2);
                D("invalid", a);
                break;
              default:
                e2 = d2;
            }
            tb(c2, e2);
            h2 = e2;
            for (f2 in h2)
              if (h2.hasOwnProperty(f2)) {
                var k2 = h2[f2];
                f2 === "style" ? rb(a, k2) : f2 === "dangerouslySetInnerHTML" ? (k2 = k2 ? k2.__html : void 0, k2 != null && mb(a, k2)) : f2 === "children" ? typeof k2 === "string" ? (c2 !== "textarea" || k2 !== "") && nb(a, k2) : typeof k2 === "number" && nb(a, "" + k2) : f2 !== "suppressContentEditableWarning" && f2 !== "suppressHydrationWarning" && f2 !== "autoFocus" && (ea.hasOwnProperty(f2) ? k2 != null && f2 === "onScroll" && D("scroll", a) : k2 != null && sa(a, f2, k2, g2));
              }
            switch (c2) {
              case "input":
                Ua(a);
                cb(a, d2, false);
                break;
              case "textarea":
                Ua(a);
                ib(a);
                break;
              case "option":
                d2.value != null && a.setAttribute("value", "" + Ra(d2.value));
                break;
              case "select":
                a.multiple = !!d2.multiple;
                f2 = d2.value;
                f2 != null ? eb(a, !!d2.multiple, f2, false) : d2.defaultValue != null && eb(a, !!d2.multiple, d2.defaultValue, true);
                break;
              default:
                typeof e2.onClick === "function" && (a.onclick = Af);
            }
            switch (c2) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                d2 = !!d2.autoFocus;
                break a;
              case "img":
                d2 = true;
                break a;
              default:
                d2 = false;
            }
          }
          d2 && (b2.flags |= 4);
        }
        b2.ref !== null && (b2.flags |= 512, b2.flags |= 2097152);
      }
      Q(b2);
      return null;
    case 6:
      if (a && b2.stateNode != null)
        Wi(a, b2, a.memoizedProps, d2);
      else {
        if (typeof d2 !== "string" && b2.stateNode === null)
          throw Error(p$2(166));
        c2 = Eh(Dh.current);
        Eh(Bh.current);
        if (mh(b2)) {
          d2 = b2.stateNode;
          c2 = b2.memoizedProps;
          d2[Nf] = b2;
          if (f2 = d2.nodeValue !== c2) {
            if (a = dh, a !== null)
              switch (a.tag) {
                case 3:
                  zf(d2.nodeValue, c2, (a.mode & 1) !== 0);
                  break;
                case 5:
                  a.memoizedProps.suppressHydrationWarning !== true && zf(d2.nodeValue, c2, (a.mode & 1) !== 0);
              }
          }
          f2 && (b2.flags |= 4);
        } else
          d2 = (c2.nodeType === 9 ? c2 : c2.ownerDocument).createTextNode(d2), d2[Nf] = b2, b2.stateNode = d2;
      }
      Q(b2);
      return null;
    case 13:
      E(K);
      d2 = b2.memoizedState;
      if (I && eh !== null && (b2.mode & 1) !== 0 && (b2.flags & 128) === 0) {
        for (d2 = eh; d2; )
          d2 = Kf(d2.nextSibling);
        nh();
        b2.flags |= 98560;
        return b2;
      }
      if (d2 !== null && d2.dehydrated !== null) {
        d2 = mh(b2);
        if (a === null) {
          if (!d2)
            throw Error(p$2(318));
          d2 = b2.memoizedState;
          d2 = d2 !== null ? d2.dehydrated : null;
          if (!d2)
            throw Error(p$2(317));
          d2[Nf] = b2;
        } else
          nh(), (b2.flags & 128) === 0 && (b2.memoizedState = null), b2.flags |= 4;
        Q(b2);
        return null;
      }
      fh !== null && (Zi(fh), fh = null);
      if ((b2.flags & 128) !== 0)
        return b2.lanes = c2, b2;
      d2 = d2 !== null;
      c2 = false;
      a === null ? mh(b2) : c2 = a.memoizedState !== null;
      d2 !== c2 && d2 && (b2.child.flags |= 8192, (b2.mode & 1) !== 0 && (a === null || (K.current & 1) !== 0 ? R === 0 && (R = 3) : $i()));
      b2.updateQueue !== null && (b2.flags |= 4);
      Q(b2);
      return null;
    case 4:
      return Gh(), Ui(a, b2), a === null && rf(b2.stateNode.containerInfo), Q(b2), null;
    case 10:
      return qg(b2.type._context), Q(b2), null;
    case 17:
      return Yf(b2.type) && Zf(), Q(b2), null;
    case 19:
      E(K);
      f2 = b2.memoizedState;
      if (f2 === null)
        return Q(b2), null;
      d2 = (b2.flags & 128) !== 0;
      g2 = f2.rendering;
      if (g2 === null)
        if (d2)
          Xi(f2, false);
        else {
          if (R !== 0 || a !== null && (a.flags & 128) !== 0)
            for (a = b2.child; a !== null; ) {
              g2 = Jh(a);
              if (g2 !== null) {
                b2.flags |= 128;
                Xi(f2, false);
                d2 = g2.updateQueue;
                d2 !== null && (b2.updateQueue = d2, b2.flags |= 4);
                b2.subtreeFlags = 0;
                d2 = c2;
                for (c2 = b2.child; c2 !== null; )
                  f2 = c2, a = d2, f2.flags &= 14680066, g2 = f2.alternate, g2 === null ? (f2.childLanes = 0, f2.lanes = a, f2.child = null, f2.subtreeFlags = 0, f2.memoizedProps = null, f2.memoizedState = null, f2.updateQueue = null, f2.dependencies = null, f2.stateNode = null) : (f2.childLanes = g2.childLanes, f2.lanes = g2.lanes, f2.child = g2.child, f2.subtreeFlags = 0, f2.deletions = null, f2.memoizedProps = g2.memoizedProps, f2.memoizedState = g2.memoizedState, f2.updateQueue = g2.updateQueue, f2.type = g2.type, a = g2.dependencies, f2.dependencies = a === null ? null : { lanes: a.lanes, firstContext: a.firstContext }), c2 = c2.sibling;
                G(K, K.current & 1 | 2);
                return b2.child;
              }
              a = a.sibling;
            }
          f2.tail !== null && B() > aj && (b2.flags |= 128, d2 = true, Xi(f2, false), b2.lanes = 4194304);
        }
      else {
        if (!d2)
          if (a = Jh(g2), a !== null) {
            if (b2.flags |= 128, d2 = true, c2 = a.updateQueue, c2 !== null && (b2.updateQueue = c2, b2.flags |= 4), Xi(f2, true), f2.tail === null && f2.tailMode === "hidden" && !g2.alternate && !I)
              return Q(b2), null;
          } else
            2 * B() - f2.renderingStartTime > aj && c2 !== 1073741824 && (b2.flags |= 128, d2 = true, Xi(f2, false), b2.lanes = 4194304);
        f2.isBackwards ? (g2.sibling = b2.child, b2.child = g2) : (c2 = f2.last, c2 !== null ? c2.sibling = g2 : b2.child = g2, f2.last = g2);
      }
      if (f2.tail !== null)
        return b2 = f2.tail, f2.rendering = b2, f2.tail = b2.sibling, f2.renderingStartTime = B(), b2.sibling = null, c2 = K.current, G(K, d2 ? c2 & 1 | 2 : c2 & 1), b2;
      Q(b2);
      return null;
    case 22:
    case 23:
      return bj(), d2 = b2.memoizedState !== null, a !== null && a.memoizedState !== null !== d2 && (b2.flags |= 8192), d2 && (b2.mode & 1) !== 0 ? (cj & 1073741824) !== 0 && (Q(b2), b2.subtreeFlags & 6 && (b2.flags |= 8192)) : Q(b2), null;
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(p$2(156, b2.tag));
}
var dj = ta.ReactCurrentOwner, tg = false;
function ej(a, b2, c2, d2) {
  b2.child = a === null ? zh(b2, null, c2, d2) : yh(b2, a.child, c2, d2);
}
function fj(a, b2, c2, d2, e2) {
  c2 = c2.render;
  var f2 = b2.ref;
  sg(b2, e2);
  d2 = Uh(a, b2, c2, d2, f2, e2);
  c2 = Zh();
  if (a !== null && !tg)
    return b2.updateQueue = a.updateQueue, b2.flags &= -2053, a.lanes &= ~e2, gj(a, b2, e2);
  I && c2 && bh(b2);
  b2.flags |= 1;
  ej(a, b2, d2, e2);
  return b2.child;
}
function hj(a, b2, c2, d2, e2) {
  if (a === null) {
    var f2 = c2.type;
    if (typeof f2 === "function" && !ij(f2) && f2.defaultProps === void 0 && c2.compare === null && c2.defaultProps === void 0)
      return b2.tag = 15, b2.type = f2, jj(a, b2, f2, d2, e2);
    a = vh(c2.type, null, d2, b2, b2.mode, e2);
    a.ref = b2.ref;
    a.return = b2;
    return b2.child = a;
  }
  f2 = a.child;
  if ((a.lanes & e2) === 0) {
    var g2 = f2.memoizedProps;
    c2 = c2.compare;
    c2 = c2 !== null ? c2 : He;
    if (c2(g2, d2) && a.ref === b2.ref)
      return gj(a, b2, e2);
  }
  b2.flags |= 1;
  a = th(f2, d2);
  a.ref = b2.ref;
  a.return = b2;
  return b2.child = a;
}
function jj(a, b2, c2, d2, e2) {
  if (a !== null) {
    var f2 = a.memoizedProps;
    if (He(f2, d2) && a.ref === b2.ref)
      if (tg = false, b2.pendingProps = d2 = f2, (a.lanes & e2) !== 0)
        (a.flags & 131072) !== 0 && (tg = true);
      else
        return b2.lanes = a.lanes, gj(a, b2, e2);
  }
  return kj(a, b2, c2, d2, e2);
}
function lj(a, b2, c2) {
  var d2 = b2.pendingProps, e2 = d2.children, f2 = a !== null ? a.memoizedState : null;
  if (d2.mode === "hidden")
    if ((b2.mode & 1) === 0)
      b2.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, G(mj, cj), cj |= c2;
    else if ((c2 & 1073741824) !== 0)
      b2.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, d2 = f2 !== null ? f2.baseLanes : c2, G(mj, cj), cj |= d2;
    else
      return a = f2 !== null ? f2.baseLanes | c2 : c2, b2.lanes = b2.childLanes = 1073741824, b2.memoizedState = { baseLanes: a, cachePool: null, transitions: null }, b2.updateQueue = null, G(mj, cj), cj |= a, null;
  else
    f2 !== null ? (d2 = f2.baseLanes | c2, b2.memoizedState = null) : d2 = c2, G(mj, cj), cj |= d2;
  ej(a, b2, e2, c2);
  return b2.child;
}
function nj(a, b2) {
  var c2 = b2.ref;
  if (a === null && c2 !== null || a !== null && a.ref !== c2)
    b2.flags |= 512, b2.flags |= 2097152;
}
function kj(a, b2, c2, d2, e2) {
  var f2 = Yf(c2) ? Wf : H.current;
  f2 = Xf(b2, f2);
  sg(b2, e2);
  c2 = Uh(a, b2, c2, d2, f2, e2);
  d2 = Zh();
  if (a !== null && !tg)
    return b2.updateQueue = a.updateQueue, b2.flags &= -2053, a.lanes &= ~e2, gj(a, b2, e2);
  I && d2 && bh(b2);
  b2.flags |= 1;
  ej(a, b2, c2, e2);
  return b2.child;
}
function oj(a, b2, c2, d2, e2) {
  if (Yf(c2)) {
    var f2 = true;
    bg(b2);
  } else
    f2 = false;
  sg(b2, e2);
  if (b2.stateNode === null)
    a !== null && (a.alternate = null, b2.alternate = null, b2.flags |= 2), Og(b2, c2, d2), Qg(b2, c2, d2, e2), d2 = true;
  else if (a === null) {
    var g2 = b2.stateNode, h2 = b2.memoizedProps;
    g2.props = h2;
    var k2 = g2.context, l2 = c2.contextType;
    typeof l2 === "object" && l2 !== null ? l2 = ug(l2) : (l2 = Yf(c2) ? Wf : H.current, l2 = Xf(b2, l2));
    var n2 = c2.getDerivedStateFromProps, u2 = typeof n2 === "function" || typeof g2.getSnapshotBeforeUpdate === "function";
    u2 || typeof g2.UNSAFE_componentWillReceiveProps !== "function" && typeof g2.componentWillReceiveProps !== "function" || (h2 !== d2 || k2 !== l2) && Pg(b2, g2, d2, l2);
    wg = false;
    var q2 = b2.memoizedState;
    g2.state = q2;
    Eg(b2, d2, g2, e2);
    k2 = b2.memoizedState;
    h2 !== d2 || q2 !== k2 || Vf.current || wg ? (typeof n2 === "function" && (Ig(b2, c2, n2, d2), k2 = b2.memoizedState), (h2 = wg || Ng(b2, c2, h2, d2, q2, k2, l2)) ? (u2 || typeof g2.UNSAFE_componentWillMount !== "function" && typeof g2.componentWillMount !== "function" || (typeof g2.componentWillMount === "function" && g2.componentWillMount(), typeof g2.UNSAFE_componentWillMount === "function" && g2.UNSAFE_componentWillMount()), typeof g2.componentDidMount === "function" && (b2.flags |= 4194308)) : (typeof g2.componentDidMount === "function" && (b2.flags |= 4194308), b2.memoizedProps = d2, b2.memoizedState = k2), g2.props = d2, g2.state = k2, g2.context = l2, d2 = h2) : (typeof g2.componentDidMount === "function" && (b2.flags |= 4194308), d2 = false);
  } else {
    g2 = b2.stateNode;
    yg(a, b2);
    h2 = b2.memoizedProps;
    l2 = b2.type === b2.elementType ? h2 : kg(b2.type, h2);
    g2.props = l2;
    u2 = b2.pendingProps;
    q2 = g2.context;
    k2 = c2.contextType;
    typeof k2 === "object" && k2 !== null ? k2 = ug(k2) : (k2 = Yf(c2) ? Wf : H.current, k2 = Xf(b2, k2));
    var y2 = c2.getDerivedStateFromProps;
    (n2 = typeof y2 === "function" || typeof g2.getSnapshotBeforeUpdate === "function") || typeof g2.UNSAFE_componentWillReceiveProps !== "function" && typeof g2.componentWillReceiveProps !== "function" || (h2 !== u2 || q2 !== k2) && Pg(b2, g2, d2, k2);
    wg = false;
    q2 = b2.memoizedState;
    g2.state = q2;
    Eg(b2, d2, g2, e2);
    var m2 = b2.memoizedState;
    h2 !== u2 || q2 !== m2 || Vf.current || wg ? (typeof y2 === "function" && (Ig(b2, c2, y2, d2), m2 = b2.memoizedState), (l2 = wg || Ng(b2, c2, l2, d2, q2, m2, k2) || false) ? (n2 || typeof g2.UNSAFE_componentWillUpdate !== "function" && typeof g2.componentWillUpdate !== "function" || (typeof g2.componentWillUpdate === "function" && g2.componentWillUpdate(d2, m2, k2), typeof g2.UNSAFE_componentWillUpdate === "function" && g2.UNSAFE_componentWillUpdate(d2, m2, k2)), typeof g2.componentDidUpdate === "function" && (b2.flags |= 4), typeof g2.getSnapshotBeforeUpdate === "function" && (b2.flags |= 1024)) : (typeof g2.componentDidUpdate !== "function" || h2 === a.memoizedProps && q2 === a.memoizedState || (b2.flags |= 4), typeof g2.getSnapshotBeforeUpdate !== "function" || h2 === a.memoizedProps && q2 === a.memoizedState || (b2.flags |= 1024), b2.memoizedProps = d2, b2.memoizedState = m2), g2.props = d2, g2.state = m2, g2.context = k2, d2 = l2) : (typeof g2.componentDidUpdate !== "function" || h2 === a.memoizedProps && q2 === a.memoizedState || (b2.flags |= 4), typeof g2.getSnapshotBeforeUpdate !== "function" || h2 === a.memoizedProps && q2 === a.memoizedState || (b2.flags |= 1024), d2 = false);
  }
  return pj(a, b2, c2, d2, f2, e2);
}
function pj(a, b2, c2, d2, e2, f2) {
  nj(a, b2);
  var g2 = (b2.flags & 128) !== 0;
  if (!d2 && !g2)
    return e2 && cg(b2, c2, false), gj(a, b2, f2);
  d2 = b2.stateNode;
  dj.current = b2;
  var h2 = g2 && typeof c2.getDerivedStateFromError !== "function" ? null : d2.render();
  b2.flags |= 1;
  a !== null && g2 ? (b2.child = yh(b2, a.child, null, f2), b2.child = yh(b2, null, h2, f2)) : ej(a, b2, h2, f2);
  b2.memoizedState = d2.state;
  e2 && cg(b2, c2, true);
  return b2.child;
}
function qj(a) {
  var b2 = a.stateNode;
  b2.pendingContext ? $f(a, b2.pendingContext, b2.pendingContext !== b2.context) : b2.context && $f(a, b2.context, false);
  Fh(a, b2.containerInfo);
}
function rj(a, b2, c2, d2, e2) {
  nh();
  oh(e2);
  b2.flags |= 256;
  ej(a, b2, c2, d2);
  return b2.child;
}
var sj = { dehydrated: null, treeContext: null, retryLane: 0 };
function tj(a) {
  return { baseLanes: a, cachePool: null, transitions: null };
}
function uj(a, b2) {
  return { baseLanes: a.baseLanes | b2, cachePool: null, transitions: a.transitions };
}
function vj(a, b2, c2) {
  var d2 = b2.pendingProps, e2 = K.current, f2 = false, g2 = (b2.flags & 128) !== 0, h2;
  (h2 = g2) || (h2 = a !== null && a.memoizedState === null ? false : (e2 & 2) !== 0);
  if (h2)
    f2 = true, b2.flags &= -129;
  else if (a === null || a.memoizedState !== null)
    e2 |= 1;
  G(K, e2 & 1);
  if (a === null) {
    kh(b2);
    a = b2.memoizedState;
    if (a !== null && (a = a.dehydrated, a !== null))
      return (b2.mode & 1) === 0 ? b2.lanes = 1 : a.data === "$!" ? b2.lanes = 8 : b2.lanes = 1073741824, null;
    e2 = d2.children;
    a = d2.fallback;
    return f2 ? (d2 = b2.mode, f2 = b2.child, e2 = { mode: "hidden", children: e2 }, (d2 & 1) === 0 && f2 !== null ? (f2.childLanes = 0, f2.pendingProps = e2) : f2 = wj(e2, d2, 0, null), a = xh(a, d2, c2, null), f2.return = b2, a.return = b2, f2.sibling = a, b2.child = f2, b2.child.memoizedState = tj(c2), b2.memoizedState = sj, a) : xj(b2, e2);
  }
  e2 = a.memoizedState;
  if (e2 !== null) {
    h2 = e2.dehydrated;
    if (h2 !== null) {
      if (g2) {
        if (b2.flags & 256)
          return b2.flags &= -257, yj(a, b2, c2, Error(p$2(422)));
        if (b2.memoizedState !== null)
          return b2.child = a.child, b2.flags |= 128, null;
        f2 = d2.fallback;
        e2 = b2.mode;
        d2 = wj({ mode: "visible", children: d2.children }, e2, 0, null);
        f2 = xh(f2, e2, c2, null);
        f2.flags |= 2;
        d2.return = b2;
        f2.return = b2;
        d2.sibling = f2;
        b2.child = d2;
        (b2.mode & 1) !== 0 && yh(b2, a.child, null, c2);
        b2.child.memoizedState = tj(c2);
        b2.memoizedState = sj;
        return f2;
      }
      if ((b2.mode & 1) === 0)
        b2 = yj(a, b2, c2, null);
      else if (h2.data === "$!")
        b2 = yj(a, b2, c2, Error(p$2(419)));
      else if (d2 = (c2 & a.childLanes) !== 0, tg || d2) {
        d2 = P;
        if (d2 !== null) {
          switch (c2 & -c2) {
            case 4:
              f2 = 2;
              break;
            case 16:
              f2 = 8;
              break;
            case 64:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
            case 67108864:
              f2 = 32;
              break;
            case 536870912:
              f2 = 268435456;
              break;
            default:
              f2 = 0;
          }
          d2 = (f2 & (d2.suspendedLanes | c2)) !== 0 ? 0 : f2;
          d2 !== 0 && d2 !== e2.retryLane && (e2.retryLane = d2, Lg(a, d2, -1));
        }
        $i();
        b2 = yj(a, b2, c2, Error(p$2(421)));
      } else
        h2.data === "$?" ? (b2.flags |= 128, b2.child = a.child, b2 = zj.bind(null, a), h2._reactRetry = b2, b2 = null) : (c2 = e2.treeContext, eh = Kf(h2.nextSibling), dh = b2, I = true, fh = null, c2 !== null && (Vg[Wg++] = Yg, Vg[Wg++] = Zg, Vg[Wg++] = Xg, Yg = c2.id, Zg = c2.overflow, Xg = b2), b2 = xj(b2, b2.pendingProps.children), b2.flags |= 4096);
      return b2;
    }
    if (f2)
      return d2 = Aj(a, b2, d2.children, d2.fallback, c2), f2 = b2.child, e2 = a.child.memoizedState, f2.memoizedState = e2 === null ? tj(c2) : uj(e2, c2), f2.childLanes = a.childLanes & ~c2, b2.memoizedState = sj, d2;
    c2 = Bj(a, b2, d2.children, c2);
    b2.memoizedState = null;
    return c2;
  }
  if (f2)
    return d2 = Aj(a, b2, d2.children, d2.fallback, c2), f2 = b2.child, e2 = a.child.memoizedState, f2.memoizedState = e2 === null ? tj(c2) : uj(e2, c2), f2.childLanes = a.childLanes & ~c2, b2.memoizedState = sj, d2;
  c2 = Bj(a, b2, d2.children, c2);
  b2.memoizedState = null;
  return c2;
}
function xj(a, b2) {
  b2 = wj({ mode: "visible", children: b2 }, a.mode, 0, null);
  b2.return = a;
  return a.child = b2;
}
function Bj(a, b2, c2, d2) {
  var e2 = a.child;
  a = e2.sibling;
  c2 = th(e2, { mode: "visible", children: c2 });
  (b2.mode & 1) === 0 && (c2.lanes = d2);
  c2.return = b2;
  c2.sibling = null;
  a !== null && (d2 = b2.deletions, d2 === null ? (b2.deletions = [a], b2.flags |= 16) : d2.push(a));
  return b2.child = c2;
}
function Aj(a, b2, c2, d2, e2) {
  var f2 = b2.mode;
  a = a.child;
  var g2 = a.sibling, h2 = { mode: "hidden", children: c2 };
  (f2 & 1) === 0 && b2.child !== a ? (c2 = b2.child, c2.childLanes = 0, c2.pendingProps = h2, b2.deletions = null) : (c2 = th(a, h2), c2.subtreeFlags = a.subtreeFlags & 14680064);
  g2 !== null ? d2 = th(g2, d2) : (d2 = xh(d2, f2, e2, null), d2.flags |= 2);
  d2.return = b2;
  c2.return = b2;
  c2.sibling = d2;
  b2.child = c2;
  return d2;
}
function yj(a, b2, c2, d2) {
  d2 !== null && oh(d2);
  yh(b2, a.child, null, c2);
  a = xj(b2, b2.pendingProps.children);
  a.flags |= 2;
  b2.memoizedState = null;
  return a;
}
function Cj(a, b2, c2) {
  a.lanes |= b2;
  var d2 = a.alternate;
  d2 !== null && (d2.lanes |= b2);
  rg(a.return, b2, c2);
}
function Dj(a, b2, c2, d2, e2) {
  var f2 = a.memoizedState;
  f2 === null ? a.memoizedState = { isBackwards: b2, rendering: null, renderingStartTime: 0, last: d2, tail: c2, tailMode: e2 } : (f2.isBackwards = b2, f2.rendering = null, f2.renderingStartTime = 0, f2.last = d2, f2.tail = c2, f2.tailMode = e2);
}
function Ej(a, b2, c2) {
  var d2 = b2.pendingProps, e2 = d2.revealOrder, f2 = d2.tail;
  ej(a, b2, d2.children, c2);
  d2 = K.current;
  if ((d2 & 2) !== 0)
    d2 = d2 & 1 | 2, b2.flags |= 128;
  else {
    if (a !== null && (a.flags & 128) !== 0)
      a:
        for (a = b2.child; a !== null; ) {
          if (a.tag === 13)
            a.memoizedState !== null && Cj(a, c2, b2);
          else if (a.tag === 19)
            Cj(a, c2, b2);
          else if (a.child !== null) {
            a.child.return = a;
            a = a.child;
            continue;
          }
          if (a === b2)
            break a;
          for (; a.sibling === null; ) {
            if (a.return === null || a.return === b2)
              break a;
            a = a.return;
          }
          a.sibling.return = a.return;
          a = a.sibling;
        }
    d2 &= 1;
  }
  G(K, d2);
  if ((b2.mode & 1) === 0)
    b2.memoizedState = null;
  else
    switch (e2) {
      case "forwards":
        c2 = b2.child;
        for (e2 = null; c2 !== null; )
          a = c2.alternate, a !== null && Jh(a) === null && (e2 = c2), c2 = c2.sibling;
        c2 = e2;
        c2 === null ? (e2 = b2.child, b2.child = null) : (e2 = c2.sibling, c2.sibling = null);
        Dj(b2, false, e2, c2, f2);
        break;
      case "backwards":
        c2 = null;
        e2 = b2.child;
        for (b2.child = null; e2 !== null; ) {
          a = e2.alternate;
          if (a !== null && Jh(a) === null) {
            b2.child = e2;
            break;
          }
          a = e2.sibling;
          e2.sibling = c2;
          c2 = e2;
          e2 = a;
        }
        Dj(b2, true, c2, null, f2);
        break;
      case "together":
        Dj(b2, false, null, null, void 0);
        break;
      default:
        b2.memoizedState = null;
    }
  return b2.child;
}
function gj(a, b2, c2) {
  a !== null && (b2.dependencies = a.dependencies);
  Fg |= b2.lanes;
  if ((c2 & b2.childLanes) === 0)
    return null;
  if (a !== null && b2.child !== a.child)
    throw Error(p$2(153));
  if (b2.child !== null) {
    a = b2.child;
    c2 = th(a, a.pendingProps);
    b2.child = c2;
    for (c2.return = b2; a.sibling !== null; )
      a = a.sibling, c2 = c2.sibling = th(a, a.pendingProps), c2.return = b2;
    c2.sibling = null;
  }
  return b2.child;
}
function Fj(a, b2, c2) {
  switch (b2.tag) {
    case 3:
      qj(b2);
      nh();
      break;
    case 5:
      Hh(b2);
      break;
    case 1:
      Yf(b2.type) && bg(b2);
      break;
    case 4:
      Fh(b2, b2.stateNode.containerInfo);
      break;
    case 10:
      var d2 = b2.type._context, e2 = b2.memoizedProps.value;
      G(lg, d2._currentValue);
      d2._currentValue = e2;
      break;
    case 13:
      d2 = b2.memoizedState;
      if (d2 !== null) {
        if (d2.dehydrated !== null)
          return G(K, K.current & 1), b2.flags |= 128, null;
        if ((c2 & b2.child.childLanes) !== 0)
          return vj(a, b2, c2);
        G(K, K.current & 1);
        a = gj(a, b2, c2);
        return a !== null ? a.sibling : null;
      }
      G(K, K.current & 1);
      break;
    case 19:
      d2 = (c2 & b2.childLanes) !== 0;
      if ((a.flags & 128) !== 0) {
        if (d2)
          return Ej(a, b2, c2);
        b2.flags |= 128;
      }
      e2 = b2.memoizedState;
      e2 !== null && (e2.rendering = null, e2.tail = null, e2.lastEffect = null);
      G(K, K.current);
      if (d2)
        break;
      else
        return null;
    case 22:
    case 23:
      return b2.lanes = 0, lj(a, b2, c2);
  }
  return gj(a, b2, c2);
}
function Gj(a, b2) {
  ch(b2);
  switch (b2.tag) {
    case 1:
      return Yf(b2.type) && Zf(), a = b2.flags, a & 65536 ? (b2.flags = a & -65537 | 128, b2) : null;
    case 3:
      return Gh(), E(Vf), E(H), Lh(), a = b2.flags, (a & 65536) !== 0 && (a & 128) === 0 ? (b2.flags = a & -65537 | 128, b2) : null;
    case 5:
      return Ih(b2), null;
    case 13:
      E(K);
      a = b2.memoizedState;
      if (a !== null && a.dehydrated !== null) {
        if (b2.alternate === null)
          throw Error(p$2(340));
        nh();
      }
      a = b2.flags;
      return a & 65536 ? (b2.flags = a & -65537 | 128, b2) : null;
    case 19:
      return E(K), null;
    case 4:
      return Gh(), null;
    case 10:
      return qg(b2.type._context), null;
    case 22:
    case 23:
      return bj(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Hj = false, S = false, Ij = typeof WeakSet === "function" ? WeakSet : Set, T = null;
function Jj(a, b2) {
  var c2 = a.ref;
  if (c2 !== null)
    if (typeof c2 === "function")
      try {
        c2(null);
      } catch (d2) {
        U(a, b2, d2);
      }
    else
      c2.current = null;
}
function Kj(a, b2, c2) {
  try {
    c2();
  } catch (d2) {
    U(a, b2, d2);
  }
}
var Lj = false;
function Mj(a, b2) {
  Bf = cd;
  a = Le();
  if (Me(a)) {
    if ("selectionStart" in a)
      var c2 = { start: a.selectionStart, end: a.selectionEnd };
    else
      a: {
        c2 = (c2 = a.ownerDocument) && c2.defaultView || window;
        var d2 = c2.getSelection && c2.getSelection();
        if (d2 && d2.rangeCount !== 0) {
          c2 = d2.anchorNode;
          var e2 = d2.anchorOffset, f2 = d2.focusNode;
          d2 = d2.focusOffset;
          try {
            c2.nodeType, f2.nodeType;
          } catch (Z) {
            c2 = null;
            break a;
          }
          var g2 = 0, h2 = -1, k2 = -1, l2 = 0, n2 = 0, u2 = a, q2 = null;
          b:
            for (; ; ) {
              for (var y2; ; ) {
                u2 !== c2 || e2 !== 0 && u2.nodeType !== 3 || (h2 = g2 + e2);
                u2 !== f2 || d2 !== 0 && u2.nodeType !== 3 || (k2 = g2 + d2);
                u2.nodeType === 3 && (g2 += u2.nodeValue.length);
                if ((y2 = u2.firstChild) === null)
                  break;
                q2 = u2;
                u2 = y2;
              }
              for (; ; ) {
                if (u2 === a)
                  break b;
                q2 === c2 && ++l2 === e2 && (h2 = g2);
                q2 === f2 && ++n2 === d2 && (k2 = g2);
                if ((y2 = u2.nextSibling) !== null)
                  break;
                u2 = q2;
                q2 = u2.parentNode;
              }
              u2 = y2;
            }
          c2 = h2 === -1 || k2 === -1 ? null : { start: h2, end: k2 };
        } else
          c2 = null;
      }
    c2 = c2 || { start: 0, end: 0 };
  } else
    c2 = null;
  Cf = { focusedElem: a, selectionRange: c2 };
  cd = false;
  for (T = b2; T !== null; )
    if (b2 = T, a = b2.child, (b2.subtreeFlags & 1028) !== 0 && a !== null)
      a.return = b2, T = a;
    else
      for (; T !== null; ) {
        b2 = T;
        try {
          var m2 = b2.alternate;
          if ((b2.flags & 1024) !== 0)
            switch (b2.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (m2 !== null) {
                  var w2 = m2.memoizedProps, J2 = m2.memoizedState, v2 = b2.stateNode, x2 = v2.getSnapshotBeforeUpdate(b2.elementType === b2.type ? w2 : kg(b2.type, w2), J2);
                  v2.__reactInternalSnapshotBeforeUpdate = x2;
                }
                break;
              case 3:
                var r2 = b2.stateNode.containerInfo;
                if (r2.nodeType === 1)
                  r2.textContent = "";
                else if (r2.nodeType === 9) {
                  var F2 = r2.body;
                  F2 != null && (F2.textContent = "");
                }
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(p$2(163));
            }
        } catch (Z) {
          U(b2, b2.return, Z);
        }
        a = b2.sibling;
        if (a !== null) {
          a.return = b2.return;
          T = a;
          break;
        }
        T = b2.return;
      }
  m2 = Lj;
  Lj = false;
  return m2;
}
function Nj(a, b2, c2) {
  var d2 = b2.updateQueue;
  d2 = d2 !== null ? d2.lastEffect : null;
  if (d2 !== null) {
    var e2 = d2 = d2.next;
    do {
      if ((e2.tag & a) === a) {
        var f2 = e2.destroy;
        e2.destroy = void 0;
        f2 !== void 0 && Kj(b2, c2, f2);
      }
      e2 = e2.next;
    } while (e2 !== d2);
  }
}
function Oj(a, b2) {
  b2 = b2.updateQueue;
  b2 = b2 !== null ? b2.lastEffect : null;
  if (b2 !== null) {
    var c2 = b2 = b2.next;
    do {
      if ((c2.tag & a) === a) {
        var d2 = c2.create;
        c2.destroy = d2();
      }
      c2 = c2.next;
    } while (c2 !== b2);
  }
}
function Pj(a) {
  var b2 = a.ref;
  if (b2 !== null) {
    var c2 = a.stateNode;
    switch (a.tag) {
      case 5:
        a = c2;
        break;
      default:
        a = c2;
    }
    typeof b2 === "function" ? b2(a) : b2.current = a;
  }
}
function Qj(a) {
  var b2 = a.alternate;
  b2 !== null && (a.alternate = null, Qj(b2));
  a.child = null;
  a.deletions = null;
  a.sibling = null;
  a.tag === 5 && (b2 = a.stateNode, b2 !== null && (delete b2[Nf], delete b2[Of], delete b2[nf], delete b2[Pf], delete b2[Qf]));
  a.stateNode = null;
  a.return = null;
  a.dependencies = null;
  a.memoizedProps = null;
  a.memoizedState = null;
  a.pendingProps = null;
  a.stateNode = null;
  a.updateQueue = null;
}
function Rj(a) {
  return a.tag === 5 || a.tag === 3 || a.tag === 4;
}
function Sj(a) {
  a:
    for (; ; ) {
      for (; a.sibling === null; ) {
        if (a.return === null || Rj(a.return))
          return null;
        a = a.return;
      }
      a.sibling.return = a.return;
      for (a = a.sibling; a.tag !== 5 && a.tag !== 6 && a.tag !== 18; ) {
        if (a.flags & 2)
          continue a;
        if (a.child === null || a.tag === 4)
          continue a;
        else
          a.child.return = a, a = a.child;
      }
      if (!(a.flags & 2))
        return a.stateNode;
    }
}
function Tj(a, b2, c2) {
  var d2 = a.tag;
  if (d2 === 5 || d2 === 6)
    a = a.stateNode, b2 ? c2.nodeType === 8 ? c2.parentNode.insertBefore(a, b2) : c2.insertBefore(a, b2) : (c2.nodeType === 8 ? (b2 = c2.parentNode, b2.insertBefore(a, c2)) : (b2 = c2, b2.appendChild(a)), c2 = c2._reactRootContainer, c2 !== null && c2 !== void 0 || b2.onclick !== null || (b2.onclick = Af));
  else if (d2 !== 4 && (a = a.child, a !== null))
    for (Tj(a, b2, c2), a = a.sibling; a !== null; )
      Tj(a, b2, c2), a = a.sibling;
}
function Uj(a, b2, c2) {
  var d2 = a.tag;
  if (d2 === 5 || d2 === 6)
    a = a.stateNode, b2 ? c2.insertBefore(a, b2) : c2.appendChild(a);
  else if (d2 !== 4 && (a = a.child, a !== null))
    for (Uj(a, b2, c2), a = a.sibling; a !== null; )
      Uj(a, b2, c2), a = a.sibling;
}
var V = null, Vj = false;
function Wj(a, b2, c2) {
  for (c2 = c2.child; c2 !== null; )
    Xj(a, b2, c2), c2 = c2.sibling;
}
function Xj(a, b2, c2) {
  if (kc && typeof kc.onCommitFiberUnmount === "function")
    try {
      kc.onCommitFiberUnmount(jc, c2);
    } catch (h2) {
    }
  switch (c2.tag) {
    case 5:
      S || Jj(c2, b2);
    case 6:
      var d2 = V, e2 = Vj;
      V = null;
      Wj(a, b2, c2);
      V = d2;
      Vj = e2;
      V !== null && (Vj ? (a = V, c2 = c2.stateNode, a.nodeType === 8 ? a.parentNode.removeChild(c2) : a.removeChild(c2)) : V.removeChild(c2.stateNode));
      break;
    case 18:
      V !== null && (Vj ? (a = V, c2 = c2.stateNode, a.nodeType === 8 ? Jf(a.parentNode, c2) : a.nodeType === 1 && Jf(a, c2), ad(a)) : Jf(V, c2.stateNode));
      break;
    case 4:
      d2 = V;
      e2 = Vj;
      V = c2.stateNode.containerInfo;
      Vj = true;
      Wj(a, b2, c2);
      V = d2;
      Vj = e2;
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (!S && (d2 = c2.updateQueue, d2 !== null && (d2 = d2.lastEffect, d2 !== null))) {
        e2 = d2 = d2.next;
        do {
          var f2 = e2, g2 = f2.destroy;
          f2 = f2.tag;
          g2 !== void 0 && ((f2 & 2) !== 0 ? Kj(c2, b2, g2) : (f2 & 4) !== 0 && Kj(c2, b2, g2));
          e2 = e2.next;
        } while (e2 !== d2);
      }
      Wj(a, b2, c2);
      break;
    case 1:
      if (!S && (Jj(c2, b2), d2 = c2.stateNode, typeof d2.componentWillUnmount === "function"))
        try {
          d2.props = c2.memoizedProps, d2.state = c2.memoizedState, d2.componentWillUnmount();
        } catch (h2) {
          U(c2, b2, h2);
        }
      Wj(a, b2, c2);
      break;
    case 21:
      Wj(a, b2, c2);
      break;
    case 22:
      c2.mode & 1 ? (S = (d2 = S) || c2.memoizedState !== null, Wj(a, b2, c2), S = d2) : Wj(a, b2, c2);
      break;
    default:
      Wj(a, b2, c2);
  }
}
function Yj(a) {
  var b2 = a.updateQueue;
  if (b2 !== null) {
    a.updateQueue = null;
    var c2 = a.stateNode;
    c2 === null && (c2 = a.stateNode = new Ij());
    b2.forEach(function(b3) {
      var d2 = Zj.bind(null, a, b3);
      c2.has(b3) || (c2.add(b3), b3.then(d2, d2));
    });
  }
}
function ak(a, b2) {
  var c2 = b2.deletions;
  if (c2 !== null)
    for (var d2 = 0; d2 < c2.length; d2++) {
      var e2 = c2[d2];
      try {
        var f2 = a, g2 = b2, h2 = g2;
        a:
          for (; h2 !== null; ) {
            switch (h2.tag) {
              case 5:
                V = h2.stateNode;
                Vj = false;
                break a;
              case 3:
                V = h2.stateNode.containerInfo;
                Vj = true;
                break a;
              case 4:
                V = h2.stateNode.containerInfo;
                Vj = true;
                break a;
            }
            h2 = h2.return;
          }
        if (V === null)
          throw Error(p$2(160));
        Xj(f2, g2, e2);
        V = null;
        Vj = false;
        var k2 = e2.alternate;
        k2 !== null && (k2.return = null);
        e2.return = null;
      } catch (l2) {
        U(e2, b2, l2);
      }
    }
  if (b2.subtreeFlags & 12854)
    for (b2 = b2.child; b2 !== null; )
      bk(b2, a), b2 = b2.sibling;
}
function bk(a, b2) {
  var c2 = a.alternate, d2 = a.flags;
  switch (a.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      ak(b2, a);
      ck(a);
      if (d2 & 4) {
        try {
          Nj(3, a, a.return), Oj(3, a);
        } catch (m2) {
          U(a, a.return, m2);
        }
        try {
          Nj(5, a, a.return);
        } catch (m2) {
          U(a, a.return, m2);
        }
      }
      break;
    case 1:
      ak(b2, a);
      ck(a);
      d2 & 512 && c2 !== null && Jj(c2, c2.return);
      break;
    case 5:
      ak(b2, a);
      ck(a);
      d2 & 512 && c2 !== null && Jj(c2, c2.return);
      if (a.flags & 32) {
        var e2 = a.stateNode;
        try {
          nb(e2, "");
        } catch (m2) {
          U(a, a.return, m2);
        }
      }
      if (d2 & 4 && (e2 = a.stateNode, e2 != null)) {
        var f2 = a.memoizedProps, g2 = c2 !== null ? c2.memoizedProps : f2, h2 = a.type, k2 = a.updateQueue;
        a.updateQueue = null;
        if (k2 !== null)
          try {
            h2 === "input" && f2.type === "radio" && f2.name != null && Za(e2, f2);
            ub(h2, g2);
            var l2 = ub(h2, f2);
            for (g2 = 0; g2 < k2.length; g2 += 2) {
              var n2 = k2[g2], u2 = k2[g2 + 1];
              n2 === "style" ? rb(e2, u2) : n2 === "dangerouslySetInnerHTML" ? mb(e2, u2) : n2 === "children" ? nb(e2, u2) : sa(e2, n2, u2, l2);
            }
            switch (h2) {
              case "input":
                $a(e2, f2);
                break;
              case "textarea":
                hb(e2, f2);
                break;
              case "select":
                var q2 = e2._wrapperState.wasMultiple;
                e2._wrapperState.wasMultiple = !!f2.multiple;
                var y2 = f2.value;
                y2 != null ? eb(e2, !!f2.multiple, y2, false) : q2 !== !!f2.multiple && (f2.defaultValue != null ? eb(e2, !!f2.multiple, f2.defaultValue, true) : eb(e2, !!f2.multiple, f2.multiple ? [] : "", false));
            }
            e2[Of] = f2;
          } catch (m2) {
            U(a, a.return, m2);
          }
      }
      break;
    case 6:
      ak(b2, a);
      ck(a);
      if (d2 & 4) {
        if (a.stateNode === null)
          throw Error(p$2(162));
        l2 = a.stateNode;
        n2 = a.memoizedProps;
        try {
          l2.nodeValue = n2;
        } catch (m2) {
          U(a, a.return, m2);
        }
      }
      break;
    case 3:
      ak(b2, a);
      ck(a);
      if (d2 & 4 && c2 !== null && c2.memoizedState.isDehydrated)
        try {
          ad(b2.containerInfo);
        } catch (m2) {
          U(a, a.return, m2);
        }
      break;
    case 4:
      ak(b2, a);
      ck(a);
      break;
    case 13:
      ak(b2, a);
      ck(a);
      l2 = a.child;
      l2.flags & 8192 && l2.memoizedState !== null && (l2.alternate === null || l2.alternate.memoizedState === null) && (dk = B());
      d2 & 4 && Yj(a);
      break;
    case 22:
      l2 = c2 !== null && c2.memoizedState !== null;
      a.mode & 1 ? (S = (n2 = S) || l2, ak(b2, a), S = n2) : ak(b2, a);
      ck(a);
      if (d2 & 8192) {
        n2 = a.memoizedState !== null;
        a:
          for (u2 = null, q2 = a; ; ) {
            if (q2.tag === 5) {
              if (u2 === null) {
                u2 = q2;
                try {
                  e2 = q2.stateNode, n2 ? (f2 = e2.style, typeof f2.setProperty === "function" ? f2.setProperty("display", "none", "important") : f2.display = "none") : (h2 = q2.stateNode, k2 = q2.memoizedProps.style, g2 = k2 !== void 0 && k2 !== null && k2.hasOwnProperty("display") ? k2.display : null, h2.style.display = qb("display", g2));
                } catch (m2) {
                  U(a, a.return, m2);
                }
              }
            } else if (q2.tag === 6) {
              if (u2 === null)
                try {
                  q2.stateNode.nodeValue = n2 ? "" : q2.memoizedProps;
                } catch (m2) {
                  U(a, a.return, m2);
                }
            } else if ((q2.tag !== 22 && q2.tag !== 23 || q2.memoizedState === null || q2 === a) && q2.child !== null) {
              q2.child.return = q2;
              q2 = q2.child;
              continue;
            }
            if (q2 === a)
              break a;
            for (; q2.sibling === null; ) {
              if (q2.return === null || q2.return === a)
                break a;
              u2 === q2 && (u2 = null);
              q2 = q2.return;
            }
            u2 === q2 && (u2 = null);
            q2.sibling.return = q2.return;
            q2 = q2.sibling;
          }
        if (n2 && !l2 && (a.mode & 1) !== 0)
          for (T = a, a = a.child; a !== null; ) {
            for (l2 = T = a; T !== null; ) {
              n2 = T;
              u2 = n2.child;
              switch (n2.tag) {
                case 0:
                case 11:
                case 14:
                case 15:
                  Nj(4, n2, n2.return);
                  break;
                case 1:
                  Jj(n2, n2.return);
                  f2 = n2.stateNode;
                  if (typeof f2.componentWillUnmount === "function") {
                    q2 = n2;
                    y2 = n2.return;
                    try {
                      e2 = q2, f2.props = e2.memoizedProps, f2.state = e2.memoizedState, f2.componentWillUnmount();
                    } catch (m2) {
                      U(q2, y2, m2);
                    }
                  }
                  break;
                case 5:
                  Jj(n2, n2.return);
                  break;
                case 22:
                  if (n2.memoizedState !== null) {
                    ek(l2);
                    continue;
                  }
              }
              u2 !== null ? (u2.return = n2, T = u2) : ek(l2);
            }
            a = a.sibling;
          }
      }
      break;
    case 19:
      ak(b2, a);
      ck(a);
      d2 & 4 && Yj(a);
      break;
    case 21:
      break;
    default:
      ak(b2, a), ck(a);
  }
}
function ck(a) {
  var b2 = a.flags;
  if (b2 & 2) {
    try {
      a: {
        for (var c2 = a.return; c2 !== null; ) {
          if (Rj(c2)) {
            var d2 = c2;
            break a;
          }
          c2 = c2.return;
        }
        throw Error(p$2(160));
      }
      switch (d2.tag) {
        case 5:
          var e2 = d2.stateNode;
          d2.flags & 32 && (nb(e2, ""), d2.flags &= -33);
          var f2 = Sj(a);
          Uj(a, f2, e2);
          break;
        case 3:
        case 4:
          var g2 = d2.stateNode.containerInfo, h2 = Sj(a);
          Tj(a, h2, g2);
          break;
        default:
          throw Error(p$2(161));
      }
    } catch (k2) {
      U(a, a.return, k2);
    }
    a.flags &= -3;
  }
  b2 & 4096 && (a.flags &= -4097);
}
function fk(a, b2, c2) {
  T = a;
  gk(a);
}
function gk(a, b2, c2) {
  for (var d2 = (a.mode & 1) !== 0; T !== null; ) {
    var e2 = T, f2 = e2.child;
    if (e2.tag === 22 && d2) {
      var g2 = e2.memoizedState !== null || Hj;
      if (!g2) {
        var h2 = e2.alternate, k2 = h2 !== null && h2.memoizedState !== null || S;
        h2 = Hj;
        var l2 = S;
        Hj = g2;
        if ((S = k2) && !l2)
          for (T = e2; T !== null; )
            g2 = T, k2 = g2.child, g2.tag === 22 && g2.memoizedState !== null ? hk(e2) : k2 !== null ? (k2.return = g2, T = k2) : hk(e2);
        for (; f2 !== null; )
          T = f2, gk(f2), f2 = f2.sibling;
        T = e2;
        Hj = h2;
        S = l2;
      }
      ik(a);
    } else
      (e2.subtreeFlags & 8772) !== 0 && f2 !== null ? (f2.return = e2, T = f2) : ik(a);
  }
}
function ik(a) {
  for (; T !== null; ) {
    var b2 = T;
    if ((b2.flags & 8772) !== 0) {
      var c2 = b2.alternate;
      try {
        if ((b2.flags & 8772) !== 0)
          switch (b2.tag) {
            case 0:
            case 11:
            case 15:
              S || Oj(5, b2);
              break;
            case 1:
              var d2 = b2.stateNode;
              if (b2.flags & 4 && !S)
                if (c2 === null)
                  d2.componentDidMount();
                else {
                  var e2 = b2.elementType === b2.type ? c2.memoizedProps : kg(b2.type, c2.memoizedProps);
                  d2.componentDidUpdate(e2, c2.memoizedState, d2.__reactInternalSnapshotBeforeUpdate);
                }
              var f2 = b2.updateQueue;
              f2 !== null && Gg(b2, f2, d2);
              break;
            case 3:
              var g2 = b2.updateQueue;
              if (g2 !== null) {
                c2 = null;
                if (b2.child !== null)
                  switch (b2.child.tag) {
                    case 5:
                      c2 = b2.child.stateNode;
                      break;
                    case 1:
                      c2 = b2.child.stateNode;
                  }
                Gg(b2, g2, c2);
              }
              break;
            case 5:
              var h2 = b2.stateNode;
              if (c2 === null && b2.flags & 4) {
                c2 = h2;
                var k2 = b2.memoizedProps;
                switch (b2.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    k2.autoFocus && c2.focus();
                    break;
                  case "img":
                    k2.src && (c2.src = k2.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (b2.memoizedState === null) {
                var l2 = b2.alternate;
                if (l2 !== null) {
                  var n2 = l2.memoizedState;
                  if (n2 !== null) {
                    var u2 = n2.dehydrated;
                    u2 !== null && ad(u2);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
              break;
            default:
              throw Error(p$2(163));
          }
        S || b2.flags & 512 && Pj(b2);
      } catch (q2) {
        U(b2, b2.return, q2);
      }
    }
    if (b2 === a) {
      T = null;
      break;
    }
    c2 = b2.sibling;
    if (c2 !== null) {
      c2.return = b2.return;
      T = c2;
      break;
    }
    T = b2.return;
  }
}
function ek(a) {
  for (; T !== null; ) {
    var b2 = T;
    if (b2 === a) {
      T = null;
      break;
    }
    var c2 = b2.sibling;
    if (c2 !== null) {
      c2.return = b2.return;
      T = c2;
      break;
    }
    T = b2.return;
  }
}
function hk(a) {
  for (; T !== null; ) {
    var b2 = T;
    try {
      switch (b2.tag) {
        case 0:
        case 11:
        case 15:
          var c2 = b2.return;
          try {
            Oj(4, b2);
          } catch (k2) {
            U(b2, c2, k2);
          }
          break;
        case 1:
          var d2 = b2.stateNode;
          if (typeof d2.componentDidMount === "function") {
            var e2 = b2.return;
            try {
              d2.componentDidMount();
            } catch (k2) {
              U(b2, e2, k2);
            }
          }
          var f2 = b2.return;
          try {
            Pj(b2);
          } catch (k2) {
            U(b2, f2, k2);
          }
          break;
        case 5:
          var g2 = b2.return;
          try {
            Pj(b2);
          } catch (k2) {
            U(b2, g2, k2);
          }
      }
    } catch (k2) {
      U(b2, b2.return, k2);
    }
    if (b2 === a) {
      T = null;
      break;
    }
    var h2 = b2.sibling;
    if (h2 !== null) {
      h2.return = b2.return;
      T = h2;
      break;
    }
    T = b2.return;
  }
}
var jk = Math.ceil, kk = ta.ReactCurrentDispatcher, lk = ta.ReactCurrentOwner, mk = ta.ReactCurrentBatchConfig, W = 0, P = null, X = null, Y = 0, cj = 0, mj = Tf(0), R = 0, nk = null, Fg = 0, ok = 0, pk = 0, qk = null, rk = null, dk = 0, aj = Infinity, sk = null, Li = false, Mi = null, Oi = null, tk = false, uk = null, vk = 0, wk = 0, xk = null, yk = -1, zk = 0;
function Jg() {
  return (W & 6) !== 0 ? B() : yk !== -1 ? yk : yk = B();
}
function Kg(a) {
  if ((a.mode & 1) === 0)
    return 1;
  if ((W & 2) !== 0 && Y !== 0)
    return Y & -Y;
  if (jg.transition !== null)
    return zk === 0 && (zk = xc()), zk;
  a = C;
  if (a !== 0)
    return a;
  a = window.event;
  a = a === void 0 ? 16 : id(a.type);
  return a;
}
function Lg(a, b2, c2) {
  if (50 < wk)
    throw wk = 0, xk = null, Error(p$2(185));
  var d2 = Ak(a, b2);
  if (d2 === null)
    return null;
  zc(d2, b2, c2);
  if ((W & 2) === 0 || d2 !== P)
    d2 === P && ((W & 2) === 0 && (ok |= b2), R === 4 && Bk(d2, Y)), Ck(d2, c2), b2 === 1 && W === 0 && (a.mode & 1) === 0 && (aj = B() + 500, eg && ig());
  return d2;
}
function Ak(a, b2) {
  a.lanes |= b2;
  var c2 = a.alternate;
  c2 !== null && (c2.lanes |= b2);
  c2 = a;
  for (a = a.return; a !== null; )
    a.childLanes |= b2, c2 = a.alternate, c2 !== null && (c2.childLanes |= b2), c2 = a, a = a.return;
  return c2.tag === 3 ? c2.stateNode : null;
}
function Bg(a) {
  return (P !== null || vg !== null) && (a.mode & 1) !== 0 && (W & 2) === 0;
}
function Ck(a, b2) {
  var c2 = a.callbackNode;
  vc(a, b2);
  var d2 = tc(a, a === P ? Y : 0);
  if (d2 === 0)
    c2 !== null && ac(c2), a.callbackNode = null, a.callbackPriority = 0;
  else if (b2 = d2 & -d2, a.callbackPriority !== b2) {
    c2 != null && ac(c2);
    if (b2 === 1)
      a.tag === 0 ? hg(Dk.bind(null, a)) : gg(Dk.bind(null, a)), If(function() {
        W === 0 && ig();
      }), c2 = null;
    else {
      switch (Cc(d2)) {
        case 1:
          c2 = ec;
          break;
        case 4:
          c2 = fc;
          break;
        case 16:
          c2 = gc;
          break;
        case 536870912:
          c2 = ic;
          break;
        default:
          c2 = gc;
      }
      c2 = Ek(c2, Fk.bind(null, a));
    }
    a.callbackPriority = b2;
    a.callbackNode = c2;
  }
}
function Fk(a, b2) {
  yk = -1;
  zk = 0;
  if ((W & 6) !== 0)
    throw Error(p$2(327));
  var c2 = a.callbackNode;
  if (Gk() && a.callbackNode !== c2)
    return null;
  var d2 = tc(a, a === P ? Y : 0);
  if (d2 === 0)
    return null;
  if ((d2 & 30) !== 0 || (d2 & a.expiredLanes) !== 0 || b2)
    b2 = Hk(a, d2);
  else {
    b2 = d2;
    var e2 = W;
    W |= 2;
    var f2 = Ik();
    if (P !== a || Y !== b2)
      sk = null, aj = B() + 500, Jk(a, b2);
    do
      try {
        Kk();
        break;
      } catch (h2) {
        Lk(a, h2);
      }
    while (1);
    pg();
    kk.current = f2;
    W = e2;
    X !== null ? b2 = 0 : (P = null, Y = 0, b2 = R);
  }
  if (b2 !== 0) {
    b2 === 2 && (e2 = wc(a), e2 !== 0 && (d2 = e2, b2 = Mk(a, e2)));
    if (b2 === 1)
      throw c2 = nk, Jk(a, 0), Bk(a, d2), Ck(a, B()), c2;
    if (b2 === 6)
      Bk(a, d2);
    else {
      e2 = a.current.alternate;
      if ((d2 & 30) === 0 && !Nk(e2) && (b2 = Hk(a, d2), b2 === 2 && (f2 = wc(a), f2 !== 0 && (d2 = f2, b2 = Mk(a, f2))), b2 === 1))
        throw c2 = nk, Jk(a, 0), Bk(a, d2), Ck(a, B()), c2;
      a.finishedWork = e2;
      a.finishedLanes = d2;
      switch (b2) {
        case 0:
        case 1:
          throw Error(p$2(345));
        case 2:
          Ok(a, rk, sk);
          break;
        case 3:
          Bk(a, d2);
          if ((d2 & 130023424) === d2 && (b2 = dk + 500 - B(), 10 < b2)) {
            if (tc(a, 0) !== 0)
              break;
            e2 = a.suspendedLanes;
            if ((e2 & d2) !== d2) {
              Jg();
              a.pingedLanes |= a.suspendedLanes & e2;
              break;
            }
            a.timeoutHandle = Ef(Ok.bind(null, a, rk, sk), b2);
            break;
          }
          Ok(a, rk, sk);
          break;
        case 4:
          Bk(a, d2);
          if ((d2 & 4194240) === d2)
            break;
          b2 = a.eventTimes;
          for (e2 = -1; 0 < d2; ) {
            var g2 = 31 - nc(d2);
            f2 = 1 << g2;
            g2 = b2[g2];
            g2 > e2 && (e2 = g2);
            d2 &= ~f2;
          }
          d2 = e2;
          d2 = B() - d2;
          d2 = (120 > d2 ? 120 : 480 > d2 ? 480 : 1080 > d2 ? 1080 : 1920 > d2 ? 1920 : 3e3 > d2 ? 3e3 : 4320 > d2 ? 4320 : 1960 * jk(d2 / 1960)) - d2;
          if (10 < d2) {
            a.timeoutHandle = Ef(Ok.bind(null, a, rk, sk), d2);
            break;
          }
          Ok(a, rk, sk);
          break;
        case 5:
          Ok(a, rk, sk);
          break;
        default:
          throw Error(p$2(329));
      }
    }
  }
  Ck(a, B());
  return a.callbackNode === c2 ? Fk.bind(null, a) : null;
}
function Mk(a, b2) {
  var c2 = qk;
  a.current.memoizedState.isDehydrated && (Jk(a, b2).flags |= 256);
  a = Hk(a, b2);
  a !== 2 && (b2 = rk, rk = c2, b2 !== null && Zi(b2));
  return a;
}
function Zi(a) {
  rk === null ? rk = a : rk.push.apply(rk, a);
}
function Nk(a) {
  for (var b2 = a; ; ) {
    if (b2.flags & 16384) {
      var c2 = b2.updateQueue;
      if (c2 !== null && (c2 = c2.stores, c2 !== null))
        for (var d2 = 0; d2 < c2.length; d2++) {
          var e2 = c2[d2], f2 = e2.getSnapshot;
          e2 = e2.value;
          try {
            if (!Ge(f2(), e2))
              return false;
          } catch (g2) {
            return false;
          }
        }
    }
    c2 = b2.child;
    if (b2.subtreeFlags & 16384 && c2 !== null)
      c2.return = b2, b2 = c2;
    else {
      if (b2 === a)
        break;
      for (; b2.sibling === null; ) {
        if (b2.return === null || b2.return === a)
          return true;
        b2 = b2.return;
      }
      b2.sibling.return = b2.return;
      b2 = b2.sibling;
    }
  }
  return true;
}
function Bk(a, b2) {
  b2 &= ~pk;
  b2 &= ~ok;
  a.suspendedLanes |= b2;
  a.pingedLanes &= ~b2;
  for (a = a.expirationTimes; 0 < b2; ) {
    var c2 = 31 - nc(b2), d2 = 1 << c2;
    a[c2] = -1;
    b2 &= ~d2;
  }
}
function Dk(a) {
  if ((W & 6) !== 0)
    throw Error(p$2(327));
  Gk();
  var b2 = tc(a, 0);
  if ((b2 & 1) === 0)
    return Ck(a, B()), null;
  var c2 = Hk(a, b2);
  if (a.tag !== 0 && c2 === 2) {
    var d2 = wc(a);
    d2 !== 0 && (b2 = d2, c2 = Mk(a, d2));
  }
  if (c2 === 1)
    throw c2 = nk, Jk(a, 0), Bk(a, b2), Ck(a, B()), c2;
  if (c2 === 6)
    throw Error(p$2(345));
  a.finishedWork = a.current.alternate;
  a.finishedLanes = b2;
  Ok(a, rk, sk);
  Ck(a, B());
  return null;
}
function Pk(a, b2) {
  var c2 = W;
  W |= 1;
  try {
    return a(b2);
  } finally {
    W = c2, W === 0 && (aj = B() + 500, eg && ig());
  }
}
function Qk(a) {
  uk !== null && uk.tag === 0 && (W & 6) === 0 && Gk();
  var b2 = W;
  W |= 1;
  var c2 = mk.transition, d2 = C;
  try {
    if (mk.transition = null, C = 1, a)
      return a();
  } finally {
    C = d2, mk.transition = c2, W = b2, (W & 6) === 0 && ig();
  }
}
function bj() {
  cj = mj.current;
  E(mj);
}
function Jk(a, b2) {
  a.finishedWork = null;
  a.finishedLanes = 0;
  var c2 = a.timeoutHandle;
  c2 !== -1 && (a.timeoutHandle = -1, Ff(c2));
  if (X !== null)
    for (c2 = X.return; c2 !== null; ) {
      var d2 = c2;
      ch(d2);
      switch (d2.tag) {
        case 1:
          d2 = d2.type.childContextTypes;
          d2 !== null && d2 !== void 0 && Zf();
          break;
        case 3:
          Gh();
          E(Vf);
          E(H);
          Lh();
          break;
        case 5:
          Ih(d2);
          break;
        case 4:
          Gh();
          break;
        case 13:
          E(K);
          break;
        case 19:
          E(K);
          break;
        case 10:
          qg(d2.type._context);
          break;
        case 22:
        case 23:
          bj();
      }
      c2 = c2.return;
    }
  P = a;
  X = a = th(a.current, null);
  Y = cj = b2;
  R = 0;
  nk = null;
  pk = ok = Fg = 0;
  rk = qk = null;
  if (vg !== null) {
    for (b2 = 0; b2 < vg.length; b2++)
      if (c2 = vg[b2], d2 = c2.interleaved, d2 !== null) {
        c2.interleaved = null;
        var e2 = d2.next, f2 = c2.pending;
        if (f2 !== null) {
          var g2 = f2.next;
          f2.next = e2;
          d2.next = g2;
        }
        c2.pending = d2;
      }
    vg = null;
  }
  return a;
}
function Lk(a, b2) {
  do {
    var c2 = X;
    try {
      pg();
      Mh.current = Yh;
      if (Ph) {
        for (var d2 = L.memoizedState; d2 !== null; ) {
          var e2 = d2.queue;
          e2 !== null && (e2.pending = null);
          d2 = d2.next;
        }
        Ph = false;
      }
      Oh = 0;
      N = M = L = null;
      Qh = false;
      Rh = 0;
      lk.current = null;
      if (c2 === null || c2.return === null) {
        R = 1;
        nk = b2;
        X = null;
        break;
      }
      a: {
        var f2 = a, g2 = c2.return, h2 = c2, k2 = b2;
        b2 = Y;
        h2.flags |= 32768;
        if (k2 !== null && typeof k2 === "object" && typeof k2.then === "function") {
          var l2 = k2, n2 = h2, u2 = n2.tag;
          if ((n2.mode & 1) === 0 && (u2 === 0 || u2 === 11 || u2 === 15)) {
            var q2 = n2.alternate;
            q2 ? (n2.updateQueue = q2.updateQueue, n2.memoizedState = q2.memoizedState, n2.lanes = q2.lanes) : (n2.updateQueue = null, n2.memoizedState = null);
          }
          var y2 = Ri(g2);
          if (y2 !== null) {
            y2.flags &= -257;
            Si(y2, g2, h2, f2, b2);
            y2.mode & 1 && Pi(f2, l2, b2);
            b2 = y2;
            k2 = l2;
            var m2 = b2.updateQueue;
            if (m2 === null) {
              var w2 = /* @__PURE__ */ new Set();
              w2.add(k2);
              b2.updateQueue = w2;
            } else
              m2.add(k2);
            break a;
          } else {
            if ((b2 & 1) === 0) {
              Pi(f2, l2, b2);
              $i();
              break a;
            }
            k2 = Error(p$2(426));
          }
        } else if (I && h2.mode & 1) {
          var J2 = Ri(g2);
          if (J2 !== null) {
            (J2.flags & 65536) === 0 && (J2.flags |= 256);
            Si(J2, g2, h2, f2, b2);
            oh(k2);
            break a;
          }
        }
        f2 = k2;
        R !== 4 && (R = 2);
        qk === null ? qk = [f2] : qk.push(f2);
        k2 = Hi(k2, h2);
        h2 = g2;
        do {
          switch (h2.tag) {
            case 3:
              h2.flags |= 65536;
              b2 &= -b2;
              h2.lanes |= b2;
              var v2 = Ki(h2, k2, b2);
              Dg(h2, v2);
              break a;
            case 1:
              f2 = k2;
              var x2 = h2.type, r2 = h2.stateNode;
              if ((h2.flags & 128) === 0 && (typeof x2.getDerivedStateFromError === "function" || r2 !== null && typeof r2.componentDidCatch === "function" && (Oi === null || !Oi.has(r2)))) {
                h2.flags |= 65536;
                b2 &= -b2;
                h2.lanes |= b2;
                var F2 = Ni(h2, f2, b2);
                Dg(h2, F2);
                break a;
              }
          }
          h2 = h2.return;
        } while (h2 !== null);
      }
      Rk(c2);
    } catch (Z) {
      b2 = Z;
      X === c2 && c2 !== null && (X = c2 = c2.return);
      continue;
    }
    break;
  } while (1);
}
function Ik() {
  var a = kk.current;
  kk.current = Yh;
  return a === null ? Yh : a;
}
function $i() {
  if (R === 0 || R === 3 || R === 2)
    R = 4;
  P === null || (Fg & 268435455) === 0 && (ok & 268435455) === 0 || Bk(P, Y);
}
function Hk(a, b2) {
  var c2 = W;
  W |= 2;
  var d2 = Ik();
  if (P !== a || Y !== b2)
    sk = null, Jk(a, b2);
  do
    try {
      Sk();
      break;
    } catch (e2) {
      Lk(a, e2);
    }
  while (1);
  pg();
  W = c2;
  kk.current = d2;
  if (X !== null)
    throw Error(p$2(261));
  P = null;
  Y = 0;
  return R;
}
function Sk() {
  for (; X !== null; )
    Tk(X);
}
function Kk() {
  for (; X !== null && !bc(); )
    Tk(X);
}
function Tk(a) {
  var b2 = Uk(a.alternate, a, cj);
  a.memoizedProps = a.pendingProps;
  b2 === null ? Rk(a) : X = b2;
  lk.current = null;
}
function Rk(a) {
  var b2 = a;
  do {
    var c2 = b2.alternate;
    a = b2.return;
    if ((b2.flags & 32768) === 0) {
      if (c2 = Yi(c2, b2, cj), c2 !== null) {
        X = c2;
        return;
      }
    } else {
      c2 = Gj(c2, b2);
      if (c2 !== null) {
        c2.flags &= 32767;
        X = c2;
        return;
      }
      if (a !== null)
        a.flags |= 32768, a.subtreeFlags = 0, a.deletions = null;
      else {
        R = 6;
        X = null;
        return;
      }
    }
    b2 = b2.sibling;
    if (b2 !== null) {
      X = b2;
      return;
    }
    X = b2 = a;
  } while (b2 !== null);
  R === 0 && (R = 5);
}
function Ok(a, b2, c2) {
  var d2 = C, e2 = mk.transition;
  try {
    mk.transition = null, C = 1, Vk(a, b2, c2, d2);
  } finally {
    mk.transition = e2, C = d2;
  }
  return null;
}
function Vk(a, b2, c2, d2) {
  do
    Gk();
  while (uk !== null);
  if ((W & 6) !== 0)
    throw Error(p$2(327));
  c2 = a.finishedWork;
  var e2 = a.finishedLanes;
  if (c2 === null)
    return null;
  a.finishedWork = null;
  a.finishedLanes = 0;
  if (c2 === a.current)
    throw Error(p$2(177));
  a.callbackNode = null;
  a.callbackPriority = 0;
  var f2 = c2.lanes | c2.childLanes;
  Ac(a, f2);
  a === P && (X = P = null, Y = 0);
  (c2.subtreeFlags & 2064) === 0 && (c2.flags & 2064) === 0 || tk || (tk = true, Ek(gc, function() {
    Gk();
    return null;
  }));
  f2 = (c2.flags & 15990) !== 0;
  if ((c2.subtreeFlags & 15990) !== 0 || f2) {
    f2 = mk.transition;
    mk.transition = null;
    var g2 = C;
    C = 1;
    var h2 = W;
    W |= 4;
    lk.current = null;
    Mj(a, c2);
    bk(c2, a);
    Ne(Cf);
    cd = !!Bf;
    Cf = Bf = null;
    a.current = c2;
    fk(c2);
    cc();
    W = h2;
    C = g2;
    mk.transition = f2;
  } else
    a.current = c2;
  tk && (tk = false, uk = a, vk = e2);
  f2 = a.pendingLanes;
  f2 === 0 && (Oi = null);
  lc(c2.stateNode);
  Ck(a, B());
  if (b2 !== null)
    for (d2 = a.onRecoverableError, c2 = 0; c2 < b2.length; c2++)
      d2(b2[c2]);
  if (Li)
    throw Li = false, a = Mi, Mi = null, a;
  (vk & 1) !== 0 && a.tag !== 0 && Gk();
  f2 = a.pendingLanes;
  (f2 & 1) !== 0 ? a === xk ? wk++ : (wk = 0, xk = a) : wk = 0;
  ig();
  return null;
}
function Gk() {
  if (uk !== null) {
    var a = Cc(vk), b2 = mk.transition, c2 = C;
    try {
      mk.transition = null;
      C = 16 > a ? 16 : a;
      if (uk === null)
        var d2 = false;
      else {
        a = uk;
        uk = null;
        vk = 0;
        if ((W & 6) !== 0)
          throw Error(p$2(331));
        var e2 = W;
        W |= 4;
        for (T = a.current; T !== null; ) {
          var f2 = T, g2 = f2.child;
          if ((T.flags & 16) !== 0) {
            var h2 = f2.deletions;
            if (h2 !== null) {
              for (var k2 = 0; k2 < h2.length; k2++) {
                var l2 = h2[k2];
                for (T = l2; T !== null; ) {
                  var n2 = T;
                  switch (n2.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Nj(8, n2, f2);
                  }
                  var u2 = n2.child;
                  if (u2 !== null)
                    u2.return = n2, T = u2;
                  else
                    for (; T !== null; ) {
                      n2 = T;
                      var q2 = n2.sibling, y2 = n2.return;
                      Qj(n2);
                      if (n2 === l2) {
                        T = null;
                        break;
                      }
                      if (q2 !== null) {
                        q2.return = y2;
                        T = q2;
                        break;
                      }
                      T = y2;
                    }
                }
              }
              var m2 = f2.alternate;
              if (m2 !== null) {
                var w2 = m2.child;
                if (w2 !== null) {
                  m2.child = null;
                  do {
                    var J2 = w2.sibling;
                    w2.sibling = null;
                    w2 = J2;
                  } while (w2 !== null);
                }
              }
              T = f2;
            }
          }
          if ((f2.subtreeFlags & 2064) !== 0 && g2 !== null)
            g2.return = f2, T = g2;
          else
            b:
              for (; T !== null; ) {
                f2 = T;
                if ((f2.flags & 2048) !== 0)
                  switch (f2.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Nj(9, f2, f2.return);
                  }
                var v2 = f2.sibling;
                if (v2 !== null) {
                  v2.return = f2.return;
                  T = v2;
                  break b;
                }
                T = f2.return;
              }
        }
        var x2 = a.current;
        for (T = x2; T !== null; ) {
          g2 = T;
          var r2 = g2.child;
          if ((g2.subtreeFlags & 2064) !== 0 && r2 !== null)
            r2.return = g2, T = r2;
          else
            b:
              for (g2 = x2; T !== null; ) {
                h2 = T;
                if ((h2.flags & 2048) !== 0)
                  try {
                    switch (h2.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Oj(9, h2);
                    }
                  } catch (Z) {
                    U(h2, h2.return, Z);
                  }
                if (h2 === g2) {
                  T = null;
                  break b;
                }
                var F2 = h2.sibling;
                if (F2 !== null) {
                  F2.return = h2.return;
                  T = F2;
                  break b;
                }
                T = h2.return;
              }
        }
        W = e2;
        ig();
        if (kc && typeof kc.onPostCommitFiberRoot === "function")
          try {
            kc.onPostCommitFiberRoot(jc, a);
          } catch (Z) {
          }
        d2 = true;
      }
      return d2;
    } finally {
      C = c2, mk.transition = b2;
    }
  }
  return false;
}
function Wk(a, b2, c2) {
  b2 = Hi(c2, b2);
  b2 = Ki(a, b2, 1);
  Ag(a, b2);
  b2 = Jg();
  a = Ak(a, 1);
  a !== null && (zc(a, 1, b2), Ck(a, b2));
}
function U(a, b2, c2) {
  if (a.tag === 3)
    Wk(a, a, c2);
  else
    for (; b2 !== null; ) {
      if (b2.tag === 3) {
        Wk(b2, a, c2);
        break;
      } else if (b2.tag === 1) {
        var d2 = b2.stateNode;
        if (typeof b2.type.getDerivedStateFromError === "function" || typeof d2.componentDidCatch === "function" && (Oi === null || !Oi.has(d2))) {
          a = Hi(c2, a);
          a = Ni(b2, a, 1);
          Ag(b2, a);
          a = Jg();
          b2 = Ak(b2, 1);
          b2 !== null && (zc(b2, 1, a), Ck(b2, a));
          break;
        }
      }
      b2 = b2.return;
    }
}
function Qi(a, b2, c2) {
  var d2 = a.pingCache;
  d2 !== null && d2.delete(b2);
  b2 = Jg();
  a.pingedLanes |= a.suspendedLanes & c2;
  P === a && (Y & c2) === c2 && (R === 4 || R === 3 && (Y & 130023424) === Y && 500 > B() - dk ? Jk(a, 0) : pk |= c2);
  Ck(a, b2);
}
function Xk(a, b2) {
  b2 === 0 && ((a.mode & 1) === 0 ? b2 = 1 : (b2 = rc, rc <<= 1, (rc & 130023424) === 0 && (rc = 4194304)));
  var c2 = Jg();
  a = Ak(a, b2);
  a !== null && (zc(a, b2, c2), Ck(a, c2));
}
function zj(a) {
  var b2 = a.memoizedState, c2 = 0;
  b2 !== null && (c2 = b2.retryLane);
  Xk(a, c2);
}
function Zj(a, b2) {
  var c2 = 0;
  switch (a.tag) {
    case 13:
      var d2 = a.stateNode;
      var e2 = a.memoizedState;
      e2 !== null && (c2 = e2.retryLane);
      break;
    case 19:
      d2 = a.stateNode;
      break;
    default:
      throw Error(p$2(314));
  }
  d2 !== null && d2.delete(b2);
  Xk(a, c2);
}
var Uk;
Uk = function(a, b2, c2) {
  if (a !== null)
    if (a.memoizedProps !== b2.pendingProps || Vf.current)
      tg = true;
    else {
      if ((a.lanes & c2) === 0 && (b2.flags & 128) === 0)
        return tg = false, Fj(a, b2, c2);
      tg = (a.flags & 131072) !== 0 ? true : false;
    }
  else
    tg = false, I && (b2.flags & 1048576) !== 0 && ah(b2, Ug, b2.index);
  b2.lanes = 0;
  switch (b2.tag) {
    case 2:
      var d2 = b2.type;
      a !== null && (a.alternate = null, b2.alternate = null, b2.flags |= 2);
      a = b2.pendingProps;
      var e2 = Xf(b2, H.current);
      sg(b2, c2);
      e2 = Uh(null, b2, d2, a, e2, c2);
      var f2 = Zh();
      b2.flags |= 1;
      typeof e2 === "object" && e2 !== null && typeof e2.render === "function" && e2.$$typeof === void 0 ? (b2.tag = 1, b2.memoizedState = null, b2.updateQueue = null, Yf(d2) ? (f2 = true, bg(b2)) : f2 = false, b2.memoizedState = e2.state !== null && e2.state !== void 0 ? e2.state : null, xg(b2), e2.updater = Mg, b2.stateNode = e2, e2._reactInternals = b2, Qg(b2, d2, a, c2), b2 = pj(null, b2, d2, true, f2, c2)) : (b2.tag = 0, I && f2 && bh(b2), ej(null, b2, e2, c2), b2 = b2.child);
      return b2;
    case 16:
      d2 = b2.elementType;
      a: {
        a !== null && (a.alternate = null, b2.alternate = null, b2.flags |= 2);
        a = b2.pendingProps;
        e2 = d2._init;
        d2 = e2(d2._payload);
        b2.type = d2;
        e2 = b2.tag = Yk(d2);
        a = kg(d2, a);
        switch (e2) {
          case 0:
            b2 = kj(null, b2, d2, a, c2);
            break a;
          case 1:
            b2 = oj(null, b2, d2, a, c2);
            break a;
          case 11:
            b2 = fj(null, b2, d2, a, c2);
            break a;
          case 14:
            b2 = hj(null, b2, d2, kg(d2.type, a), c2);
            break a;
        }
        throw Error(p$2(306, d2, ""));
      }
      return b2;
    case 0:
      return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : kg(d2, e2), kj(a, b2, d2, e2, c2);
    case 1:
      return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : kg(d2, e2), oj(a, b2, d2, e2, c2);
    case 3:
      a: {
        qj(b2);
        if (a === null)
          throw Error(p$2(387));
        d2 = b2.pendingProps;
        f2 = b2.memoizedState;
        e2 = f2.element;
        yg(a, b2);
        Eg(b2, d2, null, c2);
        var g2 = b2.memoizedState;
        d2 = g2.element;
        if (f2.isDehydrated)
          if (f2 = {
            element: d2,
            isDehydrated: false,
            cache: g2.cache,
            pendingSuspenseBoundaries: g2.pendingSuspenseBoundaries,
            transitions: g2.transitions
          }, b2.updateQueue.baseState = f2, b2.memoizedState = f2, b2.flags & 256) {
            e2 = Error(p$2(423));
            b2 = rj(a, b2, d2, c2, e2);
            break a;
          } else if (d2 !== e2) {
            e2 = Error(p$2(424));
            b2 = rj(a, b2, d2, c2, e2);
            break a;
          } else
            for (eh = Kf(b2.stateNode.containerInfo.firstChild), dh = b2, I = true, fh = null, c2 = zh(b2, null, d2, c2), b2.child = c2; c2; )
              c2.flags = c2.flags & -3 | 4096, c2 = c2.sibling;
        else {
          nh();
          if (d2 === e2) {
            b2 = gj(a, b2, c2);
            break a;
          }
          ej(a, b2, d2, c2);
        }
        b2 = b2.child;
      }
      return b2;
    case 5:
      return Hh(b2), a === null && kh(b2), d2 = b2.type, e2 = b2.pendingProps, f2 = a !== null ? a.memoizedProps : null, g2 = e2.children, Df(d2, e2) ? g2 = null : f2 !== null && Df(d2, f2) && (b2.flags |= 32), nj(a, b2), ej(a, b2, g2, c2), b2.child;
    case 6:
      return a === null && kh(b2), null;
    case 13:
      return vj(a, b2, c2);
    case 4:
      return Fh(b2, b2.stateNode.containerInfo), d2 = b2.pendingProps, a === null ? b2.child = yh(b2, null, d2, c2) : ej(a, b2, d2, c2), b2.child;
    case 11:
      return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : kg(d2, e2), fj(a, b2, d2, e2, c2);
    case 7:
      return ej(a, b2, b2.pendingProps, c2), b2.child;
    case 8:
      return ej(a, b2, b2.pendingProps.children, c2), b2.child;
    case 12:
      return ej(a, b2, b2.pendingProps.children, c2), b2.child;
    case 10:
      a: {
        d2 = b2.type._context;
        e2 = b2.pendingProps;
        f2 = b2.memoizedProps;
        g2 = e2.value;
        G(lg, d2._currentValue);
        d2._currentValue = g2;
        if (f2 !== null)
          if (Ge(f2.value, g2)) {
            if (f2.children === e2.children && !Vf.current) {
              b2 = gj(a, b2, c2);
              break a;
            }
          } else
            for (f2 = b2.child, f2 !== null && (f2.return = b2); f2 !== null; ) {
              var h2 = f2.dependencies;
              if (h2 !== null) {
                g2 = f2.child;
                for (var k2 = h2.firstContext; k2 !== null; ) {
                  if (k2.context === d2) {
                    if (f2.tag === 1) {
                      k2 = zg(-1, c2 & -c2);
                      k2.tag = 2;
                      var l2 = f2.updateQueue;
                      if (l2 !== null) {
                        l2 = l2.shared;
                        var n2 = l2.pending;
                        n2 === null ? k2.next = k2 : (k2.next = n2.next, n2.next = k2);
                        l2.pending = k2;
                      }
                    }
                    f2.lanes |= c2;
                    k2 = f2.alternate;
                    k2 !== null && (k2.lanes |= c2);
                    rg(f2.return, c2, b2);
                    h2.lanes |= c2;
                    break;
                  }
                  k2 = k2.next;
                }
              } else if (f2.tag === 10)
                g2 = f2.type === b2.type ? null : f2.child;
              else if (f2.tag === 18) {
                g2 = f2.return;
                if (g2 === null)
                  throw Error(p$2(341));
                g2.lanes |= c2;
                h2 = g2.alternate;
                h2 !== null && (h2.lanes |= c2);
                rg(g2, c2, b2);
                g2 = f2.sibling;
              } else
                g2 = f2.child;
              if (g2 !== null)
                g2.return = f2;
              else
                for (g2 = f2; g2 !== null; ) {
                  if (g2 === b2) {
                    g2 = null;
                    break;
                  }
                  f2 = g2.sibling;
                  if (f2 !== null) {
                    f2.return = g2.return;
                    g2 = f2;
                    break;
                  }
                  g2 = g2.return;
                }
              f2 = g2;
            }
        ej(a, b2, e2.children, c2);
        b2 = b2.child;
      }
      return b2;
    case 9:
      return e2 = b2.type, d2 = b2.pendingProps.children, sg(b2, c2), e2 = ug(e2), d2 = d2(e2), b2.flags |= 1, ej(a, b2, d2, c2), b2.child;
    case 14:
      return d2 = b2.type, e2 = kg(d2, b2.pendingProps), e2 = kg(d2.type, e2), hj(a, b2, d2, e2, c2);
    case 15:
      return jj(a, b2, b2.type, b2.pendingProps, c2);
    case 17:
      return d2 = b2.type, e2 = b2.pendingProps, e2 = b2.elementType === d2 ? e2 : kg(d2, e2), a !== null && (a.alternate = null, b2.alternate = null, b2.flags |= 2), b2.tag = 1, Yf(d2) ? (a = true, bg(b2)) : a = false, sg(b2, c2), Og(b2, d2, e2), Qg(b2, d2, e2, c2), pj(null, b2, d2, true, a, c2);
    case 19:
      return Ej(a, b2, c2);
    case 22:
      return lj(a, b2, c2);
  }
  throw Error(p$2(156, b2.tag));
};
function Ek(a, b2) {
  return $b(a, b2);
}
function Zk(a, b2, c2, d2) {
  this.tag = a;
  this.key = c2;
  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = b2;
  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
  this.mode = d2;
  this.subtreeFlags = this.flags = 0;
  this.deletions = null;
  this.childLanes = this.lanes = 0;
  this.alternate = null;
}
function hh(a, b2, c2, d2) {
  return new Zk(a, b2, c2, d2);
}
function ij(a) {
  a = a.prototype;
  return !(!a || !a.isReactComponent);
}
function Yk(a) {
  if (typeof a === "function")
    return ij(a) ? 1 : 0;
  if (a !== void 0 && a !== null) {
    a = a.$$typeof;
    if (a === Ca)
      return 11;
    if (a === Fa)
      return 14;
  }
  return 2;
}
function th(a, b2) {
  var c2 = a.alternate;
  c2 === null ? (c2 = hh(a.tag, b2, a.key, a.mode), c2.elementType = a.elementType, c2.type = a.type, c2.stateNode = a.stateNode, c2.alternate = a, a.alternate = c2) : (c2.pendingProps = b2, c2.type = a.type, c2.flags = 0, c2.subtreeFlags = 0, c2.deletions = null);
  c2.flags = a.flags & 14680064;
  c2.childLanes = a.childLanes;
  c2.lanes = a.lanes;
  c2.child = a.child;
  c2.memoizedProps = a.memoizedProps;
  c2.memoizedState = a.memoizedState;
  c2.updateQueue = a.updateQueue;
  b2 = a.dependencies;
  c2.dependencies = b2 === null ? null : { lanes: b2.lanes, firstContext: b2.firstContext };
  c2.sibling = a.sibling;
  c2.index = a.index;
  c2.ref = a.ref;
  return c2;
}
function vh(a, b2, c2, d2, e2, f2) {
  var g2 = 2;
  d2 = a;
  if (typeof a === "function")
    ij(a) && (g2 = 1);
  else if (typeof a === "string")
    g2 = 5;
  else
    a:
      switch (a) {
        case wa:
          return xh(c2.children, e2, f2, b2);
        case xa:
          g2 = 8;
          e2 |= 8;
          break;
        case za:
          return a = hh(12, c2, b2, e2 | 2), a.elementType = za, a.lanes = f2, a;
        case Da:
          return a = hh(13, c2, b2, e2), a.elementType = Da, a.lanes = f2, a;
        case Ea:
          return a = hh(19, c2, b2, e2), a.elementType = Ea, a.lanes = f2, a;
        case Ha:
          return wj(c2, e2, f2, b2);
        default:
          if (typeof a === "object" && a !== null)
            switch (a.$$typeof) {
              case Aa:
                g2 = 10;
                break a;
              case Ba:
                g2 = 9;
                break a;
              case Ca:
                g2 = 11;
                break a;
              case Fa:
                g2 = 14;
                break a;
              case Ga:
                g2 = 16;
                d2 = null;
                break a;
            }
          throw Error(p$2(130, a == null ? a : typeof a, ""));
      }
  b2 = hh(g2, c2, b2, e2);
  b2.elementType = a;
  b2.type = d2;
  b2.lanes = f2;
  return b2;
}
function xh(a, b2, c2, d2) {
  a = hh(7, a, d2, b2);
  a.lanes = c2;
  return a;
}
function wj(a, b2, c2, d2) {
  a = hh(22, a, d2, b2);
  a.elementType = Ha;
  a.lanes = c2;
  a.stateNode = {};
  return a;
}
function uh(a, b2, c2) {
  a = hh(6, a, null, b2);
  a.lanes = c2;
  return a;
}
function wh(a, b2, c2) {
  b2 = hh(4, a.children !== null ? a.children : [], a.key, b2);
  b2.lanes = c2;
  b2.stateNode = { containerInfo: a.containerInfo, pendingChildren: null, implementation: a.implementation };
  return b2;
}
function $k(a, b2, c2, d2, e2) {
  this.tag = b2;
  this.containerInfo = a;
  this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
  this.timeoutHandle = -1;
  this.callbackNode = this.pendingContext = this.context = null;
  this.callbackPriority = 0;
  this.eventTimes = yc(0);
  this.expirationTimes = yc(-1);
  this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
  this.entanglements = yc(0);
  this.identifierPrefix = d2;
  this.onRecoverableError = e2;
  this.mutableSourceEagerHydrationData = null;
}
function al(a, b2, c2, d2, e2, f2, g2, h2, k2) {
  a = new $k(a, b2, c2, h2, k2);
  b2 === 1 ? (b2 = 1, f2 === true && (b2 |= 8)) : b2 = 0;
  f2 = hh(3, null, null, b2);
  a.current = f2;
  f2.stateNode = a;
  f2.memoizedState = { element: d2, isDehydrated: c2, cache: null, transitions: null, pendingSuspenseBoundaries: null };
  xg(f2);
  return a;
}
function bl(a, b2, c2) {
  var d2 = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
  return { $$typeof: va, key: d2 == null ? null : "" + d2, children: a, containerInfo: b2, implementation: c2 };
}
function cl(a) {
  if (!a)
    return Uf;
  a = a._reactInternals;
  a: {
    if (Ub(a) !== a || a.tag !== 1)
      throw Error(p$2(170));
    var b2 = a;
    do {
      switch (b2.tag) {
        case 3:
          b2 = b2.stateNode.context;
          break a;
        case 1:
          if (Yf(b2.type)) {
            b2 = b2.stateNode.__reactInternalMemoizedMergedChildContext;
            break a;
          }
      }
      b2 = b2.return;
    } while (b2 !== null);
    throw Error(p$2(171));
  }
  if (a.tag === 1) {
    var c2 = a.type;
    if (Yf(c2))
      return ag(a, c2, b2);
  }
  return b2;
}
function dl(a, b2, c2, d2, e2, f2, g2, h2, k2) {
  a = al(c2, d2, true, a, e2, f2, g2, h2, k2);
  a.context = cl(null);
  c2 = a.current;
  d2 = Jg();
  e2 = Kg(c2);
  f2 = zg(d2, e2);
  f2.callback = b2 !== void 0 && b2 !== null ? b2 : null;
  Ag(c2, f2);
  a.current.lanes = e2;
  zc(a, e2, d2);
  Ck(a, d2);
  return a;
}
function el(a, b2, c2, d2) {
  var e2 = b2.current, f2 = Jg(), g2 = Kg(e2);
  c2 = cl(c2);
  b2.context === null ? b2.context = c2 : b2.pendingContext = c2;
  b2 = zg(f2, g2);
  b2.payload = { element: a };
  d2 = d2 === void 0 ? null : d2;
  d2 !== null && (b2.callback = d2);
  Ag(e2, b2);
  a = Lg(e2, g2, f2);
  a !== null && Cg(a, e2, g2);
  return g2;
}
function fl(a) {
  a = a.current;
  if (!a.child)
    return null;
  switch (a.child.tag) {
    case 5:
      return a.child.stateNode;
    default:
      return a.child.stateNode;
  }
}
function gl(a, b2) {
  a = a.memoizedState;
  if (a !== null && a.dehydrated !== null) {
    var c2 = a.retryLane;
    a.retryLane = c2 !== 0 && c2 < b2 ? c2 : b2;
  }
}
function hl(a, b2) {
  gl(a, b2);
  (a = a.alternate) && gl(a, b2);
}
function il() {
  return null;
}
var jl = typeof reportError === "function" ? reportError : function(a) {
  console.error(a);
};
function kl(a) {
  this._internalRoot = a;
}
ll.prototype.render = kl.prototype.render = function(a) {
  var b2 = this._internalRoot;
  if (b2 === null)
    throw Error(p$2(409));
  el(a, b2, null, null);
};
ll.prototype.unmount = kl.prototype.unmount = function() {
  var a = this._internalRoot;
  if (a !== null) {
    this._internalRoot = null;
    var b2 = a.containerInfo;
    Qk(function() {
      el(null, a, null, null);
    });
    b2[tf] = null;
  }
};
function ll(a) {
  this._internalRoot = a;
}
ll.prototype.unstable_scheduleHydration = function(a) {
  if (a) {
    var b2 = Gc();
    a = { blockedOn: null, target: a, priority: b2 };
    for (var c2 = 0; c2 < Pc.length && b2 !== 0 && b2 < Pc[c2].priority; c2++)
      ;
    Pc.splice(c2, 0, a);
    c2 === 0 && Uc(a);
  }
};
function ml(a) {
  return !(!a || a.nodeType !== 1 && a.nodeType !== 9 && a.nodeType !== 11);
}
function nl(a) {
  return !(!a || a.nodeType !== 1 && a.nodeType !== 9 && a.nodeType !== 11 && (a.nodeType !== 8 || a.nodeValue !== " react-mount-point-unstable "));
}
function ol() {
}
function pl(a, b2, c2, d2, e2) {
  if (e2) {
    if (typeof d2 === "function") {
      var f2 = d2;
      d2 = function() {
        var a2 = fl(g2);
        f2.call(a2);
      };
    }
    var g2 = dl(b2, d2, a, 0, null, false, false, "", ol);
    a._reactRootContainer = g2;
    a[tf] = g2.current;
    rf(a.nodeType === 8 ? a.parentNode : a);
    Qk();
    return g2;
  }
  for (; e2 = a.lastChild; )
    a.removeChild(e2);
  if (typeof d2 === "function") {
    var h2 = d2;
    d2 = function() {
      var a2 = fl(k2);
      h2.call(a2);
    };
  }
  var k2 = al(a, 0, false, null, null, false, false, "", ol);
  a._reactRootContainer = k2;
  a[tf] = k2.current;
  rf(a.nodeType === 8 ? a.parentNode : a);
  Qk(function() {
    el(b2, k2, c2, d2);
  });
  return k2;
}
function ql(a, b2, c2, d2, e2) {
  var f2 = c2._reactRootContainer;
  if (f2) {
    var g2 = f2;
    if (typeof e2 === "function") {
      var h2 = e2;
      e2 = function() {
        var a2 = fl(g2);
        h2.call(a2);
      };
    }
    el(b2, g2, a, e2);
  } else
    g2 = pl(c2, b2, a, e2, d2);
  return fl(g2);
}
Dc = function(a) {
  switch (a.tag) {
    case 3:
      var b2 = a.stateNode;
      if (b2.current.memoizedState.isDehydrated) {
        var c2 = sc(b2.pendingLanes);
        c2 !== 0 && (Bc(b2, c2 | 1), Ck(b2, B()), (W & 6) === 0 && (aj = B() + 500, ig()));
      }
      break;
    case 13:
      var d2 = Jg();
      Qk(function() {
        return Lg(a, 1, d2);
      });
      hl(a, 1);
  }
};
Ec = function(a) {
  if (a.tag === 13) {
    var b2 = Jg();
    Lg(a, 134217728, b2);
    hl(a, 134217728);
  }
};
Fc = function(a) {
  if (a.tag === 13) {
    var b2 = Jg(), c2 = Kg(a);
    Lg(a, c2, b2);
    hl(a, c2);
  }
};
Gc = function() {
  return C;
};
Hc = function(a, b2) {
  var c2 = C;
  try {
    return C = a, b2();
  } finally {
    C = c2;
  }
};
xb = function(a, b2, c2) {
  switch (b2) {
    case "input":
      $a(a, c2);
      b2 = c2.name;
      if (c2.type === "radio" && b2 != null) {
        for (c2 = a; c2.parentNode; )
          c2 = c2.parentNode;
        c2 = c2.querySelectorAll("input[name=" + JSON.stringify("" + b2) + '][type="radio"]');
        for (b2 = 0; b2 < c2.length; b2++) {
          var d2 = c2[b2];
          if (d2 !== a && d2.form === a.form) {
            var e2 = Cb(d2);
            if (!e2)
              throw Error(p$2(90));
            Va(d2);
            $a(d2, e2);
          }
        }
      }
      break;
    case "textarea":
      hb(a, c2);
      break;
    case "select":
      b2 = c2.value, b2 != null && eb(a, !!c2.multiple, b2, false);
  }
};
Fb = Pk;
Gb = Qk;
var rl = { usingClientEntryPoint: false, Events: [Bb, te, Cb, Db, Eb, Pk] }, sl = { findFiberByHostInstance: Vc, bundleType: 0, version: "18.1.0", rendererPackageName: "react-dom" };
var tl = { bundleType: sl.bundleType, version: sl.version, rendererPackageName: sl.rendererPackageName, rendererConfig: sl.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: ta.ReactCurrentDispatcher, findHostInstanceByFiber: function(a) {
  a = Yb(a);
  return a === null ? null : a.stateNode;
}, findFiberByHostInstance: sl.findFiberByHostInstance || il, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.1.0-next-22edb9f77-20220426" };
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined") {
  var ul = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!ul.isDisabled && ul.supportsFiber)
    try {
      jc = ul.inject(tl), kc = ul;
    } catch (a) {
    }
}
reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = rl;
reactDom_production_min.createPortal = function(a, b2) {
  var c2 = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
  if (!ml(b2))
    throw Error(p$2(200));
  return bl(a, b2, null, c2);
};
reactDom_production_min.createRoot = function(a, b2) {
  if (!ml(a))
    throw Error(p$2(299));
  var c2 = false, d2 = "", e2 = jl;
  b2 !== null && b2 !== void 0 && (b2.unstable_strictMode === true && (c2 = true), b2.identifierPrefix !== void 0 && (d2 = b2.identifierPrefix), b2.onRecoverableError !== void 0 && (e2 = b2.onRecoverableError));
  b2 = al(a, 1, false, null, null, c2, false, d2, e2);
  a[tf] = b2.current;
  rf(a.nodeType === 8 ? a.parentNode : a);
  return new kl(b2);
};
reactDom_production_min.findDOMNode = function(a) {
  if (a == null)
    return null;
  if (a.nodeType === 1)
    return a;
  var b2 = a._reactInternals;
  if (b2 === void 0) {
    if (typeof a.render === "function")
      throw Error(p$2(188));
    a = Object.keys(a).join(",");
    throw Error(p$2(268, a));
  }
  a = Yb(b2);
  a = a === null ? null : a.stateNode;
  return a;
};
reactDom_production_min.flushSync = function(a) {
  return Qk(a);
};
reactDom_production_min.hydrate = function(a, b2, c2) {
  if (!nl(b2))
    throw Error(p$2(200));
  return ql(null, a, b2, true, c2);
};
reactDom_production_min.hydrateRoot = function(a, b2, c2) {
  if (!ml(a))
    throw Error(p$2(405));
  var d2 = c2 != null && c2.hydratedSources || null, e2 = false, f2 = "", g2 = jl;
  c2 !== null && c2 !== void 0 && (c2.unstable_strictMode === true && (e2 = true), c2.identifierPrefix !== void 0 && (f2 = c2.identifierPrefix), c2.onRecoverableError !== void 0 && (g2 = c2.onRecoverableError));
  b2 = dl(b2, null, a, 1, c2 != null ? c2 : null, e2, false, f2, g2);
  a[tf] = b2.current;
  rf(a);
  if (d2)
    for (a = 0; a < d2.length; a++)
      c2 = d2[a], e2 = c2._getVersion, e2 = e2(c2._source), b2.mutableSourceEagerHydrationData == null ? b2.mutableSourceEagerHydrationData = [c2, e2] : b2.mutableSourceEagerHydrationData.push(c2, e2);
  return new ll(b2);
};
reactDom_production_min.render = function(a, b2, c2) {
  if (!nl(b2))
    throw Error(p$2(200));
  return ql(null, a, b2, false, c2);
};
reactDom_production_min.unmountComponentAtNode = function(a) {
  if (!nl(a))
    throw Error(p$2(40));
  return a._reactRootContainer ? (Qk(function() {
    ql(null, null, a, false, function() {
      a._reactRootContainer = null;
      a[tf] = null;
    });
  }), true) : false;
};
reactDom_production_min.unstable_batchedUpdates = Pk;
reactDom_production_min.unstable_renderSubtreeIntoContainer = function(a, b2, c2, d2) {
  if (!nl(c2))
    throw Error(p$2(200));
  if (a == null || a._reactInternals === void 0)
    throw Error(p$2(38));
  return ql(a, b2, c2, false, d2);
};
reactDom_production_min.version = "18.1.0-next-22edb9f77-20220426";
function checkDCE() {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") {
    return;
  }
  try {
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    console.error(err);
  }
}
{
  checkDCE();
  reactDom.exports = reactDom_production_min;
}
var createRoot;
var m$2 = reactDom.exports;
{
  createRoot = m$2.createRoot;
}
var papaparse_min = { exports: {} };
/* @license
Papa Parse
v5.3.2
https://github.com/mholt/PapaParse
License: MIT
*/
(function(module, exports) {
  !function(e2, t2) {
    module.exports = t2();
  }(commonjsGlobal, function s() {
    var f2 = typeof self != "undefined" ? self : typeof window != "undefined" ? window : f2 !== void 0 ? f2 : {};
    var n2 = !f2.document && !!f2.postMessage, o = n2 && /blob:/i.test((f2.location || {}).protocol), a = {}, h2 = 0, b2 = { parse: function(e2, t2) {
      var i3 = (t2 = t2 || {}).dynamicTyping || false;
      M2(i3) && (t2.dynamicTypingFunction = i3, i3 = {});
      if (t2.dynamicTyping = i3, t2.transform = !!M2(t2.transform) && t2.transform, t2.worker && b2.WORKERS_SUPPORTED) {
        var r2 = function() {
          if (!b2.WORKERS_SUPPORTED)
            return false;
          var e3 = (i4 = f2.URL || f2.webkitURL || null, r3 = s.toString(), b2.BLOB_URL || (b2.BLOB_URL = i4.createObjectURL(new Blob(["(", r3, ")();"], { type: "text/javascript" })))), t3 = new f2.Worker(e3);
          var i4, r3;
          return t3.onmessage = _2, t3.id = h2++, a[t3.id] = t3;
        }();
        return r2.userStep = t2.step, r2.userChunk = t2.chunk, r2.userComplete = t2.complete, r2.userError = t2.error, t2.step = M2(t2.step), t2.chunk = M2(t2.chunk), t2.complete = M2(t2.complete), t2.error = M2(t2.error), delete t2.worker, void r2.postMessage({ input: e2, config: t2, workerId: r2.id });
      }
      var n3 = null;
      b2.NODE_STREAM_INPUT, typeof e2 == "string" ? n3 = t2.download ? new l2(t2) : new p2(t2) : e2.readable === true && M2(e2.read) && M2(e2.on) ? n3 = new g2(t2) : (f2.File && e2 instanceof File || e2 instanceof Object) && (n3 = new c2(t2));
      return n3.stream(e2);
    }, unparse: function(e2, t2) {
      var n3 = false, _3 = true, m3 = ",", y3 = "\r\n", s2 = '"', a2 = s2 + s2, i3 = false, r2 = null, o2 = false;
      !function() {
        if (typeof t2 != "object")
          return;
        typeof t2.delimiter != "string" || b2.BAD_DELIMITERS.filter(function(e3) {
          return t2.delimiter.indexOf(e3) !== -1;
        }).length || (m3 = t2.delimiter);
        (typeof t2.quotes == "boolean" || typeof t2.quotes == "function" || Array.isArray(t2.quotes)) && (n3 = t2.quotes);
        typeof t2.skipEmptyLines != "boolean" && typeof t2.skipEmptyLines != "string" || (i3 = t2.skipEmptyLines);
        typeof t2.newline == "string" && (y3 = t2.newline);
        typeof t2.quoteChar == "string" && (s2 = t2.quoteChar);
        typeof t2.header == "boolean" && (_3 = t2.header);
        if (Array.isArray(t2.columns)) {
          if (t2.columns.length === 0)
            throw new Error("Option columns is empty");
          r2 = t2.columns;
        }
        t2.escapeChar !== void 0 && (a2 = t2.escapeChar + s2);
        (typeof t2.escapeFormulae == "boolean" || t2.escapeFormulae instanceof RegExp) && (o2 = t2.escapeFormulae instanceof RegExp ? t2.escapeFormulae : /^[=+\-@\t\r].*$/);
      }();
      var h3 = new RegExp(j(s2), "g");
      typeof e2 == "string" && (e2 = JSON.parse(e2));
      if (Array.isArray(e2)) {
        if (!e2.length || Array.isArray(e2[0]))
          return u3(null, e2, i3);
        if (typeof e2[0] == "object")
          return u3(r2 || Object.keys(e2[0]), e2, i3);
      } else if (typeof e2 == "object")
        return typeof e2.data == "string" && (e2.data = JSON.parse(e2.data)), Array.isArray(e2.data) && (e2.fields || (e2.fields = e2.meta && e2.meta.fields || r2), e2.fields || (e2.fields = Array.isArray(e2.data[0]) ? e2.fields : typeof e2.data[0] == "object" ? Object.keys(e2.data[0]) : []), Array.isArray(e2.data[0]) || typeof e2.data[0] == "object" || (e2.data = [e2.data])), u3(e2.fields || [], e2.data || [], i3);
      throw new Error("Unable to serialize unrecognized input");
      function u3(e3, t3, i4) {
        var r3 = "";
        typeof e3 == "string" && (e3 = JSON.parse(e3)), typeof t3 == "string" && (t3 = JSON.parse(t3));
        var n4 = Array.isArray(e3) && 0 < e3.length, s3 = !Array.isArray(t3[0]);
        if (n4 && _3) {
          for (var a3 = 0; a3 < e3.length; a3++)
            0 < a3 && (r3 += m3), r3 += v3(e3[a3], a3);
          0 < t3.length && (r3 += y3);
        }
        for (var o3 = 0; o3 < t3.length; o3++) {
          var h4 = n4 ? e3.length : t3[o3].length, u4 = false, f3 = n4 ? Object.keys(t3[o3]).length === 0 : t3[o3].length === 0;
          if (i4 && !n4 && (u4 = i4 === "greedy" ? t3[o3].join("").trim() === "" : t3[o3].length === 1 && t3[o3][0].length === 0), i4 === "greedy" && n4) {
            for (var d3 = [], l3 = 0; l3 < h4; l3++) {
              var c3 = s3 ? e3[l3] : l3;
              d3.push(t3[o3][c3]);
            }
            u4 = d3.join("").trim() === "";
          }
          if (!u4) {
            for (var p3 = 0; p3 < h4; p3++) {
              0 < p3 && !f3 && (r3 += m3);
              var g3 = n4 && s3 ? e3[p3] : p3;
              r3 += v3(t3[o3][g3], p3);
            }
            o3 < t3.length - 1 && (!i4 || 0 < h4 && !f3) && (r3 += y3);
          }
        }
        return r3;
      }
      function v3(e3, t3) {
        if (e3 == null)
          return "";
        if (e3.constructor === Date)
          return JSON.stringify(e3).slice(1, 25);
        var i4 = false;
        o2 && typeof e3 == "string" && o2.test(e3) && (e3 = "'" + e3, i4 = true);
        var r3 = e3.toString().replace(h3, a2);
        return (i4 = i4 || n3 === true || typeof n3 == "function" && n3(e3, t3) || Array.isArray(n3) && n3[t3] || function(e4, t4) {
          for (var i5 = 0; i5 < t4.length; i5++)
            if (-1 < e4.indexOf(t4[i5]))
              return true;
          return false;
        }(r3, b2.BAD_DELIMITERS) || -1 < r3.indexOf(m3) || r3.charAt(0) === " " || r3.charAt(r3.length - 1) === " ") ? s2 + r3 + s2 : r3;
      }
    } };
    if (b2.RECORD_SEP = String.fromCharCode(30), b2.UNIT_SEP = String.fromCharCode(31), b2.BYTE_ORDER_MARK = "\uFEFF", b2.BAD_DELIMITERS = ["\r", "\n", '"', b2.BYTE_ORDER_MARK], b2.WORKERS_SUPPORTED = !n2 && !!f2.Worker, b2.NODE_STREAM_INPUT = 1, b2.LocalChunkSize = 10485760, b2.RemoteChunkSize = 5242880, b2.DefaultDelimiter = ",", b2.Parser = E2, b2.ParserHandle = i2, b2.NetworkStreamer = l2, b2.FileStreamer = c2, b2.StringStreamer = p2, b2.ReadableStreamStreamer = g2, f2.jQuery) {
      var d2 = f2.jQuery;
      d2.fn.parse = function(o2) {
        var i3 = o2.config || {}, h3 = [];
        return this.each(function(e3) {
          if (!(d2(this).prop("tagName").toUpperCase() === "INPUT" && d2(this).attr("type").toLowerCase() === "file" && f2.FileReader) || !this.files || this.files.length === 0)
            return true;
          for (var t2 = 0; t2 < this.files.length; t2++)
            h3.push({ file: this.files[t2], inputElem: this, instanceConfig: d2.extend({}, i3) });
        }), e2(), this;
        function e2() {
          if (h3.length !== 0) {
            var e3, t2, i4, r2, n3 = h3[0];
            if (M2(o2.before)) {
              var s2 = o2.before(n3.file, n3.inputElem);
              if (typeof s2 == "object") {
                if (s2.action === "abort")
                  return e3 = "AbortError", t2 = n3.file, i4 = n3.inputElem, r2 = s2.reason, void (M2(o2.error) && o2.error({ name: e3 }, t2, i4, r2));
                if (s2.action === "skip")
                  return void u3();
                typeof s2.config == "object" && (n3.instanceConfig = d2.extend(n3.instanceConfig, s2.config));
              } else if (s2 === "skip")
                return void u3();
            }
            var a2 = n3.instanceConfig.complete;
            n3.instanceConfig.complete = function(e4) {
              M2(a2) && a2(e4, n3.file, n3.inputElem), u3();
            }, b2.parse(n3.file, n3.instanceConfig);
          } else
            M2(o2.complete) && o2.complete();
        }
        function u3() {
          h3.splice(0, 1), e2();
        }
      };
    }
    function u2(e2) {
      this._handle = null, this._finished = false, this._completed = false, this._halted = false, this._input = null, this._baseIndex = 0, this._partialLine = "", this._rowCount = 0, this._start = 0, this._nextChunk = null, this.isFirstChunk = true, this._completeResults = { data: [], errors: [], meta: {} }, function(e3) {
        var t2 = w2(e3);
        t2.chunkSize = parseInt(t2.chunkSize), e3.step || e3.chunk || (t2.chunkSize = null);
        this._handle = new i2(t2), (this._handle.streamer = this)._config = t2;
      }.call(this, e2), this.parseChunk = function(e3, t2) {
        if (this.isFirstChunk && M2(this._config.beforeFirstChunk)) {
          var i3 = this._config.beforeFirstChunk(e3);
          i3 !== void 0 && (e3 = i3);
        }
        this.isFirstChunk = false, this._halted = false;
        var r2 = this._partialLine + e3;
        this._partialLine = "";
        var n3 = this._handle.parse(r2, this._baseIndex, !this._finished);
        if (!this._handle.paused() && !this._handle.aborted()) {
          var s2 = n3.meta.cursor;
          this._finished || (this._partialLine = r2.substring(s2 - this._baseIndex), this._baseIndex = s2), n3 && n3.data && (this._rowCount += n3.data.length);
          var a2 = this._finished || this._config.preview && this._rowCount >= this._config.preview;
          if (o)
            f2.postMessage({ results: n3, workerId: b2.WORKER_ID, finished: a2 });
          else if (M2(this._config.chunk) && !t2) {
            if (this._config.chunk(n3, this._handle), this._handle.paused() || this._handle.aborted())
              return void (this._halted = true);
            n3 = void 0, this._completeResults = void 0;
          }
          return this._config.step || this._config.chunk || (this._completeResults.data = this._completeResults.data.concat(n3.data), this._completeResults.errors = this._completeResults.errors.concat(n3.errors), this._completeResults.meta = n3.meta), this._completed || !a2 || !M2(this._config.complete) || n3 && n3.meta.aborted || (this._config.complete(this._completeResults, this._input), this._completed = true), a2 || n3 && n3.meta.paused || this._nextChunk(), n3;
        }
        this._halted = true;
      }, this._sendError = function(e3) {
        M2(this._config.error) ? this._config.error(e3) : o && this._config.error && f2.postMessage({ workerId: b2.WORKER_ID, error: e3, finished: false });
      };
    }
    function l2(e2) {
      var r2;
      (e2 = e2 || {}).chunkSize || (e2.chunkSize = b2.RemoteChunkSize), u2.call(this, e2), this._nextChunk = n2 ? function() {
        this._readChunk(), this._chunkLoaded();
      } : function() {
        this._readChunk();
      }, this.stream = function(e3) {
        this._input = e3, this._nextChunk();
      }, this._readChunk = function() {
        if (this._finished)
          this._chunkLoaded();
        else {
          if (r2 = new XMLHttpRequest(), this._config.withCredentials && (r2.withCredentials = this._config.withCredentials), n2 || (r2.onload = v2(this._chunkLoaded, this), r2.onerror = v2(this._chunkError, this)), r2.open(this._config.downloadRequestBody ? "POST" : "GET", this._input, !n2), this._config.downloadRequestHeaders) {
            var e3 = this._config.downloadRequestHeaders;
            for (var t2 in e3)
              r2.setRequestHeader(t2, e3[t2]);
          }
          if (this._config.chunkSize) {
            var i3 = this._start + this._config.chunkSize - 1;
            r2.setRequestHeader("Range", "bytes=" + this._start + "-" + i3);
          }
          try {
            r2.send(this._config.downloadRequestBody);
          } catch (e4) {
            this._chunkError(e4.message);
          }
          n2 && r2.status === 0 && this._chunkError();
        }
      }, this._chunkLoaded = function() {
        r2.readyState === 4 && (r2.status < 200 || 400 <= r2.status ? this._chunkError() : (this._start += this._config.chunkSize ? this._config.chunkSize : r2.responseText.length, this._finished = !this._config.chunkSize || this._start >= function(e3) {
          var t2 = e3.getResponseHeader("Content-Range");
          if (t2 === null)
            return -1;
          return parseInt(t2.substring(t2.lastIndexOf("/") + 1));
        }(r2), this.parseChunk(r2.responseText)));
      }, this._chunkError = function(e3) {
        var t2 = r2.statusText || e3;
        this._sendError(new Error(t2));
      };
    }
    function c2(e2) {
      var r2, n3;
      (e2 = e2 || {}).chunkSize || (e2.chunkSize = b2.LocalChunkSize), u2.call(this, e2);
      var s2 = typeof FileReader != "undefined";
      this.stream = function(e3) {
        this._input = e3, n3 = e3.slice || e3.webkitSlice || e3.mozSlice, s2 ? ((r2 = new FileReader()).onload = v2(this._chunkLoaded, this), r2.onerror = v2(this._chunkError, this)) : r2 = new FileReaderSync(), this._nextChunk();
      }, this._nextChunk = function() {
        this._finished || this._config.preview && !(this._rowCount < this._config.preview) || this._readChunk();
      }, this._readChunk = function() {
        var e3 = this._input;
        if (this._config.chunkSize) {
          var t2 = Math.min(this._start + this._config.chunkSize, this._input.size);
          e3 = n3.call(e3, this._start, t2);
        }
        var i3 = r2.readAsText(e3, this._config.encoding);
        s2 || this._chunkLoaded({ target: { result: i3 } });
      }, this._chunkLoaded = function(e3) {
        this._start += this._config.chunkSize, this._finished = !this._config.chunkSize || this._start >= this._input.size, this.parseChunk(e3.target.result);
      }, this._chunkError = function() {
        this._sendError(r2.error);
      };
    }
    function p2(e2) {
      var i3;
      u2.call(this, e2 = e2 || {}), this.stream = function(e3) {
        return i3 = e3, this._nextChunk();
      }, this._nextChunk = function() {
        if (!this._finished) {
          var e3, t2 = this._config.chunkSize;
          return t2 ? (e3 = i3.substring(0, t2), i3 = i3.substring(t2)) : (e3 = i3, i3 = ""), this._finished = !i3, this.parseChunk(e3);
        }
      };
    }
    function g2(e2) {
      u2.call(this, e2 = e2 || {});
      var t2 = [], i3 = true, r2 = false;
      this.pause = function() {
        u2.prototype.pause.apply(this, arguments), this._input.pause();
      }, this.resume = function() {
        u2.prototype.resume.apply(this, arguments), this._input.resume();
      }, this.stream = function(e3) {
        this._input = e3, this._input.on("data", this._streamData), this._input.on("end", this._streamEnd), this._input.on("error", this._streamError);
      }, this._checkIsFinished = function() {
        r2 && t2.length === 1 && (this._finished = true);
      }, this._nextChunk = function() {
        this._checkIsFinished(), t2.length ? this.parseChunk(t2.shift()) : i3 = true;
      }, this._streamData = v2(function(e3) {
        try {
          t2.push(typeof e3 == "string" ? e3 : e3.toString(this._config.encoding)), i3 && (i3 = false, this._checkIsFinished(), this.parseChunk(t2.shift()));
        } catch (e4) {
          this._streamError(e4);
        }
      }, this), this._streamError = v2(function(e3) {
        this._streamCleanUp(), this._sendError(e3);
      }, this), this._streamEnd = v2(function() {
        this._streamCleanUp(), r2 = true, this._streamData("");
      }, this), this._streamCleanUp = v2(function() {
        this._input.removeListener("data", this._streamData), this._input.removeListener("end", this._streamEnd), this._input.removeListener("error", this._streamError);
      }, this);
    }
    function i2(m3) {
      var a2, o2, h3, r2 = Math.pow(2, 53), n3 = -r2, s2 = /^\s*-?(\d+\.?|\.\d+|\d+\.\d+)([eE][-+]?\d+)?\s*$/, u3 = /^(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))$/, t2 = this, i3 = 0, f3 = 0, d3 = false, e2 = false, l3 = [], c3 = { data: [], errors: [], meta: {} };
      if (M2(m3.step)) {
        var p3 = m3.step;
        m3.step = function(e3) {
          if (c3 = e3, _3())
            g3();
          else {
            if (g3(), c3.data.length === 0)
              return;
            i3 += e3.data.length, m3.preview && i3 > m3.preview ? o2.abort() : (c3.data = c3.data[0], p3(c3, t2));
          }
        };
      }
      function y3(e3) {
        return m3.skipEmptyLines === "greedy" ? e3.join("").trim() === "" : e3.length === 1 && e3[0].length === 0;
      }
      function g3() {
        return c3 && h3 && (k2("Delimiter", "UndetectableDelimiter", "Unable to auto-detect delimiting character; defaulted to '" + b2.DefaultDelimiter + "'"), h3 = false), m3.skipEmptyLines && (c3.data = c3.data.filter(function(e3) {
          return !y3(e3);
        })), _3() && function() {
          if (!c3)
            return;
          function e3(e4, t4) {
            M2(m3.transformHeader) && (e4 = m3.transformHeader(e4, t4)), l3.push(e4);
          }
          if (Array.isArray(c3.data[0])) {
            for (var t3 = 0; _3() && t3 < c3.data.length; t3++)
              c3.data[t3].forEach(e3);
            c3.data.splice(0, 1);
          } else
            c3.data.forEach(e3);
        }(), function() {
          if (!c3 || !m3.header && !m3.dynamicTyping && !m3.transform)
            return c3;
          function e3(e4, t4) {
            var i4, r3 = m3.header ? {} : [];
            for (i4 = 0; i4 < e4.length; i4++) {
              var n4 = i4, s3 = e4[i4];
              m3.header && (n4 = i4 >= l3.length ? "__parsed_extra" : l3[i4]), m3.transform && (s3 = m3.transform(s3, n4)), s3 = v3(n4, s3), n4 === "__parsed_extra" ? (r3[n4] = r3[n4] || [], r3[n4].push(s3)) : r3[n4] = s3;
            }
            return m3.header && (i4 > l3.length ? k2("FieldMismatch", "TooManyFields", "Too many fields: expected " + l3.length + " fields but parsed " + i4, f3 + t4) : i4 < l3.length && k2("FieldMismatch", "TooFewFields", "Too few fields: expected " + l3.length + " fields but parsed " + i4, f3 + t4)), r3;
          }
          var t3 = 1;
          !c3.data.length || Array.isArray(c3.data[0]) ? (c3.data = c3.data.map(e3), t3 = c3.data.length) : c3.data = e3(c3.data, 0);
          m3.header && c3.meta && (c3.meta.fields = l3);
          return f3 += t3, c3;
        }();
      }
      function _3() {
        return m3.header && l3.length === 0;
      }
      function v3(e3, t3) {
        return i4 = e3, m3.dynamicTypingFunction && m3.dynamicTyping[i4] === void 0 && (m3.dynamicTyping[i4] = m3.dynamicTypingFunction(i4)), (m3.dynamicTyping[i4] || m3.dynamicTyping) === true ? t3 === "true" || t3 === "TRUE" || t3 !== "false" && t3 !== "FALSE" && (function(e4) {
          if (s2.test(e4)) {
            var t4 = parseFloat(e4);
            if (n3 < t4 && t4 < r2)
              return true;
          }
          return false;
        }(t3) ? parseFloat(t3) : u3.test(t3) ? new Date(t3) : t3 === "" ? null : t3) : t3;
        var i4;
      }
      function k2(e3, t3, i4, r3) {
        var n4 = { type: e3, code: t3, message: i4 };
        r3 !== void 0 && (n4.row = r3), c3.errors.push(n4);
      }
      this.parse = function(e3, t3, i4) {
        var r3 = m3.quoteChar || '"';
        if (m3.newline || (m3.newline = function(e4, t4) {
          e4 = e4.substring(0, 1048576);
          var i5 = new RegExp(j(t4) + "([^]*?)" + j(t4), "gm"), r4 = (e4 = e4.replace(i5, "")).split("\r"), n5 = e4.split("\n"), s4 = 1 < n5.length && n5[0].length < r4[0].length;
          if (r4.length === 1 || s4)
            return "\n";
          for (var a3 = 0, o3 = 0; o3 < r4.length; o3++)
            r4[o3][0] === "\n" && a3++;
          return a3 >= r4.length / 2 ? "\r\n" : "\r";
        }(e3, r3)), h3 = false, m3.delimiter)
          M2(m3.delimiter) && (m3.delimiter = m3.delimiter(e3), c3.meta.delimiter = m3.delimiter);
        else {
          var n4 = function(e4, t4, i5, r4, n5) {
            var s4, a3, o3, h4;
            n5 = n5 || [",", "	", "|", ";", b2.RECORD_SEP, b2.UNIT_SEP];
            for (var u4 = 0; u4 < n5.length; u4++) {
              var f4 = n5[u4], d4 = 0, l4 = 0, c4 = 0;
              o3 = void 0;
              for (var p4 = new E2({ comments: r4, delimiter: f4, newline: t4, preview: 10 }).parse(e4), g4 = 0; g4 < p4.data.length; g4++)
                if (i5 && y3(p4.data[g4]))
                  c4++;
                else {
                  var _4 = p4.data[g4].length;
                  l4 += _4, o3 !== void 0 ? 0 < _4 && (d4 += Math.abs(_4 - o3), o3 = _4) : o3 = _4;
                }
              0 < p4.data.length && (l4 /= p4.data.length - c4), (a3 === void 0 || d4 <= a3) && (h4 === void 0 || h4 < l4) && 1.99 < l4 && (a3 = d4, s4 = f4, h4 = l4);
            }
            return { successful: !!(m3.delimiter = s4), bestDelimiter: s4 };
          }(e3, m3.newline, m3.skipEmptyLines, m3.comments, m3.delimitersToGuess);
          n4.successful ? m3.delimiter = n4.bestDelimiter : (h3 = true, m3.delimiter = b2.DefaultDelimiter), c3.meta.delimiter = m3.delimiter;
        }
        var s3 = w2(m3);
        return m3.preview && m3.header && s3.preview++, a2 = e3, o2 = new E2(s3), c3 = o2.parse(a2, t3, i4), g3(), d3 ? { meta: { paused: true } } : c3 || { meta: { paused: false } };
      }, this.paused = function() {
        return d3;
      }, this.pause = function() {
        d3 = true, o2.abort(), a2 = M2(m3.chunk) ? "" : a2.substring(o2.getCharIndex());
      }, this.resume = function() {
        t2.streamer._halted ? (d3 = false, t2.streamer.parseChunk(a2, true)) : setTimeout(t2.resume, 3);
      }, this.aborted = function() {
        return e2;
      }, this.abort = function() {
        e2 = true, o2.abort(), c3.meta.aborted = true, M2(m3.complete) && m3.complete(c3), a2 = "";
      };
    }
    function j(e2) {
      return e2.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    }
    function E2(e2) {
      var S2, O2 = (e2 = e2 || {}).delimiter, x2 = e2.newline, I2 = e2.comments, T2 = e2.step, D2 = e2.preview, A2 = e2.fastMode, L2 = S2 = e2.quoteChar === void 0 || e2.quoteChar === null ? '"' : e2.quoteChar;
      if (e2.escapeChar !== void 0 && (L2 = e2.escapeChar), (typeof O2 != "string" || -1 < b2.BAD_DELIMITERS.indexOf(O2)) && (O2 = ","), I2 === O2)
        throw new Error("Comment character same as delimiter");
      I2 === true ? I2 = "#" : (typeof I2 != "string" || -1 < b2.BAD_DELIMITERS.indexOf(I2)) && (I2 = false), x2 !== "\n" && x2 !== "\r" && x2 !== "\r\n" && (x2 = "\n");
      var F2 = 0, z2 = false;
      this.parse = function(r2, t2, i3) {
        if (typeof r2 != "string")
          throw new Error("Input must be a string");
        var n3 = r2.length, e3 = O2.length, s2 = x2.length, a2 = I2.length, o2 = M2(T2), h3 = [], u3 = [], f3 = [], d3 = F2 = 0;
        if (!r2)
          return C2();
        if (A2 || A2 !== false && r2.indexOf(S2) === -1) {
          for (var l3 = r2.split(x2), c3 = 0; c3 < l3.length; c3++) {
            if (f3 = l3[c3], F2 += f3.length, c3 !== l3.length - 1)
              F2 += x2.length;
            else if (i3)
              return C2();
            if (!I2 || f3.substring(0, a2) !== I2) {
              if (o2) {
                if (h3 = [], k2(f3.split(O2)), R2(), z2)
                  return C2();
              } else
                k2(f3.split(O2));
              if (D2 && D2 <= c3)
                return h3 = h3.slice(0, D2), C2(true);
            }
          }
          return C2();
        }
        for (var p3 = r2.indexOf(O2, F2), g3 = r2.indexOf(x2, F2), _3 = new RegExp(j(L2) + j(S2), "g"), m3 = r2.indexOf(S2, F2); ; )
          if (r2[F2] !== S2)
            if (I2 && f3.length === 0 && r2.substring(F2, F2 + a2) === I2) {
              if (g3 === -1)
                return C2();
              F2 = g3 + s2, g3 = r2.indexOf(x2, F2), p3 = r2.indexOf(O2, F2);
            } else if (p3 !== -1 && (p3 < g3 || g3 === -1))
              f3.push(r2.substring(F2, p3)), F2 = p3 + e3, p3 = r2.indexOf(O2, F2);
            else {
              if (g3 === -1)
                break;
              if (f3.push(r2.substring(F2, g3)), w3(g3 + s2), o2 && (R2(), z2))
                return C2();
              if (D2 && h3.length >= D2)
                return C2(true);
            }
          else
            for (m3 = F2, F2++; ; ) {
              if ((m3 = r2.indexOf(S2, m3 + 1)) === -1)
                return i3 || u3.push({ type: "Quotes", code: "MissingQuotes", message: "Quoted field unterminated", row: h3.length, index: F2 }), E3();
              if (m3 === n3 - 1)
                return E3(r2.substring(F2, m3).replace(_3, S2));
              if (S2 !== L2 || r2[m3 + 1] !== L2) {
                if (S2 === L2 || m3 === 0 || r2[m3 - 1] !== L2) {
                  p3 !== -1 && p3 < m3 + 1 && (p3 = r2.indexOf(O2, m3 + 1)), g3 !== -1 && g3 < m3 + 1 && (g3 = r2.indexOf(x2, m3 + 1));
                  var y3 = b3(g3 === -1 ? p3 : Math.min(p3, g3));
                  if (r2.substr(m3 + 1 + y3, e3) === O2) {
                    f3.push(r2.substring(F2, m3).replace(_3, S2)), r2[F2 = m3 + 1 + y3 + e3] !== S2 && (m3 = r2.indexOf(S2, F2)), p3 = r2.indexOf(O2, F2), g3 = r2.indexOf(x2, F2);
                    break;
                  }
                  var v3 = b3(g3);
                  if (r2.substring(m3 + 1 + v3, m3 + 1 + v3 + s2) === x2) {
                    if (f3.push(r2.substring(F2, m3).replace(_3, S2)), w3(m3 + 1 + v3 + s2), p3 = r2.indexOf(O2, F2), m3 = r2.indexOf(S2, F2), o2 && (R2(), z2))
                      return C2();
                    if (D2 && h3.length >= D2)
                      return C2(true);
                    break;
                  }
                  u3.push({ type: "Quotes", code: "InvalidQuotes", message: "Trailing quote on quoted field is malformed", row: h3.length, index: F2 }), m3++;
                }
              } else
                m3++;
            }
        return E3();
        function k2(e4) {
          h3.push(e4), d3 = F2;
        }
        function b3(e4) {
          var t3 = 0;
          if (e4 !== -1) {
            var i4 = r2.substring(m3 + 1, e4);
            i4 && i4.trim() === "" && (t3 = i4.length);
          }
          return t3;
        }
        function E3(e4) {
          return i3 || (e4 === void 0 && (e4 = r2.substring(F2)), f3.push(e4), F2 = n3, k2(f3), o2 && R2()), C2();
        }
        function w3(e4) {
          F2 = e4, k2(f3), f3 = [], g3 = r2.indexOf(x2, F2);
        }
        function C2(e4) {
          return { data: h3, errors: u3, meta: { delimiter: O2, linebreak: x2, aborted: z2, truncated: !!e4, cursor: d3 + (t2 || 0) } };
        }
        function R2() {
          T2(C2()), h3 = [], u3 = [];
        }
      }, this.abort = function() {
        z2 = true;
      }, this.getCharIndex = function() {
        return F2;
      };
    }
    function _2(e2) {
      var t2 = e2.data, i3 = a[t2.workerId], r2 = false;
      if (t2.error)
        i3.userError(t2.error, t2.file);
      else if (t2.results && t2.results.data) {
        var n3 = { abort: function() {
          r2 = true, m2(t2.workerId, { data: [], errors: [], meta: { aborted: true } });
        }, pause: y2, resume: y2 };
        if (M2(i3.userStep)) {
          for (var s2 = 0; s2 < t2.results.data.length && (i3.userStep({ data: t2.results.data[s2], errors: t2.results.errors, meta: t2.results.meta }, n3), !r2); s2++)
            ;
          delete t2.results;
        } else
          M2(i3.userChunk) && (i3.userChunk(t2.results, n3, t2.file), delete t2.results);
      }
      t2.finished && !r2 && m2(t2.workerId, t2.results);
    }
    function m2(e2, t2) {
      var i3 = a[e2];
      M2(i3.userComplete) && i3.userComplete(t2), i3.terminate(), delete a[e2];
    }
    function y2() {
      throw new Error("Not implemented.");
    }
    function w2(e2) {
      if (typeof e2 != "object" || e2 === null)
        return e2;
      var t2 = Array.isArray(e2) ? [] : {};
      for (var i3 in e2)
        t2[i3] = w2(e2[i3]);
      return t2;
    }
    function v2(e2, t2) {
      return function() {
        e2.apply(t2, arguments);
      };
    }
    function M2(e2) {
      return typeof e2 == "function";
    }
    return o && (f2.onmessage = function(e2) {
      var t2 = e2.data;
      b2.WORKER_ID === void 0 && t2 && (b2.WORKER_ID = t2.workerId);
      if (typeof t2.input == "string")
        f2.postMessage({ workerId: b2.WORKER_ID, results: b2.parse(t2.input, t2.config), finished: true });
      else if (f2.File && t2.input instanceof File || t2.input instanceof Object) {
        var i3 = b2.parse(t2.input, t2.config);
        i3 && f2.postMessage({ workerId: b2.WORKER_ID, results: i3, finished: true });
      }
    }), (l2.prototype = Object.create(u2.prototype)).constructor = l2, (c2.prototype = Object.create(u2.prototype)).constructor = c2, (p2.prototype = Object.create(p2.prototype)).constructor = p2, (g2.prototype = Object.create(u2.prototype)).constructor = g2, b2;
  });
})(papaparse_min);
var Papa = papaparse_min.exports;
function parseMetrics(csv) {
  const parsed = Papa.parse(csv, {
    header: true,
    skipEmptyLines: true,
    dynamicTyping: true
  });
  return {
    header: parsed.meta.fields,
    rows: parsed.data
  };
}
const common = {
  black: "#000",
  white: "#fff"
};
var common$1 = common;
const red = {
  50: "#ffebee",
  100: "#ffcdd2",
  200: "#ef9a9a",
  300: "#e57373",
  400: "#ef5350",
  500: "#f44336",
  600: "#e53935",
  700: "#d32f2f",
  800: "#c62828",
  900: "#b71c1c",
  A100: "#ff8a80",
  A200: "#ff5252",
  A400: "#ff1744",
  A700: "#d50000"
};
var red$1 = red;
const purple = {
  50: "#f3e5f5",
  100: "#e1bee7",
  200: "#ce93d8",
  300: "#ba68c8",
  400: "#ab47bc",
  500: "#9c27b0",
  600: "#8e24aa",
  700: "#7b1fa2",
  800: "#6a1b9a",
  900: "#4a148c",
  A100: "#ea80fc",
  A200: "#e040fb",
  A400: "#d500f9",
  A700: "#aa00ff"
};
var purple$1 = purple;
const blue = {
  50: "#e3f2fd",
  100: "#bbdefb",
  200: "#90caf9",
  300: "#64b5f6",
  400: "#42a5f5",
  500: "#2196f3",
  600: "#1e88e5",
  700: "#1976d2",
  800: "#1565c0",
  900: "#0d47a1",
  A100: "#82b1ff",
  A200: "#448aff",
  A400: "#2979ff",
  A700: "#2962ff"
};
var blue$1 = blue;
const lightBlue = {
  50: "#e1f5fe",
  100: "#b3e5fc",
  200: "#81d4fa",
  300: "#4fc3f7",
  400: "#29b6f6",
  500: "#03a9f4",
  600: "#039be5",
  700: "#0288d1",
  800: "#0277bd",
  900: "#01579b",
  A100: "#80d8ff",
  A200: "#40c4ff",
  A400: "#00b0ff",
  A700: "#0091ea"
};
var lightBlue$1 = lightBlue;
const green = {
  50: "#e8f5e9",
  100: "#c8e6c9",
  200: "#a5d6a7",
  300: "#81c784",
  400: "#66bb6a",
  500: "#4caf50",
  600: "#43a047",
  700: "#388e3c",
  800: "#2e7d32",
  900: "#1b5e20",
  A100: "#b9f6ca",
  A200: "#69f0ae",
  A400: "#00e676",
  A700: "#00c853"
};
var green$1 = green;
const orange = {
  50: "#fff3e0",
  100: "#ffe0b2",
  200: "#ffcc80",
  300: "#ffb74d",
  400: "#ffa726",
  500: "#ff9800",
  600: "#fb8c00",
  700: "#f57c00",
  800: "#ef6c00",
  900: "#e65100",
  A100: "#ffd180",
  A200: "#ffab40",
  A400: "#ff9100",
  A700: "#ff6d00"
};
var orange$1 = orange;
const grey = {
  50: "#fafafa",
  100: "#f5f5f5",
  200: "#eeeeee",
  300: "#e0e0e0",
  400: "#bdbdbd",
  500: "#9e9e9e",
  600: "#757575",
  700: "#616161",
  800: "#424242",
  900: "#212121",
  A100: "#f5f5f5",
  A200: "#eeeeee",
  A400: "#bdbdbd",
  A700: "#616161"
};
var grey$1 = grey;
function _extends$1() {
  _extends$1 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends$1.apply(this, arguments);
}
function _objectWithoutPropertiesLoose$2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function memoize$1(fn) {
  var cache = /* @__PURE__ */ Object.create(null);
  return function(arg) {
    if (cache[arg] === void 0)
      cache[arg] = fn(arg);
    return cache[arg];
  };
}
var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
var isPropValid = /* @__PURE__ */ memoize$1(function(prop) {
  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
});
function sheetForTag(tag) {
  if (tag.sheet) {
    return tag.sheet;
  }
  for (var i2 = 0; i2 < document.styleSheets.length; i2++) {
    if (document.styleSheets[i2].ownerNode === tag) {
      return document.styleSheets[i2];
    }
  }
}
function createStyleElement(options) {
  var tag = document.createElement("style");
  tag.setAttribute("data-emotion", options.key);
  if (options.nonce !== void 0) {
    tag.setAttribute("nonce", options.nonce);
  }
  tag.appendChild(document.createTextNode(""));
  tag.setAttribute("data-s", "");
  return tag;
}
var StyleSheet = /* @__PURE__ */ function() {
  function StyleSheet2(options) {
    var _this = this;
    this._insertTag = function(tag) {
      var before;
      if (_this.tags.length === 0) {
        if (_this.insertionPoint) {
          before = _this.insertionPoint.nextSibling;
        } else if (_this.prepend) {
          before = _this.container.firstChild;
        } else {
          before = _this.before;
        }
      } else {
        before = _this.tags[_this.tags.length - 1].nextSibling;
      }
      _this.container.insertBefore(tag, before);
      _this.tags.push(tag);
    };
    this.isSpeedy = options.speedy === void 0 ? true : options.speedy;
    this.tags = [];
    this.ctr = 0;
    this.nonce = options.nonce;
    this.key = options.key;
    this.container = options.container;
    this.prepend = options.prepend;
    this.insertionPoint = options.insertionPoint;
    this.before = null;
  }
  var _proto = StyleSheet2.prototype;
  _proto.hydrate = function hydrate(nodes) {
    nodes.forEach(this._insertTag);
  };
  _proto.insert = function insert2(rule) {
    if (this.ctr % (this.isSpeedy ? 65e3 : 1) === 0) {
      this._insertTag(createStyleElement(this));
    }
    var tag = this.tags[this.tags.length - 1];
    if (this.isSpeedy) {
      var sheet = sheetForTag(tag);
      try {
        sheet.insertRule(rule, sheet.cssRules.length);
      } catch (e2) {
      }
    } else {
      tag.appendChild(document.createTextNode(rule));
    }
    this.ctr++;
  };
  _proto.flush = function flush() {
    this.tags.forEach(function(tag) {
      return tag.parentNode && tag.parentNode.removeChild(tag);
    });
    this.tags = [];
    this.ctr = 0;
  };
  return StyleSheet2;
}();
var MS = "-ms-";
var MOZ = "-moz-";
var WEBKIT = "-webkit-";
var COMMENT = "comm";
var RULESET = "rule";
var DECLARATION = "decl";
var IMPORT = "@import";
var KEYFRAMES = "@keyframes";
var abs = Math.abs;
var from$1 = String.fromCharCode;
var assign = Object.assign;
function hash(value, length2) {
  return (((length2 << 2 ^ charat(value, 0)) << 2 ^ charat(value, 1)) << 2 ^ charat(value, 2)) << 2 ^ charat(value, 3);
}
function trim$1(value) {
  return value.trim();
}
function match(value, pattern) {
  return (value = pattern.exec(value)) ? value[0] : value;
}
function replace(value, pattern, replacement) {
  return value.replace(pattern, replacement);
}
function indexof(value, search) {
  return value.indexOf(search);
}
function charat(value, index) {
  return value.charCodeAt(index) | 0;
}
function substr(value, begin, end) {
  return value.slice(begin, end);
}
function strlen(value) {
  return value.length;
}
function sizeof(value) {
  return value.length;
}
function append(value, array) {
  return array.push(value), value;
}
function combine(array, callback) {
  return array.map(callback).join("");
}
var line = 1;
var column = 1;
var length = 0;
var position$1 = 0;
var character = 0;
var characters = "";
function node(value, root, parent, type, props, children, length2) {
  return { value, root, parent, type, props, children, line, column, length: length2, return: "" };
}
function copy(root, props) {
  return assign(node("", null, null, "", null, null, 0), root, { length: -root.length }, props);
}
function char() {
  return character;
}
function prev() {
  character = position$1 > 0 ? charat(characters, --position$1) : 0;
  if (column--, character === 10)
    column = 1, line--;
  return character;
}
function next() {
  character = position$1 < length ? charat(characters, position$1++) : 0;
  if (column++, character === 10)
    column = 1, line++;
  return character;
}
function peek() {
  return charat(characters, position$1);
}
function caret() {
  return position$1;
}
function slice(begin, end) {
  return substr(characters, begin, end);
}
function token(type) {
  switch (type) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function alloc(value) {
  return line = column = 1, length = strlen(characters = value), position$1 = 0, [];
}
function dealloc(value) {
  return characters = "", value;
}
function delimit(type) {
  return trim$1(slice(position$1 - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)));
}
function whitespace(type) {
  while (character = peek())
    if (character < 33)
      next();
    else
      break;
  return token(type) > 2 || token(character) > 3 ? "" : " ";
}
function escaping(index, count) {
  while (--count && next())
    if (character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97)
      break;
  return slice(index, caret() + (count < 6 && peek() == 32 && next() == 32));
}
function delimiter(type) {
  while (next())
    switch (character) {
      case type:
        return position$1;
      case 34:
      case 39:
        if (type !== 34 && type !== 39)
          delimiter(character);
        break;
      case 40:
        if (type === 41)
          delimiter(type);
        break;
      case 92:
        next();
        break;
    }
  return position$1;
}
function commenter(type, index) {
  while (next())
    if (type + character === 47 + 10)
      break;
    else if (type + character === 42 + 42 && peek() === 47)
      break;
  return "/*" + slice(index, position$1 - 1) + "*" + from$1(type === 47 ? type : next());
}
function identifier(index) {
  while (!token(peek()))
    next();
  return slice(index, position$1);
}
function compile(value) {
  return dealloc(parse$1("", null, null, null, [""], value = alloc(value), 0, [0], value));
}
function parse$1(value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {
  var index = 0;
  var offset = 0;
  var length2 = pseudo;
  var atrule = 0;
  var property = 0;
  var previous = 0;
  var variable = 1;
  var scanning = 1;
  var ampersand = 1;
  var character2 = 0;
  var type = "";
  var props = rules;
  var children = rulesets;
  var reference = rule;
  var characters2 = type;
  while (scanning)
    switch (previous = character2, character2 = next()) {
      case 40:
        if (previous != 108 && characters2.charCodeAt(length2 - 1) == 58) {
          if (indexof(characters2 += replace(delimit(character2), "&", "&\f"), "&\f") != -1)
            ampersand = -1;
          break;
        }
      case 34:
      case 39:
      case 91:
        characters2 += delimit(character2);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        characters2 += whitespace(previous);
        break;
      case 92:
        characters2 += escaping(caret() - 1, 7);
        continue;
      case 47:
        switch (peek()) {
          case 42:
          case 47:
            append(comment(commenter(next(), caret()), root, parent), declarations);
            break;
          default:
            characters2 += "/";
        }
        break;
      case 123 * variable:
        points[index++] = strlen(characters2) * ampersand;
      case 125 * variable:
      case 59:
      case 0:
        switch (character2) {
          case 0:
          case 125:
            scanning = 0;
          case 59 + offset:
            if (property > 0 && strlen(characters2) - length2)
              append(property > 32 ? declaration(characters2 + ";", rule, parent, length2 - 1) : declaration(replace(characters2, " ", "") + ";", rule, parent, length2 - 2), declarations);
            break;
          case 59:
            characters2 += ";";
          default:
            append(reference = ruleset(characters2, root, parent, index, offset, rules, points, type, props = [], children = [], length2), rulesets);
            if (character2 === 123)
              if (offset === 0)
                parse$1(characters2, root, reference, reference, props, rulesets, length2, points, children);
              else
                switch (atrule) {
                  case 100:
                  case 109:
                  case 115:
                    parse$1(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length2), children), rules, children, length2, points, rule ? props : children);
                    break;
                  default:
                    parse$1(characters2, reference, reference, reference, [""], children, 0, points, children);
                }
        }
        index = offset = property = 0, variable = ampersand = 1, type = characters2 = "", length2 = pseudo;
        break;
      case 58:
        length2 = 1 + strlen(characters2), property = previous;
      default:
        if (variable < 1) {
          if (character2 == 123)
            --variable;
          else if (character2 == 125 && variable++ == 0 && prev() == 125)
            continue;
        }
        switch (characters2 += from$1(character2), character2 * variable) {
          case 38:
            ampersand = offset > 0 ? 1 : (characters2 += "\f", -1);
            break;
          case 44:
            points[index++] = (strlen(characters2) - 1) * ampersand, ampersand = 1;
            break;
          case 64:
            if (peek() === 45)
              characters2 += delimit(next());
            atrule = peek(), offset = length2 = strlen(type = characters2 += identifier(caret())), character2++;
            break;
          case 45:
            if (previous === 45 && strlen(characters2) == 2)
              variable = 0;
        }
    }
  return rulesets;
}
function ruleset(value, root, parent, index, offset, rules, points, type, props, children, length2) {
  var post = offset - 1;
  var rule = offset === 0 ? rules : [""];
  var size = sizeof(rule);
  for (var i2 = 0, j = 0, k2 = 0; i2 < index; ++i2)
    for (var x2 = 0, y2 = substr(value, post + 1, post = abs(j = points[i2])), z2 = value; x2 < size; ++x2)
      if (z2 = trim$1(j > 0 ? rule[x2] + " " + y2 : replace(y2, /&\f/g, rule[x2])))
        props[k2++] = z2;
  return node(value, root, parent, offset === 0 ? RULESET : type, props, children, length2);
}
function comment(value, root, parent) {
  return node(value, root, parent, COMMENT, from$1(char()), substr(value, 2, -2), 0);
}
function declaration(value, root, parent, length2) {
  return node(value, root, parent, DECLARATION, substr(value, 0, length2), substr(value, length2 + 1, -1), length2);
}
function prefix(value, length2) {
  switch (hash(value, length2)) {
    case 5103:
      return WEBKIT + "print-" + value + value;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return WEBKIT + value + value;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return WEBKIT + value + MOZ + value + MS + value + value;
    case 6828:
    case 4268:
      return WEBKIT + value + MS + value + value;
    case 6165:
      return WEBKIT + value + MS + "flex-" + value + value;
    case 5187:
      return WEBKIT + value + replace(value, /(\w+).+(:[^]+)/, WEBKIT + "box-$1$2" + MS + "flex-$1$2") + value;
    case 5443:
      return WEBKIT + value + MS + "flex-item-" + replace(value, /flex-|-self/, "") + value;
    case 4675:
      return WEBKIT + value + MS + "flex-line-pack" + replace(value, /align-content|flex-|-self/, "") + value;
    case 5548:
      return WEBKIT + value + MS + replace(value, "shrink", "negative") + value;
    case 5292:
      return WEBKIT + value + MS + replace(value, "basis", "preferred-size") + value;
    case 6060:
      return WEBKIT + "box-" + replace(value, "-grow", "") + WEBKIT + value + MS + replace(value, "grow", "positive") + value;
    case 4554:
      return WEBKIT + replace(value, /([^-])(transform)/g, "$1" + WEBKIT + "$2") + value;
    case 6187:
      return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + "$1"), /(image-set)/, WEBKIT + "$1"), value, "") + value;
    case 5495:
    case 3959:
      return replace(value, /(image-set\([^]*)/, WEBKIT + "$1$`$1");
    case 4968:
      return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + "box-pack:$3" + MS + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + WEBKIT + value + value;
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return replace(value, /(.+)-inline(.+)/, WEBKIT + "$1$2") + value;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (strlen(value) - 1 - length2 > 6)
        switch (charat(value, length2 + 1)) {
          case 109:
            if (charat(value, length2 + 4) !== 45)
              break;
          case 102:
            return replace(value, /(.+:)(.+)-([^]+)/, "$1" + WEBKIT + "$2-$3$1" + MOZ + (charat(value, length2 + 3) == 108 ? "$3" : "$2-$3")) + value;
          case 115:
            return ~indexof(value, "stretch") ? prefix(replace(value, "stretch", "fill-available"), length2) + value : value;
        }
      break;
    case 4949:
      if (charat(value, length2 + 1) !== 115)
        break;
    case 6444:
      switch (charat(value, strlen(value) - 3 - (~indexof(value, "!important") && 10))) {
        case 107:
          return replace(value, ":", ":" + WEBKIT) + value;
        case 101:
          return replace(value, /(.+:)([^;!]+)(;|!.+)?/, "$1" + WEBKIT + (charat(value, 14) === 45 ? "inline-" : "") + "box$3$1" + WEBKIT + "$2$3$1" + MS + "$2box$3") + value;
      }
      break;
    case 5936:
      switch (charat(value, length2 + 11)) {
        case 114:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "tb") + value;
        case 108:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "tb-rl") + value;
        case 45:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "lr") + value;
      }
      return WEBKIT + value + MS + value + value;
  }
  return value;
}
function serialize(children, callback) {
  var output = "";
  var length2 = sizeof(children);
  for (var i2 = 0; i2 < length2; i2++)
    output += callback(children[i2], i2, children, callback) || "";
  return output;
}
function stringify(element, index, children, callback) {
  switch (element.type) {
    case IMPORT:
    case DECLARATION:
      return element.return = element.return || element.value;
    case COMMENT:
      return "";
    case KEYFRAMES:
      return element.return = element.value + "{" + serialize(element.children, callback) + "}";
    case RULESET:
      element.value = element.props.join(",");
  }
  return strlen(children = serialize(element.children, callback)) ? element.return = element.value + "{" + children + "}" : "";
}
function middleware$2(collection) {
  var length2 = sizeof(collection);
  return function(element, index, children, callback) {
    var output = "";
    for (var i2 = 0; i2 < length2; i2++)
      output += collection[i2](element, index, children, callback) || "";
    return output;
  };
}
function rulesheet(callback) {
  return function(element) {
    if (!element.root) {
      if (element = element.return)
        callback(element);
    }
  };
}
function prefixer(element, index, children, callback) {
  if (element.length > -1) {
    if (!element.return)
      switch (element.type) {
        case DECLARATION:
          element.return = prefix(element.value, element.length);
          break;
        case KEYFRAMES:
          return serialize([copy(element, { value: replace(element.value, "@", "@" + WEBKIT) })], callback);
        case RULESET:
          if (element.length)
            return combine(element.props, function(value) {
              switch (match(value, /(::plac\w+|:read-\w+)/)) {
                case ":read-only":
                case ":read-write":
                  return serialize([copy(element, { props: [replace(value, /:(read-\w+)/, ":" + MOZ + "$1")] })], callback);
                case "::placeholder":
                  return serialize([
                    copy(element, { props: [replace(value, /:(plac\w+)/, ":" + WEBKIT + "input-$1")] }),
                    copy(element, { props: [replace(value, /:(plac\w+)/, ":" + MOZ + "$1")] }),
                    copy(element, { props: [replace(value, /:(plac\w+)/, MS + "input-$1")] })
                  ], callback);
              }
              return "";
            });
      }
  }
}
var identifierWithPointTracking = function identifierWithPointTracking2(begin, points, index) {
  var previous = 0;
  var character2 = 0;
  while (true) {
    previous = character2;
    character2 = peek();
    if (previous === 38 && character2 === 12) {
      points[index] = 1;
    }
    if (token(character2)) {
      break;
    }
    next();
  }
  return slice(begin, position$1);
};
var toRules = function toRules2(parsed, points) {
  var index = -1;
  var character2 = 44;
  do {
    switch (token(character2)) {
      case 0:
        if (character2 === 38 && peek() === 12) {
          points[index] = 1;
        }
        parsed[index] += identifierWithPointTracking(position$1 - 1, points, index);
        break;
      case 2:
        parsed[index] += delimit(character2);
        break;
      case 4:
        if (character2 === 44) {
          parsed[++index] = peek() === 58 ? "&\f" : "";
          points[index] = parsed[index].length;
          break;
        }
      default:
        parsed[index] += from$1(character2);
    }
  } while (character2 = next());
  return parsed;
};
var getRules = function getRules2(value, points) {
  return dealloc(toRules(alloc(value), points));
};
var fixedElements = /* @__PURE__ */ new WeakMap();
var compat = function compat2(element) {
  if (element.type !== "rule" || !element.parent || element.length < 1) {
    return;
  }
  var value = element.value, parent = element.parent;
  var isImplicitRule = element.column === parent.column && element.line === parent.line;
  while (parent.type !== "rule") {
    parent = parent.parent;
    if (!parent)
      return;
  }
  if (element.props.length === 1 && value.charCodeAt(0) !== 58 && !fixedElements.get(parent)) {
    return;
  }
  if (isImplicitRule) {
    return;
  }
  fixedElements.set(element, true);
  var points = [];
  var rules = getRules(value, points);
  var parentRules = parent.props;
  for (var i2 = 0, k2 = 0; i2 < rules.length; i2++) {
    for (var j = 0; j < parentRules.length; j++, k2++) {
      element.props[k2] = points[i2] ? rules[i2].replace(/&\f/g, parentRules[j]) : parentRules[j] + " " + rules[i2];
    }
  }
};
var removeLabel = function removeLabel2(element) {
  if (element.type === "decl") {
    var value = element.value;
    if (value.charCodeAt(0) === 108 && value.charCodeAt(2) === 98) {
      element["return"] = "";
      element.value = "";
    }
  }
};
var defaultStylisPlugins = [prefixer];
var createCache = function createCache2(options) {
  var key = options.key;
  if (key === "css") {
    var ssrStyles = document.querySelectorAll("style[data-emotion]:not([data-s])");
    Array.prototype.forEach.call(ssrStyles, function(node2) {
      var dataEmotionAttribute = node2.getAttribute("data-emotion");
      if (dataEmotionAttribute.indexOf(" ") === -1) {
        return;
      }
      document.head.appendChild(node2);
      node2.setAttribute("data-s", "");
    });
  }
  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;
  var inserted = {};
  var container;
  var nodesToHydrate = [];
  {
    container = options.container || document.head;
    Array.prototype.forEach.call(document.querySelectorAll('style[data-emotion^="' + key + ' "]'), function(node2) {
      var attrib = node2.getAttribute("data-emotion").split(" ");
      for (var i2 = 1; i2 < attrib.length; i2++) {
        inserted[attrib[i2]] = true;
      }
      nodesToHydrate.push(node2);
    });
  }
  var _insert;
  var omnipresentPlugins = [compat, removeLabel];
  {
    var currentSheet;
    var finalizingPlugins = [stringify, rulesheet(function(rule) {
      currentSheet.insert(rule);
    })];
    var serializer = middleware$2(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));
    var stylis = function stylis2(styles) {
      return serialize(compile(styles), serializer);
    };
    _insert = function insert2(selector, serialized, sheet, shouldCache) {
      currentSheet = sheet;
      stylis(selector ? selector + "{" + serialized.styles + "}" : serialized.styles);
      if (shouldCache) {
        cache.inserted[serialized.name] = true;
      }
    };
  }
  var cache = {
    key,
    sheet: new StyleSheet({
      key,
      container,
      nonce: options.nonce,
      speedy: options.speedy,
      prepend: options.prepend,
      insertionPoint: options.insertionPoint
    }),
    nonce: options.nonce,
    inserted,
    registered: {},
    insert: _insert
  };
  cache.sheet.hydrate(nodesToHydrate);
  return cache;
};
var reactIs$1 = { exports: {} };
var reactIs_production_min = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b = typeof Symbol === "function" && Symbol.for, c = b ? Symbol.for("react.element") : 60103, d = b ? Symbol.for("react.portal") : 60106, e = b ? Symbol.for("react.fragment") : 60107, f$1 = b ? Symbol.for("react.strict_mode") : 60108, g = b ? Symbol.for("react.profiler") : 60114, h = b ? Symbol.for("react.provider") : 60109, k$1 = b ? Symbol.for("react.context") : 60110, l$1 = b ? Symbol.for("react.async_mode") : 60111, m$1 = b ? Symbol.for("react.concurrent_mode") : 60111, n$1 = b ? Symbol.for("react.forward_ref") : 60112, p$1 = b ? Symbol.for("react.suspense") : 60113, q$1 = b ? Symbol.for("react.suspense_list") : 60120, r = b ? Symbol.for("react.memo") : 60115, t = b ? Symbol.for("react.lazy") : 60116, v = b ? Symbol.for("react.block") : 60121, w = b ? Symbol.for("react.fundamental") : 60117, x = b ? Symbol.for("react.responder") : 60118, y = b ? Symbol.for("react.scope") : 60119;
function z(a) {
  if (typeof a === "object" && a !== null) {
    var u2 = a.$$typeof;
    switch (u2) {
      case c:
        switch (a = a.type, a) {
          case l$1:
          case m$1:
          case e:
          case g:
          case f$1:
          case p$1:
            return a;
          default:
            switch (a = a && a.$$typeof, a) {
              case k$1:
              case n$1:
              case t:
              case r:
              case h:
                return a;
              default:
                return u2;
            }
        }
      case d:
        return u2;
    }
  }
}
function A(a) {
  return z(a) === m$1;
}
reactIs_production_min.AsyncMode = l$1;
reactIs_production_min.ConcurrentMode = m$1;
reactIs_production_min.ContextConsumer = k$1;
reactIs_production_min.ContextProvider = h;
reactIs_production_min.Element = c;
reactIs_production_min.ForwardRef = n$1;
reactIs_production_min.Fragment = e;
reactIs_production_min.Lazy = t;
reactIs_production_min.Memo = r;
reactIs_production_min.Portal = d;
reactIs_production_min.Profiler = g;
reactIs_production_min.StrictMode = f$1;
reactIs_production_min.Suspense = p$1;
reactIs_production_min.isAsyncMode = function(a) {
  return A(a) || z(a) === l$1;
};
reactIs_production_min.isConcurrentMode = A;
reactIs_production_min.isContextConsumer = function(a) {
  return z(a) === k$1;
};
reactIs_production_min.isContextProvider = function(a) {
  return z(a) === h;
};
reactIs_production_min.isElement = function(a) {
  return typeof a === "object" && a !== null && a.$$typeof === c;
};
reactIs_production_min.isForwardRef = function(a) {
  return z(a) === n$1;
};
reactIs_production_min.isFragment = function(a) {
  return z(a) === e;
};
reactIs_production_min.isLazy = function(a) {
  return z(a) === t;
};
reactIs_production_min.isMemo = function(a) {
  return z(a) === r;
};
reactIs_production_min.isPortal = function(a) {
  return z(a) === d;
};
reactIs_production_min.isProfiler = function(a) {
  return z(a) === g;
};
reactIs_production_min.isStrictMode = function(a) {
  return z(a) === f$1;
};
reactIs_production_min.isSuspense = function(a) {
  return z(a) === p$1;
};
reactIs_production_min.isValidElementType = function(a) {
  return typeof a === "string" || typeof a === "function" || a === e || a === m$1 || a === g || a === f$1 || a === p$1 || a === q$1 || typeof a === "object" && a !== null && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k$1 || a.$$typeof === n$1 || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);
};
reactIs_production_min.typeOf = z;
{
  reactIs$1.exports = reactIs_production_min;
}
var reactIs = reactIs$1.exports;
var FORWARD_REF_STATICS = {
  "$$typeof": true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  "$$typeof": true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;
var isBrowser = true;
function getRegisteredStyles(registered, registeredStyles, classNames) {
  var rawClassName = "";
  classNames.split(" ").forEach(function(className) {
    if (registered[className] !== void 0) {
      registeredStyles.push(registered[className] + ";");
    } else {
      rawClassName += className + " ";
    }
  });
  return rawClassName;
}
var registerStyles = function registerStyles2(cache, serialized, isStringTag) {
  var className = cache.key + "-" + serialized.name;
  if ((isStringTag === false || isBrowser === false) && cache.registered[className] === void 0) {
    cache.registered[className] = serialized.styles;
  }
};
var insertStyles = function insertStyles2(cache, serialized, isStringTag) {
  registerStyles(cache, serialized, isStringTag);
  var className = cache.key + "-" + serialized.name;
  if (cache.inserted[serialized.name] === void 0) {
    var current = serialized;
    do {
      cache.insert(serialized === current ? "." + className : "", current, cache.sheet, true);
      current = current.next;
    } while (current !== void 0);
  }
};
function murmur2(str) {
  var h2 = 0;
  var k2, i2 = 0, len2 = str.length;
  for (; len2 >= 4; ++i2, len2 -= 4) {
    k2 = str.charCodeAt(i2) & 255 | (str.charCodeAt(++i2) & 255) << 8 | (str.charCodeAt(++i2) & 255) << 16 | (str.charCodeAt(++i2) & 255) << 24;
    k2 = (k2 & 65535) * 1540483477 + ((k2 >>> 16) * 59797 << 16);
    k2 ^= k2 >>> 24;
    h2 = (k2 & 65535) * 1540483477 + ((k2 >>> 16) * 59797 << 16) ^ (h2 & 65535) * 1540483477 + ((h2 >>> 16) * 59797 << 16);
  }
  switch (len2) {
    case 3:
      h2 ^= (str.charCodeAt(i2 + 2) & 255) << 16;
    case 2:
      h2 ^= (str.charCodeAt(i2 + 1) & 255) << 8;
    case 1:
      h2 ^= str.charCodeAt(i2) & 255;
      h2 = (h2 & 65535) * 1540483477 + ((h2 >>> 16) * 59797 << 16);
  }
  h2 ^= h2 >>> 13;
  h2 = (h2 & 65535) * 1540483477 + ((h2 >>> 16) * 59797 << 16);
  return ((h2 ^ h2 >>> 15) >>> 0).toString(36);
}
var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};
var hyphenateRegex = /[A-Z]|^ms/g;
var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;
var isCustomProperty = function isCustomProperty2(property) {
  return property.charCodeAt(1) === 45;
};
var isProcessableValue = function isProcessableValue2(value) {
  return value != null && typeof value !== "boolean";
};
var processStyleName = /* @__PURE__ */ memoize$1(function(styleName) {
  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, "-$&").toLowerCase();
});
var processStyleValue = function processStyleValue2(key, value) {
  switch (key) {
    case "animation":
    case "animationName": {
      if (typeof value === "string") {
        return value.replace(animationRegex, function(match2, p1, p2) {
          cursor = {
            name: p1,
            styles: p2,
            next: cursor
          };
          return p1;
        });
      }
    }
  }
  if (unitlessKeys[key] !== 1 && !isCustomProperty(key) && typeof value === "number" && value !== 0) {
    return value + "px";
  }
  return value;
};
var noComponentSelectorMessage = "Component selectors can only be used in conjunction with @emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware compiler transform.";
function handleInterpolation(mergedProps, registered, interpolation) {
  if (interpolation == null) {
    return "";
  }
  if (interpolation.__emotion_styles !== void 0) {
    return interpolation;
  }
  switch (typeof interpolation) {
    case "boolean": {
      return "";
    }
    case "object": {
      if (interpolation.anim === 1) {
        cursor = {
          name: interpolation.name,
          styles: interpolation.styles,
          next: cursor
        };
        return interpolation.name;
      }
      if (interpolation.styles !== void 0) {
        var next2 = interpolation.next;
        if (next2 !== void 0) {
          while (next2 !== void 0) {
            cursor = {
              name: next2.name,
              styles: next2.styles,
              next: cursor
            };
            next2 = next2.next;
          }
        }
        var styles = interpolation.styles + ";";
        return styles;
      }
      return createStringFromObject(mergedProps, registered, interpolation);
    }
    case "function": {
      if (mergedProps !== void 0) {
        var previousCursor = cursor;
        var result = interpolation(mergedProps);
        cursor = previousCursor;
        return handleInterpolation(mergedProps, registered, result);
      }
      break;
    }
  }
  if (registered == null) {
    return interpolation;
  }
  var cached = registered[interpolation];
  return cached !== void 0 ? cached : interpolation;
}
function createStringFromObject(mergedProps, registered, obj) {
  var string = "";
  if (Array.isArray(obj)) {
    for (var i2 = 0; i2 < obj.length; i2++) {
      string += handleInterpolation(mergedProps, registered, obj[i2]) + ";";
    }
  } else {
    for (var _key in obj) {
      var value = obj[_key];
      if (typeof value !== "object") {
        if (registered != null && registered[value] !== void 0) {
          string += _key + "{" + registered[value] + "}";
        } else if (isProcessableValue(value)) {
          string += processStyleName(_key) + ":" + processStyleValue(_key, value) + ";";
        }
      } else {
        if (_key === "NO_COMPONENT_SELECTOR" && false) {
          throw new Error(noComponentSelectorMessage);
        }
        if (Array.isArray(value) && typeof value[0] === "string" && (registered == null || registered[value[0]] === void 0)) {
          for (var _i = 0; _i < value.length; _i++) {
            if (isProcessableValue(value[_i])) {
              string += processStyleName(_key) + ":" + processStyleValue(_key, value[_i]) + ";";
            }
          }
        } else {
          var interpolated = handleInterpolation(mergedProps, registered, value);
          switch (_key) {
            case "animation":
            case "animationName": {
              string += processStyleName(_key) + ":" + interpolated + ";";
              break;
            }
            default: {
              string += _key + "{" + interpolated + "}";
            }
          }
        }
      }
    }
  }
  return string;
}
var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
var cursor;
var serializeStyles = function serializeStyles2(args, registered, mergedProps) {
  if (args.length === 1 && typeof args[0] === "object" && args[0] !== null && args[0].styles !== void 0) {
    return args[0];
  }
  var stringMode = true;
  var styles = "";
  cursor = void 0;
  var strings = args[0];
  if (strings == null || strings.raw === void 0) {
    stringMode = false;
    styles += handleInterpolation(mergedProps, registered, strings);
  } else {
    styles += strings[0];
  }
  for (var i2 = 1; i2 < args.length; i2++) {
    styles += handleInterpolation(mergedProps, registered, args[i2]);
    if (stringMode) {
      styles += strings[i2];
    }
  }
  labelPattern.lastIndex = 0;
  var identifierName = "";
  var match2;
  while ((match2 = labelPattern.exec(styles)) !== null) {
    identifierName += "-" + match2[1];
  }
  var name = murmur2(styles) + identifierName;
  return {
    name,
    styles,
    next: cursor
  };
};
var EmotionCacheContext = /* @__PURE__ */ react.exports.createContext(typeof HTMLElement !== "undefined" ? /* @__PURE__ */ createCache({
  key: "css"
}) : null);
EmotionCacheContext.Provider;
var withEmotionCache = function withEmotionCache2(func) {
  return /* @__PURE__ */ react.exports.forwardRef(function(props, ref) {
    var cache = react.exports.useContext(EmotionCacheContext);
    return func(props, cache, ref);
  });
};
var ThemeContext$2 = /* @__PURE__ */ react.exports.createContext({});
React$1["useInsertionEffect"] ? React$1["useInsertionEffect"] : function useInsertionEffect2(create) {
  create();
};
React$1["useInsertionEffect"] ? React$1["useInsertionEffect"] : react.exports.useLayoutEffect;
function css() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return serializeStyles(args);
}
var keyframes = function keyframes2() {
  var insertable = css.apply(void 0, arguments);
  var name = "animation-" + insertable.name;
  return {
    name,
    styles: "@keyframes " + name + "{" + insertable.styles + "}",
    anim: 1,
    toString: function toString() {
      return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
    }
  };
};
var testOmitPropsOnStringTag = isPropValid;
var testOmitPropsOnComponent = function testOmitPropsOnComponent2(key) {
  return key !== "theme";
};
var getDefaultShouldForwardProp = function getDefaultShouldForwardProp2(tag) {
  return typeof tag === "string" && tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;
};
var composeShouldForwardProps = function composeShouldForwardProps2(tag, options, isReal) {
  var shouldForwardProp2;
  if (options) {
    var optionsShouldForwardProp = options.shouldForwardProp;
    shouldForwardProp2 = tag.__emotion_forwardProp && optionsShouldForwardProp ? function(propName) {
      return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);
    } : optionsShouldForwardProp;
  }
  if (typeof shouldForwardProp2 !== "function" && isReal) {
    shouldForwardProp2 = tag.__emotion_forwardProp;
  }
  return shouldForwardProp2;
};
var useInsertionEffect = React$1["useInsertionEffect"] ? React$1["useInsertionEffect"] : function useInsertionEffect3(create) {
  create();
};
function useInsertionEffectMaybe(create) {
  useInsertionEffect(create);
}
var Insertion = function Insertion2(_ref) {
  var cache = _ref.cache, serialized = _ref.serialized, isStringTag = _ref.isStringTag;
  registerStyles(cache, serialized, isStringTag);
  useInsertionEffectMaybe(function() {
    return insertStyles(cache, serialized, isStringTag);
  });
  return null;
};
var createStyled$1 = function createStyled2(tag, options) {
  var isReal = tag.__emotion_real === tag;
  var baseTag = isReal && tag.__emotion_base || tag;
  var identifierName;
  var targetClassName;
  if (options !== void 0) {
    identifierName = options.label;
    targetClassName = options.target;
  }
  var shouldForwardProp2 = composeShouldForwardProps(tag, options, isReal);
  var defaultShouldForwardProp = shouldForwardProp2 || getDefaultShouldForwardProp(baseTag);
  var shouldUseAs = !defaultShouldForwardProp("as");
  return function() {
    var args = arguments;
    var styles = isReal && tag.__emotion_styles !== void 0 ? tag.__emotion_styles.slice(0) : [];
    if (identifierName !== void 0) {
      styles.push("label:" + identifierName + ";");
    }
    if (args[0] == null || args[0].raw === void 0) {
      styles.push.apply(styles, args);
    } else {
      styles.push(args[0][0]);
      var len2 = args.length;
      var i2 = 1;
      for (; i2 < len2; i2++) {
        styles.push(args[i2], args[0][i2]);
      }
    }
    var Styled = withEmotionCache(function(props, cache, ref) {
      var FinalTag = shouldUseAs && props.as || baseTag;
      var className = "";
      var classInterpolations = [];
      var mergedProps = props;
      if (props.theme == null) {
        mergedProps = {};
        for (var key in props) {
          mergedProps[key] = props[key];
        }
        mergedProps.theme = react.exports.useContext(ThemeContext$2);
      }
      if (typeof props.className === "string") {
        className = getRegisteredStyles(cache.registered, classInterpolations, props.className);
      } else if (props.className != null) {
        className = props.className + " ";
      }
      var serialized = serializeStyles(styles.concat(classInterpolations), cache.registered, mergedProps);
      className += cache.key + "-" + serialized.name;
      if (targetClassName !== void 0) {
        className += " " + targetClassName;
      }
      var finalShouldForwardProp = shouldUseAs && shouldForwardProp2 === void 0 ? getDefaultShouldForwardProp(FinalTag) : defaultShouldForwardProp;
      var newProps = {};
      for (var _key in props) {
        if (shouldUseAs && _key === "as")
          continue;
        if (finalShouldForwardProp(_key)) {
          newProps[_key] = props[_key];
        }
      }
      newProps.className = className;
      newProps.ref = ref;
      return /* @__PURE__ */ react.exports.createElement(react.exports.Fragment, null, /* @__PURE__ */ react.exports.createElement(Insertion, {
        cache,
        serialized,
        isStringTag: typeof FinalTag === "string"
      }), /* @__PURE__ */ react.exports.createElement(FinalTag, newProps));
    });
    Styled.displayName = identifierName !== void 0 ? identifierName : "Styled(" + (typeof baseTag === "string" ? baseTag : baseTag.displayName || baseTag.name || "Component") + ")";
    Styled.defaultProps = tag.defaultProps;
    Styled.__emotion_real = Styled;
    Styled.__emotion_base = baseTag;
    Styled.__emotion_styles = styles;
    Styled.__emotion_forwardProp = shouldForwardProp2;
    Object.defineProperty(Styled, "toString", {
      value: function value() {
        if (targetClassName === void 0 && false) {
          return "NO_COMPONENT_SELECTOR";
        }
        return "." + targetClassName;
      }
    });
    Styled.withComponent = function(nextTag, nextOptions) {
      return createStyled2(nextTag, _extends$1({}, options, nextOptions, {
        shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)
      })).apply(void 0, styles);
    };
    return Styled;
  };
};
var tags = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
];
var newStyled = createStyled$1.bind();
tags.forEach(function(tagName) {
  newStyled[tagName] = newStyled(tagName);
});
var emStyled = newStyled;
var jsxRuntime = { exports: {} };
var reactJsxRuntime_production_min = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var f = react.exports, k = Symbol.for("react.element"), l = Symbol.for("react.fragment"), m = Object.prototype.hasOwnProperty, n = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p = { key: true, ref: true, __self: true, __source: true };
function q(c2, a, g2) {
  var b2, d2 = {}, e2 = null, h2 = null;
  g2 !== void 0 && (e2 = "" + g2);
  a.key !== void 0 && (e2 = "" + a.key);
  a.ref !== void 0 && (h2 = a.ref);
  for (b2 in a)
    m.call(a, b2) && !p.hasOwnProperty(b2) && (d2[b2] = a[b2]);
  if (c2 && c2.defaultProps)
    for (b2 in a = c2.defaultProps, a)
      d2[b2] === void 0 && (d2[b2] = a[b2]);
  return { $$typeof: k, type: c2, key: e2, ref: h2, props: d2, _owner: n.current };
}
reactJsxRuntime_production_min.Fragment = l;
reactJsxRuntime_production_min.jsx = q;
reactJsxRuntime_production_min.jsxs = q;
{
  jsxRuntime.exports = reactJsxRuntime_production_min;
}
const jsx = jsxRuntime.exports.jsx;
const jsxs = jsxRuntime.exports.jsxs;
/** @license MUI v5.8.0
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
function styled$3(tag, options) {
  const stylesFactory = emStyled(tag, options);
  return stylesFactory;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function isPlainObject$1(item) {
  return item !== null && typeof item === "object" && item.constructor === Object;
}
function deepmerge(target, source, options = {
  clone: true
}) {
  const output = options.clone ? _extends({}, target) : target;
  if (isPlainObject$1(target) && isPlainObject$1(source)) {
    Object.keys(source).forEach((key) => {
      if (key === "__proto__") {
        return;
      }
      if (isPlainObject$1(source[key]) && key in target && isPlainObject$1(target[key])) {
        output[key] = deepmerge(target[key], source[key], options);
      } else {
        output[key] = source[key];
      }
    });
  }
  return output;
}
function formatMuiErrorMessage(code2) {
  let url = "https://mui.com/production-error/?code=" + code2;
  for (let i2 = 1; i2 < arguments.length; i2 += 1) {
    url += "&args[]=" + encodeURIComponent(arguments[i2]);
  }
  return "Minified MUI error #" + code2 + "; visit " + url + " for the full message.";
}
function capitalize(string) {
  if (typeof string !== "string") {
    throw new Error(formatMuiErrorMessage(7));
  }
  return string.charAt(0).toUpperCase() + string.slice(1);
}
function setRef(ref, value) {
  if (typeof ref === "function") {
    ref(value);
  } else if (ref) {
    ref.current = value;
  }
}
const useEnhancedEffect = typeof window !== "undefined" ? react.exports.useLayoutEffect : react.exports.useEffect;
var useEnhancedEffect$1 = useEnhancedEffect;
function useEventCallback(fn) {
  const ref = react.exports.useRef(fn);
  useEnhancedEffect$1(() => {
    ref.current = fn;
  });
  return react.exports.useCallback((...args) => (0, ref.current)(...args), []);
}
function useForkRef(refA, refB) {
  return react.exports.useMemo(() => {
    if (refA == null && refB == null) {
      return null;
    }
    return (refValue) => {
      setRef(refA, refValue);
      setRef(refB, refValue);
    };
  }, [refA, refB]);
}
let hadKeyboardEvent = true;
let hadFocusVisibleRecently = false;
let hadFocusVisibleRecentlyTimeout;
const inputTypesWhitelist = {
  text: true,
  search: true,
  url: true,
  tel: true,
  email: true,
  password: true,
  number: true,
  date: true,
  month: true,
  week: true,
  time: true,
  datetime: true,
  "datetime-local": true
};
function focusTriggersKeyboardModality(node2) {
  const {
    type,
    tagName
  } = node2;
  if (tagName === "INPUT" && inputTypesWhitelist[type] && !node2.readOnly) {
    return true;
  }
  if (tagName === "TEXTAREA" && !node2.readOnly) {
    return true;
  }
  if (node2.isContentEditable) {
    return true;
  }
  return false;
}
function handleKeyDown(event2) {
  if (event2.metaKey || event2.altKey || event2.ctrlKey) {
    return;
  }
  hadKeyboardEvent = true;
}
function handlePointerDown() {
  hadKeyboardEvent = false;
}
function handleVisibilityChange() {
  if (this.visibilityState === "hidden") {
    if (hadFocusVisibleRecently) {
      hadKeyboardEvent = true;
    }
  }
}
function prepare(doc) {
  doc.addEventListener("keydown", handleKeyDown, true);
  doc.addEventListener("mousedown", handlePointerDown, true);
  doc.addEventListener("pointerdown", handlePointerDown, true);
  doc.addEventListener("touchstart", handlePointerDown, true);
  doc.addEventListener("visibilitychange", handleVisibilityChange, true);
}
function isFocusVisible(event2) {
  const {
    target
  } = event2;
  try {
    return target.matches(":focus-visible");
  } catch (error) {
  }
  return hadKeyboardEvent || focusTriggersKeyboardModality(target);
}
function useIsFocusVisible() {
  const ref = react.exports.useCallback((node2) => {
    if (node2 != null) {
      prepare(node2.ownerDocument);
    }
  }, []);
  const isFocusVisibleRef = react.exports.useRef(false);
  function handleBlurVisible() {
    if (isFocusVisibleRef.current) {
      hadFocusVisibleRecently = true;
      window.clearTimeout(hadFocusVisibleRecentlyTimeout);
      hadFocusVisibleRecentlyTimeout = window.setTimeout(() => {
        hadFocusVisibleRecently = false;
      }, 100);
      isFocusVisibleRef.current = false;
      return true;
    }
    return false;
  }
  function handleFocusVisible(event2) {
    if (isFocusVisible(event2)) {
      isFocusVisibleRef.current = true;
      return true;
    }
    return false;
  }
  return {
    isFocusVisibleRef,
    onFocus: handleFocusVisible,
    onBlur: handleBlurVisible,
    ref
  };
}
function resolveProps(defaultProps2, props) {
  const output = _extends({}, props);
  Object.keys(defaultProps2).forEach((propName) => {
    if (output[propName] === void 0) {
      output[propName] = defaultProps2[propName];
    }
  });
  return output;
}
function composeClasses(slots, getUtilityClass, classes) {
  const output = {};
  Object.keys(slots).forEach((slot) => {
    output[slot] = slots[slot].reduce((acc, key) => {
      if (key) {
        if (classes && classes[key]) {
          acc.push(classes[key]);
        }
        acc.push(getUtilityClass(key));
      }
      return acc;
    }, []).join(" ");
  });
  return output;
}
const defaultGenerator = (componentName) => componentName;
const createClassNameGenerator = () => {
  let generate2 = defaultGenerator;
  return {
    configure(generator) {
      generate2 = generator;
    },
    generate(componentName) {
      return generate2(componentName);
    },
    reset() {
      generate2 = defaultGenerator;
    }
  };
};
const ClassNameGenerator = createClassNameGenerator();
var ClassNameGenerator$1 = ClassNameGenerator;
const globalStateClassesMapping = {
  active: "active",
  checked: "checked",
  completed: "completed",
  disabled: "disabled",
  error: "error",
  expanded: "expanded",
  focused: "focused",
  focusVisible: "focusVisible",
  required: "required",
  selected: "selected"
};
function generateUtilityClass(componentName, slot, globalStatePrefix = "Mui") {
  const globalStateClass = globalStateClassesMapping[slot];
  return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${ClassNameGenerator$1.generate(componentName)}-${slot}`;
}
function generateUtilityClasses(componentName, slots, globalStatePrefix = "Mui") {
  const result = {};
  slots.forEach((slot) => {
    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);
  });
  return result;
}
function merge$2(acc, item) {
  if (!item) {
    return acc;
  }
  return deepmerge(acc, item, {
    clone: false
  });
}
const values$1 = {
  xs: 0,
  sm: 600,
  md: 900,
  lg: 1200,
  xl: 1536
};
const defaultBreakpoints = {
  keys: ["xs", "sm", "md", "lg", "xl"],
  up: (key) => `@media (min-width:${values$1[key]}px)`
};
function handleBreakpoints(props, propValue, styleFromPropValue) {
  const theme = props.theme || {};
  if (Array.isArray(propValue)) {
    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;
    return propValue.reduce((acc, item, index) => {
      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);
      return acc;
    }, {});
  }
  if (typeof propValue === "object") {
    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;
    return Object.keys(propValue).reduce((acc, breakpoint) => {
      if (Object.keys(themeBreakpoints.values || values$1).indexOf(breakpoint) !== -1) {
        const mediaKey = themeBreakpoints.up(breakpoint);
        acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);
      } else {
        const cssKey = breakpoint;
        acc[cssKey] = propValue[cssKey];
      }
      return acc;
    }, {});
  }
  const output = styleFromPropValue(propValue);
  return output;
}
function createEmptyBreakpointObject(breakpointsInput = {}) {
  var _breakpointsInput$key;
  const breakpointsInOrder = breakpointsInput == null ? void 0 : (_breakpointsInput$key = breakpointsInput.keys) == null ? void 0 : _breakpointsInput$key.reduce((acc, key) => {
    const breakpointStyleKey = breakpointsInput.up(key);
    acc[breakpointStyleKey] = {};
    return acc;
  }, {});
  return breakpointsInOrder || {};
}
function removeUnusedBreakpoints(breakpointKeys, style2) {
  return breakpointKeys.reduce((acc, key) => {
    const breakpointOutput = acc[key];
    const isBreakpointUnused = !breakpointOutput || Object.keys(breakpointOutput).length === 0;
    if (isBreakpointUnused) {
      delete acc[key];
    }
    return acc;
  }, style2);
}
function computeBreakpointsBase(breakpointValues, themeBreakpoints) {
  if (typeof breakpointValues !== "object") {
    return {};
  }
  const base = {};
  const breakpointsKeys = Object.keys(themeBreakpoints);
  if (Array.isArray(breakpointValues)) {
    breakpointsKeys.forEach((breakpoint, i2) => {
      if (i2 < breakpointValues.length) {
        base[breakpoint] = true;
      }
    });
  } else {
    breakpointsKeys.forEach((breakpoint) => {
      if (breakpointValues[breakpoint] != null) {
        base[breakpoint] = true;
      }
    });
  }
  return base;
}
function resolveBreakpointValues({
  values: breakpointValues,
  breakpoints: themeBreakpoints,
  base: customBase
}) {
  const base = customBase || computeBreakpointsBase(breakpointValues, themeBreakpoints);
  const keys = Object.keys(base);
  if (keys.length === 0) {
    return breakpointValues;
  }
  let previous;
  return keys.reduce((acc, breakpoint, i2) => {
    if (Array.isArray(breakpointValues)) {
      acc[breakpoint] = breakpointValues[i2] != null ? breakpointValues[i2] : breakpointValues[previous];
      previous = i2;
    } else if (typeof breakpointValues === "object") {
      acc[breakpoint] = breakpointValues[breakpoint] != null ? breakpointValues[breakpoint] : breakpointValues[previous];
      previous = breakpoint;
    } else {
      acc[breakpoint] = breakpointValues;
    }
    return acc;
  }, {});
}
function getPath(obj, path, checkVars = true) {
  if (!path || typeof path !== "string") {
    return null;
  }
  if (obj && obj.vars && checkVars) {
    const val = `vars.${path}`.split(".").reduce((acc, item) => acc && acc[item] ? acc[item] : null, obj);
    if (val != null) {
      return val;
    }
  }
  return path.split(".").reduce((acc, item) => {
    if (acc && acc[item] != null) {
      return acc[item];
    }
    return null;
  }, obj);
}
function getValue$1(themeMapping, transform2, propValueFinal, userValue = propValueFinal) {
  let value;
  if (typeof themeMapping === "function") {
    value = themeMapping(propValueFinal);
  } else if (Array.isArray(themeMapping)) {
    value = themeMapping[propValueFinal] || userValue;
  } else {
    value = getPath(themeMapping, propValueFinal) || userValue;
  }
  if (transform2) {
    value = transform2(value);
  }
  return value;
}
function style$2(options) {
  const {
    prop,
    cssProperty = options.prop,
    themeKey,
    transform: transform2
  } = options;
  const fn = (props) => {
    if (props[prop] == null) {
      return null;
    }
    const propValue = props[prop];
    const theme = props.theme;
    const themeMapping = getPath(theme, themeKey) || {};
    const styleFromPropValue = (propValueFinal) => {
      let value = getValue$1(themeMapping, transform2, propValueFinal);
      if (propValueFinal === value && typeof propValueFinal === "string") {
        value = getValue$1(themeMapping, transform2, `${prop}${propValueFinal === "default" ? "" : capitalize(propValueFinal)}`, propValueFinal);
      }
      if (cssProperty === false) {
        return value;
      }
      return {
        [cssProperty]: value
      };
    };
    return handleBreakpoints(props, propValue, styleFromPropValue);
  };
  fn.propTypes = {};
  fn.filterProps = [prop];
  return fn;
}
function compose(...styles) {
  const handlers = styles.reduce((acc, style2) => {
    style2.filterProps.forEach((prop) => {
      acc[prop] = style2;
    });
    return acc;
  }, {});
  const fn = (props) => {
    return Object.keys(props).reduce((acc, prop) => {
      if (handlers[prop]) {
        return merge$2(acc, handlers[prop](props));
      }
      return acc;
    }, {});
  };
  fn.propTypes = {};
  fn.filterProps = styles.reduce((acc, style2) => acc.concat(style2.filterProps), []);
  return fn;
}
function memoize(fn) {
  const cache = {};
  return (arg) => {
    if (cache[arg] === void 0) {
      cache[arg] = fn(arg);
    }
    return cache[arg];
  };
}
const properties = {
  m: "margin",
  p: "padding"
};
const directions = {
  t: "Top",
  r: "Right",
  b: "Bottom",
  l: "Left",
  x: ["Left", "Right"],
  y: ["Top", "Bottom"]
};
const aliases = {
  marginX: "mx",
  marginY: "my",
  paddingX: "px",
  paddingY: "py"
};
const getCssProperties = memoize((prop) => {
  if (prop.length > 2) {
    if (aliases[prop]) {
      prop = aliases[prop];
    } else {
      return [prop];
    }
  }
  const [a, b2] = prop.split("");
  const property = properties[a];
  const direction = directions[b2] || "";
  return Array.isArray(direction) ? direction.map((dir) => property + dir) : [property + direction];
});
const marginKeys = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"];
const paddingKeys = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"];
const spacingKeys = [...marginKeys, ...paddingKeys];
function createUnaryUnit(theme, themeKey, defaultValue, propName) {
  var _getPath;
  const themeSpacing = (_getPath = getPath(theme, themeKey, false)) != null ? _getPath : defaultValue;
  if (typeof themeSpacing === "number") {
    return (abs2) => {
      if (typeof abs2 === "string") {
        return abs2;
      }
      return themeSpacing * abs2;
    };
  }
  if (Array.isArray(themeSpacing)) {
    return (abs2) => {
      if (typeof abs2 === "string") {
        return abs2;
      }
      return themeSpacing[abs2];
    };
  }
  if (typeof themeSpacing === "function") {
    return themeSpacing;
  }
  return () => void 0;
}
function createUnarySpacing(theme) {
  return createUnaryUnit(theme, "spacing", 8);
}
function getValue(transformer, propValue) {
  if (typeof propValue === "string" || propValue == null) {
    return propValue;
  }
  const abs2 = Math.abs(propValue);
  const transformed = transformer(abs2);
  if (propValue >= 0) {
    return transformed;
  }
  if (typeof transformed === "number") {
    return -transformed;
  }
  return `-${transformed}`;
}
function getStyleFromPropValue(cssProperties, transformer) {
  return (propValue) => cssProperties.reduce((acc, cssProperty) => {
    acc[cssProperty] = getValue(transformer, propValue);
    return acc;
  }, {});
}
function resolveCssProperty(props, keys, prop, transformer) {
  if (keys.indexOf(prop) === -1) {
    return null;
  }
  const cssProperties = getCssProperties(prop);
  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);
  const propValue = props[prop];
  return handleBreakpoints(props, propValue, styleFromPropValue);
}
function style$1(props, keys) {
  const transformer = createUnarySpacing(props.theme);
  return Object.keys(props).map((prop) => resolveCssProperty(props, keys, prop, transformer)).reduce(merge$2, {});
}
function spacing(props) {
  return style$1(props, spacingKeys);
}
spacing.propTypes = {};
spacing.filterProps = spacingKeys;
function getBorder(value) {
  if (typeof value !== "number") {
    return value;
  }
  return `${value}px solid`;
}
const border = style$2({
  prop: "border",
  themeKey: "borders",
  transform: getBorder
});
const borderTop = style$2({
  prop: "borderTop",
  themeKey: "borders",
  transform: getBorder
});
const borderRight = style$2({
  prop: "borderRight",
  themeKey: "borders",
  transform: getBorder
});
const borderBottom = style$2({
  prop: "borderBottom",
  themeKey: "borders",
  transform: getBorder
});
const borderLeft = style$2({
  prop: "borderLeft",
  themeKey: "borders",
  transform: getBorder
});
const borderColor = style$2({
  prop: "borderColor",
  themeKey: "palette"
});
const borderTopColor = style$2({
  prop: "borderTopColor",
  themeKey: "palette"
});
const borderRightColor = style$2({
  prop: "borderRightColor",
  themeKey: "palette"
});
const borderBottomColor = style$2({
  prop: "borderBottomColor",
  themeKey: "palette"
});
const borderLeftColor = style$2({
  prop: "borderLeftColor",
  themeKey: "palette"
});
const borderRadius = (props) => {
  if (props.borderRadius !== void 0 && props.borderRadius !== null) {
    const transformer = createUnaryUnit(props.theme, "shape.borderRadius", 4);
    const styleFromPropValue = (propValue) => ({
      borderRadius: getValue(transformer, propValue)
    });
    return handleBreakpoints(props, props.borderRadius, styleFromPropValue);
  }
  return null;
};
borderRadius.propTypes = {};
borderRadius.filterProps = ["borderRadius"];
const borders = compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius);
var borders$1 = borders;
const displayPrint = style$2({
  prop: "displayPrint",
  cssProperty: false,
  transform: (value) => ({
    "@media print": {
      display: value
    }
  })
});
const displayRaw = style$2({
  prop: "display"
});
const overflow = style$2({
  prop: "overflow"
});
const textOverflow = style$2({
  prop: "textOverflow"
});
const visibility = style$2({
  prop: "visibility"
});
const whiteSpace = style$2({
  prop: "whiteSpace"
});
var display = compose(displayPrint, displayRaw, overflow, textOverflow, visibility, whiteSpace);
const flexBasis = style$2({
  prop: "flexBasis"
});
const flexDirection = style$2({
  prop: "flexDirection"
});
const flexWrap = style$2({
  prop: "flexWrap"
});
const justifyContent = style$2({
  prop: "justifyContent"
});
const alignItems = style$2({
  prop: "alignItems"
});
const alignContent = style$2({
  prop: "alignContent"
});
const order = style$2({
  prop: "order"
});
const flex = style$2({
  prop: "flex"
});
const flexGrow = style$2({
  prop: "flexGrow"
});
const flexShrink = style$2({
  prop: "flexShrink"
});
const alignSelf = style$2({
  prop: "alignSelf"
});
const justifyItems = style$2({
  prop: "justifyItems"
});
const justifySelf = style$2({
  prop: "justifySelf"
});
const flexbox = compose(flexBasis, flexDirection, flexWrap, justifyContent, alignItems, alignContent, order, flex, flexGrow, flexShrink, alignSelf, justifyItems, justifySelf);
var flexbox$1 = flexbox;
const gap = (props) => {
  if (props.gap !== void 0 && props.gap !== null) {
    const transformer = createUnaryUnit(props.theme, "spacing", 8);
    const styleFromPropValue = (propValue) => ({
      gap: getValue(transformer, propValue)
    });
    return handleBreakpoints(props, props.gap, styleFromPropValue);
  }
  return null;
};
gap.propTypes = {};
gap.filterProps = ["gap"];
const columnGap = (props) => {
  if (props.columnGap !== void 0 && props.columnGap !== null) {
    const transformer = createUnaryUnit(props.theme, "spacing", 8);
    const styleFromPropValue = (propValue) => ({
      columnGap: getValue(transformer, propValue)
    });
    return handleBreakpoints(props, props.columnGap, styleFromPropValue);
  }
  return null;
};
columnGap.propTypes = {};
columnGap.filterProps = ["columnGap"];
const rowGap = (props) => {
  if (props.rowGap !== void 0 && props.rowGap !== null) {
    const transformer = createUnaryUnit(props.theme, "spacing", 8);
    const styleFromPropValue = (propValue) => ({
      rowGap: getValue(transformer, propValue)
    });
    return handleBreakpoints(props, props.rowGap, styleFromPropValue);
  }
  return null;
};
rowGap.propTypes = {};
rowGap.filterProps = ["rowGap"];
const gridColumn = style$2({
  prop: "gridColumn"
});
const gridRow = style$2({
  prop: "gridRow"
});
const gridAutoFlow = style$2({
  prop: "gridAutoFlow"
});
const gridAutoColumns = style$2({
  prop: "gridAutoColumns"
});
const gridAutoRows = style$2({
  prop: "gridAutoRows"
});
const gridTemplateColumns = style$2({
  prop: "gridTemplateColumns"
});
const gridTemplateRows = style$2({
  prop: "gridTemplateRows"
});
const gridTemplateAreas = style$2({
  prop: "gridTemplateAreas"
});
const gridArea = style$2({
  prop: "gridArea"
});
const grid = compose(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);
var grid$1 = grid;
const color = style$2({
  prop: "color",
  themeKey: "palette"
});
const bgcolor = style$2({
  prop: "bgcolor",
  cssProperty: "backgroundColor",
  themeKey: "palette"
});
const backgroundColor = style$2({
  prop: "backgroundColor",
  themeKey: "palette"
});
const palette = compose(color, bgcolor, backgroundColor);
var palette$1 = palette;
const position = style$2({
  prop: "position"
});
const zIndex$2 = style$2({
  prop: "zIndex",
  themeKey: "zIndex"
});
const top = style$2({
  prop: "top"
});
const right = style$2({
  prop: "right"
});
const bottom = style$2({
  prop: "bottom"
});
const left = style$2({
  prop: "left"
});
var positions = compose(position, zIndex$2, top, right, bottom, left);
const boxShadow = style$2({
  prop: "boxShadow",
  themeKey: "shadows"
});
var shadows$2 = boxShadow;
function transform(value) {
  return value <= 1 && value !== 0 ? `${value * 100}%` : value;
}
const width = style$2({
  prop: "width",
  transform
});
const maxWidth = (props) => {
  if (props.maxWidth !== void 0 && props.maxWidth !== null) {
    const styleFromPropValue = (propValue) => {
      var _props$theme, _props$theme$breakpoi, _props$theme$breakpoi2;
      const breakpoint = ((_props$theme = props.theme) == null ? void 0 : (_props$theme$breakpoi = _props$theme.breakpoints) == null ? void 0 : (_props$theme$breakpoi2 = _props$theme$breakpoi.values) == null ? void 0 : _props$theme$breakpoi2[propValue]) || values$1[propValue];
      return {
        maxWidth: breakpoint || transform(propValue)
      };
    };
    return handleBreakpoints(props, props.maxWidth, styleFromPropValue);
  }
  return null;
};
maxWidth.filterProps = ["maxWidth"];
const minWidth = style$2({
  prop: "minWidth",
  transform
});
const height = style$2({
  prop: "height",
  transform
});
const maxHeight = style$2({
  prop: "maxHeight",
  transform
});
const minHeight = style$2({
  prop: "minHeight",
  transform
});
style$2({
  prop: "size",
  cssProperty: "width",
  transform
});
style$2({
  prop: "size",
  cssProperty: "height",
  transform
});
const boxSizing = style$2({
  prop: "boxSizing"
});
const sizing = compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);
var sizing$1 = sizing;
const fontFamily = style$2({
  prop: "fontFamily",
  themeKey: "typography"
});
const fontSize = style$2({
  prop: "fontSize",
  themeKey: "typography"
});
const fontStyle = style$2({
  prop: "fontStyle",
  themeKey: "typography"
});
const fontWeight = style$2({
  prop: "fontWeight",
  themeKey: "typography"
});
const letterSpacing = style$2({
  prop: "letterSpacing"
});
const textTransform = style$2({
  prop: "textTransform"
});
const lineHeight = style$2({
  prop: "lineHeight"
});
const textAlign = style$2({
  prop: "textAlign"
});
const typographyVariant = style$2({
  prop: "typography",
  cssProperty: false,
  themeKey: "typography"
});
const typography = compose(typographyVariant, fontFamily, fontSize, fontStyle, fontWeight, letterSpacing, lineHeight, textAlign, textTransform);
var typography$1 = typography;
const filterPropsMapping = {
  borders: borders$1.filterProps,
  display: display.filterProps,
  flexbox: flexbox$1.filterProps,
  grid: grid$1.filterProps,
  positions: positions.filterProps,
  palette: palette$1.filterProps,
  shadows: shadows$2.filterProps,
  sizing: sizing$1.filterProps,
  spacing: spacing.filterProps,
  typography: typography$1.filterProps
};
const styleFunctionMapping = {
  borders: borders$1,
  display,
  flexbox: flexbox$1,
  grid: grid$1,
  positions,
  palette: palette$1,
  shadows: shadows$2,
  sizing: sizing$1,
  spacing,
  typography: typography$1
};
const propToStyleFunction = Object.keys(filterPropsMapping).reduce((acc, styleFnName) => {
  filterPropsMapping[styleFnName].forEach((propName) => {
    acc[propName] = styleFunctionMapping[styleFnName];
  });
  return acc;
}, {});
function objectsHaveSameKeys(...objects) {
  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);
  const union = new Set(allKeys);
  return objects.every((object) => union.size === Object.keys(object).length);
}
function callIfFn(maybeFn, arg) {
  return typeof maybeFn === "function" ? maybeFn(arg) : maybeFn;
}
function unstable_createStyleFunctionSx(styleFunctionMapping$1 = styleFunctionMapping) {
  const propToStyleFunction2 = Object.keys(styleFunctionMapping$1).reduce((acc, styleFnName) => {
    styleFunctionMapping$1[styleFnName].filterProps.forEach((propName) => {
      acc[propName] = styleFunctionMapping$1[styleFnName];
    });
    return acc;
  }, {});
  function getThemeValue(prop, value, theme) {
    const inputProps = {
      [prop]: value,
      theme
    };
    const styleFunction = propToStyleFunction2[prop];
    return styleFunction ? styleFunction(inputProps) : {
      [prop]: value
    };
  }
  function styleFunctionSx2(props) {
    const {
      sx,
      theme = {}
    } = props || {};
    if (!sx) {
      return null;
    }
    function traverse(sxInput) {
      let sxObject = sxInput;
      if (typeof sxInput === "function") {
        sxObject = sxInput(theme);
      } else if (typeof sxInput !== "object") {
        return sxInput;
      }
      if (!sxObject) {
        return null;
      }
      const emptyBreakpoints = createEmptyBreakpointObject(theme.breakpoints);
      const breakpointsKeys = Object.keys(emptyBreakpoints);
      let css2 = emptyBreakpoints;
      Object.keys(sxObject).forEach((styleKey) => {
        const value = callIfFn(sxObject[styleKey], theme);
        if (value !== null && value !== void 0) {
          if (typeof value === "object") {
            if (propToStyleFunction2[styleKey]) {
              css2 = merge$2(css2, getThemeValue(styleKey, value, theme));
            } else {
              const breakpointsValues = handleBreakpoints({
                theme
              }, value, (x2) => ({
                [styleKey]: x2
              }));
              if (objectsHaveSameKeys(breakpointsValues, value)) {
                css2[styleKey] = styleFunctionSx2({
                  sx: value,
                  theme
                });
              } else {
                css2 = merge$2(css2, breakpointsValues);
              }
            }
          } else {
            css2 = merge$2(css2, getThemeValue(styleKey, value, theme));
          }
        }
      });
      return removeUnusedBreakpoints(breakpointsKeys, css2);
    }
    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);
  }
  return styleFunctionSx2;
}
const styleFunctionSx = unstable_createStyleFunctionSx();
styleFunctionSx.filterProps = ["sx"];
var defaultStyleFunctionSx = styleFunctionSx;
function _objectWithoutPropertiesLoose$1(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
const _excluded$r = ["sx"];
const splitProps = (props) => {
  const result = {
    systemProps: {},
    otherProps: {}
  };
  Object.keys(props).forEach((prop) => {
    if (propToStyleFunction[prop]) {
      result.systemProps[prop] = props[prop];
    } else {
      result.otherProps[prop] = props[prop];
    }
  });
  return result;
};
function extendSxProp(props) {
  const {
    sx: inSx
  } = props, other = _objectWithoutPropertiesLoose$1(props, _excluded$r);
  const {
    systemProps,
    otherProps
  } = splitProps(other);
  let finalSx;
  if (Array.isArray(inSx)) {
    finalSx = [systemProps, ...inSx];
  } else if (typeof inSx === "function") {
    finalSx = (...args) => {
      const result = inSx(...args);
      if (!isPlainObject$1(result)) {
        return systemProps;
      }
      return _extends({}, systemProps, result);
    };
  } else {
    finalSx = _extends({}, systemProps, inSx);
  }
  return _extends({}, otherProps, {
    sx: finalSx
  });
}
function toVal(mix) {
  var k2, y2, str = "";
  if (typeof mix === "string" || typeof mix === "number") {
    str += mix;
  } else if (typeof mix === "object") {
    if (Array.isArray(mix)) {
      for (k2 = 0; k2 < mix.length; k2++) {
        if (mix[k2]) {
          if (y2 = toVal(mix[k2])) {
            str && (str += " ");
            str += y2;
          }
        }
      }
    } else {
      for (k2 in mix) {
        if (mix[k2]) {
          str && (str += " ");
          str += k2;
        }
      }
    }
  }
  return str;
}
function clsx() {
  var i2 = 0, tmp, x2, str = "";
  while (i2 < arguments.length) {
    if (tmp = arguments[i2++]) {
      if (x2 = toVal(tmp)) {
        str && (str += " ");
        str += x2;
      }
    }
  }
  return str;
}
const _excluded$q = ["values", "unit", "step"];
const sortBreakpointsValues = (values2) => {
  const breakpointsAsArray = Object.keys(values2).map((key) => ({
    key,
    val: values2[key]
  })) || [];
  breakpointsAsArray.sort((breakpoint1, breakpoint2) => breakpoint1.val - breakpoint2.val);
  return breakpointsAsArray.reduce((acc, obj) => {
    return _extends({}, acc, {
      [obj.key]: obj.val
    });
  }, {});
};
function createBreakpoints(breakpoints) {
  const {
    values: values2 = {
      xs: 0,
      sm: 600,
      md: 900,
      lg: 1200,
      xl: 1536
    },
    unit = "px",
    step = 5
  } = breakpoints, other = _objectWithoutPropertiesLoose$1(breakpoints, _excluded$q);
  const sortedValues = sortBreakpointsValues(values2);
  const keys = Object.keys(sortedValues);
  function up(key) {
    const value = typeof values2[key] === "number" ? values2[key] : key;
    return `@media (min-width:${value}${unit})`;
  }
  function down(key) {
    const value = typeof values2[key] === "number" ? values2[key] : key;
    return `@media (max-width:${value - step / 100}${unit})`;
  }
  function between(start, end) {
    const endIndex = keys.indexOf(end);
    return `@media (min-width:${typeof values2[start] === "number" ? values2[start] : start}${unit}) and (max-width:${(endIndex !== -1 && typeof values2[keys[endIndex]] === "number" ? values2[keys[endIndex]] : end) - step / 100}${unit})`;
  }
  function only(key) {
    if (keys.indexOf(key) + 1 < keys.length) {
      return between(key, keys[keys.indexOf(key) + 1]);
    }
    return up(key);
  }
  function not(key) {
    const keyIndex = keys.indexOf(key);
    if (keyIndex === 0) {
      return up(keys[1]);
    }
    if (keyIndex === keys.length - 1) {
      return down(keys[keyIndex]);
    }
    return between(key, keys[keys.indexOf(key) + 1]).replace("@media", "@media not all and");
  }
  return _extends({
    keys,
    values: sortedValues,
    up,
    down,
    between,
    only,
    not,
    unit
  }, other);
}
const shape = {
  borderRadius: 4
};
var shape$1 = shape;
function createSpacing(spacingInput = 8) {
  if (spacingInput.mui) {
    return spacingInput;
  }
  const transform2 = createUnarySpacing({
    spacing: spacingInput
  });
  const spacing2 = (...argsInput) => {
    const args = argsInput.length === 0 ? [1] : argsInput;
    return args.map((argument) => {
      const output = transform2(argument);
      return typeof output === "number" ? `${output}px` : output;
    }).join(" ");
  };
  spacing2.mui = true;
  return spacing2;
}
const _excluded$p = ["breakpoints", "palette", "spacing", "shape"];
function createTheme$1(options = {}, ...args) {
  const {
    breakpoints: breakpointsInput = {},
    palette: paletteInput = {},
    spacing: spacingInput,
    shape: shapeInput = {}
  } = options, other = _objectWithoutPropertiesLoose$1(options, _excluded$p);
  const breakpoints = createBreakpoints(breakpointsInput);
  const spacing2 = createSpacing(spacingInput);
  let muiTheme = deepmerge({
    breakpoints,
    direction: "ltr",
    components: {},
    palette: _extends({
      mode: "light"
    }, paletteInput),
    spacing: spacing2,
    shape: _extends({}, shape$1, shapeInput)
  }, other);
  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);
  return muiTheme;
}
const ThemeContext = /* @__PURE__ */ react.exports.createContext(null);
var ThemeContext$1 = ThemeContext;
function useTheme$3() {
  const theme = react.exports.useContext(ThemeContext$1);
  return theme;
}
function isObjectEmpty(obj) {
  return Object.keys(obj).length === 0;
}
function useTheme$2(defaultTheme2 = null) {
  const contextTheme = useTheme$3();
  return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme2 : contextTheme;
}
const systemDefaultTheme$1 = createTheme$1();
function useTheme$1(defaultTheme2 = systemDefaultTheme$1) {
  return useTheme$2(defaultTheme2);
}
const _excluded$o = ["className", "component"];
function createBox(options = {}) {
  const {
    defaultTheme: defaultTheme2,
    defaultClassName = "MuiBox-root",
    generateClassName,
    styleFunctionSx: styleFunctionSx2 = defaultStyleFunctionSx
  } = options;
  const BoxRoot = styled$3("div")(styleFunctionSx2);
  const Box2 = /* @__PURE__ */ react.exports.forwardRef(function Box3(inProps, ref) {
    const theme = useTheme$1(defaultTheme2);
    const _extendSxProp = extendSxProp(inProps), {
      className,
      component = "div"
    } = _extendSxProp, other = _objectWithoutPropertiesLoose$1(_extendSxProp, _excluded$o);
    return /* @__PURE__ */ jsx(BoxRoot, _extends({
      as: component,
      ref,
      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),
      theme
    }, other));
  });
  return Box2;
}
const _excluded$n = ["variant"];
function isEmpty$1(string) {
  return string.length === 0;
}
function propsToClassKey(props) {
  const {
    variant
  } = props, other = _objectWithoutPropertiesLoose$1(props, _excluded$n);
  let classKey = variant || "";
  Object.keys(other).sort().forEach((key) => {
    if (key === "color") {
      classKey += isEmpty$1(classKey) ? props[key] : capitalize(props[key]);
    } else {
      classKey += `${isEmpty$1(classKey) ? key : capitalize(key)}${capitalize(props[key].toString())}`;
    }
  });
  return classKey;
}
const _excluded$m = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"], _excluded2 = ["theme"], _excluded3 = ["theme"];
function isEmpty(obj) {
  return Object.keys(obj).length === 0;
}
const getStyleOverrides = (name, theme) => {
  if (theme.components && theme.components[name] && theme.components[name].styleOverrides) {
    return theme.components[name].styleOverrides;
  }
  return null;
};
const getVariantStyles = (name, theme) => {
  let variants = [];
  if (theme && theme.components && theme.components[name] && theme.components[name].variants) {
    variants = theme.components[name].variants;
  }
  const variantsStyles = {};
  variants.forEach((definition) => {
    const key = propsToClassKey(definition.props);
    variantsStyles[key] = definition.style;
  });
  return variantsStyles;
};
const variantsResolver = (props, styles, theme, name) => {
  var _theme$components, _theme$components$nam;
  const {
    ownerState = {}
  } = props;
  const variantsStyles = [];
  const themeVariants = theme == null ? void 0 : (_theme$components = theme.components) == null ? void 0 : (_theme$components$nam = _theme$components[name]) == null ? void 0 : _theme$components$nam.variants;
  if (themeVariants) {
    themeVariants.forEach((themeVariant) => {
      let isMatch = true;
      Object.keys(themeVariant.props).forEach((key) => {
        if (ownerState[key] !== themeVariant.props[key] && props[key] !== themeVariant.props[key]) {
          isMatch = false;
        }
      });
      if (isMatch) {
        variantsStyles.push(styles[propsToClassKey(themeVariant.props)]);
      }
    });
  }
  return variantsStyles;
};
function shouldForwardProp(prop) {
  return prop !== "ownerState" && prop !== "theme" && prop !== "sx" && prop !== "as";
}
const systemDefaultTheme = createTheme$1();
function createStyled(input = {}) {
  const {
    defaultTheme: defaultTheme2 = systemDefaultTheme,
    rootShouldForwardProp: rootShouldForwardProp2 = shouldForwardProp,
    slotShouldForwardProp = shouldForwardProp,
    styleFunctionSx: styleFunctionSx2 = defaultStyleFunctionSx
  } = input;
  return (tag, inputOptions = {}) => {
    const {
      name: componentName,
      slot: componentSlot,
      skipVariantsResolver: inputSkipVariantsResolver,
      skipSx: inputSkipSx,
      overridesResolver
    } = inputOptions, options = _objectWithoutPropertiesLoose$1(inputOptions, _excluded$m);
    const skipVariantsResolver = inputSkipVariantsResolver !== void 0 ? inputSkipVariantsResolver : componentSlot && componentSlot !== "Root" || false;
    const skipSx = inputSkipSx || false;
    let label;
    let shouldForwardPropOption = shouldForwardProp;
    if (componentSlot === "Root") {
      shouldForwardPropOption = rootShouldForwardProp2;
    } else if (componentSlot) {
      shouldForwardPropOption = slotShouldForwardProp;
    }
    const defaultStyledResolver = styled$3(tag, _extends({
      shouldForwardProp: shouldForwardPropOption,
      label
    }, options));
    const muiStyledResolver = (styleArg, ...expressions) => {
      const expressionsWithDefaultTheme = expressions ? expressions.map((stylesArg) => {
        return typeof stylesArg === "function" && stylesArg.__emotion_real !== stylesArg ? (_ref) => {
          let {
            theme: themeInput
          } = _ref, other = _objectWithoutPropertiesLoose$1(_ref, _excluded2);
          return stylesArg(_extends({
            theme: isEmpty(themeInput) ? defaultTheme2 : themeInput
          }, other));
        } : stylesArg;
      }) : [];
      let transformedStyleArg = styleArg;
      if (componentName && overridesResolver) {
        expressionsWithDefaultTheme.push((props) => {
          const theme = isEmpty(props.theme) ? defaultTheme2 : props.theme;
          const styleOverrides = getStyleOverrides(componentName, theme);
          if (styleOverrides) {
            const resolvedStyleOverrides = {};
            Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {
              resolvedStyleOverrides[slotKey] = typeof slotStyle === "function" ? slotStyle(_extends({}, props, {
                theme
              })) : slotStyle;
            });
            return overridesResolver(props, resolvedStyleOverrides);
          }
          return null;
        });
      }
      if (componentName && !skipVariantsResolver) {
        expressionsWithDefaultTheme.push((props) => {
          const theme = isEmpty(props.theme) ? defaultTheme2 : props.theme;
          return variantsResolver(props, getVariantStyles(componentName, theme), theme, componentName);
        });
      }
      if (!skipSx) {
        expressionsWithDefaultTheme.push((props) => {
          const theme = isEmpty(props.theme) ? defaultTheme2 : props.theme;
          return styleFunctionSx2(_extends({}, props, {
            theme
          }));
        });
      }
      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;
      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {
        const placeholders = new Array(numOfCustomFnsApplied).fill("");
        transformedStyleArg = [...styleArg, ...placeholders];
        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];
      } else if (typeof styleArg === "function" && styleArg.__emotion_real !== styleArg) {
        transformedStyleArg = (_ref2) => {
          let {
            theme: themeInput
          } = _ref2, other = _objectWithoutPropertiesLoose$1(_ref2, _excluded3);
          return styleArg(_extends({
            theme: isEmpty(themeInput) ? defaultTheme2 : themeInput
          }, other));
        };
      }
      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);
      return Component;
    };
    if (defaultStyledResolver.withConfig) {
      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;
    }
    return muiStyledResolver;
  };
}
const styled$2 = createStyled();
var systemStyled = styled$2;
function getThemeProps(params) {
  const {
    theme,
    name,
    props
  } = params;
  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {
    return props;
  }
  return resolveProps(theme.components[name].defaultProps, props);
}
function useThemeProps$1({
  props,
  name,
  defaultTheme: defaultTheme2
}) {
  const theme = useTheme$1(defaultTheme2);
  const mergedProps = getThemeProps({
    theme,
    name,
    props
  });
  return mergedProps;
}
function clamp(value, min = 0, max = 1) {
  return Math.min(Math.max(min, value), max);
}
function hexToRgb(color2) {
  color2 = color2.slice(1);
  const re2 = new RegExp(`.{1,${color2.length >= 6 ? 2 : 1}}`, "g");
  let colors = color2.match(re2);
  if (colors && colors[0].length === 1) {
    colors = colors.map((n2) => n2 + n2);
  }
  return colors ? `rgb${colors.length === 4 ? "a" : ""}(${colors.map((n2, index) => {
    return index < 3 ? parseInt(n2, 16) : Math.round(parseInt(n2, 16) / 255 * 1e3) / 1e3;
  }).join(", ")})` : "";
}
function decomposeColor(color2) {
  if (color2.type) {
    return color2;
  }
  if (color2.charAt(0) === "#") {
    return decomposeColor(hexToRgb(color2));
  }
  const marker = color2.indexOf("(");
  const type = color2.substring(0, marker);
  if (["rgb", "rgba", "hsl", "hsla", "color"].indexOf(type) === -1) {
    throw new Error(formatMuiErrorMessage(9, color2));
  }
  let values2 = color2.substring(marker + 1, color2.length - 1);
  let colorSpace;
  if (type === "color") {
    values2 = values2.split(" ");
    colorSpace = values2.shift();
    if (values2.length === 4 && values2[3].charAt(0) === "/") {
      values2[3] = values2[3].slice(1);
    }
    if (["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].indexOf(colorSpace) === -1) {
      throw new Error(formatMuiErrorMessage(10, colorSpace));
    }
  } else {
    values2 = values2.split(",");
  }
  values2 = values2.map((value) => parseFloat(value));
  return {
    type,
    values: values2,
    colorSpace
  };
}
function recomposeColor(color2) {
  const {
    type,
    colorSpace
  } = color2;
  let {
    values: values2
  } = color2;
  if (type.indexOf("rgb") !== -1) {
    values2 = values2.map((n2, i2) => i2 < 3 ? parseInt(n2, 10) : n2);
  } else if (type.indexOf("hsl") !== -1) {
    values2[1] = `${values2[1]}%`;
    values2[2] = `${values2[2]}%`;
  }
  if (type.indexOf("color") !== -1) {
    values2 = `${colorSpace} ${values2.join(" ")}`;
  } else {
    values2 = `${values2.join(", ")}`;
  }
  return `${type}(${values2})`;
}
function hslToRgb(color2) {
  color2 = decomposeColor(color2);
  const {
    values: values2
  } = color2;
  const h2 = values2[0];
  const s = values2[1] / 100;
  const l2 = values2[2] / 100;
  const a = s * Math.min(l2, 1 - l2);
  const f2 = (n2, k2 = (n2 + h2 / 30) % 12) => l2 - a * Math.max(Math.min(k2 - 3, 9 - k2, 1), -1);
  let type = "rgb";
  const rgb = [Math.round(f2(0) * 255), Math.round(f2(8) * 255), Math.round(f2(4) * 255)];
  if (color2.type === "hsla") {
    type += "a";
    rgb.push(values2[3]);
  }
  return recomposeColor({
    type,
    values: rgb
  });
}
function getLuminance(color2) {
  color2 = decomposeColor(color2);
  let rgb = color2.type === "hsl" ? decomposeColor(hslToRgb(color2)).values : color2.values;
  rgb = rgb.map((val) => {
    if (color2.type !== "color") {
      val /= 255;
    }
    return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;
  });
  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));
}
function getContrastRatio(foreground, background) {
  const lumA = getLuminance(foreground);
  const lumB = getLuminance(background);
  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);
}
function alpha(color2, value) {
  color2 = decomposeColor(color2);
  value = clamp(value);
  if (color2.type === "rgb" || color2.type === "hsl") {
    color2.type += "a";
  }
  if (color2.type === "color") {
    color2.values[3] = `/${value}`;
  } else {
    color2.values[3] = value;
  }
  return recomposeColor(color2);
}
function darken(color2, coefficient) {
  color2 = decomposeColor(color2);
  coefficient = clamp(coefficient);
  if (color2.type.indexOf("hsl") !== -1) {
    color2.values[2] *= 1 - coefficient;
  } else if (color2.type.indexOf("rgb") !== -1 || color2.type.indexOf("color") !== -1) {
    for (let i2 = 0; i2 < 3; i2 += 1) {
      color2.values[i2] *= 1 - coefficient;
    }
  }
  return recomposeColor(color2);
}
function lighten(color2, coefficient) {
  color2 = decomposeColor(color2);
  coefficient = clamp(coefficient);
  if (color2.type.indexOf("hsl") !== -1) {
    color2.values[2] += (100 - color2.values[2]) * coefficient;
  } else if (color2.type.indexOf("rgb") !== -1) {
    for (let i2 = 0; i2 < 3; i2 += 1) {
      color2.values[i2] += (255 - color2.values[i2]) * coefficient;
    }
  } else if (color2.type.indexOf("color") !== -1) {
    for (let i2 = 0; i2 < 3; i2 += 1) {
      color2.values[i2] += (1 - color2.values[i2]) * coefficient;
    }
  }
  return recomposeColor(color2);
}
const _excluded$l = ["className", "component", "disableGutters", "fixed", "maxWidth", "classes"];
const defaultTheme$3 = createTheme$1();
const defaultCreateStyledComponent = systemStyled("div", {
  name: "MuiContainer",
  slot: "Root",
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];
  }
});
const useThemePropsDefault = (inProps) => useThemeProps$1({
  props: inProps,
  name: "MuiContainer",
  defaultTheme: defaultTheme$3
});
const useUtilityClasses$d = (ownerState, componentName) => {
  const getContainerUtilityClass = (slot) => {
    return generateUtilityClass(componentName, slot);
  };
  const {
    classes,
    fixed,
    disableGutters,
    maxWidth: maxWidth2
  } = ownerState;
  const slots = {
    root: ["root", maxWidth2 && `maxWidth${capitalize(String(maxWidth2))}`, fixed && "fixed", disableGutters && "disableGutters"]
  };
  return composeClasses(slots, getContainerUtilityClass, classes);
};
function createContainer(options = {}) {
  const {
    createStyledComponent = defaultCreateStyledComponent,
    useThemeProps: useThemeProps2 = useThemePropsDefault,
    componentName = "MuiContainer"
  } = options;
  const ContainerRoot = createStyledComponent(({
    theme,
    ownerState
  }) => _extends({
    width: "100%",
    marginLeft: "auto",
    boxSizing: "border-box",
    marginRight: "auto",
    display: "block"
  }, !ownerState.disableGutters && {
    paddingLeft: theme.spacing(2),
    paddingRight: theme.spacing(2),
    [theme.breakpoints.up("sm")]: {
      paddingLeft: theme.spacing(3),
      paddingRight: theme.spacing(3)
    }
  }), ({
    theme,
    ownerState
  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {
    const breakpoint = breakpointValueKey;
    const value = theme.breakpoints.values[breakpoint];
    if (value !== 0) {
      acc[theme.breakpoints.up(breakpoint)] = {
        maxWidth: `${value}${theme.breakpoints.unit}`
      };
    }
    return acc;
  }, {}), ({
    theme,
    ownerState
  }) => _extends({}, ownerState.maxWidth === "xs" && {
    [theme.breakpoints.up("xs")]: {
      maxWidth: Math.max(theme.breakpoints.values.xs, 444)
    }
  }, ownerState.maxWidth && ownerState.maxWidth !== "xs" && {
    [theme.breakpoints.up(ownerState.maxWidth)]: {
      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`
    }
  }));
  const Container2 = /* @__PURE__ */ react.exports.forwardRef(function Container3(inProps, ref) {
    const props = useThemeProps2(inProps);
    const {
      className,
      component = "div",
      disableGutters = false,
      fixed = false,
      maxWidth: maxWidth2 = "lg"
    } = props, other = _objectWithoutPropertiesLoose$1(props, _excluded$l);
    const ownerState = _extends({}, props, {
      component,
      disableGutters,
      fixed,
      maxWidth: maxWidth2
    });
    const classes = useUtilityClasses$d(ownerState, componentName);
    return /* @__PURE__ */ jsx(ContainerRoot, _extends({
      as: component,
      ownerState,
      className: clsx(classes.root, className),
      ref
    }, other));
  });
  return Container2;
}
function createMixins(breakpoints, mixins) {
  return _extends$1({
    toolbar: {
      minHeight: 56,
      [breakpoints.up("xs")]: {
        "@media (orientation: landscape)": {
          minHeight: 48
        }
      },
      [breakpoints.up("sm")]: {
        minHeight: 64
      }
    }
  }, mixins);
}
const _excluded$k = ["mode", "contrastThreshold", "tonalOffset"];
const light$1 = {
  text: {
    primary: "rgba(0, 0, 0, 0.87)",
    secondary: "rgba(0, 0, 0, 0.6)",
    disabled: "rgba(0, 0, 0, 0.38)"
  },
  divider: "rgba(0, 0, 0, 0.12)",
  background: {
    paper: common$1.white,
    default: common$1.white
  },
  action: {
    active: "rgba(0, 0, 0, 0.54)",
    hover: "rgba(0, 0, 0, 0.04)",
    hoverOpacity: 0.04,
    selected: "rgba(0, 0, 0, 0.08)",
    selectedOpacity: 0.08,
    disabled: "rgba(0, 0, 0, 0.26)",
    disabledBackground: "rgba(0, 0, 0, 0.12)",
    disabledOpacity: 0.38,
    focus: "rgba(0, 0, 0, 0.12)",
    focusOpacity: 0.12,
    activatedOpacity: 0.12
  }
};
const dark = {
  text: {
    primary: common$1.white,
    secondary: "rgba(255, 255, 255, 0.7)",
    disabled: "rgba(255, 255, 255, 0.5)",
    icon: "rgba(255, 255, 255, 0.5)"
  },
  divider: "rgba(255, 255, 255, 0.12)",
  background: {
    paper: "#121212",
    default: "#121212"
  },
  action: {
    active: common$1.white,
    hover: "rgba(255, 255, 255, 0.08)",
    hoverOpacity: 0.08,
    selected: "rgba(255, 255, 255, 0.16)",
    selectedOpacity: 0.16,
    disabled: "rgba(255, 255, 255, 0.3)",
    disabledBackground: "rgba(255, 255, 255, 0.12)",
    disabledOpacity: 0.38,
    focus: "rgba(255, 255, 255, 0.12)",
    focusOpacity: 0.12,
    activatedOpacity: 0.24
  }
};
function addLightOrDark(intent, direction, shade, tonalOffset) {
  const tonalOffsetLight = tonalOffset.light || tonalOffset;
  const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;
  if (!intent[direction]) {
    if (intent.hasOwnProperty(shade)) {
      intent[direction] = intent[shade];
    } else if (direction === "light") {
      intent.light = lighten(intent.main, tonalOffsetLight);
    } else if (direction === "dark") {
      intent.dark = darken(intent.main, tonalOffsetDark);
    }
  }
}
function getDefaultPrimary(mode = "light") {
  if (mode === "dark") {
    return {
      main: blue$1[200],
      light: blue$1[50],
      dark: blue$1[400]
    };
  }
  return {
    main: blue$1[700],
    light: blue$1[400],
    dark: blue$1[800]
  };
}
function getDefaultSecondary(mode = "light") {
  if (mode === "dark") {
    return {
      main: purple$1[200],
      light: purple$1[50],
      dark: purple$1[400]
    };
  }
  return {
    main: purple$1[500],
    light: purple$1[300],
    dark: purple$1[700]
  };
}
function getDefaultError(mode = "light") {
  if (mode === "dark") {
    return {
      main: red$1[500],
      light: red$1[300],
      dark: red$1[700]
    };
  }
  return {
    main: red$1[700],
    light: red$1[400],
    dark: red$1[800]
  };
}
function getDefaultInfo(mode = "light") {
  if (mode === "dark") {
    return {
      main: lightBlue$1[400],
      light: lightBlue$1[300],
      dark: lightBlue$1[700]
    };
  }
  return {
    main: lightBlue$1[700],
    light: lightBlue$1[500],
    dark: lightBlue$1[900]
  };
}
function getDefaultSuccess(mode = "light") {
  if (mode === "dark") {
    return {
      main: green$1[400],
      light: green$1[300],
      dark: green$1[700]
    };
  }
  return {
    main: green$1[800],
    light: green$1[500],
    dark: green$1[900]
  };
}
function getDefaultWarning(mode = "light") {
  if (mode === "dark") {
    return {
      main: orange$1[400],
      light: orange$1[300],
      dark: orange$1[700]
    };
  }
  return {
    main: "#ed6c02",
    light: orange$1[500],
    dark: orange$1[900]
  };
}
function createPalette(palette2) {
  const {
    mode = "light",
    contrastThreshold = 3,
    tonalOffset = 0.2
  } = palette2, other = _objectWithoutPropertiesLoose$2(palette2, _excluded$k);
  const primary = palette2.primary || getDefaultPrimary(mode);
  const secondary = palette2.secondary || getDefaultSecondary(mode);
  const error = palette2.error || getDefaultError(mode);
  const info = palette2.info || getDefaultInfo(mode);
  const success = palette2.success || getDefaultSuccess(mode);
  const warning = palette2.warning || getDefaultWarning(mode);
  function getContrastText(background) {
    const contrastText = getContrastRatio(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light$1.text.primary;
    return contrastText;
  }
  const augmentColor = ({
    color: color2,
    name,
    mainShade = 500,
    lightShade = 300,
    darkShade = 700
  }) => {
    color2 = _extends$1({}, color2);
    if (!color2.main && color2[mainShade]) {
      color2.main = color2[mainShade];
    }
    if (!color2.hasOwnProperty("main")) {
      throw new Error(formatMuiErrorMessage(11, name ? ` (${name})` : "", mainShade));
    }
    if (typeof color2.main !== "string") {
      throw new Error(formatMuiErrorMessage(12, name ? ` (${name})` : "", JSON.stringify(color2.main)));
    }
    addLightOrDark(color2, "light", lightShade, tonalOffset);
    addLightOrDark(color2, "dark", darkShade, tonalOffset);
    if (!color2.contrastText) {
      color2.contrastText = getContrastText(color2.main);
    }
    return color2;
  };
  const modes = {
    dark,
    light: light$1
  };
  const paletteOutput = deepmerge(_extends$1({
    common: _extends$1({}, common$1),
    mode,
    primary: augmentColor({
      color: primary,
      name: "primary"
    }),
    secondary: augmentColor({
      color: secondary,
      name: "secondary",
      mainShade: "A400",
      lightShade: "A200",
      darkShade: "A700"
    }),
    error: augmentColor({
      color: error,
      name: "error"
    }),
    warning: augmentColor({
      color: warning,
      name: "warning"
    }),
    info: augmentColor({
      color: info,
      name: "info"
    }),
    success: augmentColor({
      color: success,
      name: "success"
    }),
    grey: grey$1,
    contrastThreshold,
    getContrastText,
    augmentColor,
    tonalOffset
  }, modes[mode]), other);
  return paletteOutput;
}
const _excluded$j = ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"];
function round(value) {
  return Math.round(value * 1e5) / 1e5;
}
const caseAllCaps = {
  textTransform: "uppercase"
};
const defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';
function createTypography(palette2, typography2) {
  const _ref = typeof typography2 === "function" ? typography2(palette2) : typography2, {
    fontFamily: fontFamily2 = defaultFontFamily,
    fontSize: fontSize2 = 14,
    fontWeightLight = 300,
    fontWeightRegular = 400,
    fontWeightMedium = 500,
    fontWeightBold = 700,
    htmlFontSize = 16,
    allVariants,
    pxToRem: pxToRem2
  } = _ref, other = _objectWithoutPropertiesLoose$2(_ref, _excluded$j);
  const coef = fontSize2 / 14;
  const pxToRem = pxToRem2 || ((size) => `${size / htmlFontSize * coef}rem`);
  const buildVariant = (fontWeight2, size, lineHeight2, letterSpacing2, casing) => _extends$1({
    fontFamily: fontFamily2,
    fontWeight: fontWeight2,
    fontSize: pxToRem(size),
    lineHeight: lineHeight2
  }, fontFamily2 === defaultFontFamily ? {
    letterSpacing: `${round(letterSpacing2 / size)}em`
  } : {}, casing, allVariants);
  const variants = {
    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),
    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),
    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),
    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),
    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),
    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),
    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),
    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),
    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),
    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),
    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),
    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),
    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)
  };
  return deepmerge(_extends$1({
    htmlFontSize,
    pxToRem,
    fontFamily: fontFamily2,
    fontSize: fontSize2,
    fontWeightLight,
    fontWeightRegular,
    fontWeightMedium,
    fontWeightBold
  }, variants), other, {
    clone: false
  });
}
const shadowKeyUmbraOpacity = 0.2;
const shadowKeyPenumbraOpacity = 0.14;
const shadowAmbientShadowOpacity = 0.12;
function createShadow(...px) {
  return [`${px[0]}px ${px[1]}px ${px[2]}px ${px[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`, `${px[4]}px ${px[5]}px ${px[6]}px ${px[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`, `${px[8]}px ${px[9]}px ${px[10]}px ${px[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`].join(",");
}
const shadows = ["none", createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];
var shadows$1 = shadows;
const _excluded$i = ["duration", "easing", "delay"];
const easing = {
  easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
  easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
  easeIn: "cubic-bezier(0.4, 0, 1, 1)",
  sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
};
const duration = {
  shortest: 150,
  shorter: 200,
  short: 250,
  standard: 300,
  complex: 375,
  enteringScreen: 225,
  leavingScreen: 195
};
function formatMs(milliseconds) {
  return `${Math.round(milliseconds)}ms`;
}
function getAutoHeightDuration(height2) {
  if (!height2) {
    return 0;
  }
  const constant = height2 / 36;
  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);
}
function createTransitions(inputTransitions) {
  const mergedEasing = _extends$1({}, easing, inputTransitions.easing);
  const mergedDuration = _extends$1({}, duration, inputTransitions.duration);
  const create = (props = ["all"], options = {}) => {
    const {
      duration: durationOption = mergedDuration.standard,
      easing: easingOption = mergedEasing.easeInOut,
      delay = 0
    } = options;
    _objectWithoutPropertiesLoose$2(options, _excluded$i);
    return (Array.isArray(props) ? props : [props]).map((animatedProp) => `${animatedProp} ${typeof durationOption === "string" ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === "string" ? delay : formatMs(delay)}`).join(",");
  };
  return _extends$1({
    getAutoHeightDuration,
    create
  }, inputTransitions, {
    easing: mergedEasing,
    duration: mergedDuration
  });
}
const zIndex = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500
};
var zIndex$1 = zIndex;
const _excluded$h = ["breakpoints", "mixins", "spacing", "palette", "transitions", "typography", "shape"];
function createTheme(options = {}, ...args) {
  const {
    mixins: mixinsInput = {},
    palette: paletteInput = {},
    transitions: transitionsInput = {},
    typography: typographyInput = {}
  } = options, other = _objectWithoutPropertiesLoose$2(options, _excluded$h);
  const palette2 = createPalette(paletteInput);
  const systemTheme = createTheme$1(options);
  let muiTheme = deepmerge(systemTheme, {
    mixins: createMixins(systemTheme.breakpoints, mixinsInput),
    palette: palette2,
    shadows: shadows$1.slice(),
    typography: createTypography(palette2, typographyInput),
    transitions: createTransitions(transitionsInput),
    zIndex: _extends$1({}, zIndex$1)
  });
  muiTheme = deepmerge(muiTheme, other);
  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);
  return muiTheme;
}
const defaultTheme$1 = createTheme();
var defaultTheme$2 = defaultTheme$1;
function useTheme() {
  const theme = useTheme$1(defaultTheme$2);
  return theme;
}
function useThemeProps({
  props,
  name
}) {
  return useThemeProps$1({
    props,
    name,
    defaultTheme: defaultTheme$2
  });
}
const rootShouldForwardProp = (prop) => shouldForwardProp(prop) && prop !== "classes";
const styled = createStyled({
  defaultTheme: defaultTheme$2,
  rootShouldForwardProp
});
var styled$1 = styled;
function getPaperUtilityClass(slot) {
  return generateUtilityClass("MuiPaper", slot);
}
generateUtilityClasses("MuiPaper", ["root", "rounded", "outlined", "elevation", "elevation0", "elevation1", "elevation2", "elevation3", "elevation4", "elevation5", "elevation6", "elevation7", "elevation8", "elevation9", "elevation10", "elevation11", "elevation12", "elevation13", "elevation14", "elevation15", "elevation16", "elevation17", "elevation18", "elevation19", "elevation20", "elevation21", "elevation22", "elevation23", "elevation24"]);
const _excluded$g = ["className", "component", "elevation", "square", "variant"];
const getOverlayAlpha = (elevation) => {
  let alphaValue;
  if (elevation < 1) {
    alphaValue = 5.11916 * elevation ** 2;
  } else {
    alphaValue = 4.5 * Math.log(elevation + 1) + 2;
  }
  return (alphaValue / 100).toFixed(2);
};
const useUtilityClasses$c = (ownerState) => {
  const {
    square,
    elevation,
    variant,
    classes
  } = ownerState;
  const slots = {
    root: ["root", variant, !square && "rounded", variant === "elevation" && `elevation${elevation}`]
  };
  return composeClasses(slots, getPaperUtilityClass, classes);
};
const PaperRoot = styled$1("div", {
  name: "MuiPaper",
  slot: "Root",
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.root, styles[ownerState.variant], !ownerState.square && styles.rounded, ownerState.variant === "elevation" && styles[`elevation${ownerState.elevation}`]];
  }
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$overlays;
  return _extends$1({
    backgroundColor: (theme.vars || theme).palette.background.paper,
    color: (theme.vars || theme).palette.text.primary,
    transition: theme.transitions.create("box-shadow")
  }, !ownerState.square && {
    borderRadius: theme.shape.borderRadius
  }, ownerState.variant === "outlined" && {
    border: `1px solid ${(theme.vars || theme).palette.divider}`
  }, ownerState.variant === "elevation" && _extends$1({
    boxShadow: (theme.vars || theme).shadows[ownerState.elevation]
  }, !theme.vars && theme.palette.mode === "dark" && {
    backgroundImage: `linear-gradient(${alpha("#fff", getOverlayAlpha(ownerState.elevation))}, ${alpha("#fff", getOverlayAlpha(ownerState.elevation))})`
  }, theme.vars && {
    backgroundImage: (_theme$vars$overlays = theme.vars.overlays) == null ? void 0 : _theme$vars$overlays[ownerState.elevation]
  }));
});
const Paper = /* @__PURE__ */ react.exports.forwardRef(function Paper2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiPaper"
  });
  const {
    className,
    component = "div",
    elevation = 1,
    square = false,
    variant = "elevation"
  } = props, other = _objectWithoutPropertiesLoose$2(props, _excluded$g);
  const ownerState = _extends$1({}, props, {
    component,
    elevation,
    square,
    variant
  });
  const classes = useUtilityClasses$c(ownerState);
  return /* @__PURE__ */ jsx(PaperRoot, _extends$1({
    as: component,
    ownerState,
    className: clsx(classes.root, className),
    ref
  }, other));
});
var Paper$1 = Paper;
function getSvgIconUtilityClass(slot) {
  return generateUtilityClass("MuiSvgIcon", slot);
}
generateUtilityClasses("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
const _excluded$f = ["children", "className", "color", "component", "fontSize", "htmlColor", "inheritViewBox", "titleAccess", "viewBox"];
const useUtilityClasses$b = (ownerState) => {
  const {
    color: color2,
    fontSize: fontSize2,
    classes
  } = ownerState;
  const slots = {
    root: ["root", color2 !== "inherit" && `color${capitalize(color2)}`, `fontSize${capitalize(fontSize2)}`]
  };
  return composeClasses(slots, getSvgIconUtilityClass, classes);
};
const SvgIconRoot = styled$1("svg", {
  name: "MuiSvgIcon",
  slot: "Root",
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.root, ownerState.color !== "inherit" && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];
  }
})(({
  theme,
  ownerState
}) => {
  var _theme$transitions, _theme$transitions$cr, _theme$transitions2, _theme$transitions2$d, _theme$typography, _theme$typography$pxT, _theme$typography2, _theme$typography2$px, _theme$typography3, _theme$typography3$px, _palette$ownerState$c, _palette, _palette$ownerState$c2, _palette2, _palette2$action, _palette3, _palette3$action;
  return {
    userSelect: "none",
    width: "1em",
    height: "1em",
    display: "inline-block",
    fill: "currentColor",
    flexShrink: 0,
    transition: (_theme$transitions = theme.transitions) == null ? void 0 : (_theme$transitions$cr = _theme$transitions.create) == null ? void 0 : _theme$transitions$cr.call(_theme$transitions, "fill", {
      duration: (_theme$transitions2 = theme.transitions) == null ? void 0 : (_theme$transitions2$d = _theme$transitions2.duration) == null ? void 0 : _theme$transitions2$d.shorter
    }),
    fontSize: {
      inherit: "inherit",
      small: ((_theme$typography = theme.typography) == null ? void 0 : (_theme$typography$pxT = _theme$typography.pxToRem) == null ? void 0 : _theme$typography$pxT.call(_theme$typography, 20)) || "1.25rem",
      medium: ((_theme$typography2 = theme.typography) == null ? void 0 : (_theme$typography2$px = _theme$typography2.pxToRem) == null ? void 0 : _theme$typography2$px.call(_theme$typography2, 24)) || "1.5rem",
      large: ((_theme$typography3 = theme.typography) == null ? void 0 : (_theme$typography3$px = _theme$typography3.pxToRem) == null ? void 0 : _theme$typography3$px.call(_theme$typography3, 35)) || "2.1875"
    }[ownerState.fontSize],
    color: (_palette$ownerState$c = (_palette = (theme.vars || theme).palette) == null ? void 0 : (_palette$ownerState$c2 = _palette[ownerState.color]) == null ? void 0 : _palette$ownerState$c2.main) != null ? _palette$ownerState$c : {
      action: (_palette2 = (theme.vars || theme).palette) == null ? void 0 : (_palette2$action = _palette2.action) == null ? void 0 : _palette2$action.active,
      disabled: (_palette3 = (theme.vars || theme).palette) == null ? void 0 : (_palette3$action = _palette3.action) == null ? void 0 : _palette3$action.disabled,
      inherit: void 0
    }[ownerState.color]
  };
});
const SvgIcon = /* @__PURE__ */ react.exports.forwardRef(function SvgIcon2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiSvgIcon"
  });
  const {
    children,
    className,
    color: color2 = "inherit",
    component = "svg",
    fontSize: fontSize2 = "medium",
    htmlColor,
    inheritViewBox = false,
    titleAccess,
    viewBox = "0 0 24 24"
  } = props, other = _objectWithoutPropertiesLoose$2(props, _excluded$f);
  const ownerState = _extends$1({}, props, {
    color: color2,
    component,
    fontSize: fontSize2,
    instanceFontSize: inProps.fontSize,
    inheritViewBox,
    viewBox
  });
  const more = {};
  if (!inheritViewBox) {
    more.viewBox = viewBox;
  }
  const classes = useUtilityClasses$b(ownerState);
  return /* @__PURE__ */ jsxs(SvgIconRoot, _extends$1({
    as: component,
    className: clsx(classes.root, className),
    ownerState,
    focusable: "false",
    color: htmlColor,
    "aria-hidden": titleAccess ? void 0 : true,
    role: titleAccess ? "img" : void 0,
    ref
  }, more, other, {
    children: [children, titleAccess ? /* @__PURE__ */ jsx("title", {
      children: titleAccess
    }) : null]
  }));
});
SvgIcon.muiName = "SvgIcon";
var SvgIcon$1 = SvgIcon;
function createSvgIcon(path, displayName) {
  const Component = (props, ref) => /* @__PURE__ */ jsx(SvgIcon$1, _extends$1({
    "data-testid": `${displayName}Icon`,
    ref
  }, props, {
    children: path
  }));
  Component.muiName = SvgIcon$1.muiName;
  return /* @__PURE__ */ react.exports.memo(/* @__PURE__ */ react.exports.forwardRef(Component));
}
function _setPrototypeOf(o, p2) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p3) {
    o2.__proto__ = p3;
    return o2;
  };
  return _setPrototypeOf(o, p2);
}
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}
var TransitionGroupContext = React.createContext(null);
function _assertThisInitialized(self2) {
  if (self2 === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self2;
}
function getChildMapping(children, mapFn) {
  var mapper = function mapper2(child) {
    return mapFn && react.exports.isValidElement(child) ? mapFn(child) : child;
  };
  var result = /* @__PURE__ */ Object.create(null);
  if (children)
    react.exports.Children.map(children, function(c2) {
      return c2;
    }).forEach(function(child) {
      result[child.key] = mapper(child);
    });
  return result;
}
function mergeChildMappings(prev2, next2) {
  prev2 = prev2 || {};
  next2 = next2 || {};
  function getValueForKey(key) {
    return key in next2 ? next2[key] : prev2[key];
  }
  var nextKeysPending = /* @__PURE__ */ Object.create(null);
  var pendingKeys = [];
  for (var prevKey in prev2) {
    if (prevKey in next2) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }
  var i2;
  var childMapping = {};
  for (var nextKey in next2) {
    if (nextKeysPending[nextKey]) {
      for (i2 = 0; i2 < nextKeysPending[nextKey].length; i2++) {
        var pendingNextKey = nextKeysPending[nextKey][i2];
        childMapping[nextKeysPending[nextKey][i2]] = getValueForKey(pendingNextKey);
      }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
  }
  for (i2 = 0; i2 < pendingKeys.length; i2++) {
    childMapping[pendingKeys[i2]] = getValueForKey(pendingKeys[i2]);
  }
  return childMapping;
}
function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}
function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function(child) {
    return react.exports.cloneElement(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, "appear", props),
      enter: getProp(child, "enter", props),
      exit: getProp(child, "exit", props)
    });
  });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children).forEach(function(key) {
    var child = children[key];
    if (!react.exports.isValidElement(child))
      return;
    var hasPrev = key in prevChildMapping;
    var hasNext = key in nextChildMapping;
    var prevChild = prevChildMapping[key];
    var isLeaving = react.exports.isValidElement(prevChild) && !prevChild.props.in;
    if (hasNext && (!hasPrev || isLeaving)) {
      children[key] = react.exports.cloneElement(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      children[key] = react.exports.cloneElement(child, {
        in: false
      });
    } else if (hasNext && hasPrev && react.exports.isValidElement(prevChild)) {
      children[key] = react.exports.cloneElement(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    }
  });
  return children;
}
var values = Object.values || function(obj) {
  return Object.keys(obj).map(function(k2) {
    return obj[k2];
  });
};
var defaultProps = {
  component: "div",
  childFactory: function childFactory(child) {
    return child;
  }
};
var TransitionGroup = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(TransitionGroup2, _React$Component);
  function TransitionGroup2(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this));
    _this.state = {
      contextValue: {
        isMounting: true
      },
      handleExited,
      firstRender: true
    };
    return _this;
  }
  var _proto = TransitionGroup2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };
  TransitionGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
    return {
      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  };
  _proto.handleExited = function handleExited(child, node2) {
    var currentChildMapping = getChildMapping(this.props.children);
    if (child.key in currentChildMapping)
      return;
    if (child.props.onExited) {
      child.props.onExited(node2);
    }
    if (this.mounted) {
      this.setState(function(state) {
        var children = _extends({}, state.children);
        delete children[child.key];
        return {
          children
        };
      });
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, Component = _this$props.component, childFactory2 = _this$props.childFactory, props = _objectWithoutPropertiesLoose$1(_this$props, ["component", "childFactory"]);
    var contextValue = this.state.contextValue;
    var children = values(this.state.children).map(childFactory2);
    delete props.appear;
    delete props.enter;
    delete props.exit;
    if (Component === null) {
      return /* @__PURE__ */ React.createElement(TransitionGroupContext.Provider, {
        value: contextValue
      }, children);
    }
    return /* @__PURE__ */ React.createElement(TransitionGroupContext.Provider, {
      value: contextValue
    }, /* @__PURE__ */ React.createElement(Component, props, children));
  };
  return TransitionGroup2;
}(React.Component);
TransitionGroup.propTypes = {};
TransitionGroup.defaultProps = defaultProps;
var TransitionGroup$1 = TransitionGroup;
function Ripple(props) {
  const {
    className,
    classes,
    pulsate = false,
    rippleX,
    rippleY,
    rippleSize,
    in: inProp,
    onExited,
    timeout
  } = props;
  const [leaving, setLeaving] = react.exports.useState(false);
  const rippleClassName = clsx(className, classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);
  const rippleStyles = {
    width: rippleSize,
    height: rippleSize,
    top: -(rippleSize / 2) + rippleY,
    left: -(rippleSize / 2) + rippleX
  };
  const childClassName = clsx(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);
  if (!inProp && !leaving) {
    setLeaving(true);
  }
  react.exports.useEffect(() => {
    if (!inProp && onExited != null) {
      const timeoutId = setTimeout(onExited, timeout);
      return () => {
        clearTimeout(timeoutId);
      };
    }
    return void 0;
  }, [onExited, inProp, timeout]);
  return /* @__PURE__ */ jsx("span", {
    className: rippleClassName,
    style: rippleStyles,
    children: /* @__PURE__ */ jsx("span", {
      className: childClassName
    })
  });
}
const touchRippleClasses = generateUtilityClasses("MuiTouchRipple", ["root", "ripple", "rippleVisible", "ripplePulsate", "child", "childLeaving", "childPulsate"]);
var touchRippleClasses$1 = touchRippleClasses;
const _excluded$e = ["center", "classes", "className"];
let _$1 = (t2) => t2, _t$1, _t2$1, _t3$1, _t4$1;
const DURATION = 550;
const DELAY_RIPPLE = 80;
const enterKeyframe = keyframes(_t$1 || (_t$1 = _$1`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`));
const exitKeyframe = keyframes(_t2$1 || (_t2$1 = _$1`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`));
const pulsateKeyframe = keyframes(_t3$1 || (_t3$1 = _$1`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`));
const TouchRippleRoot = styled$1("span", {
  name: "MuiTouchRipple",
  slot: "Root"
})({
  overflow: "hidden",
  pointerEvents: "none",
  position: "absolute",
  zIndex: 0,
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  borderRadius: "inherit"
});
const TouchRippleRipple = styled$1(Ripple, {
  name: "MuiTouchRipple",
  slot: "Ripple"
})(_t4$1 || (_t4$1 = _$1`
  opacity: 0;
  position: absolute;

  &.${0} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  &.${0} {
    animation-duration: ${0}ms;
  }

  & .${0} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${0} {
    opacity: 0;
    animation-name: ${0};
    animation-duration: ${0}ms;
    animation-timing-function: ${0};
  }

  & .${0} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${0};
    animation-duration: 2500ms;
    animation-timing-function: ${0};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`), touchRippleClasses$1.rippleVisible, enterKeyframe, DURATION, ({
  theme
}) => theme.transitions.easing.easeInOut, touchRippleClasses$1.ripplePulsate, ({
  theme
}) => theme.transitions.duration.shorter, touchRippleClasses$1.child, touchRippleClasses$1.childLeaving, exitKeyframe, DURATION, ({
  theme
}) => theme.transitions.easing.easeInOut, touchRippleClasses$1.childPulsate, pulsateKeyframe, ({
  theme
}) => theme.transitions.easing.easeInOut);
const TouchRipple = /* @__PURE__ */ react.exports.forwardRef(function TouchRipple2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiTouchRipple"
  });
  const {
    center: centerProp = false,
    classes = {},
    className
  } = props, other = _objectWithoutPropertiesLoose$2(props, _excluded$e);
  const [ripples, setRipples] = react.exports.useState([]);
  const nextKey = react.exports.useRef(0);
  const rippleCallback = react.exports.useRef(null);
  react.exports.useEffect(() => {
    if (rippleCallback.current) {
      rippleCallback.current();
      rippleCallback.current = null;
    }
  }, [ripples]);
  const ignoringMouseDown = react.exports.useRef(false);
  const startTimer = react.exports.useRef(null);
  const startTimerCommit = react.exports.useRef(null);
  const container = react.exports.useRef(null);
  react.exports.useEffect(() => {
    return () => {
      clearTimeout(startTimer.current);
    };
  }, []);
  const startCommit = react.exports.useCallback((params) => {
    const {
      pulsate: pulsate2,
      rippleX,
      rippleY,
      rippleSize,
      cb: cb2
    } = params;
    setRipples((oldRipples) => [...oldRipples, /* @__PURE__ */ jsx(TouchRippleRipple, {
      classes: {
        ripple: clsx(classes.ripple, touchRippleClasses$1.ripple),
        rippleVisible: clsx(classes.rippleVisible, touchRippleClasses$1.rippleVisible),
        ripplePulsate: clsx(classes.ripplePulsate, touchRippleClasses$1.ripplePulsate),
        child: clsx(classes.child, touchRippleClasses$1.child),
        childLeaving: clsx(classes.childLeaving, touchRippleClasses$1.childLeaving),
        childPulsate: clsx(classes.childPulsate, touchRippleClasses$1.childPulsate)
      },
      timeout: DURATION,
      pulsate: pulsate2,
      rippleX,
      rippleY,
      rippleSize
    }, nextKey.current)]);
    nextKey.current += 1;
    rippleCallback.current = cb2;
  }, [classes]);
  const start = react.exports.useCallback((event2 = {}, options = {}, cb2) => {
    const {
      pulsate: pulsate2 = false,
      center = centerProp || options.pulsate,
      fakeElement = false
    } = options;
    if ((event2 == null ? void 0 : event2.type) === "mousedown" && ignoringMouseDown.current) {
      ignoringMouseDown.current = false;
      return;
    }
    if ((event2 == null ? void 0 : event2.type) === "touchstart") {
      ignoringMouseDown.current = true;
    }
    const element = fakeElement ? null : container.current;
    const rect = element ? element.getBoundingClientRect() : {
      width: 0,
      height: 0,
      left: 0,
      top: 0
    };
    let rippleX;
    let rippleY;
    let rippleSize;
    if (center || event2 === void 0 || event2.clientX === 0 && event2.clientY === 0 || !event2.clientX && !event2.touches) {
      rippleX = Math.round(rect.width / 2);
      rippleY = Math.round(rect.height / 2);
    } else {
      const {
        clientX,
        clientY
      } = event2.touches ? event2.touches[0] : event2;
      rippleX = Math.round(clientX - rect.left);
      rippleY = Math.round(clientY - rect.top);
    }
    if (center) {
      rippleSize = Math.sqrt((2 * rect.width ** 2 + rect.height ** 2) / 3);
      if (rippleSize % 2 === 0) {
        rippleSize += 1;
      }
    } else {
      const sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;
      const sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;
      rippleSize = Math.sqrt(sizeX ** 2 + sizeY ** 2);
    }
    if (event2 != null && event2.touches) {
      if (startTimerCommit.current === null) {
        startTimerCommit.current = () => {
          startCommit({
            pulsate: pulsate2,
            rippleX,
            rippleY,
            rippleSize,
            cb: cb2
          });
        };
        startTimer.current = setTimeout(() => {
          if (startTimerCommit.current) {
            startTimerCommit.current();
            startTimerCommit.current = null;
          }
        }, DELAY_RIPPLE);
      }
    } else {
      startCommit({
        pulsate: pulsate2,
        rippleX,
        rippleY,
        rippleSize,
        cb: cb2
      });
    }
  }, [centerProp, startCommit]);
  const pulsate = react.exports.useCallback(() => {
    start({}, {
      pulsate: true
    });
  }, [start]);
  const stop = react.exports.useCallback((event2, cb2) => {
    clearTimeout(startTimer.current);
    if ((event2 == null ? void 0 : event2.type) === "touchend" && startTimerCommit.current) {
      startTimerCommit.current();
      startTimerCommit.current = null;
      startTimer.current = setTimeout(() => {
        stop(event2, cb2);
      });
      return;
    }
    startTimerCommit.current = null;
    setRipples((oldRipples) => {
      if (oldRipples.length > 0) {
        return oldRipples.slice(1);
      }
      return oldRipples;
    });
    rippleCallback.current = cb2;
  }, []);
  react.exports.useImperativeHandle(ref, () => ({
    pulsate,
    start,
    stop
  }), [pulsate, start, stop]);
  return /* @__PURE__ */ jsx(TouchRippleRoot, _extends$1({
    className: clsx(classes.root, touchRippleClasses$1.root, className),
    ref: container
  }, other, {
    children: /* @__PURE__ */ jsx(TransitionGroup$1, {
      component: null,
      exit: true,
      children: ripples
    })
  }));
});
var TouchRipple$1 = TouchRipple;
function getButtonBaseUtilityClass(slot) {
  return generateUtilityClass("MuiButtonBase", slot);
}
const buttonBaseClasses = generateUtilityClasses("MuiButtonBase", ["root", "disabled", "focusVisible"]);
var buttonBaseClasses$1 = buttonBaseClasses;
const _excluded$d = ["action", "centerRipple", "children", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "LinkComponent", "onBlur", "onClick", "onContextMenu", "onDragLeave", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "tabIndex", "TouchRippleProps", "touchRippleRef", "type"];
const useUtilityClasses$a = (ownerState) => {
  const {
    disabled,
    focusVisible,
    focusVisibleClassName,
    classes
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible"]
  };
  const composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes);
  if (focusVisible && focusVisibleClassName) {
    composedClasses.root += ` ${focusVisibleClassName}`;
  }
  return composedClasses;
};
const ButtonBaseRoot = styled$1("button", {
  name: "MuiButtonBase",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})({
  display: "inline-flex",
  alignItems: "center",
  justifyContent: "center",
  position: "relative",
  boxSizing: "border-box",
  WebkitTapHighlightColor: "transparent",
  backgroundColor: "transparent",
  outline: 0,
  border: 0,
  margin: 0,
  borderRadius: 0,
  padding: 0,
  cursor: "pointer",
  userSelect: "none",
  verticalAlign: "middle",
  MozAppearance: "none",
  WebkitAppearance: "none",
  textDecoration: "none",
  color: "inherit",
  "&::-moz-focus-inner": {
    borderStyle: "none"
  },
  [`&.${buttonBaseClasses$1.disabled}`]: {
    pointerEvents: "none",
    cursor: "default"
  },
  "@media print": {
    colorAdjust: "exact"
  }
});
const ButtonBase = /* @__PURE__ */ react.exports.forwardRef(function ButtonBase2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiButtonBase"
  });
  const {
    action,
    centerRipple = false,
    children,
    className,
    component = "button",
    disabled = false,
    disableRipple = false,
    disableTouchRipple = false,
    focusRipple = false,
    LinkComponent = "a",
    onBlur,
    onClick,
    onContextMenu,
    onDragLeave,
    onFocus,
    onFocusVisible,
    onKeyDown,
    onKeyUp,
    onMouseDown,
    onMouseLeave,
    onMouseUp,
    onTouchEnd,
    onTouchMove,
    onTouchStart,
    tabIndex = 0,
    TouchRippleProps,
    touchRippleRef,
    type
  } = props, other = _objectWithoutPropertiesLoose$2(props, _excluded$d);
  const buttonRef = react.exports.useRef(null);
  const rippleRef = react.exports.useRef(null);
  const handleRippleRef = useForkRef(rippleRef, touchRippleRef);
  const {
    isFocusVisibleRef,
    onFocus: handleFocusVisible,
    onBlur: handleBlurVisible,
    ref: focusVisibleRef
  } = useIsFocusVisible();
  const [focusVisible, setFocusVisible] = react.exports.useState(false);
  if (disabled && focusVisible) {
    setFocusVisible(false);
  }
  react.exports.useImperativeHandle(action, () => ({
    focusVisible: () => {
      setFocusVisible(true);
      buttonRef.current.focus();
    }
  }), []);
  const [mountedState, setMountedState] = react.exports.useState(false);
  react.exports.useEffect(() => {
    setMountedState(true);
  }, []);
  const enableTouchRipple = mountedState && !disableRipple && !disabled;
  react.exports.useEffect(() => {
    if (focusVisible && focusRipple && !disableRipple && mountedState) {
      rippleRef.current.pulsate();
    }
  }, [disableRipple, focusRipple, focusVisible, mountedState]);
  function useRippleHandler(rippleAction, eventCallback, skipRippleAction = disableTouchRipple) {
    return useEventCallback((event2) => {
      if (eventCallback) {
        eventCallback(event2);
      }
      const ignore = skipRippleAction;
      if (!ignore && rippleRef.current) {
        rippleRef.current[rippleAction](event2);
      }
      return true;
    });
  }
  const handleMouseDown = useRippleHandler("start", onMouseDown);
  const handleContextMenu = useRippleHandler("stop", onContextMenu);
  const handleDragLeave = useRippleHandler("stop", onDragLeave);
  const handleMouseUp = useRippleHandler("stop", onMouseUp);
  const handleMouseLeave = useRippleHandler("stop", (event2) => {
    if (focusVisible) {
      event2.preventDefault();
    }
    if (onMouseLeave) {
      onMouseLeave(event2);
    }
  });
  const handleTouchStart = useRippleHandler("start", onTouchStart);
  const handleTouchEnd = useRippleHandler("stop", onTouchEnd);
  const handleTouchMove = useRippleHandler("stop", onTouchMove);
  const handleBlur = useRippleHandler("stop", (event2) => {
    handleBlurVisible(event2);
    if (isFocusVisibleRef.current === false) {
      setFocusVisible(false);
    }
    if (onBlur) {
      onBlur(event2);
    }
  }, false);
  const handleFocus = useEventCallback((event2) => {
    if (!buttonRef.current) {
      buttonRef.current = event2.currentTarget;
    }
    handleFocusVisible(event2);
    if (isFocusVisibleRef.current === true) {
      setFocusVisible(true);
      if (onFocusVisible) {
        onFocusVisible(event2);
      }
    }
    if (onFocus) {
      onFocus(event2);
    }
  });
  const isNonNativeButton = () => {
    const button = buttonRef.current;
    return component && component !== "button" && !(button.tagName === "A" && button.href);
  };
  const keydownRef = react.exports.useRef(false);
  const handleKeyDown2 = useEventCallback((event2) => {
    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event2.key === " ") {
      keydownRef.current = true;
      rippleRef.current.stop(event2, () => {
        rippleRef.current.start(event2);
      });
    }
    if (event2.target === event2.currentTarget && isNonNativeButton() && event2.key === " ") {
      event2.preventDefault();
    }
    if (onKeyDown) {
      onKeyDown(event2);
    }
    if (event2.target === event2.currentTarget && isNonNativeButton() && event2.key === "Enter" && !disabled) {
      event2.preventDefault();
      if (onClick) {
        onClick(event2);
      }
    }
  });
  const handleKeyUp = useEventCallback((event2) => {
    if (focusRipple && event2.key === " " && rippleRef.current && focusVisible && !event2.defaultPrevented) {
      keydownRef.current = false;
      rippleRef.current.stop(event2, () => {
        rippleRef.current.pulsate(event2);
      });
    }
    if (onKeyUp) {
      onKeyUp(event2);
    }
    if (onClick && event2.target === event2.currentTarget && isNonNativeButton() && event2.key === " " && !event2.defaultPrevented) {
      onClick(event2);
    }
  });
  let ComponentProp = component;
  if (ComponentProp === "button" && (other.href || other.to)) {
    ComponentProp = LinkComponent;
  }
  const buttonProps = {};
  if (ComponentProp === "button") {
    buttonProps.type = type === void 0 ? "button" : type;
    buttonProps.disabled = disabled;
  } else {
    if (!other.href && !other.to) {
      buttonProps.role = "button";
    }
    if (disabled) {
      buttonProps["aria-disabled"] = disabled;
    }
  }
  const handleOwnRef = useForkRef(focusVisibleRef, buttonRef);
  const handleRef = useForkRef(ref, handleOwnRef);
  const ownerState = _extends$1({}, props, {
    centerRipple,
    component,
    disabled,
    disableRipple,
    disableTouchRipple,
    focusRipple,
    tabIndex,
    focusVisible
  });
  const classes = useUtilityClasses$a(ownerState);
  return /* @__PURE__ */ jsxs(ButtonBaseRoot, _extends$1({
    as: ComponentProp,
    className: clsx(classes.root, className),
    ownerState,
    onBlur: handleBlur,
    onClick,
    onContextMenu: handleContextMenu,
    onFocus: handleFocus,
    onKeyDown: handleKeyDown2,
    onKeyUp: handleKeyUp,
    onMouseDown: handleMouseDown,
    onMouseLeave: handleMouseLeave,
    onMouseUp: handleMouseUp,
    onDragLeave: handleDragLeave,
    onTouchEnd: handleTouchEnd,
    onTouchMove: handleTouchMove,
    onTouchStart: handleTouchStart,
    ref: handleRef,
    tabIndex: disabled ? -1 : tabIndex,
    type
  }, buttonProps, other, {
    children: [children, enableTouchRipple ? /* @__PURE__ */ jsx(TouchRipple$1, _extends$1({
      ref: handleRippleRef,
      center: centerRipple
    }, TouchRippleProps)) : null]
  }));
});
var ButtonBase$1 = ButtonBase;
function getTypographyUtilityClass(slot) {
  return generateUtilityClass("MuiTypography", slot);
}
generateUtilityClasses("MuiTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "inherit", "button", "caption", "overline", "alignLeft", "alignRight", "alignCenter", "alignJustify", "noWrap", "gutterBottom", "paragraph"]);
const _excluded$c = ["align", "className", "component", "gutterBottom", "noWrap", "paragraph", "variant", "variantMapping"];
const useUtilityClasses$9 = (ownerState) => {
  const {
    align,
    gutterBottom,
    noWrap,
    paragraph,
    variant,
    classes
  } = ownerState;
  const slots = {
    root: ["root", variant, ownerState.align !== "inherit" && `align${capitalize(align)}`, gutterBottom && "gutterBottom", noWrap && "noWrap", paragraph && "paragraph"]
  };
  return composeClasses(slots, getTypographyUtilityClass, classes);
};
const TypographyRoot = styled$1("span", {
  name: "MuiTypography",
  slot: "Root",
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== "inherit" && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];
  }
})(({
  theme,
  ownerState
}) => _extends$1({
  margin: 0
}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== "inherit" && {
  textAlign: ownerState.align
}, ownerState.noWrap && {
  overflow: "hidden",
  textOverflow: "ellipsis",
  whiteSpace: "nowrap"
}, ownerState.gutterBottom && {
  marginBottom: "0.35em"
}, ownerState.paragraph && {
  marginBottom: 16
}));
const defaultVariantMapping = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p",
  inherit: "p"
};
const colorTransformations = {
  primary: "primary.main",
  textPrimary: "text.primary",
  secondary: "secondary.main",
  textSecondary: "text.secondary",
  error: "error.main"
};
const transformDeprecatedColors = (color2) => {
  return colorTransformations[color2] || color2;
};
const Typography = /* @__PURE__ */ react.exports.forwardRef(function Typography2(inProps, ref) {
  const themeProps = useThemeProps({
    props: inProps,
    name: "MuiTypography"
  });
  const color2 = transformDeprecatedColors(themeProps.color);
  const props = extendSxProp(_extends$1({}, themeProps, {
    color: color2
  }));
  const {
    align = "inherit",
    className,
    component,
    gutterBottom = false,
    noWrap = false,
    paragraph = false,
    variant = "body1",
    variantMapping = defaultVariantMapping
  } = props, other = _objectWithoutPropertiesLoose$2(props, _excluded$c);
  const ownerState = _extends$1({}, props, {
    align,
    color: color2,
    className,
    component,
    gutterBottom,
    noWrap,
    paragraph,
    variant,
    variantMapping
  });
  const Component = component || (paragraph ? "p" : variantMapping[variant] || defaultVariantMapping[variant]) || "span";
  const classes = useUtilityClasses$9(ownerState);
  return /* @__PURE__ */ jsx(TypographyRoot, _extends$1({
    as: Component,
    ref,
    ownerState,
    className: clsx(classes.root, className)
  }, other));
});
var Typography$1 = Typography;
var CancelIcon = createSvgIcon(/* @__PURE__ */ jsx("path", {
  d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
}), "Cancel");
function getChipUtilityClass(slot) {
  return generateUtilityClass("MuiChip", slot);
}
const chipClasses = generateUtilityClasses("MuiChip", ["root", "sizeSmall", "sizeMedium", "colorPrimary", "colorSecondary", "disabled", "clickable", "clickableColorPrimary", "clickableColorSecondary", "deletable", "deletableColorPrimary", "deletableColorSecondary", "outlined", "filled", "outlinedPrimary", "outlinedSecondary", "avatar", "avatarSmall", "avatarMedium", "avatarColorPrimary", "avatarColorSecondary", "icon", "iconSmall", "iconMedium", "iconColorPrimary", "iconColorSecondary", "label", "labelSmall", "labelMedium", "deleteIcon", "deleteIconSmall", "deleteIconMedium", "deleteIconColorPrimary", "deleteIconColorSecondary", "deleteIconOutlinedColorPrimary", "deleteIconOutlinedColorSecondary", "focusVisible"]);
var chipClasses$1 = chipClasses;
const _excluded$b = ["avatar", "className", "clickable", "color", "component", "deleteIcon", "disabled", "icon", "label", "onClick", "onDelete", "onKeyDown", "onKeyUp", "size", "variant"];
const useUtilityClasses$8 = (ownerState) => {
  const {
    classes,
    disabled,
    size,
    color: color2,
    onDelete,
    clickable,
    variant
  } = ownerState;
  const slots = {
    root: ["root", variant, disabled && "disabled", `size${capitalize(size)}`, `color${capitalize(color2)}`, clickable && "clickable", clickable && `clickableColor${capitalize(color2)}`, onDelete && "deletable", onDelete && `deletableColor${capitalize(color2)}`, `${variant}${capitalize(color2)}`],
    label: ["label", `label${capitalize(size)}`],
    avatar: ["avatar", `avatar${capitalize(size)}`, `avatarColor${capitalize(color2)}`],
    icon: ["icon", `icon${capitalize(size)}`, `iconColor${capitalize(color2)}`],
    deleteIcon: ["deleteIcon", `deleteIcon${capitalize(size)}`, `deleteIconColor${capitalize(color2)}`, `deleteIconOutlinedColor${capitalize(color2)}`]
  };
  return composeClasses(slots, getChipUtilityClass, classes);
};
const ChipRoot = styled$1("div", {
  name: "MuiChip",
  slot: "Root",
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    const {
      color: color2,
      clickable,
      onDelete,
      size,
      variant
    } = ownerState;
    return [{
      [`& .${chipClasses$1.avatar}`]: styles.avatar
    }, {
      [`& .${chipClasses$1.avatar}`]: styles[`avatar${capitalize(size)}`]
    }, {
      [`& .${chipClasses$1.avatar}`]: styles[`avatarColor${capitalize(color2)}`]
    }, {
      [`& .${chipClasses$1.icon}`]: styles.icon
    }, {
      [`& .${chipClasses$1.icon}`]: styles[`icon${capitalize(size)}`]
    }, {
      [`& .${chipClasses$1.icon}`]: styles[`iconColor${capitalize(color2)}`]
    }, {
      [`& .${chipClasses$1.deleteIcon}`]: styles.deleteIcon
    }, {
      [`& .${chipClasses$1.deleteIcon}`]: styles[`deleteIcon${capitalize(size)}`]
    }, {
      [`& .${chipClasses$1.deleteIcon}`]: styles[`deleteIconColor${capitalize(color2)}`]
    }, {
      [`& .${chipClasses$1.deleteIcon}`]: styles[`deleteIconOutlinedColor${capitalize(color2)}`]
    }, styles.root, styles[`size${capitalize(size)}`], styles[`color${capitalize(color2)}`], clickable && styles.clickable, clickable && color2 !== "default" && styles[`clickableColor${capitalize(color2)})`], onDelete && styles.deletable, onDelete && color2 !== "default" && styles[`deletableColor${capitalize(color2)}`], styles[variant], variant === "outlined" && styles[`outlined${capitalize(color2)}`]];
  }
})(({
  theme,
  ownerState
}) => {
  const deleteIconColor = alpha(theme.palette.text.primary, 0.26);
  const textColor = theme.palette.mode === "light" ? theme.palette.grey[700] : theme.palette.grey[300];
  return _extends$1({
    maxWidth: "100%",
    fontFamily: theme.typography.fontFamily,
    fontSize: theme.typography.pxToRem(13),
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    height: 32,
    color: (theme.vars || theme).palette.text.primary,
    backgroundColor: (theme.vars || theme).palette.action.selected,
    borderRadius: 32 / 2,
    whiteSpace: "nowrap",
    transition: theme.transitions.create(["background-color", "box-shadow"]),
    cursor: "default",
    outline: 0,
    textDecoration: "none",
    border: 0,
    padding: 0,
    verticalAlign: "middle",
    boxSizing: "border-box",
    [`&.${chipClasses$1.disabled}`]: {
      opacity: (theme.vars || theme).palette.action.disabledOpacity,
      pointerEvents: "none"
    },
    [`& .${chipClasses$1.avatar}`]: {
      marginLeft: 5,
      marginRight: -6,
      width: 24,
      height: 24,
      color: theme.vars ? theme.vars.palette.Chip.defaultAvatarColor : textColor,
      fontSize: theme.typography.pxToRem(12)
    },
    [`& .${chipClasses$1.avatarColorPrimary}`]: {
      color: (theme.vars || theme).palette.primary.contrastText,
      backgroundColor: (theme.vars || theme).palette.primary.dark
    },
    [`& .${chipClasses$1.avatarColorSecondary}`]: {
      color: (theme.vars || theme).palette.secondary.contrastText,
      backgroundColor: (theme.vars || theme).palette.secondary.dark
    },
    [`& .${chipClasses$1.avatarSmall}`]: {
      marginLeft: 4,
      marginRight: -4,
      width: 18,
      height: 18,
      fontSize: theme.typography.pxToRem(10)
    },
    [`& .${chipClasses$1.icon}`]: _extends$1({
      color: theme.vars ? theme.vars.palette.Chip.defaultIconColor : textColor,
      marginLeft: 5,
      marginRight: -6
    }, ownerState.size === "small" && {
      fontSize: 18,
      marginLeft: 4,
      marginRight: -4
    }, ownerState.color !== "default" && {
      color: "inherit"
    }),
    [`& .${chipClasses$1.deleteIcon}`]: _extends$1({
      WebkitTapHighlightColor: "transparent",
      color: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / 0.26)` : deleteIconColor,
      fontSize: 22,
      cursor: "pointer",
      margin: "0 5px 0 -6px",
      "&:hover": {
        color: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / 0.4)` : alpha(deleteIconColor, 0.4)
      }
    }, ownerState.size === "small" && {
      fontSize: 16,
      marginRight: 4,
      marginLeft: -4
    }, ownerState.color !== "default" && {
      color: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].contrastTextChannel} / 0.7)` : alpha(theme.palette[ownerState.color].contrastText, 0.7),
      "&:hover, &:active": {
        color: (theme.vars || theme).palette[ownerState.color].contrastText
      }
    })
  }, ownerState.size === "small" && {
    height: 24
  }, ownerState.color !== "default" && {
    backgroundColor: (theme.vars || theme).palette[ownerState.color].main,
    color: (theme.vars || theme).palette[ownerState.color].contrastText
  }, ownerState.onDelete && {
    [`&.${chipClasses$1.focusVisible}`]: {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity + theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)
    }
  }, ownerState.onDelete && ownerState.color !== "default" && {
    [`&.${chipClasses$1.focusVisible}`]: {
      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark
    }
  });
}, ({
  theme,
  ownerState
}) => _extends$1({}, ownerState.clickable && {
  userSelect: "none",
  WebkitTapHighlightColor: "transparent",
  cursor: "pointer",
  "&:hover": {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity + theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)
  },
  [`&.${chipClasses$1.focusVisible}`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity + theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)
  },
  "&:active": {
    boxShadow: (theme.vars || theme).shadows[1]
  }
}, ownerState.clickable && ownerState.color !== "default" && {
  [`&:hover, &.${chipClasses$1.focusVisible}`]: {
    backgroundColor: (theme.vars || theme).palette[ownerState.color].dark
  }
}), ({
  theme,
  ownerState
}) => _extends$1({}, ownerState.variant === "outlined" && {
  backgroundColor: "transparent",
  border: theme.vars ? `1px solid ${theme.vars.palette.Chip.defaultBorder}` : `1px solid ${theme.palette.mode === "light" ? theme.palette.grey[400] : theme.palette.grey[700]}`,
  [`&.${chipClasses$1.clickable}:hover`]: {
    backgroundColor: (theme.vars || theme).palette.action.hover
  },
  [`&.${chipClasses$1.focusVisible}`]: {
    backgroundColor: (theme.vars || theme).palette.action.focus
  },
  [`& .${chipClasses$1.avatar}`]: {
    marginLeft: 4
  },
  [`& .${chipClasses$1.avatarSmall}`]: {
    marginLeft: 2
  },
  [`& .${chipClasses$1.icon}`]: {
    marginLeft: 4
  },
  [`& .${chipClasses$1.iconSmall}`]: {
    marginLeft: 2
  },
  [`& .${chipClasses$1.deleteIcon}`]: {
    marginRight: 5
  },
  [`& .${chipClasses$1.deleteIconSmall}`]: {
    marginRight: 3
  }
}, ownerState.variant === "outlined" && ownerState.color !== "default" && {
  color: (theme.vars || theme).palette[ownerState.color].main,
  border: `1px solid ${theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.7)` : alpha(theme.palette[ownerState.color].main, 0.7)}`,
  [`&.${chipClasses$1.clickable}:hover`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity)
  },
  [`&.${chipClasses$1.focusVisible}`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.focusOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.focusOpacity)
  },
  [`& .${chipClasses$1.deleteIcon}`]: {
    color: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.7)` : alpha(theme.palette[ownerState.color].main, 0.7),
    "&:hover, &:active": {
      color: (theme.vars || theme).palette[ownerState.color].main
    }
  }
}));
const ChipLabel = styled$1("span", {
  name: "MuiChip",
  slot: "Label",
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    const {
      size
    } = ownerState;
    return [styles.label, styles[`label${capitalize(size)}`]];
  }
})(({
  ownerState
}) => _extends$1({
  overflow: "hidden",
  textOverflow: "ellipsis",
  paddingLeft: 12,
  paddingRight: 12,
  whiteSpace: "nowrap"
}, ownerState.size === "small" && {
  paddingLeft: 8,
  paddingRight: 8
}));
function isDeleteKeyboardEvent(keyboardEvent) {
  return keyboardEvent.key === "Backspace" || keyboardEvent.key === "Delete";
}
const Chip = /* @__PURE__ */ react.exports.forwardRef(function Chip2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiChip"
  });
  const {
    avatar: avatarProp,
    className,
    clickable: clickableProp,
    color: color2 = "default",
    component: ComponentProp,
    deleteIcon: deleteIconProp,
    disabled = false,
    icon: iconProp,
    label,
    onClick,
    onDelete,
    onKeyDown,
    onKeyUp,
    size = "medium",
    variant = "filled"
  } = props, other = _objectWithoutPropertiesLoose$2(props, _excluded$b);
  const chipRef = react.exports.useRef(null);
  const handleRef = useForkRef(chipRef, ref);
  const handleDeleteIconClick = (event2) => {
    event2.stopPropagation();
    if (onDelete) {
      onDelete(event2);
    }
  };
  const handleKeyDown2 = (event2) => {
    if (event2.currentTarget === event2.target && isDeleteKeyboardEvent(event2)) {
      event2.preventDefault();
    }
    if (onKeyDown) {
      onKeyDown(event2);
    }
  };
  const handleKeyUp = (event2) => {
    if (event2.currentTarget === event2.target) {
      if (onDelete && isDeleteKeyboardEvent(event2)) {
        onDelete(event2);
      } else if (event2.key === "Escape" && chipRef.current) {
        chipRef.current.blur();
      }
    }
    if (onKeyUp) {
      onKeyUp(event2);
    }
  };
  const clickable = clickableProp !== false && onClick ? true : clickableProp;
  const small = size === "small";
  const component = clickable || onDelete ? ButtonBase$1 : ComponentProp || "div";
  const ownerState = _extends$1({}, props, {
    component,
    disabled,
    size,
    color: color2,
    onDelete: !!onDelete,
    clickable,
    variant
  });
  const classes = useUtilityClasses$8(ownerState);
  const moreProps = component === ButtonBase$1 ? _extends$1({
    component: ComponentProp || "div",
    focusVisibleClassName: classes.focusVisible
  }, onDelete && {
    disableRipple: true
  }) : {};
  let deleteIcon = null;
  if (onDelete) {
    const customClasses = clsx(color2 !== "default" && (variant === "outlined" ? classes[`deleteIconOutlinedColor${capitalize(color2)}`] : classes[`deleteIconColor${capitalize(color2)}`]), small && classes.deleteIconSmall);
    deleteIcon = deleteIconProp && /* @__PURE__ */ react.exports.isValidElement(deleteIconProp) ? /* @__PURE__ */ react.exports.cloneElement(deleteIconProp, {
      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),
      onClick: handleDeleteIconClick
    }) : /* @__PURE__ */ jsx(CancelIcon, {
      className: clsx(classes.deleteIcon, customClasses),
      onClick: handleDeleteIconClick
    });
  }
  let avatar = null;
  if (avatarProp && /* @__PURE__ */ react.exports.isValidElement(avatarProp)) {
    avatar = /* @__PURE__ */ react.exports.cloneElement(avatarProp, {
      className: clsx(classes.avatar, avatarProp.props.className)
    });
  }
  let icon = null;
  if (iconProp && /* @__PURE__ */ react.exports.isValidElement(iconProp)) {
    icon = /* @__PURE__ */ react.exports.cloneElement(iconProp, {
      className: clsx(classes.icon, iconProp.props.className)
    });
  }
  return /* @__PURE__ */ jsxs(ChipRoot, _extends$1({
    as: component,
    className: clsx(classes.root, className),
    disabled: clickable && disabled ? true : void 0,
    onClick,
    onKeyDown: handleKeyDown2,
    onKeyUp: handleKeyUp,
    ref: handleRef,
    ownerState
  }, moreProps, other, {
    children: [avatar || icon, /* @__PURE__ */ jsx(ChipLabel, {
      className: clsx(classes.label),
      ownerState,
      children: label
    }), deleteIcon]
  }));
});
var Chip$1 = Chip;
const defaultTheme = createTheme();
const Box = createBox({
  defaultTheme,
  defaultClassName: "MuiBox-root",
  generateClassName: ClassNameGenerator$1.generate
});
var Box$1 = Box;
function getCardUtilityClass(slot) {
  return generateUtilityClass("MuiCard", slot);
}
generateUtilityClasses("MuiCard", ["root"]);
const _excluded$a = ["className", "raised"];
const useUtilityClasses$7 = (ownerState) => {
  const {
    classes
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getCardUtilityClass, classes);
};
const CardRoot = styled$1(Paper$1, {
  name: "MuiCard",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(() => {
  return {
    overflow: "hidden"
  };
});
const Card = /* @__PURE__ */ react.exports.forwardRef(function Card2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiCard"
  });
  const {
    className,
    raised = false
  } = props, other = _objectWithoutPropertiesLoose$2(props, _excluded$a);
  const ownerState = _extends$1({}, props, {
    raised
  });
  const classes = useUtilityClasses$7(ownerState);
  return /* @__PURE__ */ jsx(CardRoot, _extends$1({
    className: clsx(classes.root, className),
    elevation: raised ? 8 : void 0,
    ref,
    ownerState
  }, other));
});
var Card$1 = Card;
const Container = createContainer({
  createStyledComponent: styled$1("div", {
    name: "MuiContainer",
    slot: "Root",
    overridesResolver: (props, styles) => {
      const {
        ownerState
      } = props;
      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];
    }
  }),
  useThemeProps: (inProps) => useThemeProps({
    props: inProps,
    name: "MuiContainer"
  })
});
var Container$1 = Container;
function getLinearProgressUtilityClass(slot) {
  return generateUtilityClass("MuiLinearProgress", slot);
}
generateUtilityClasses("MuiLinearProgress", ["root", "colorPrimary", "colorSecondary", "determinate", "indeterminate", "buffer", "query", "dashed", "dashedColorPrimary", "dashedColorSecondary", "bar", "barColorPrimary", "barColorSecondary", "bar1Indeterminate", "bar1Determinate", "bar1Buffer", "bar2Indeterminate", "bar2Buffer"]);
const _excluded$9 = ["className", "color", "value", "valueBuffer", "variant"];
let _ = (t2) => t2, _t, _t2, _t3, _t4, _t5, _t6;
const TRANSITION_DURATION = 4;
const indeterminate1Keyframe = keyframes(_t || (_t = _`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`));
const indeterminate2Keyframe = keyframes(_t2 || (_t2 = _`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`));
const bufferKeyframe = keyframes(_t3 || (_t3 = _`
  0% {
    opacity: 1;
    background-position: 0 -23px;
  }

  60% {
    opacity: 0;
    background-position: 0 -23px;
  }

  100% {
    opacity: 1;
    background-position: -200px -23px;
  }
`));
const useUtilityClasses$6 = (ownerState) => {
  const {
    classes,
    variant,
    color: color2
  } = ownerState;
  const slots = {
    root: ["root", `color${capitalize(color2)}`, variant],
    dashed: ["dashed", `dashedColor${capitalize(color2)}`],
    bar1: ["bar", `barColor${capitalize(color2)}`, (variant === "indeterminate" || variant === "query") && "bar1Indeterminate", variant === "determinate" && "bar1Determinate", variant === "buffer" && "bar1Buffer"],
    bar2: ["bar", variant !== "buffer" && `barColor${capitalize(color2)}`, variant === "buffer" && `color${capitalize(color2)}`, (variant === "indeterminate" || variant === "query") && "bar2Indeterminate", variant === "buffer" && "bar2Buffer"]
  };
  return composeClasses(slots, getLinearProgressUtilityClass, classes);
};
const getColorShade = (theme, color2) => {
  if (color2 === "inherit") {
    return "currentColor";
  }
  if (theme.vars) {
    return theme.vars.palette.LinearProgress[`${color2}Bg`];
  }
  return theme.palette.mode === "light" ? lighten(theme.palette[color2].main, 0.62) : darken(theme.palette[color2].main, 0.5);
};
const LinearProgressRoot = styled$1("span", {
  name: "MuiLinearProgress",
  slot: "Root",
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];
  }
})(({
  ownerState,
  theme
}) => _extends$1({
  position: "relative",
  overflow: "hidden",
  display: "block",
  height: 4,
  zIndex: 0,
  "@media print": {
    colorAdjust: "exact"
  },
  backgroundColor: getColorShade(theme, ownerState.color)
}, ownerState.color === "inherit" && ownerState.variant !== "buffer" && {
  backgroundColor: "none",
  "&::before": {
    content: '""',
    position: "absolute",
    left: 0,
    top: 0,
    right: 0,
    bottom: 0,
    backgroundColor: "currentColor",
    opacity: 0.3
  }
}, ownerState.variant === "buffer" && {
  backgroundColor: "transparent"
}, ownerState.variant === "query" && {
  transform: "rotate(180deg)"
}));
const LinearProgressDashed = styled$1("span", {
  name: "MuiLinearProgress",
  slot: "Dashed",
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];
  }
})(({
  ownerState,
  theme
}) => {
  const backgroundColor2 = getColorShade(theme, ownerState.color);
  return _extends$1({
    position: "absolute",
    marginTop: 0,
    height: "100%",
    width: "100%"
  }, ownerState.color === "inherit" && {
    opacity: 0.3
  }, {
    backgroundImage: `radial-gradient(${backgroundColor2} 0%, ${backgroundColor2} 16%, transparent 42%)`,
    backgroundSize: "10px 10px",
    backgroundPosition: "0 -23px"
  });
}, css(_t4 || (_t4 = _`
    animation: ${0} 3s infinite linear;
  `), bufferKeyframe));
const LinearProgressBar1 = styled$1("span", {
  name: "MuiLinearProgress",
  slot: "Bar1",
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === "indeterminate" || ownerState.variant === "query") && styles.bar1Indeterminate, ownerState.variant === "determinate" && styles.bar1Determinate, ownerState.variant === "buffer" && styles.bar1Buffer];
  }
})(({
  ownerState,
  theme
}) => _extends$1({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left",
  backgroundColor: ownerState.color === "inherit" ? "currentColor" : (theme.vars || theme).palette[ownerState.color].main
}, ownerState.variant === "determinate" && {
  transition: `transform .${TRANSITION_DURATION}s linear`
}, ownerState.variant === "buffer" && {
  zIndex: 1,
  transition: `transform .${TRANSITION_DURATION}s linear`
}), ({
  ownerState
}) => (ownerState.variant === "indeterminate" || ownerState.variant === "query") && css(_t5 || (_t5 = _`
      width: auto;
      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
    `), indeterminate1Keyframe));
const LinearProgressBar2 = styled$1("span", {
  name: "MuiLinearProgress",
  slot: "Bar2",
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === "indeterminate" || ownerState.variant === "query") && styles.bar2Indeterminate, ownerState.variant === "buffer" && styles.bar2Buffer];
  }
})(({
  ownerState,
  theme
}) => _extends$1({
  width: "100%",
  position: "absolute",
  left: 0,
  bottom: 0,
  top: 0,
  transition: "transform 0.2s linear",
  transformOrigin: "left"
}, ownerState.variant !== "buffer" && {
  backgroundColor: ownerState.color === "inherit" ? "currentColor" : (theme.vars || theme).palette[ownerState.color].main
}, ownerState.color === "inherit" && {
  opacity: 0.3
}, ownerState.variant === "buffer" && {
  backgroundColor: getColorShade(theme, ownerState.color),
  transition: `transform .${TRANSITION_DURATION}s linear`
}), ({
  ownerState
}) => (ownerState.variant === "indeterminate" || ownerState.variant === "query") && css(_t6 || (_t6 = _`
      width: auto;
      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;
    `), indeterminate2Keyframe));
const LinearProgress = /* @__PURE__ */ react.exports.forwardRef(function LinearProgress2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiLinearProgress"
  });
  const {
    className,
    color: color2 = "primary",
    value,
    valueBuffer,
    variant = "indeterminate"
  } = props, other = _objectWithoutPropertiesLoose$2(props, _excluded$9);
  const ownerState = _extends$1({}, props, {
    color: color2,
    variant
  });
  const classes = useUtilityClasses$6(ownerState);
  const theme = useTheme();
  const rootProps = {};
  const inlineStyles = {
    bar1: {},
    bar2: {}
  };
  if (variant === "determinate" || variant === "buffer") {
    if (value !== void 0) {
      rootProps["aria-valuenow"] = Math.round(value);
      rootProps["aria-valuemin"] = 0;
      rootProps["aria-valuemax"] = 100;
      let transform2 = value - 100;
      if (theme.direction === "rtl") {
        transform2 = -transform2;
      }
      inlineStyles.bar1.transform = `translateX(${transform2}%)`;
    }
  }
  if (variant === "buffer") {
    if (valueBuffer !== void 0) {
      let transform2 = (valueBuffer || 0) - 100;
      if (theme.direction === "rtl") {
        transform2 = -transform2;
      }
      inlineStyles.bar2.transform = `translateX(${transform2}%)`;
    }
  }
  return /* @__PURE__ */ jsxs(LinearProgressRoot, _extends$1({
    className: clsx(classes.root, className),
    ownerState,
    role: "progressbar"
  }, rootProps, {
    ref
  }, other, {
    children: [variant === "buffer" ? /* @__PURE__ */ jsx(LinearProgressDashed, {
      className: classes.dashed,
      ownerState
    }) : null, /* @__PURE__ */ jsx(LinearProgressBar1, {
      className: classes.bar1,
      ownerState,
      style: inlineStyles.bar1
    }), variant === "determinate" ? null : /* @__PURE__ */ jsx(LinearProgressBar2, {
      className: classes.bar2,
      ownerState,
      style: inlineStyles.bar2
    })]
  }));
});
var LinearProgress$1 = LinearProgress;
const _excluded$8 = ["component", "direction", "spacing", "divider", "children"];
function joinChildren(children, separator) {
  const childrenArray = react.exports.Children.toArray(children).filter(Boolean);
  return childrenArray.reduce((output, child, index) => {
    output.push(child);
    if (index < childrenArray.length - 1) {
      output.push(/* @__PURE__ */ react.exports.cloneElement(separator, {
        key: `separator-${index}`
      }));
    }
    return output;
  }, []);
}
const getSideFromDirection = (direction) => {
  return {
    row: "Left",
    "row-reverse": "Right",
    column: "Top",
    "column-reverse": "Bottom"
  }[direction];
};
const style = ({
  ownerState,
  theme
}) => {
  let styles = _extends$1({
    display: "flex"
  }, handleBreakpoints({
    theme
  }, resolveBreakpointValues({
    values: ownerState.direction,
    breakpoints: theme.breakpoints.values
  }), (propValue) => ({
    flexDirection: propValue
  })));
  if (ownerState.spacing) {
    const transformer = createUnarySpacing(theme);
    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {
      if (typeof ownerState.spacing === "object" && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === "object" && ownerState.direction[breakpoint] != null) {
        acc[breakpoint] = true;
      }
      return acc;
    }, {});
    const directionValues = resolveBreakpointValues({
      values: ownerState.direction,
      base
    });
    const spacingValues = resolveBreakpointValues({
      values: ownerState.spacing,
      base
    });
    const styleFromPropValue = (propValue, breakpoint) => {
      return {
        "& > :not(style) + :not(style)": {
          margin: 0,
          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)
        }
      };
    };
    styles = deepmerge(styles, handleBreakpoints({
      theme
    }, spacingValues, styleFromPropValue));
  }
  return styles;
};
const StackRoot = styled$1("div", {
  name: "MuiStack",
  slot: "Root",
  overridesResolver: (props, styles) => {
    return [styles.root];
  }
})(style);
const Stack = /* @__PURE__ */ react.exports.forwardRef(function Stack2(inProps, ref) {
  const themeProps = useThemeProps({
    props: inProps,
    name: "MuiStack"
  });
  const props = extendSxProp(themeProps);
  const {
    component = "div",
    direction = "column",
    spacing: spacing2 = 0,
    divider,
    children
  } = props, other = _objectWithoutPropertiesLoose$2(props, _excluded$8);
  const ownerState = {
    direction,
    spacing: spacing2
  };
  return /* @__PURE__ */ jsx(StackRoot, _extends$1({
    as: component,
    ownerState,
    ref
  }, other, {
    children: divider ? joinChildren(children, divider) : children
  }));
});
var Stack$1 = Stack;
const TableContext = /* @__PURE__ */ react.exports.createContext();
var TableContext$1 = TableContext;
function getTableUtilityClass(slot) {
  return generateUtilityClass("MuiTable", slot);
}
generateUtilityClasses("MuiTable", ["root", "stickyHeader"]);
const _excluded$7 = ["className", "component", "padding", "size", "stickyHeader"];
const useUtilityClasses$5 = (ownerState) => {
  const {
    classes,
    stickyHeader
  } = ownerState;
  const slots = {
    root: ["root", stickyHeader && "stickyHeader"]
  };
  return composeClasses(slots, getTableUtilityClass, classes);
};
const TableRoot = styled$1("table", {
  name: "MuiTable",
  slot: "Root",
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];
  }
})(({
  theme,
  ownerState
}) => _extends$1({
  display: "table",
  width: "100%",
  borderCollapse: "collapse",
  borderSpacing: 0,
  "& caption": _extends$1({}, theme.typography.body2, {
    padding: theme.spacing(2),
    color: (theme.vars || theme).palette.text.secondary,
    textAlign: "left",
    captionSide: "bottom"
  })
}, ownerState.stickyHeader && {
  borderCollapse: "separate"
}));
const defaultComponent$3 = "table";
const Table = /* @__PURE__ */ react.exports.forwardRef(function Table2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiTable"
  });
  const {
    className,
    component = defaultComponent$3,
    padding = "normal",
    size = "medium",
    stickyHeader = false
  } = props, other = _objectWithoutPropertiesLoose$2(props, _excluded$7);
  const ownerState = _extends$1({}, props, {
    component,
    padding,
    size,
    stickyHeader
  });
  const classes = useUtilityClasses$5(ownerState);
  const table = react.exports.useMemo(() => ({
    padding,
    size,
    stickyHeader
  }), [padding, size, stickyHeader]);
  return /* @__PURE__ */ jsx(TableContext$1.Provider, {
    value: table,
    children: /* @__PURE__ */ jsx(TableRoot, _extends$1({
      as: component,
      role: component === defaultComponent$3 ? null : "table",
      ref,
      className: clsx(classes.root, className),
      ownerState
    }, other))
  });
});
var Table$1 = Table;
const Tablelvl2Context = /* @__PURE__ */ react.exports.createContext();
var Tablelvl2Context$1 = Tablelvl2Context;
function getTableBodyUtilityClass(slot) {
  return generateUtilityClass("MuiTableBody", slot);
}
generateUtilityClasses("MuiTableBody", ["root"]);
const _excluded$6 = ["className", "component"];
const useUtilityClasses$4 = (ownerState) => {
  const {
    classes
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getTableBodyUtilityClass, classes);
};
const TableBodyRoot = styled$1("tbody", {
  name: "MuiTableBody",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})({
  display: "table-row-group"
});
const tablelvl2$1 = {
  variant: "body"
};
const defaultComponent$2 = "tbody";
const TableBody = /* @__PURE__ */ react.exports.forwardRef(function TableBody2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiTableBody"
  });
  const {
    className,
    component = defaultComponent$2
  } = props, other = _objectWithoutPropertiesLoose$2(props, _excluded$6);
  const ownerState = _extends$1({}, props, {
    component
  });
  const classes = useUtilityClasses$4(ownerState);
  return /* @__PURE__ */ jsx(Tablelvl2Context$1.Provider, {
    value: tablelvl2$1,
    children: /* @__PURE__ */ jsx(TableBodyRoot, _extends$1({
      className: clsx(classes.root, className),
      as: component,
      ref,
      role: component === defaultComponent$2 ? null : "rowgroup",
      ownerState
    }, other))
  });
});
var TableBody$1 = TableBody;
function getTableCellUtilityClass(slot) {
  return generateUtilityClass("MuiTableCell", slot);
}
const tableCellClasses = generateUtilityClasses("MuiTableCell", ["root", "head", "body", "footer", "sizeSmall", "sizeMedium", "paddingCheckbox", "paddingNone", "alignLeft", "alignCenter", "alignRight", "alignJustify", "stickyHeader"]);
var tableCellClasses$1 = tableCellClasses;
const _excluded$5 = ["align", "className", "component", "padding", "scope", "size", "sortDirection", "variant"];
const useUtilityClasses$3 = (ownerState) => {
  const {
    classes,
    variant,
    align,
    padding,
    size,
    stickyHeader
  } = ownerState;
  const slots = {
    root: ["root", variant, stickyHeader && "stickyHeader", align !== "inherit" && `align${capitalize(align)}`, padding !== "normal" && `padding${capitalize(padding)}`, `size${capitalize(size)}`]
  };
  return composeClasses(slots, getTableCellUtilityClass, classes);
};
const TableCellRoot = styled$1("td", {
  name: "MuiTableCell",
  slot: "Root",
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== "normal" && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== "inherit" && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];
  }
})(({
  theme,
  ownerState
}) => _extends$1({}, theme.typography.body2, {
  display: "table-cell",
  verticalAlign: "inherit",
  borderBottom: theme.vars ? `1px solid ${theme.vars.palette.TableCell.border}` : `1px solid
    ${theme.palette.mode === "light" ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,
  textAlign: "left",
  padding: 16
}, ownerState.variant === "head" && {
  color: (theme.vars || theme).palette.text.primary,
  lineHeight: theme.typography.pxToRem(24),
  fontWeight: theme.typography.fontWeightMedium
}, ownerState.variant === "body" && {
  color: (theme.vars || theme).palette.text.primary
}, ownerState.variant === "footer" && {
  color: (theme.vars || theme).palette.text.secondary,
  lineHeight: theme.typography.pxToRem(21),
  fontSize: theme.typography.pxToRem(12)
}, ownerState.size === "small" && {
  padding: "6px 16px",
  [`&.${tableCellClasses$1.paddingCheckbox}`]: {
    width: 24,
    padding: "0 12px 0 16px",
    "& > *": {
      padding: 0
    }
  }
}, ownerState.padding === "checkbox" && {
  width: 48,
  padding: "0 0 0 4px"
}, ownerState.padding === "none" && {
  padding: 0
}, ownerState.align === "left" && {
  textAlign: "left"
}, ownerState.align === "center" && {
  textAlign: "center"
}, ownerState.align === "right" && {
  textAlign: "right",
  flexDirection: "row-reverse"
}, ownerState.align === "justify" && {
  textAlign: "justify"
}, ownerState.stickyHeader && {
  position: "sticky",
  top: 0,
  zIndex: 2,
  backgroundColor: (theme.vars || theme).palette.background.default
}));
const TableCell = /* @__PURE__ */ react.exports.forwardRef(function TableCell2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiTableCell"
  });
  const {
    align = "inherit",
    className,
    component: componentProp,
    padding: paddingProp,
    scope: scopeProp,
    size: sizeProp,
    sortDirection,
    variant: variantProp
  } = props, other = _objectWithoutPropertiesLoose$2(props, _excluded$5);
  const table = react.exports.useContext(TableContext$1);
  const tablelvl22 = react.exports.useContext(Tablelvl2Context$1);
  const isHeadCell = tablelvl22 && tablelvl22.variant === "head";
  let component;
  if (componentProp) {
    component = componentProp;
  } else {
    component = isHeadCell ? "th" : "td";
  }
  let scope = scopeProp;
  if (!scope && isHeadCell) {
    scope = "col";
  }
  const variant = variantProp || tablelvl22 && tablelvl22.variant;
  const ownerState = _extends$1({}, props, {
    align,
    component,
    padding: paddingProp || (table && table.padding ? table.padding : "normal"),
    size: sizeProp || (table && table.size ? table.size : "medium"),
    sortDirection,
    stickyHeader: variant === "head" && table && table.stickyHeader,
    variant
  });
  const classes = useUtilityClasses$3(ownerState);
  let ariaSort = null;
  if (sortDirection) {
    ariaSort = sortDirection === "asc" ? "ascending" : "descending";
  }
  return /* @__PURE__ */ jsx(TableCellRoot, _extends$1({
    as: component,
    ref,
    className: clsx(classes.root, className),
    "aria-sort": ariaSort,
    scope,
    ownerState
  }, other));
});
var TableCell$1 = TableCell;
function getTableContainerUtilityClass(slot) {
  return generateUtilityClass("MuiTableContainer", slot);
}
generateUtilityClasses("MuiTableContainer", ["root"]);
const _excluded$4 = ["className", "component"];
const useUtilityClasses$2 = (ownerState) => {
  const {
    classes
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getTableContainerUtilityClass, classes);
};
const TableContainerRoot = styled$1("div", {
  name: "MuiTableContainer",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})({
  width: "100%",
  overflowX: "auto"
});
const TableContainer = /* @__PURE__ */ react.exports.forwardRef(function TableContainer2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiTableContainer"
  });
  const {
    className,
    component = "div"
  } = props, other = _objectWithoutPropertiesLoose$2(props, _excluded$4);
  const ownerState = _extends$1({}, props, {
    component
  });
  const classes = useUtilityClasses$2(ownerState);
  return /* @__PURE__ */ jsx(TableContainerRoot, _extends$1({
    ref,
    as: component,
    className: clsx(classes.root, className),
    ownerState
  }, other));
});
var TableContainer$1 = TableContainer;
function getTableHeadUtilityClass(slot) {
  return generateUtilityClass("MuiTableHead", slot);
}
generateUtilityClasses("MuiTableHead", ["root"]);
const _excluded$3 = ["className", "component"];
const useUtilityClasses$1 = (ownerState) => {
  const {
    classes
  } = ownerState;
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getTableHeadUtilityClass, classes);
};
const TableHeadRoot = styled$1("thead", {
  name: "MuiTableHead",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})({
  display: "table-header-group"
});
const tablelvl2 = {
  variant: "head"
};
const defaultComponent$1 = "thead";
const TableHead = /* @__PURE__ */ react.exports.forwardRef(function TableHead2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiTableHead"
  });
  const {
    className,
    component = defaultComponent$1
  } = props, other = _objectWithoutPropertiesLoose$2(props, _excluded$3);
  const ownerState = _extends$1({}, props, {
    component
  });
  const classes = useUtilityClasses$1(ownerState);
  return /* @__PURE__ */ jsx(Tablelvl2Context$1.Provider, {
    value: tablelvl2,
    children: /* @__PURE__ */ jsx(TableHeadRoot, _extends$1({
      as: component,
      className: clsx(classes.root, className),
      ref,
      role: component === defaultComponent$1 ? null : "rowgroup",
      ownerState
    }, other))
  });
});
var TableHead$1 = TableHead;
function getTableRowUtilityClass(slot) {
  return generateUtilityClass("MuiTableRow", slot);
}
const tableRowClasses = generateUtilityClasses("MuiTableRow", ["root", "selected", "hover", "head", "footer"]);
var tableRowClasses$1 = tableRowClasses;
const _excluded$2 = ["className", "component", "hover", "selected"];
const useUtilityClasses = (ownerState) => {
  const {
    classes,
    selected,
    hover,
    head,
    footer
  } = ownerState;
  const slots = {
    root: ["root", selected && "selected", hover && "hover", head && "head", footer && "footer"]
  };
  return composeClasses(slots, getTableRowUtilityClass, classes);
};
const TableRowRoot = styled$1("tr", {
  name: "MuiTableRow",
  slot: "Root",
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [styles.root, ownerState.head && styles.head, ownerState.footer && styles.footer];
  }
})(({
  theme
}) => ({
  color: "inherit",
  display: "table-row",
  verticalAlign: "middle",
  outline: 0,
  [`&.${tableRowClasses$1.hover}:hover`]: {
    backgroundColor: (theme.vars || theme).palette.action.hover
  },
  [`&.${tableRowClasses$1.selected}`]: {
    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),
    "&:hover": {
      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)
    }
  }
}));
const defaultComponent = "tr";
const TableRow = /* @__PURE__ */ react.exports.forwardRef(function TableRow2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiTableRow"
  });
  const {
    className,
    component = defaultComponent,
    hover = false,
    selected = false
  } = props, other = _objectWithoutPropertiesLoose$2(props, _excluded$2);
  const tablelvl22 = react.exports.useContext(Tablelvl2Context$1);
  const ownerState = _extends$1({}, props, {
    component,
    hover,
    selected,
    head: tablelvl22 && tablelvl22.variant === "head",
    footer: tablelvl22 && tablelvl22.variant === "footer"
  });
  const classes = useUtilityClasses(ownerState);
  return /* @__PURE__ */ jsx(TableRowRoot, _extends$1({
    as: component,
    ref,
    className: clsx(classes.root, className),
    role: component === defaultComponent ? null : "row",
    ownerState
  }, other));
});
var TableRow$1 = TableRow;
function MetricsTable({
  header,
  rows
}) {
  return /* @__PURE__ */ jsx(TableContainer$1, {
    component: Card$1,
    children: /* @__PURE__ */ jsxs(Table$1, {
      sx: {
        minWidth: 650
      },
      size: "small",
      "aria-label": "a metrics table",
      children: [/* @__PURE__ */ jsx(TableHead$1, {
        children: /* @__PURE__ */ jsx(TableRow$1, {
          children: header.map((key) => /* @__PURE__ */ jsx(TableCell$1, {
            children: key
          }, key))
        })
      }), /* @__PURE__ */ jsx(TableBody$1, {
        children: rows.map((row) => /* @__PURE__ */ jsx(TableRow$1, {
          sx: {
            "&:last-child td, &:last-child th": {
              border: 0
            }
          },
          children: header.map((key) => /* @__PURE__ */ jsx(TableCell$1, {
            component: "th",
            scope: "row",
            children: row[key]
          }, key + row.filename))
        }, row.filename))
      })]
    })
  });
}
function getUserAgent() {
  if (typeof navigator === "object" && "userAgent" in navigator) {
    return navigator.userAgent;
  }
  if (typeof process === "object" && "version" in process) {
    return `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`;
  }
  return "<environment undetectable>";
}
var distWeb$a = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  getUserAgent
});
var beforeAfterHook = { exports: {} };
var register_1 = register$1;
function register$1(state, name, method, options) {
  if (typeof method !== "function") {
    throw new Error("method for before hook must be a function");
  }
  if (!options) {
    options = {};
  }
  if (Array.isArray(name)) {
    return name.reverse().reduce(function(callback, name2) {
      return register$1.bind(null, state, name2, callback, options);
    }, method)();
  }
  return Promise.resolve().then(function() {
    if (!state.registry[name]) {
      return method(options);
    }
    return state.registry[name].reduce(function(method2, registered) {
      return registered.hook.bind(null, method2, options);
    }, method)();
  });
}
var add = addHook$1;
function addHook$1(state, kind, name, hook2) {
  var orig = hook2;
  if (!state.registry[name]) {
    state.registry[name] = [];
  }
  if (kind === "before") {
    hook2 = function(method, options) {
      return Promise.resolve().then(orig.bind(null, options)).then(method.bind(null, options));
    };
  }
  if (kind === "after") {
    hook2 = function(method, options) {
      var result;
      return Promise.resolve().then(method.bind(null, options)).then(function(result_) {
        result = result_;
        return orig(result, options);
      }).then(function() {
        return result;
      });
    };
  }
  if (kind === "error") {
    hook2 = function(method, options) {
      return Promise.resolve().then(method.bind(null, options)).catch(function(error) {
        return orig(error, options);
      });
    };
  }
  state.registry[name].push({
    hook: hook2,
    orig
  });
}
var remove = removeHook$1;
function removeHook$1(state, name, method) {
  if (!state.registry[name]) {
    return;
  }
  var index = state.registry[name].map(function(registered) {
    return registered.orig;
  }).indexOf(method);
  if (index === -1) {
    return;
  }
  state.registry[name].splice(index, 1);
}
var register = register_1;
var addHook = add;
var removeHook = remove;
var bind = Function.bind;
var bindable = bind.bind(bind);
function bindApi(hook2, state, name) {
  var removeHookRef = bindable(removeHook, null).apply(null, name ? [state, name] : [state]);
  hook2.api = { remove: removeHookRef };
  hook2.remove = removeHookRef;
  ["before", "error", "after", "wrap"].forEach(function(kind) {
    var args = name ? [state, kind, name] : [state, kind];
    hook2[kind] = hook2.api[kind] = bindable(addHook, null).apply(null, args);
  });
}
function HookSingular() {
  var singularHookName = "h";
  var singularHookState = {
    registry: {}
  };
  var singularHook = register.bind(null, singularHookState, singularHookName);
  bindApi(singularHook, singularHookState, singularHookName);
  return singularHook;
}
function HookCollection() {
  var state = {
    registry: {}
  };
  var hook2 = register.bind(null, state);
  bindApi(hook2, state);
  return hook2;
}
var collectionHookDeprecationMessageDisplayed = false;
function Hook() {
  if (!collectionHookDeprecationMessageDisplayed) {
    console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4');
    collectionHookDeprecationMessageDisplayed = true;
  }
  return HookCollection();
}
Hook.Singular = HookSingular.bind();
Hook.Collection = HookCollection.bind();
beforeAfterHook.exports = Hook;
beforeAfterHook.exports.Hook = Hook;
beforeAfterHook.exports.Singular = Hook.Singular;
var Collection = beforeAfterHook.exports.Collection = Hook.Collection;
/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
function isObject$1(o) {
  return Object.prototype.toString.call(o) === "[object Object]";
}
function isPlainObject(o) {
  var ctor, prot;
  if (isObject$1(o) === false)
    return false;
  ctor = o.constructor;
  if (ctor === void 0)
    return true;
  prot = ctor.prototype;
  if (isObject$1(prot) === false)
    return false;
  if (prot.hasOwnProperty("isPrototypeOf") === false) {
    return false;
  }
  return true;
}
function lowercaseKeys(object) {
  if (!object) {
    return {};
  }
  return Object.keys(object).reduce((newObj, key) => {
    newObj[key.toLowerCase()] = object[key];
    return newObj;
  }, {});
}
function mergeDeep(defaults, options) {
  const result = Object.assign({}, defaults);
  Object.keys(options).forEach((key) => {
    if (isPlainObject(options[key])) {
      if (!(key in defaults))
        Object.assign(result, { [key]: options[key] });
      else
        result[key] = mergeDeep(defaults[key], options[key]);
    } else {
      Object.assign(result, { [key]: options[key] });
    }
  });
  return result;
}
function removeUndefinedProperties(obj) {
  for (const key in obj) {
    if (obj[key] === void 0) {
      delete obj[key];
    }
  }
  return obj;
}
function merge$1(defaults, route, options) {
  if (typeof route === "string") {
    let [method, url] = route.split(" ");
    options = Object.assign(url ? { method, url } : { url: method }, options);
  } else {
    options = Object.assign({}, route);
  }
  options.headers = lowercaseKeys(options.headers);
  removeUndefinedProperties(options);
  removeUndefinedProperties(options.headers);
  const mergedOptions = mergeDeep(defaults || {}, options);
  if (defaults && defaults.mediaType.previews.length) {
    mergedOptions.mediaType.previews = defaults.mediaType.previews.filter((preview) => !mergedOptions.mediaType.previews.includes(preview)).concat(mergedOptions.mediaType.previews);
  }
  mergedOptions.mediaType.previews = mergedOptions.mediaType.previews.map((preview) => preview.replace(/-preview/, ""));
  return mergedOptions;
}
function addQueryParameters(url, parameters) {
  const separator = /\?/.test(url) ? "&" : "?";
  const names = Object.keys(parameters);
  if (names.length === 0) {
    return url;
  }
  return url + separator + names.map((name) => {
    if (name === "q") {
      return "q=" + parameters.q.split("+").map(encodeURIComponent).join("+");
    }
    return `${name}=${encodeURIComponent(parameters[name])}`;
  }).join("&");
}
const urlVariableRegex = /\{[^}]+\}/g;
function removeNonChars(variableName) {
  return variableName.replace(/^\W+|\W+$/g, "").split(/,/);
}
function extractUrlVariableNames(url) {
  const matches = url.match(urlVariableRegex);
  if (!matches) {
    return [];
  }
  return matches.map(removeNonChars).reduce((a, b2) => a.concat(b2), []);
}
function omit(object, keysToOmit) {
  return Object.keys(object).filter((option) => !keysToOmit.includes(option)).reduce((obj, key) => {
    obj[key] = object[key];
    return obj;
  }, {});
}
function encodeReserved(str) {
  return str.split(/(%[0-9A-Fa-f]{2})/g).map(function(part) {
    if (!/%[0-9A-Fa-f]/.test(part)) {
      part = encodeURI(part).replace(/%5B/g, "[").replace(/%5D/g, "]");
    }
    return part;
  }).join("");
}
function encodeUnreserved(str) {
  return encodeURIComponent(str).replace(/[!'()*]/g, function(c2) {
    return "%" + c2.charCodeAt(0).toString(16).toUpperCase();
  });
}
function encodeValue(operator, value, key) {
  value = operator === "+" || operator === "#" ? encodeReserved(value) : encodeUnreserved(value);
  if (key) {
    return encodeUnreserved(key) + "=" + value;
  } else {
    return value;
  }
}
function isDefined(value) {
  return value !== void 0 && value !== null;
}
function isKeyOperator(operator) {
  return operator === ";" || operator === "&" || operator === "?";
}
function getValues(context, operator, key, modifier) {
  var value = context[key], result = [];
  if (isDefined(value) && value !== "") {
    if (typeof value === "string" || typeof value === "number" || typeof value === "boolean") {
      value = value.toString();
      if (modifier && modifier !== "*") {
        value = value.substring(0, parseInt(modifier, 10));
      }
      result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : ""));
    } else {
      if (modifier === "*") {
        if (Array.isArray(value)) {
          value.filter(isDefined).forEach(function(value2) {
            result.push(encodeValue(operator, value2, isKeyOperator(operator) ? key : ""));
          });
        } else {
          Object.keys(value).forEach(function(k2) {
            if (isDefined(value[k2])) {
              result.push(encodeValue(operator, value[k2], k2));
            }
          });
        }
      } else {
        const tmp = [];
        if (Array.isArray(value)) {
          value.filter(isDefined).forEach(function(value2) {
            tmp.push(encodeValue(operator, value2));
          });
        } else {
          Object.keys(value).forEach(function(k2) {
            if (isDefined(value[k2])) {
              tmp.push(encodeUnreserved(k2));
              tmp.push(encodeValue(operator, value[k2].toString()));
            }
          });
        }
        if (isKeyOperator(operator)) {
          result.push(encodeUnreserved(key) + "=" + tmp.join(","));
        } else if (tmp.length !== 0) {
          result.push(tmp.join(","));
        }
      }
    }
  } else {
    if (operator === ";") {
      if (isDefined(value)) {
        result.push(encodeUnreserved(key));
      }
    } else if (value === "" && (operator === "&" || operator === "?")) {
      result.push(encodeUnreserved(key) + "=");
    } else if (value === "") {
      result.push("");
    }
  }
  return result;
}
function parseUrl(template) {
  return {
    expand: expand.bind(null, template)
  };
}
function expand(template, context) {
  var operators = ["+", "#", ".", "/", ";", "?", "&"];
  return template.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function(_2, expression, literal) {
    if (expression) {
      let operator = "";
      const values2 = [];
      if (operators.indexOf(expression.charAt(0)) !== -1) {
        operator = expression.charAt(0);
        expression = expression.substr(1);
      }
      expression.split(/,/g).forEach(function(variable) {
        var tmp = /([^:\*]*)(?::(\d+)|(\*))?/.exec(variable);
        values2.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));
      });
      if (operator && operator !== "+") {
        var separator = ",";
        if (operator === "?") {
          separator = "&";
        } else if (operator !== "#") {
          separator = operator;
        }
        return (values2.length !== 0 ? operator : "") + values2.join(separator);
      } else {
        return values2.join(",");
      }
    } else {
      return encodeReserved(literal);
    }
  });
}
function parse(options) {
  let method = options.method.toUpperCase();
  let url = (options.url || "/").replace(/:([a-z]\w+)/g, "{$1}");
  let headers = Object.assign({}, options.headers);
  let body;
  let parameters = omit(options, [
    "method",
    "baseUrl",
    "url",
    "headers",
    "request",
    "mediaType"
  ]);
  const urlVariableNames = extractUrlVariableNames(url);
  url = parseUrl(url).expand(parameters);
  if (!/^http/.test(url)) {
    url = options.baseUrl + url;
  }
  const omittedParameters = Object.keys(options).filter((option) => urlVariableNames.includes(option)).concat("baseUrl");
  const remainingParameters = omit(parameters, omittedParameters);
  const isBinaryRequest = /application\/octet-stream/i.test(headers.accept);
  if (!isBinaryRequest) {
    if (options.mediaType.format) {
      headers.accept = headers.accept.split(/,/).map((preview) => preview.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/, `application/vnd$1$2.${options.mediaType.format}`)).join(",");
    }
    if (options.mediaType.previews.length) {
      const previewsFromAcceptHeader = headers.accept.match(/[\w-]+(?=-preview)/g) || [];
      headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map((preview) => {
        const format = options.mediaType.format ? `.${options.mediaType.format}` : "+json";
        return `application/vnd.github.${preview}-preview${format}`;
      }).join(",");
    }
  }
  if (["GET", "HEAD"].includes(method)) {
    url = addQueryParameters(url, remainingParameters);
  } else {
    if ("data" in remainingParameters) {
      body = remainingParameters.data;
    } else {
      if (Object.keys(remainingParameters).length) {
        body = remainingParameters;
      } else {
        headers["content-length"] = 0;
      }
    }
  }
  if (!headers["content-type"] && typeof body !== "undefined") {
    headers["content-type"] = "application/json; charset=utf-8";
  }
  if (["PATCH", "PUT"].includes(method) && typeof body === "undefined") {
    body = "";
  }
  return Object.assign({ method, url, headers }, typeof body !== "undefined" ? { body } : null, options.request ? { request: options.request } : null);
}
function endpointWithDefaults(defaults, route, options) {
  return parse(merge$1(defaults, route, options));
}
function withDefaults$2(oldDefaults, newDefaults) {
  const DEFAULTS2 = merge$1(oldDefaults, newDefaults);
  const endpoint2 = endpointWithDefaults.bind(null, DEFAULTS2);
  return Object.assign(endpoint2, {
    DEFAULTS: DEFAULTS2,
    defaults: withDefaults$2.bind(null, DEFAULTS2),
    merge: merge$1.bind(null, DEFAULTS2),
    parse
  });
}
const VERSION$f = "6.0.12";
const userAgent = `octokit-endpoint.js/${VERSION$f} ${getUserAgent()}`;
const DEFAULTS = {
  method: "GET",
  baseUrl: "https://api.github.com",
  headers: {
    accept: "application/vnd.github.v3+json",
    "user-agent": userAgent
  },
  mediaType: {
    format: "",
    previews: []
  }
};
const endpoint = withDefaults$2(null, DEFAULTS);
var global$1 = typeof globalThis !== "undefined" && globalThis || typeof self !== "undefined" && self || typeof global$1 !== "undefined" && global$1;
var support = {
  searchParams: "URLSearchParams" in global$1,
  iterable: "Symbol" in global$1 && "iterator" in Symbol,
  blob: "FileReader" in global$1 && "Blob" in global$1 && function() {
    try {
      new Blob();
      return true;
    } catch (e2) {
      return false;
    }
  }(),
  formData: "FormData" in global$1,
  arrayBuffer: "ArrayBuffer" in global$1
};
function isDataView(obj) {
  return obj && DataView.prototype.isPrototypeOf(obj);
}
if (support.arrayBuffer) {
  var viewClasses = [
    "[object Int8Array]",
    "[object Uint8Array]",
    "[object Uint8ClampedArray]",
    "[object Int16Array]",
    "[object Uint16Array]",
    "[object Int32Array]",
    "[object Uint32Array]",
    "[object Float32Array]",
    "[object Float64Array]"
  ];
  var isArrayBufferView = ArrayBuffer.isView || function(obj) {
    return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
  };
}
function normalizeName(name) {
  if (typeof name !== "string") {
    name = String(name);
  }
  if (/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(name) || name === "") {
    throw new TypeError('Invalid character in header field name: "' + name + '"');
  }
  return name.toLowerCase();
}
function normalizeValue(value) {
  if (typeof value !== "string") {
    value = String(value);
  }
  return value;
}
function iteratorFor(items) {
  var iterator2 = {
    next: function() {
      var value = items.shift();
      return { done: value === void 0, value };
    }
  };
  if (support.iterable) {
    iterator2[Symbol.iterator] = function() {
      return iterator2;
    };
  }
  return iterator2;
}
function Headers(headers) {
  this.map = {};
  if (headers instanceof Headers) {
    headers.forEach(function(value, name) {
      this.append(name, value);
    }, this);
  } else if (Array.isArray(headers)) {
    headers.forEach(function(header) {
      this.append(header[0], header[1]);
    }, this);
  } else if (headers) {
    Object.getOwnPropertyNames(headers).forEach(function(name) {
      this.append(name, headers[name]);
    }, this);
  }
}
Headers.prototype.append = function(name, value) {
  name = normalizeName(name);
  value = normalizeValue(value);
  var oldValue = this.map[name];
  this.map[name] = oldValue ? oldValue + ", " + value : value;
};
Headers.prototype["delete"] = function(name) {
  delete this.map[normalizeName(name)];
};
Headers.prototype.get = function(name) {
  name = normalizeName(name);
  return this.has(name) ? this.map[name] : null;
};
Headers.prototype.has = function(name) {
  return this.map.hasOwnProperty(normalizeName(name));
};
Headers.prototype.set = function(name, value) {
  this.map[normalizeName(name)] = normalizeValue(value);
};
Headers.prototype.forEach = function(callback, thisArg) {
  for (var name in this.map) {
    if (this.map.hasOwnProperty(name)) {
      callback.call(thisArg, this.map[name], name, this);
    }
  }
};
Headers.prototype.keys = function() {
  var items = [];
  this.forEach(function(value, name) {
    items.push(name);
  });
  return iteratorFor(items);
};
Headers.prototype.values = function() {
  var items = [];
  this.forEach(function(value) {
    items.push(value);
  });
  return iteratorFor(items);
};
Headers.prototype.entries = function() {
  var items = [];
  this.forEach(function(value, name) {
    items.push([name, value]);
  });
  return iteratorFor(items);
};
if (support.iterable) {
  Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
}
function consumed(body) {
  if (body.bodyUsed) {
    return Promise.reject(new TypeError("Already read"));
  }
  body.bodyUsed = true;
}
function fileReaderReady(reader) {
  return new Promise(function(resolve, reject) {
    reader.onload = function() {
      resolve(reader.result);
    };
    reader.onerror = function() {
      reject(reader.error);
    };
  });
}
function readBlobAsArrayBuffer(blob) {
  var reader = new FileReader();
  var promise = fileReaderReady(reader);
  reader.readAsArrayBuffer(blob);
  return promise;
}
function readBlobAsText(blob) {
  var reader = new FileReader();
  var promise = fileReaderReady(reader);
  reader.readAsText(blob);
  return promise;
}
function readArrayBufferAsText(buf) {
  var view = new Uint8Array(buf);
  var chars = new Array(view.length);
  for (var i2 = 0; i2 < view.length; i2++) {
    chars[i2] = String.fromCharCode(view[i2]);
  }
  return chars.join("");
}
function bufferClone(buf) {
  if (buf.slice) {
    return buf.slice(0);
  } else {
    var view = new Uint8Array(buf.byteLength);
    view.set(new Uint8Array(buf));
    return view.buffer;
  }
}
function Body() {
  this.bodyUsed = false;
  this._initBody = function(body) {
    this.bodyUsed = this.bodyUsed;
    this._bodyInit = body;
    if (!body) {
      this._bodyText = "";
    } else if (typeof body === "string") {
      this._bodyText = body;
    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
      this._bodyBlob = body;
    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
      this._bodyFormData = body;
    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
      this._bodyText = body.toString();
    } else if (support.arrayBuffer && support.blob && isDataView(body)) {
      this._bodyArrayBuffer = bufferClone(body.buffer);
      this._bodyInit = new Blob([this._bodyArrayBuffer]);
    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
      this._bodyArrayBuffer = bufferClone(body);
    } else {
      this._bodyText = body = Object.prototype.toString.call(body);
    }
    if (!this.headers.get("content-type")) {
      if (typeof body === "string") {
        this.headers.set("content-type", "text/plain;charset=UTF-8");
      } else if (this._bodyBlob && this._bodyBlob.type) {
        this.headers.set("content-type", this._bodyBlob.type);
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8");
      }
    }
  };
  if (support.blob) {
    this.blob = function() {
      var rejected = consumed(this);
      if (rejected) {
        return rejected;
      }
      if (this._bodyBlob) {
        return Promise.resolve(this._bodyBlob);
      } else if (this._bodyArrayBuffer) {
        return Promise.resolve(new Blob([this._bodyArrayBuffer]));
      } else if (this._bodyFormData) {
        throw new Error("could not read FormData body as blob");
      } else {
        return Promise.resolve(new Blob([this._bodyText]));
      }
    };
    this.arrayBuffer = function() {
      if (this._bodyArrayBuffer) {
        var isConsumed = consumed(this);
        if (isConsumed) {
          return isConsumed;
        }
        if (ArrayBuffer.isView(this._bodyArrayBuffer)) {
          return Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset, this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength));
        } else {
          return Promise.resolve(this._bodyArrayBuffer);
        }
      } else {
        return this.blob().then(readBlobAsArrayBuffer);
      }
    };
  }
  this.text = function() {
    var rejected = consumed(this);
    if (rejected) {
      return rejected;
    }
    if (this._bodyBlob) {
      return readBlobAsText(this._bodyBlob);
    } else if (this._bodyArrayBuffer) {
      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
    } else if (this._bodyFormData) {
      throw new Error("could not read FormData body as text");
    } else {
      return Promise.resolve(this._bodyText);
    }
  };
  if (support.formData) {
    this.formData = function() {
      return this.text().then(decode);
    };
  }
  this.json = function() {
    return this.text().then(JSON.parse);
  };
  return this;
}
var methods = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
function normalizeMethod(method) {
  var upcased = method.toUpperCase();
  return methods.indexOf(upcased) > -1 ? upcased : method;
}
function Request(input, options) {
  if (!(this instanceof Request)) {
    throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
  }
  options = options || {};
  var body = options.body;
  if (input instanceof Request) {
    if (input.bodyUsed) {
      throw new TypeError("Already read");
    }
    this.url = input.url;
    this.credentials = input.credentials;
    if (!options.headers) {
      this.headers = new Headers(input.headers);
    }
    this.method = input.method;
    this.mode = input.mode;
    this.signal = input.signal;
    if (!body && input._bodyInit != null) {
      body = input._bodyInit;
      input.bodyUsed = true;
    }
  } else {
    this.url = String(input);
  }
  this.credentials = options.credentials || this.credentials || "same-origin";
  if (options.headers || !this.headers) {
    this.headers = new Headers(options.headers);
  }
  this.method = normalizeMethod(options.method || this.method || "GET");
  this.mode = options.mode || this.mode || null;
  this.signal = options.signal || this.signal;
  this.referrer = null;
  if ((this.method === "GET" || this.method === "HEAD") && body) {
    throw new TypeError("Body not allowed for GET or HEAD requests");
  }
  this._initBody(body);
  if (this.method === "GET" || this.method === "HEAD") {
    if (options.cache === "no-store" || options.cache === "no-cache") {
      var reParamSearch = /([?&])_=[^&]*/;
      if (reParamSearch.test(this.url)) {
        this.url = this.url.replace(reParamSearch, "$1_=" + new Date().getTime());
      } else {
        var reQueryString = /\?/;
        this.url += (reQueryString.test(this.url) ? "&" : "?") + "_=" + new Date().getTime();
      }
    }
  }
}
Request.prototype.clone = function() {
  return new Request(this, { body: this._bodyInit });
};
function decode(body) {
  var form = new FormData();
  body.trim().split("&").forEach(function(bytes) {
    if (bytes) {
      var split = bytes.split("=");
      var name = split.shift().replace(/\+/g, " ");
      var value = split.join("=").replace(/\+/g, " ");
      form.append(decodeURIComponent(name), decodeURIComponent(value));
    }
  });
  return form;
}
function parseHeaders(rawHeaders) {
  var headers = new Headers();
  var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, " ");
  preProcessedHeaders.split("\r").map(function(header) {
    return header.indexOf("\n") === 0 ? header.substr(1, header.length) : header;
  }).forEach(function(line2) {
    var parts = line2.split(":");
    var key = parts.shift().trim();
    if (key) {
      var value = parts.join(":").trim();
      headers.append(key, value);
    }
  });
  return headers;
}
Body.call(Request.prototype);
function Response$1(bodyInit, options) {
  if (!(this instanceof Response$1)) {
    throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
  }
  if (!options) {
    options = {};
  }
  this.type = "default";
  this.status = options.status === void 0 ? 200 : options.status;
  this.ok = this.status >= 200 && this.status < 300;
  this.statusText = options.statusText === void 0 ? "" : "" + options.statusText;
  this.headers = new Headers(options.headers);
  this.url = options.url || "";
  this._initBody(bodyInit);
}
Body.call(Response$1.prototype);
Response$1.prototype.clone = function() {
  return new Response$1(this._bodyInit, {
    status: this.status,
    statusText: this.statusText,
    headers: new Headers(this.headers),
    url: this.url
  });
};
Response$1.error = function() {
  var response = new Response$1(null, { status: 0, statusText: "" });
  response.type = "error";
  return response;
};
var redirectStatuses = [301, 302, 303, 307, 308];
Response$1.redirect = function(url, status) {
  if (redirectStatuses.indexOf(status) === -1) {
    throw new RangeError("Invalid status code");
  }
  return new Response$1(null, { status, headers: { location: url } });
};
var DOMException = global$1.DOMException;
try {
  new DOMException();
} catch (err) {
  DOMException = function(message, name) {
    this.message = message;
    this.name = name;
    var error = Error(message);
    this.stack = error.stack;
  };
  DOMException.prototype = Object.create(Error.prototype);
  DOMException.prototype.constructor = DOMException;
}
function fetch(input, init2) {
  return new Promise(function(resolve, reject) {
    var request2 = new Request(input, init2);
    if (request2.signal && request2.signal.aborted) {
      return reject(new DOMException("Aborted", "AbortError"));
    }
    var xhr = new XMLHttpRequest();
    function abortXhr() {
      xhr.abort();
    }
    xhr.onload = function() {
      var options = {
        status: xhr.status,
        statusText: xhr.statusText,
        headers: parseHeaders(xhr.getAllResponseHeaders() || "")
      };
      options.url = "responseURL" in xhr ? xhr.responseURL : options.headers.get("X-Request-URL");
      var body = "response" in xhr ? xhr.response : xhr.responseText;
      setTimeout(function() {
        resolve(new Response$1(body, options));
      }, 0);
    };
    xhr.onerror = function() {
      setTimeout(function() {
        reject(new TypeError("Network request failed"));
      }, 0);
    };
    xhr.ontimeout = function() {
      setTimeout(function() {
        reject(new TypeError("Network request failed"));
      }, 0);
    };
    xhr.onabort = function() {
      setTimeout(function() {
        reject(new DOMException("Aborted", "AbortError"));
      }, 0);
    };
    function fixUrl(url) {
      try {
        return url === "" && global$1.location.href ? global$1.location.href : url;
      } catch (e2) {
        return url;
      }
    }
    xhr.open(request2.method, fixUrl(request2.url), true);
    if (request2.credentials === "include") {
      xhr.withCredentials = true;
    } else if (request2.credentials === "omit") {
      xhr.withCredentials = false;
    }
    if ("responseType" in xhr) {
      if (support.blob) {
        xhr.responseType = "blob";
      } else if (support.arrayBuffer && request2.headers.get("Content-Type") && request2.headers.get("Content-Type").indexOf("application/octet-stream") !== -1) {
        xhr.responseType = "arraybuffer";
      }
    }
    if (init2 && typeof init2.headers === "object" && !(init2.headers instanceof Headers)) {
      Object.getOwnPropertyNames(init2.headers).forEach(function(name) {
        xhr.setRequestHeader(name, normalizeValue(init2.headers[name]));
      });
    } else {
      request2.headers.forEach(function(value, name) {
        xhr.setRequestHeader(name, value);
      });
    }
    if (request2.signal) {
      request2.signal.addEventListener("abort", abortXhr);
      xhr.onreadystatechange = function() {
        if (xhr.readyState === 4) {
          request2.signal.removeEventListener("abort", abortXhr);
        }
      };
    }
    xhr.send(typeof request2._bodyInit === "undefined" ? null : request2._bodyInit);
  });
}
fetch.polyfill = true;
if (!global$1.fetch) {
  global$1.fetch = fetch;
  global$1.Headers = Headers;
  global$1.Request = Request;
  global$1.Response = Response$1;
}
var fetchNpmBrowserify = self.fetch.bind(self);
class Deprecation extends Error {
  constructor(message) {
    super(message);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }
    this.name = "Deprecation";
  }
}
var once$2 = { exports: {} };
var wrappy_1 = wrappy$1;
function wrappy$1(fn, cb2) {
  if (fn && cb2)
    return wrappy$1(fn)(cb2);
  if (typeof fn !== "function")
    throw new TypeError("need wrapper function");
  Object.keys(fn).forEach(function(k2) {
    wrapper[k2] = fn[k2];
  });
  return wrapper;
  function wrapper() {
    var args = new Array(arguments.length);
    for (var i2 = 0; i2 < args.length; i2++) {
      args[i2] = arguments[i2];
    }
    var ret = fn.apply(this, args);
    var cb3 = args[args.length - 1];
    if (typeof ret === "function" && ret !== cb3) {
      Object.keys(cb3).forEach(function(k2) {
        ret[k2] = cb3[k2];
      });
    }
    return ret;
  }
}
var wrappy = wrappy_1;
once$2.exports = wrappy(once);
once$2.exports.strict = wrappy(onceStrict);
once.proto = once(function() {
  Object.defineProperty(Function.prototype, "once", {
    value: function() {
      return once(this);
    },
    configurable: true
  });
  Object.defineProperty(Function.prototype, "onceStrict", {
    value: function() {
      return onceStrict(this);
    },
    configurable: true
  });
});
function once(fn) {
  var f2 = function() {
    if (f2.called)
      return f2.value;
    f2.called = true;
    return f2.value = fn.apply(this, arguments);
  };
  f2.called = false;
  return f2;
}
function onceStrict(fn) {
  var f2 = function() {
    if (f2.called)
      throw new Error(f2.onceError);
    f2.called = true;
    return f2.value = fn.apply(this, arguments);
  };
  var name = fn.name || "Function wrapped with `once`";
  f2.onceError = name + " shouldn't be called more than once";
  f2.called = false;
  return f2;
}
var once$1 = once$2.exports;
const logOnceCode = once$1((deprecation) => console.warn(deprecation));
const logOnceHeaders = once$1((deprecation) => console.warn(deprecation));
class RequestError extends Error {
  constructor(message, statusCode, options) {
    super(message);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }
    this.name = "HttpError";
    this.status = statusCode;
    let headers;
    if ("headers" in options && typeof options.headers !== "undefined") {
      headers = options.headers;
    }
    if ("response" in options) {
      this.response = options.response;
      headers = options.response.headers;
    }
    const requestCopy = Object.assign({}, options.request);
    if (options.request.headers.authorization) {
      requestCopy.headers = Object.assign({}, options.request.headers, {
        authorization: options.request.headers.authorization.replace(/ .*$/, " [REDACTED]")
      });
    }
    requestCopy.url = requestCopy.url.replace(/\bclient_secret=\w+/g, "client_secret=[REDACTED]").replace(/\baccess_token=\w+/g, "access_token=[REDACTED]");
    this.request = requestCopy;
    Object.defineProperty(this, "code", {
      get() {
        logOnceCode(new Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`."));
        return statusCode;
      }
    });
    Object.defineProperty(this, "headers", {
      get() {
        logOnceHeaders(new Deprecation("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`."));
        return headers || {};
      }
    });
  }
}
var distWeb$9 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  RequestError
});
const VERSION$e = "5.6.3";
function getBufferResponse(response) {
  return response.arrayBuffer();
}
function fetchWrapper(requestOptions) {
  const log = requestOptions.request && requestOptions.request.log ? requestOptions.request.log : console;
  if (isPlainObject(requestOptions.body) || Array.isArray(requestOptions.body)) {
    requestOptions.body = JSON.stringify(requestOptions.body);
  }
  let headers = {};
  let status;
  let url;
  const fetch2 = requestOptions.request && requestOptions.request.fetch || fetchNpmBrowserify;
  return fetch2(requestOptions.url, Object.assign({
    method: requestOptions.method,
    body: requestOptions.body,
    headers: requestOptions.headers,
    redirect: requestOptions.redirect
  }, requestOptions.request)).then(async (response) => {
    url = response.url;
    status = response.status;
    for (const keyAndValue of response.headers) {
      headers[keyAndValue[0]] = keyAndValue[1];
    }
    if ("deprecation" in headers) {
      const matches = headers.link && headers.link.match(/<([^>]+)>; rel="deprecation"/);
      const deprecationLink = matches && matches.pop();
      log.warn(`[@octokit/request] "${requestOptions.method} ${requestOptions.url}" is deprecated. It is scheduled to be removed on ${headers.sunset}${deprecationLink ? `. See ${deprecationLink}` : ""}`);
    }
    if (status === 204 || status === 205) {
      return;
    }
    if (requestOptions.method === "HEAD") {
      if (status < 400) {
        return;
      }
      throw new RequestError(response.statusText, status, {
        response: {
          url,
          status,
          headers,
          data: void 0
        },
        request: requestOptions
      });
    }
    if (status === 304) {
      throw new RequestError("Not modified", status, {
        response: {
          url,
          status,
          headers,
          data: await getResponseData(response)
        },
        request: requestOptions
      });
    }
    if (status >= 400) {
      const data = await getResponseData(response);
      const error = new RequestError(toErrorMessage(data), status, {
        response: {
          url,
          status,
          headers,
          data
        },
        request: requestOptions
      });
      throw error;
    }
    return getResponseData(response);
  }).then((data) => {
    return {
      status,
      url,
      headers,
      data
    };
  }).catch((error) => {
    if (error instanceof RequestError)
      throw error;
    throw new RequestError(error.message, 500, {
      request: requestOptions
    });
  });
}
async function getResponseData(response) {
  const contentType = response.headers.get("content-type");
  if (/application\/json/.test(contentType)) {
    return response.json();
  }
  if (!contentType || /^text\/|charset=utf-8$/.test(contentType)) {
    return response.text();
  }
  return getBufferResponse(response);
}
function toErrorMessage(data) {
  if (typeof data === "string")
    return data;
  if ("message" in data) {
    if (Array.isArray(data.errors)) {
      return `${data.message}: ${data.errors.map(JSON.stringify).join(", ")}`;
    }
    return data.message;
  }
  return `Unknown error: ${JSON.stringify(data)}`;
}
function withDefaults$1(oldEndpoint, newDefaults) {
  const endpoint2 = oldEndpoint.defaults(newDefaults);
  const newApi = function(route, parameters) {
    const endpointOptions = endpoint2.merge(route, parameters);
    if (!endpointOptions.request || !endpointOptions.request.hook) {
      return fetchWrapper(endpoint2.parse(endpointOptions));
    }
    const request2 = (route2, parameters2) => {
      return fetchWrapper(endpoint2.parse(endpoint2.merge(route2, parameters2)));
    };
    Object.assign(request2, {
      endpoint: endpoint2,
      defaults: withDefaults$1.bind(null, endpoint2)
    });
    return endpointOptions.request.hook(request2, endpointOptions);
  };
  return Object.assign(newApi, {
    endpoint: endpoint2,
    defaults: withDefaults$1.bind(null, endpoint2)
  });
}
const request$1 = withDefaults$1(endpoint, {
  headers: {
    "user-agent": `octokit-request.js/${VERSION$e} ${getUserAgent()}`
  }
});
var distWeb$8 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  request: request$1
});
const VERSION$d = "4.8.0";
function _buildMessageForResponseErrors(data) {
  return `Request failed due to following response errors:
` + data.errors.map((e2) => ` - ${e2.message}`).join("\n");
}
class GraphqlResponseError extends Error {
  constructor(request2, headers, response) {
    super(_buildMessageForResponseErrors(response));
    this.request = request2;
    this.headers = headers;
    this.response = response;
    this.name = "GraphqlResponseError";
    this.errors = response.errors;
    this.data = response.data;
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }
  }
}
const NON_VARIABLE_OPTIONS = [
  "method",
  "baseUrl",
  "url",
  "headers",
  "request",
  "query",
  "mediaType"
];
const FORBIDDEN_VARIABLE_OPTIONS = ["query", "method", "url"];
const GHES_V3_SUFFIX_REGEX = /\/api\/v3\/?$/;
function graphql(request2, query, options) {
  if (options) {
    if (typeof query === "string" && "query" in options) {
      return Promise.reject(new Error(`[@octokit/graphql] "query" cannot be used as variable name`));
    }
    for (const key in options) {
      if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key))
        continue;
      return Promise.reject(new Error(`[@octokit/graphql] "${key}" cannot be used as variable name`));
    }
  }
  const parsedOptions = typeof query === "string" ? Object.assign({ query }, options) : query;
  const requestOptions = Object.keys(parsedOptions).reduce((result, key) => {
    if (NON_VARIABLE_OPTIONS.includes(key)) {
      result[key] = parsedOptions[key];
      return result;
    }
    if (!result.variables) {
      result.variables = {};
    }
    result.variables[key] = parsedOptions[key];
    return result;
  }, {});
  const baseUrl = parsedOptions.baseUrl || request2.endpoint.DEFAULTS.baseUrl;
  if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {
    requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, "/api/graphql");
  }
  return request2(requestOptions).then((response) => {
    if (response.data.errors) {
      const headers = {};
      for (const key of Object.keys(response.headers)) {
        headers[key] = response.headers[key];
      }
      throw new GraphqlResponseError(requestOptions, headers, response.data);
    }
    return response.data.data;
  });
}
function withDefaults(request$1$1, newDefaults) {
  const newRequest = request$1$1.defaults(newDefaults);
  const newApi = (query, options) => {
    return graphql(newRequest, query, options);
  };
  return Object.assign(newApi, {
    defaults: withDefaults.bind(null, newRequest),
    endpoint: request$1.endpoint
  });
}
withDefaults(request$1, {
  headers: {
    "user-agent": `octokit-graphql.js/${VERSION$d} ${getUserAgent()}`
  },
  method: "POST",
  url: "/graphql"
});
function withCustomRequest(customRequest) {
  return withDefaults(customRequest, {
    method: "POST",
    url: "/graphql"
  });
}
const REGEX_IS_INSTALLATION_LEGACY = /^v1\./;
const REGEX_IS_INSTALLATION = /^ghs_/;
const REGEX_IS_USER_TO_SERVER = /^ghu_/;
async function auth$5(token2) {
  const isApp = token2.split(/\./).length === 3;
  const isInstallation = REGEX_IS_INSTALLATION_LEGACY.test(token2) || REGEX_IS_INSTALLATION.test(token2);
  const isUserToServer = REGEX_IS_USER_TO_SERVER.test(token2);
  const tokenType = isApp ? "app" : isInstallation ? "installation" : isUserToServer ? "user-to-server" : "oauth";
  return {
    type: "token",
    token: token2,
    tokenType
  };
}
function withAuthorizationPrefix(token2) {
  if (token2.split(/\./).length === 3) {
    return `bearer ${token2}`;
  }
  return `token ${token2}`;
}
async function hook$5(token2, request2, route, parameters) {
  const endpoint2 = request2.endpoint.merge(route, parameters);
  endpoint2.headers.authorization = withAuthorizationPrefix(token2);
  return request2(endpoint2);
}
const createTokenAuth = function createTokenAuth2(token2) {
  if (!token2) {
    throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");
  }
  if (typeof token2 !== "string") {
    throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");
  }
  token2 = token2.replace(/^(token|bearer) +/i, "");
  return Object.assign(auth$5.bind(null, token2), {
    hook: hook$5.bind(null, token2)
  });
};
const VERSION$c = "3.6.0";
class Octokit$1 {
  constructor(options = {}) {
    const hook2 = new Collection();
    const requestDefaults = {
      baseUrl: request$1.endpoint.DEFAULTS.baseUrl,
      headers: {},
      request: Object.assign({}, options.request, {
        hook: hook2.bind(null, "request")
      }),
      mediaType: {
        previews: [],
        format: ""
      }
    };
    requestDefaults.headers["user-agent"] = [
      options.userAgent,
      `octokit-core.js/${VERSION$c} ${getUserAgent()}`
    ].filter(Boolean).join(" ");
    if (options.baseUrl) {
      requestDefaults.baseUrl = options.baseUrl;
    }
    if (options.previews) {
      requestDefaults.mediaType.previews = options.previews;
    }
    if (options.timeZone) {
      requestDefaults.headers["time-zone"] = options.timeZone;
    }
    this.request = request$1.defaults(requestDefaults);
    this.graphql = withCustomRequest(this.request).defaults(requestDefaults);
    this.log = Object.assign({
      debug: () => {
      },
      info: () => {
      },
      warn: console.warn.bind(console),
      error: console.error.bind(console)
    }, options.log);
    this.hook = hook2;
    if (!options.authStrategy) {
      if (!options.auth) {
        this.auth = async () => ({
          type: "unauthenticated"
        });
      } else {
        const auth2 = createTokenAuth(options.auth);
        hook2.wrap("request", auth2.hook);
        this.auth = auth2;
      }
    } else {
      const _a = options, { authStrategy } = _a, otherOptions = __objRest(_a, ["authStrategy"]);
      const auth2 = authStrategy(Object.assign({
        request: this.request,
        log: this.log,
        octokit: this,
        octokitOptions: otherOptions
      }, options.auth));
      hook2.wrap("request", auth2.hook);
      this.auth = auth2;
    }
    const classConstructor = this.constructor;
    classConstructor.plugins.forEach((plugin) => {
      Object.assign(this, plugin(this, options));
    });
  }
  static defaults(defaults) {
    const OctokitWithDefaults = class extends this {
      constructor(...args) {
        const options = args[0] || {};
        if (typeof defaults === "function") {
          super(defaults(options));
          return;
        }
        super(Object.assign({}, defaults, options, options.userAgent && defaults.userAgent ? {
          userAgent: `${options.userAgent} ${defaults.userAgent}`
        } : null));
      }
    };
    return OctokitWithDefaults;
  }
  static plugin(...newPlugins) {
    var _a;
    const currentPlugins = this.plugins;
    const NewOctokit = (_a = class extends this {
    }, _a.plugins = currentPlugins.concat(newPlugins.filter((plugin) => !currentPlugins.includes(plugin))), _a);
    return NewOctokit;
  }
}
Octokit$1.VERSION = VERSION$c;
Octokit$1.plugins = [];
var distWeb$7 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  Octokit: Octokit$1
});
const VERSION$b = "2.21.0";
function normalizePaginatedListResponse(response) {
  if (!response.data) {
    return __spreadProps(__spreadValues({}, response), {
      data: []
    });
  }
  const responseNeedsNormalization = "total_count" in response.data && !("url" in response.data);
  if (!responseNeedsNormalization)
    return response;
  const incompleteResults = response.data.incomplete_results;
  const repositorySelection = response.data.repository_selection;
  const totalCount = response.data.total_count;
  delete response.data.incomplete_results;
  delete response.data.repository_selection;
  delete response.data.total_count;
  const namespaceKey = Object.keys(response.data)[0];
  const data = response.data[namespaceKey];
  response.data = data;
  if (typeof incompleteResults !== "undefined") {
    response.data.incomplete_results = incompleteResults;
  }
  if (typeof repositorySelection !== "undefined") {
    response.data.repository_selection = repositorySelection;
  }
  response.data.total_count = totalCount;
  return response;
}
function iterator$1(octokit2, route, parameters) {
  const options = typeof route === "function" ? route.endpoint(parameters) : octokit2.request.endpoint(route, parameters);
  const requestMethod = typeof route === "function" ? route : octokit2.request;
  const method = options.method;
  const headers = options.headers;
  let url = options.url;
  return {
    [Symbol.asyncIterator]: () => ({
      async next() {
        if (!url)
          return { done: true };
        try {
          const response = await requestMethod({ method, url, headers });
          const normalizedResponse = normalizePaginatedListResponse(response);
          url = ((normalizedResponse.headers.link || "").match(/<([^>]+)>;\s*rel="next"/) || [])[1];
          return { value: normalizedResponse };
        } catch (error) {
          if (error.status !== 409)
            throw error;
          url = "";
          return {
            value: {
              status: 200,
              headers: {},
              data: []
            }
          };
        }
      }
    })
  };
}
function paginate(octokit2, route, parameters, mapFn) {
  if (typeof parameters === "function") {
    mapFn = parameters;
    parameters = void 0;
  }
  return gather(octokit2, [], iterator$1(octokit2, route, parameters)[Symbol.asyncIterator](), mapFn);
}
function gather(octokit2, results, iterator2, mapFn) {
  return iterator2.next().then((result) => {
    if (result.done) {
      return results;
    }
    let earlyExit = false;
    function done() {
      earlyExit = true;
    }
    results = results.concat(mapFn ? mapFn(result.value, done) : result.value.data);
    if (earlyExit) {
      return results;
    }
    return gather(octokit2, results, iterator2, mapFn);
  });
}
const composePaginateRest = Object.assign(paginate, {
  iterator: iterator$1
});
const paginatingEndpoints = [
  "GET /app/hook/deliveries",
  "GET /app/installations",
  "GET /applications/grants",
  "GET /authorizations",
  "GET /enterprises/{enterprise}/actions/permissions/organizations",
  "GET /enterprises/{enterprise}/actions/runner-groups",
  "GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations",
  "GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners",
  "GET /enterprises/{enterprise}/actions/runners",
  "GET /enterprises/{enterprise}/audit-log",
  "GET /enterprises/{enterprise}/secret-scanning/alerts",
  "GET /enterprises/{enterprise}/settings/billing/advanced-security",
  "GET /events",
  "GET /gists",
  "GET /gists/public",
  "GET /gists/starred",
  "GET /gists/{gist_id}/comments",
  "GET /gists/{gist_id}/commits",
  "GET /gists/{gist_id}/forks",
  "GET /installation/repositories",
  "GET /issues",
  "GET /licenses",
  "GET /marketplace_listing/plans",
  "GET /marketplace_listing/plans/{plan_id}/accounts",
  "GET /marketplace_listing/stubbed/plans",
  "GET /marketplace_listing/stubbed/plans/{plan_id}/accounts",
  "GET /networks/{owner}/{repo}/events",
  "GET /notifications",
  "GET /organizations",
  "GET /orgs/{org_id}/codespaces",
  "GET /orgs/{org}/actions/cache/usage-by-repository",
  "GET /orgs/{org}/actions/permissions/repositories",
  "GET /orgs/{org}/actions/runner-groups",
  "GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories",
  "GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners",
  "GET /orgs/{org}/actions/runners",
  "GET /orgs/{org}/actions/secrets",
  "GET /orgs/{org}/actions/secrets/{secret_name}/repositories",
  "GET /orgs/{org}/audit-log",
  "GET /orgs/{org}/blocks",
  "GET /orgs/{org}/code-scanning/alerts",
  "GET /orgs/{org}/credential-authorizations",
  "GET /orgs/{org}/dependabot/secrets",
  "GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories",
  "GET /orgs/{org}/events",
  "GET /orgs/{org}/external-groups",
  "GET /orgs/{org}/failed_invitations",
  "GET /orgs/{org}/hooks",
  "GET /orgs/{org}/hooks/{hook_id}/deliveries",
  "GET /orgs/{org}/installations",
  "GET /orgs/{org}/invitations",
  "GET /orgs/{org}/invitations/{invitation_id}/teams",
  "GET /orgs/{org}/issues",
  "GET /orgs/{org}/members",
  "GET /orgs/{org}/migrations",
  "GET /orgs/{org}/migrations/{migration_id}/repositories",
  "GET /orgs/{org}/outside_collaborators",
  "GET /orgs/{org}/packages",
  "GET /orgs/{org}/packages/{package_type}/{package_name}/versions",
  "GET /orgs/{org}/projects",
  "GET /orgs/{org}/public_members",
  "GET /orgs/{org}/repos",
  "GET /orgs/{org}/secret-scanning/alerts",
  "GET /orgs/{org}/settings/billing/advanced-security",
  "GET /orgs/{org}/team-sync/groups",
  "GET /orgs/{org}/teams",
  "GET /orgs/{org}/teams/{team_slug}/discussions",
  "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments",
  "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",
  "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",
  "GET /orgs/{org}/teams/{team_slug}/invitations",
  "GET /orgs/{org}/teams/{team_slug}/members",
  "GET /orgs/{org}/teams/{team_slug}/projects",
  "GET /orgs/{org}/teams/{team_slug}/repos",
  "GET /orgs/{org}/teams/{team_slug}/teams",
  "GET /projects/columns/{column_id}/cards",
  "GET /projects/{project_id}/collaborators",
  "GET /projects/{project_id}/columns",
  "GET /repos/{owner}/{repo}/actions/artifacts",
  "GET /repos/{owner}/{repo}/actions/caches",
  "GET /repos/{owner}/{repo}/actions/runners",
  "GET /repos/{owner}/{repo}/actions/runs",
  "GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts",
  "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs",
  "GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs",
  "GET /repos/{owner}/{repo}/actions/secrets",
  "GET /repos/{owner}/{repo}/actions/workflows",
  "GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs",
  "GET /repos/{owner}/{repo}/assignees",
  "GET /repos/{owner}/{repo}/branches",
  "GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",
  "GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",
  "GET /repos/{owner}/{repo}/code-scanning/alerts",
  "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",
  "GET /repos/{owner}/{repo}/code-scanning/analyses",
  "GET /repos/{owner}/{repo}/codespaces",
  "GET /repos/{owner}/{repo}/codespaces/devcontainers",
  "GET /repos/{owner}/{repo}/codespaces/secrets",
  "GET /repos/{owner}/{repo}/collaborators",
  "GET /repos/{owner}/{repo}/comments",
  "GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",
  "GET /repos/{owner}/{repo}/commits",
  "GET /repos/{owner}/{repo}/commits/{commit_sha}/comments",
  "GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",
  "GET /repos/{owner}/{repo}/commits/{ref}/check-runs",
  "GET /repos/{owner}/{repo}/commits/{ref}/check-suites",
  "GET /repos/{owner}/{repo}/commits/{ref}/status",
  "GET /repos/{owner}/{repo}/commits/{ref}/statuses",
  "GET /repos/{owner}/{repo}/contributors",
  "GET /repos/{owner}/{repo}/dependabot/secrets",
  "GET /repos/{owner}/{repo}/deployments",
  "GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses",
  "GET /repos/{owner}/{repo}/environments",
  "GET /repos/{owner}/{repo}/events",
  "GET /repos/{owner}/{repo}/forks",
  "GET /repos/{owner}/{repo}/git/matching-refs/{ref}",
  "GET /repos/{owner}/{repo}/hooks",
  "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries",
  "GET /repos/{owner}/{repo}/invitations",
  "GET /repos/{owner}/{repo}/issues",
  "GET /repos/{owner}/{repo}/issues/comments",
  "GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",
  "GET /repos/{owner}/{repo}/issues/events",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/comments",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/events",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/labels",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",
  "GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",
  "GET /repos/{owner}/{repo}/keys",
  "GET /repos/{owner}/{repo}/labels",
  "GET /repos/{owner}/{repo}/milestones",
  "GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels",
  "GET /repos/{owner}/{repo}/notifications",
  "GET /repos/{owner}/{repo}/pages/builds",
  "GET /repos/{owner}/{repo}/projects",
  "GET /repos/{owner}/{repo}/pulls",
  "GET /repos/{owner}/{repo}/pulls/comments",
  "GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/comments",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/commits",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/files",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews",
  "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments",
  "GET /repos/{owner}/{repo}/releases",
  "GET /repos/{owner}/{repo}/releases/{release_id}/assets",
  "GET /repos/{owner}/{repo}/releases/{release_id}/reactions",
  "GET /repos/{owner}/{repo}/secret-scanning/alerts",
  "GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations",
  "GET /repos/{owner}/{repo}/stargazers",
  "GET /repos/{owner}/{repo}/subscribers",
  "GET /repos/{owner}/{repo}/tags",
  "GET /repos/{owner}/{repo}/teams",
  "GET /repos/{owner}/{repo}/topics",
  "GET /repositories",
  "GET /repositories/{repository_id}/environments/{environment_name}/secrets",
  "GET /search/code",
  "GET /search/commits",
  "GET /search/issues",
  "GET /search/labels",
  "GET /search/repositories",
  "GET /search/topics",
  "GET /search/users",
  "GET /teams/{team_id}/discussions",
  "GET /teams/{team_id}/discussions/{discussion_number}/comments",
  "GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions",
  "GET /teams/{team_id}/discussions/{discussion_number}/reactions",
  "GET /teams/{team_id}/invitations",
  "GET /teams/{team_id}/members",
  "GET /teams/{team_id}/projects",
  "GET /teams/{team_id}/repos",
  "GET /teams/{team_id}/teams",
  "GET /user/blocks",
  "GET /user/codespaces",
  "GET /user/codespaces/secrets",
  "GET /user/emails",
  "GET /user/followers",
  "GET /user/following",
  "GET /user/gpg_keys",
  "GET /user/installations",
  "GET /user/installations/{installation_id}/repositories",
  "GET /user/issues",
  "GET /user/keys",
  "GET /user/marketplace_purchases",
  "GET /user/marketplace_purchases/stubbed",
  "GET /user/memberships/orgs",
  "GET /user/migrations",
  "GET /user/migrations/{migration_id}/repositories",
  "GET /user/orgs",
  "GET /user/packages",
  "GET /user/packages/{package_type}/{package_name}/versions",
  "GET /user/public_emails",
  "GET /user/repos",
  "GET /user/repository_invitations",
  "GET /user/starred",
  "GET /user/subscriptions",
  "GET /user/teams",
  "GET /users",
  "GET /users/{username}/events",
  "GET /users/{username}/events/orgs/{org}",
  "GET /users/{username}/events/public",
  "GET /users/{username}/followers",
  "GET /users/{username}/following",
  "GET /users/{username}/gists",
  "GET /users/{username}/gpg_keys",
  "GET /users/{username}/keys",
  "GET /users/{username}/orgs",
  "GET /users/{username}/packages",
  "GET /users/{username}/projects",
  "GET /users/{username}/received_events",
  "GET /users/{username}/received_events/public",
  "GET /users/{username}/repos",
  "GET /users/{username}/starred",
  "GET /users/{username}/subscriptions"
];
function isPaginatingEndpoint(arg) {
  if (typeof arg === "string") {
    return paginatingEndpoints.includes(arg);
  } else {
    return false;
  }
}
function paginateRest(octokit2) {
  return {
    paginate: Object.assign(paginate.bind(null, octokit2), {
      iterator: iterator$1.bind(null, octokit2)
    })
  };
}
paginateRest.VERSION = VERSION$b;
var distWeb$6 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  composePaginateRest,
  isPaginatingEndpoint,
  paginateRest,
  paginatingEndpoints
});
const Endpoints = {
  actions: {
    addCustomLabelsToSelfHostedRunnerForOrg: [
      "POST /orgs/{org}/actions/runners/{runner_id}/labels"
    ],
    addCustomLabelsToSelfHostedRunnerForRepo: [
      "POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"
    ],
    addSelectedRepoToOrgSecret: [
      "PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"
    ],
    approveWorkflowRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"
    ],
    cancelWorkflowRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"
    ],
    createOrUpdateEnvironmentSecret: [
      "PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"
    ],
    createOrUpdateOrgSecret: ["PUT /orgs/{org}/actions/secrets/{secret_name}"],
    createOrUpdateRepoSecret: [
      "PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"
    ],
    createRegistrationTokenForOrg: [
      "POST /orgs/{org}/actions/runners/registration-token"
    ],
    createRegistrationTokenForRepo: [
      "POST /repos/{owner}/{repo}/actions/runners/registration-token"
    ],
    createRemoveTokenForOrg: ["POST /orgs/{org}/actions/runners/remove-token"],
    createRemoveTokenForRepo: [
      "POST /repos/{owner}/{repo}/actions/runners/remove-token"
    ],
    createWorkflowDispatch: [
      "POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"
    ],
    deleteActionsCacheById: [
      "DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"
    ],
    deleteActionsCacheByKey: [
      "DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"
    ],
    deleteArtifact: [
      "DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"
    ],
    deleteEnvironmentSecret: [
      "DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"
    ],
    deleteOrgSecret: ["DELETE /orgs/{org}/actions/secrets/{secret_name}"],
    deleteRepoSecret: [
      "DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"
    ],
    deleteSelfHostedRunnerFromOrg: [
      "DELETE /orgs/{org}/actions/runners/{runner_id}"
    ],
    deleteSelfHostedRunnerFromRepo: [
      "DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"
    ],
    deleteWorkflowRun: ["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],
    deleteWorkflowRunLogs: [
      "DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"
    ],
    disableSelectedRepositoryGithubActionsOrganization: [
      "DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"
    ],
    disableWorkflow: [
      "PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"
    ],
    downloadArtifact: [
      "GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"
    ],
    downloadJobLogsForWorkflowRun: [
      "GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"
    ],
    downloadWorkflowRunAttemptLogs: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"
    ],
    downloadWorkflowRunLogs: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"
    ],
    enableSelectedRepositoryGithubActionsOrganization: [
      "PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"
    ],
    enableWorkflow: [
      "PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"
    ],
    getActionsCacheList: ["GET /repos/{owner}/{repo}/actions/caches"],
    getActionsCacheUsage: ["GET /repos/{owner}/{repo}/actions/cache/usage"],
    getActionsCacheUsageByRepoForOrg: [
      "GET /orgs/{org}/actions/cache/usage-by-repository"
    ],
    getActionsCacheUsageForEnterprise: [
      "GET /enterprises/{enterprise}/actions/cache/usage"
    ],
    getActionsCacheUsageForOrg: ["GET /orgs/{org}/actions/cache/usage"],
    getAllowedActionsOrganization: [
      "GET /orgs/{org}/actions/permissions/selected-actions"
    ],
    getAllowedActionsRepository: [
      "GET /repos/{owner}/{repo}/actions/permissions/selected-actions"
    ],
    getArtifact: ["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],
    getEnvironmentPublicKey: [
      "GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key"
    ],
    getEnvironmentSecret: [
      "GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"
    ],
    getGithubActionsDefaultWorkflowPermissionsEnterprise: [
      "GET /enterprises/{enterprise}/actions/permissions/workflow"
    ],
    getGithubActionsDefaultWorkflowPermissionsOrganization: [
      "GET /orgs/{org}/actions/permissions/workflow"
    ],
    getGithubActionsDefaultWorkflowPermissionsRepository: [
      "GET /repos/{owner}/{repo}/actions/permissions/workflow"
    ],
    getGithubActionsPermissionsOrganization: [
      "GET /orgs/{org}/actions/permissions"
    ],
    getGithubActionsPermissionsRepository: [
      "GET /repos/{owner}/{repo}/actions/permissions"
    ],
    getJobForWorkflowRun: ["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],
    getOrgPublicKey: ["GET /orgs/{org}/actions/secrets/public-key"],
    getOrgSecret: ["GET /orgs/{org}/actions/secrets/{secret_name}"],
    getPendingDeploymentsForRun: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"
    ],
    getRepoPermissions: [
      "GET /repos/{owner}/{repo}/actions/permissions",
      {},
      { renamed: ["actions", "getGithubActionsPermissionsRepository"] }
    ],
    getRepoPublicKey: ["GET /repos/{owner}/{repo}/actions/secrets/public-key"],
    getRepoSecret: ["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],
    getReviewsForRun: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"
    ],
    getSelfHostedRunnerForOrg: ["GET /orgs/{org}/actions/runners/{runner_id}"],
    getSelfHostedRunnerForRepo: [
      "GET /repos/{owner}/{repo}/actions/runners/{runner_id}"
    ],
    getWorkflow: ["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],
    getWorkflowAccessToRepository: [
      "GET /repos/{owner}/{repo}/actions/permissions/access"
    ],
    getWorkflowRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],
    getWorkflowRunAttempt: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"
    ],
    getWorkflowRunUsage: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"
    ],
    getWorkflowUsage: [
      "GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"
    ],
    listArtifactsForRepo: ["GET /repos/{owner}/{repo}/actions/artifacts"],
    listEnvironmentSecrets: [
      "GET /repositories/{repository_id}/environments/{environment_name}/secrets"
    ],
    listJobsForWorkflowRun: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"
    ],
    listJobsForWorkflowRunAttempt: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"
    ],
    listLabelsForSelfHostedRunnerForOrg: [
      "GET /orgs/{org}/actions/runners/{runner_id}/labels"
    ],
    listLabelsForSelfHostedRunnerForRepo: [
      "GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"
    ],
    listOrgSecrets: ["GET /orgs/{org}/actions/secrets"],
    listRepoSecrets: ["GET /repos/{owner}/{repo}/actions/secrets"],
    listRepoWorkflows: ["GET /repos/{owner}/{repo}/actions/workflows"],
    listRunnerApplicationsForOrg: ["GET /orgs/{org}/actions/runners/downloads"],
    listRunnerApplicationsForRepo: [
      "GET /repos/{owner}/{repo}/actions/runners/downloads"
    ],
    listSelectedReposForOrgSecret: [
      "GET /orgs/{org}/actions/secrets/{secret_name}/repositories"
    ],
    listSelectedRepositoriesEnabledGithubActionsOrganization: [
      "GET /orgs/{org}/actions/permissions/repositories"
    ],
    listSelfHostedRunnersForOrg: ["GET /orgs/{org}/actions/runners"],
    listSelfHostedRunnersForRepo: ["GET /repos/{owner}/{repo}/actions/runners"],
    listWorkflowRunArtifacts: [
      "GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"
    ],
    listWorkflowRuns: [
      "GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"
    ],
    listWorkflowRunsForRepo: ["GET /repos/{owner}/{repo}/actions/runs"],
    reRunJobForWorkflowRun: [
      "POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"
    ],
    reRunWorkflow: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],
    reRunWorkflowFailedJobs: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"
    ],
    removeAllCustomLabelsFromSelfHostedRunnerForOrg: [
      "DELETE /orgs/{org}/actions/runners/{runner_id}/labels"
    ],
    removeAllCustomLabelsFromSelfHostedRunnerForRepo: [
      "DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"
    ],
    removeCustomLabelFromSelfHostedRunnerForOrg: [
      "DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"
    ],
    removeCustomLabelFromSelfHostedRunnerForRepo: [
      "DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"
    ],
    removeSelectedRepoFromOrgSecret: [
      "DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"
    ],
    reviewPendingDeploymentsForRun: [
      "POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"
    ],
    setActionsOidcCustomIssuerPolicyForEnterprise: [
      "PUT /enterprises/{enterprise}/actions/oidc/customization/issuer"
    ],
    setAllowedActionsOrganization: [
      "PUT /orgs/{org}/actions/permissions/selected-actions"
    ],
    setAllowedActionsRepository: [
      "PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"
    ],
    setCustomLabelsForSelfHostedRunnerForOrg: [
      "PUT /orgs/{org}/actions/runners/{runner_id}/labels"
    ],
    setCustomLabelsForSelfHostedRunnerForRepo: [
      "PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"
    ],
    setGithubActionsDefaultWorkflowPermissionsEnterprise: [
      "PUT /enterprises/{enterprise}/actions/permissions/workflow"
    ],
    setGithubActionsDefaultWorkflowPermissionsOrganization: [
      "PUT /orgs/{org}/actions/permissions/workflow"
    ],
    setGithubActionsDefaultWorkflowPermissionsRepository: [
      "PUT /repos/{owner}/{repo}/actions/permissions/workflow"
    ],
    setGithubActionsPermissionsOrganization: [
      "PUT /orgs/{org}/actions/permissions"
    ],
    setGithubActionsPermissionsRepository: [
      "PUT /repos/{owner}/{repo}/actions/permissions"
    ],
    setSelectedReposForOrgSecret: [
      "PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"
    ],
    setSelectedRepositoriesEnabledGithubActionsOrganization: [
      "PUT /orgs/{org}/actions/permissions/repositories"
    ],
    setWorkflowAccessToRepository: [
      "PUT /repos/{owner}/{repo}/actions/permissions/access"
    ]
  },
  activity: {
    checkRepoIsStarredByAuthenticatedUser: ["GET /user/starred/{owner}/{repo}"],
    deleteRepoSubscription: ["DELETE /repos/{owner}/{repo}/subscription"],
    deleteThreadSubscription: [
      "DELETE /notifications/threads/{thread_id}/subscription"
    ],
    getFeeds: ["GET /feeds"],
    getRepoSubscription: ["GET /repos/{owner}/{repo}/subscription"],
    getThread: ["GET /notifications/threads/{thread_id}"],
    getThreadSubscriptionForAuthenticatedUser: [
      "GET /notifications/threads/{thread_id}/subscription"
    ],
    listEventsForAuthenticatedUser: ["GET /users/{username}/events"],
    listNotificationsForAuthenticatedUser: ["GET /notifications"],
    listOrgEventsForAuthenticatedUser: [
      "GET /users/{username}/events/orgs/{org}"
    ],
    listPublicEvents: ["GET /events"],
    listPublicEventsForRepoNetwork: ["GET /networks/{owner}/{repo}/events"],
    listPublicEventsForUser: ["GET /users/{username}/events/public"],
    listPublicOrgEvents: ["GET /orgs/{org}/events"],
    listReceivedEventsForUser: ["GET /users/{username}/received_events"],
    listReceivedPublicEventsForUser: [
      "GET /users/{username}/received_events/public"
    ],
    listRepoEvents: ["GET /repos/{owner}/{repo}/events"],
    listRepoNotificationsForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/notifications"
    ],
    listReposStarredByAuthenticatedUser: ["GET /user/starred"],
    listReposStarredByUser: ["GET /users/{username}/starred"],
    listReposWatchedByUser: ["GET /users/{username}/subscriptions"],
    listStargazersForRepo: ["GET /repos/{owner}/{repo}/stargazers"],
    listWatchedReposForAuthenticatedUser: ["GET /user/subscriptions"],
    listWatchersForRepo: ["GET /repos/{owner}/{repo}/subscribers"],
    markNotificationsAsRead: ["PUT /notifications"],
    markRepoNotificationsAsRead: ["PUT /repos/{owner}/{repo}/notifications"],
    markThreadAsRead: ["PATCH /notifications/threads/{thread_id}"],
    setRepoSubscription: ["PUT /repos/{owner}/{repo}/subscription"],
    setThreadSubscription: [
      "PUT /notifications/threads/{thread_id}/subscription"
    ],
    starRepoForAuthenticatedUser: ["PUT /user/starred/{owner}/{repo}"],
    unstarRepoForAuthenticatedUser: ["DELETE /user/starred/{owner}/{repo}"]
  },
  apps: {
    addRepoToInstallation: [
      "PUT /user/installations/{installation_id}/repositories/{repository_id}",
      {},
      { renamed: ["apps", "addRepoToInstallationForAuthenticatedUser"] }
    ],
    addRepoToInstallationForAuthenticatedUser: [
      "PUT /user/installations/{installation_id}/repositories/{repository_id}"
    ],
    checkToken: ["POST /applications/{client_id}/token"],
    createFromManifest: ["POST /app-manifests/{code}/conversions"],
    createInstallationAccessToken: [
      "POST /app/installations/{installation_id}/access_tokens"
    ],
    deleteAuthorization: ["DELETE /applications/{client_id}/grant"],
    deleteInstallation: ["DELETE /app/installations/{installation_id}"],
    deleteToken: ["DELETE /applications/{client_id}/token"],
    getAuthenticated: ["GET /app"],
    getBySlug: ["GET /apps/{app_slug}"],
    getInstallation: ["GET /app/installations/{installation_id}"],
    getOrgInstallation: ["GET /orgs/{org}/installation"],
    getRepoInstallation: ["GET /repos/{owner}/{repo}/installation"],
    getSubscriptionPlanForAccount: [
      "GET /marketplace_listing/accounts/{account_id}"
    ],
    getSubscriptionPlanForAccountStubbed: [
      "GET /marketplace_listing/stubbed/accounts/{account_id}"
    ],
    getUserInstallation: ["GET /users/{username}/installation"],
    getWebhookConfigForApp: ["GET /app/hook/config"],
    getWebhookDelivery: ["GET /app/hook/deliveries/{delivery_id}"],
    listAccountsForPlan: ["GET /marketplace_listing/plans/{plan_id}/accounts"],
    listAccountsForPlanStubbed: [
      "GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"
    ],
    listInstallationReposForAuthenticatedUser: [
      "GET /user/installations/{installation_id}/repositories"
    ],
    listInstallations: ["GET /app/installations"],
    listInstallationsForAuthenticatedUser: ["GET /user/installations"],
    listPlans: ["GET /marketplace_listing/plans"],
    listPlansStubbed: ["GET /marketplace_listing/stubbed/plans"],
    listReposAccessibleToInstallation: ["GET /installation/repositories"],
    listSubscriptionsForAuthenticatedUser: ["GET /user/marketplace_purchases"],
    listSubscriptionsForAuthenticatedUserStubbed: [
      "GET /user/marketplace_purchases/stubbed"
    ],
    listWebhookDeliveries: ["GET /app/hook/deliveries"],
    redeliverWebhookDelivery: [
      "POST /app/hook/deliveries/{delivery_id}/attempts"
    ],
    removeRepoFromInstallation: [
      "DELETE /user/installations/{installation_id}/repositories/{repository_id}",
      {},
      { renamed: ["apps", "removeRepoFromInstallationForAuthenticatedUser"] }
    ],
    removeRepoFromInstallationForAuthenticatedUser: [
      "DELETE /user/installations/{installation_id}/repositories/{repository_id}"
    ],
    resetToken: ["PATCH /applications/{client_id}/token"],
    revokeInstallationAccessToken: ["DELETE /installation/token"],
    scopeToken: ["POST /applications/{client_id}/token/scoped"],
    suspendInstallation: ["PUT /app/installations/{installation_id}/suspended"],
    unsuspendInstallation: [
      "DELETE /app/installations/{installation_id}/suspended"
    ],
    updateWebhookConfigForApp: ["PATCH /app/hook/config"]
  },
  billing: {
    getGithubActionsBillingOrg: ["GET /orgs/{org}/settings/billing/actions"],
    getGithubActionsBillingUser: [
      "GET /users/{username}/settings/billing/actions"
    ],
    getGithubAdvancedSecurityBillingGhe: [
      "GET /enterprises/{enterprise}/settings/billing/advanced-security"
    ],
    getGithubAdvancedSecurityBillingOrg: [
      "GET /orgs/{org}/settings/billing/advanced-security"
    ],
    getGithubPackagesBillingOrg: ["GET /orgs/{org}/settings/billing/packages"],
    getGithubPackagesBillingUser: [
      "GET /users/{username}/settings/billing/packages"
    ],
    getSharedStorageBillingOrg: [
      "GET /orgs/{org}/settings/billing/shared-storage"
    ],
    getSharedStorageBillingUser: [
      "GET /users/{username}/settings/billing/shared-storage"
    ]
  },
  checks: {
    create: ["POST /repos/{owner}/{repo}/check-runs"],
    createSuite: ["POST /repos/{owner}/{repo}/check-suites"],
    get: ["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],
    getSuite: ["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],
    listAnnotations: [
      "GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"
    ],
    listForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],
    listForSuite: [
      "GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"
    ],
    listSuitesForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],
    rerequestRun: [
      "POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"
    ],
    rerequestSuite: [
      "POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"
    ],
    setSuitesPreferences: [
      "PATCH /repos/{owner}/{repo}/check-suites/preferences"
    ],
    update: ["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]
  },
  codeScanning: {
    deleteAnalysis: [
      "DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"
    ],
    getAlert: [
      "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",
      {},
      { renamedParameters: { alert_id: "alert_number" } }
    ],
    getAnalysis: [
      "GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"
    ],
    getSarif: ["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],
    listAlertInstances: [
      "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"
    ],
    listAlertsForOrg: ["GET /orgs/{org}/code-scanning/alerts"],
    listAlertsForRepo: ["GET /repos/{owner}/{repo}/code-scanning/alerts"],
    listAlertsInstances: [
      "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",
      {},
      { renamed: ["codeScanning", "listAlertInstances"] }
    ],
    listRecentAnalyses: ["GET /repos/{owner}/{repo}/code-scanning/analyses"],
    updateAlert: [
      "PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"
    ],
    uploadSarif: ["POST /repos/{owner}/{repo}/code-scanning/sarifs"]
  },
  codesOfConduct: {
    getAllCodesOfConduct: ["GET /codes_of_conduct"],
    getConductCode: ["GET /codes_of_conduct/{key}"]
  },
  codespaces: {
    addRepositoryForSecretForAuthenticatedUser: [
      "PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"
    ],
    codespaceMachinesForAuthenticatedUser: [
      "GET /user/codespaces/{codespace_name}/machines"
    ],
    createForAuthenticatedUser: ["POST /user/codespaces"],
    createOrUpdateRepoSecret: [
      "PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"
    ],
    createOrUpdateSecretForAuthenticatedUser: [
      "PUT /user/codespaces/secrets/{secret_name}"
    ],
    createWithPrForAuthenticatedUser: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"
    ],
    createWithRepoForAuthenticatedUser: [
      "POST /repos/{owner}/{repo}/codespaces"
    ],
    deleteForAuthenticatedUser: ["DELETE /user/codespaces/{codespace_name}"],
    deleteFromOrganization: [
      "DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"
    ],
    deleteRepoSecret: [
      "DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"
    ],
    deleteSecretForAuthenticatedUser: [
      "DELETE /user/codespaces/secrets/{secret_name}"
    ],
    exportForAuthenticatedUser: [
      "POST /user/codespaces/{codespace_name}/exports"
    ],
    getExportDetailsForAuthenticatedUser: [
      "GET /user/codespaces/{codespace_name}/exports/{export_id}"
    ],
    getForAuthenticatedUser: ["GET /user/codespaces/{codespace_name}"],
    getPublicKeyForAuthenticatedUser: [
      "GET /user/codespaces/secrets/public-key"
    ],
    getRepoPublicKey: [
      "GET /repos/{owner}/{repo}/codespaces/secrets/public-key"
    ],
    getRepoSecret: [
      "GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"
    ],
    getSecretForAuthenticatedUser: [
      "GET /user/codespaces/secrets/{secret_name}"
    ],
    listDevcontainersInRepositoryForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/codespaces/devcontainers"
    ],
    listForAuthenticatedUser: ["GET /user/codespaces"],
    listInOrganization: ["GET /orgs/{org_id}/codespaces"],
    listInRepositoryForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/codespaces"
    ],
    listRepoSecrets: ["GET /repos/{owner}/{repo}/codespaces/secrets"],
    listRepositoriesForSecretForAuthenticatedUser: [
      "GET /user/codespaces/secrets/{secret_name}/repositories"
    ],
    listSecretsForAuthenticatedUser: ["GET /user/codespaces/secrets"],
    removeRepositoryForSecretForAuthenticatedUser: [
      "DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"
    ],
    repoMachinesForAuthenticatedUser: [
      "GET /repos/{owner}/{repo}/codespaces/machines"
    ],
    setRepositoriesForSecretForAuthenticatedUser: [
      "PUT /user/codespaces/secrets/{secret_name}/repositories"
    ],
    startForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/start"],
    stopForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/stop"],
    stopInOrganization: [
      "POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"
    ],
    updateForAuthenticatedUser: ["PATCH /user/codespaces/{codespace_name}"]
  },
  dependabot: {
    addSelectedRepoToOrgSecret: [
      "PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"
    ],
    createOrUpdateOrgSecret: [
      "PUT /orgs/{org}/dependabot/secrets/{secret_name}"
    ],
    createOrUpdateRepoSecret: [
      "PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"
    ],
    deleteOrgSecret: ["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],
    deleteRepoSecret: [
      "DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"
    ],
    getOrgPublicKey: ["GET /orgs/{org}/dependabot/secrets/public-key"],
    getOrgSecret: ["GET /orgs/{org}/dependabot/secrets/{secret_name}"],
    getRepoPublicKey: [
      "GET /repos/{owner}/{repo}/dependabot/secrets/public-key"
    ],
    getRepoSecret: [
      "GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"
    ],
    listOrgSecrets: ["GET /orgs/{org}/dependabot/secrets"],
    listRepoSecrets: ["GET /repos/{owner}/{repo}/dependabot/secrets"],
    listSelectedReposForOrgSecret: [
      "GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"
    ],
    removeSelectedRepoFromOrgSecret: [
      "DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"
    ],
    setSelectedReposForOrgSecret: [
      "PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"
    ]
  },
  dependencyGraph: {
    createRepositorySnapshot: [
      "POST /repos/{owner}/{repo}/dependency-graph/snapshots"
    ],
    diffRange: [
      "GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"
    ]
  },
  emojis: { get: ["GET /emojis"] },
  enterpriseAdmin: {
    addCustomLabelsToSelfHostedRunnerForEnterprise: [
      "POST /enterprises/{enterprise}/actions/runners/{runner_id}/labels"
    ],
    disableSelectedOrganizationGithubActionsEnterprise: [
      "DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"
    ],
    enableSelectedOrganizationGithubActionsEnterprise: [
      "PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"
    ],
    getAllowedActionsEnterprise: [
      "GET /enterprises/{enterprise}/actions/permissions/selected-actions"
    ],
    getGithubActionsPermissionsEnterprise: [
      "GET /enterprises/{enterprise}/actions/permissions"
    ],
    getServerStatistics: [
      "GET /enterprise-installation/{enterprise_or_org}/server-statistics"
    ],
    listLabelsForSelfHostedRunnerForEnterprise: [
      "GET /enterprises/{enterprise}/actions/runners/{runner_id}/labels"
    ],
    listSelectedOrganizationsEnabledGithubActionsEnterprise: [
      "GET /enterprises/{enterprise}/actions/permissions/organizations"
    ],
    removeAllCustomLabelsFromSelfHostedRunnerForEnterprise: [
      "DELETE /enterprises/{enterprise}/actions/runners/{runner_id}/labels"
    ],
    removeCustomLabelFromSelfHostedRunnerForEnterprise: [
      "DELETE /enterprises/{enterprise}/actions/runners/{runner_id}/labels/{name}"
    ],
    setAllowedActionsEnterprise: [
      "PUT /enterprises/{enterprise}/actions/permissions/selected-actions"
    ],
    setCustomLabelsForSelfHostedRunnerForEnterprise: [
      "PUT /enterprises/{enterprise}/actions/runners/{runner_id}/labels"
    ],
    setGithubActionsPermissionsEnterprise: [
      "PUT /enterprises/{enterprise}/actions/permissions"
    ],
    setSelectedOrganizationsEnabledGithubActionsEnterprise: [
      "PUT /enterprises/{enterprise}/actions/permissions/organizations"
    ]
  },
  gists: {
    checkIsStarred: ["GET /gists/{gist_id}/star"],
    create: ["POST /gists"],
    createComment: ["POST /gists/{gist_id}/comments"],
    delete: ["DELETE /gists/{gist_id}"],
    deleteComment: ["DELETE /gists/{gist_id}/comments/{comment_id}"],
    fork: ["POST /gists/{gist_id}/forks"],
    get: ["GET /gists/{gist_id}"],
    getComment: ["GET /gists/{gist_id}/comments/{comment_id}"],
    getRevision: ["GET /gists/{gist_id}/{sha}"],
    list: ["GET /gists"],
    listComments: ["GET /gists/{gist_id}/comments"],
    listCommits: ["GET /gists/{gist_id}/commits"],
    listForUser: ["GET /users/{username}/gists"],
    listForks: ["GET /gists/{gist_id}/forks"],
    listPublic: ["GET /gists/public"],
    listStarred: ["GET /gists/starred"],
    star: ["PUT /gists/{gist_id}/star"],
    unstar: ["DELETE /gists/{gist_id}/star"],
    update: ["PATCH /gists/{gist_id}"],
    updateComment: ["PATCH /gists/{gist_id}/comments/{comment_id}"]
  },
  git: {
    createBlob: ["POST /repos/{owner}/{repo}/git/blobs"],
    createCommit: ["POST /repos/{owner}/{repo}/git/commits"],
    createRef: ["POST /repos/{owner}/{repo}/git/refs"],
    createTag: ["POST /repos/{owner}/{repo}/git/tags"],
    createTree: ["POST /repos/{owner}/{repo}/git/trees"],
    deleteRef: ["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],
    getBlob: ["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],
    getCommit: ["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],
    getRef: ["GET /repos/{owner}/{repo}/git/ref/{ref}"],
    getTag: ["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],
    getTree: ["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],
    listMatchingRefs: ["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],
    updateRef: ["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]
  },
  gitignore: {
    getAllTemplates: ["GET /gitignore/templates"],
    getTemplate: ["GET /gitignore/templates/{name}"]
  },
  interactions: {
    getRestrictionsForAuthenticatedUser: ["GET /user/interaction-limits"],
    getRestrictionsForOrg: ["GET /orgs/{org}/interaction-limits"],
    getRestrictionsForRepo: ["GET /repos/{owner}/{repo}/interaction-limits"],
    getRestrictionsForYourPublicRepos: [
      "GET /user/interaction-limits",
      {},
      { renamed: ["interactions", "getRestrictionsForAuthenticatedUser"] }
    ],
    removeRestrictionsForAuthenticatedUser: ["DELETE /user/interaction-limits"],
    removeRestrictionsForOrg: ["DELETE /orgs/{org}/interaction-limits"],
    removeRestrictionsForRepo: [
      "DELETE /repos/{owner}/{repo}/interaction-limits"
    ],
    removeRestrictionsForYourPublicRepos: [
      "DELETE /user/interaction-limits",
      {},
      { renamed: ["interactions", "removeRestrictionsForAuthenticatedUser"] }
    ],
    setRestrictionsForAuthenticatedUser: ["PUT /user/interaction-limits"],
    setRestrictionsForOrg: ["PUT /orgs/{org}/interaction-limits"],
    setRestrictionsForRepo: ["PUT /repos/{owner}/{repo}/interaction-limits"],
    setRestrictionsForYourPublicRepos: [
      "PUT /user/interaction-limits",
      {},
      { renamed: ["interactions", "setRestrictionsForAuthenticatedUser"] }
    ]
  },
  issues: {
    addAssignees: [
      "POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"
    ],
    addLabels: ["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],
    checkUserCanBeAssigned: ["GET /repos/{owner}/{repo}/assignees/{assignee}"],
    create: ["POST /repos/{owner}/{repo}/issues"],
    createComment: [
      "POST /repos/{owner}/{repo}/issues/{issue_number}/comments"
    ],
    createLabel: ["POST /repos/{owner}/{repo}/labels"],
    createMilestone: ["POST /repos/{owner}/{repo}/milestones"],
    deleteComment: [
      "DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"
    ],
    deleteLabel: ["DELETE /repos/{owner}/{repo}/labels/{name}"],
    deleteMilestone: [
      "DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"
    ],
    get: ["GET /repos/{owner}/{repo}/issues/{issue_number}"],
    getComment: ["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],
    getEvent: ["GET /repos/{owner}/{repo}/issues/events/{event_id}"],
    getLabel: ["GET /repos/{owner}/{repo}/labels/{name}"],
    getMilestone: ["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],
    list: ["GET /issues"],
    listAssignees: ["GET /repos/{owner}/{repo}/assignees"],
    listComments: ["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],
    listCommentsForRepo: ["GET /repos/{owner}/{repo}/issues/comments"],
    listEvents: ["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],
    listEventsForRepo: ["GET /repos/{owner}/{repo}/issues/events"],
    listEventsForTimeline: [
      "GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"
    ],
    listForAuthenticatedUser: ["GET /user/issues"],
    listForOrg: ["GET /orgs/{org}/issues"],
    listForRepo: ["GET /repos/{owner}/{repo}/issues"],
    listLabelsForMilestone: [
      "GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"
    ],
    listLabelsForRepo: ["GET /repos/{owner}/{repo}/labels"],
    listLabelsOnIssue: [
      "GET /repos/{owner}/{repo}/issues/{issue_number}/labels"
    ],
    listMilestones: ["GET /repos/{owner}/{repo}/milestones"],
    lock: ["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],
    removeAllLabels: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"
    ],
    removeAssignees: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"
    ],
    removeLabel: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"
    ],
    setLabels: ["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],
    unlock: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],
    update: ["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],
    updateComment: ["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],
    updateLabel: ["PATCH /repos/{owner}/{repo}/labels/{name}"],
    updateMilestone: [
      "PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"
    ]
  },
  licenses: {
    get: ["GET /licenses/{license}"],
    getAllCommonlyUsed: ["GET /licenses"],
    getForRepo: ["GET /repos/{owner}/{repo}/license"]
  },
  markdown: {
    render: ["POST /markdown"],
    renderRaw: [
      "POST /markdown/raw",
      { headers: { "content-type": "text/plain; charset=utf-8" } }
    ]
  },
  meta: {
    get: ["GET /meta"],
    getOctocat: ["GET /octocat"],
    getZen: ["GET /zen"],
    root: ["GET /"]
  },
  migrations: {
    cancelImport: ["DELETE /repos/{owner}/{repo}/import"],
    deleteArchiveForAuthenticatedUser: [
      "DELETE /user/migrations/{migration_id}/archive"
    ],
    deleteArchiveForOrg: [
      "DELETE /orgs/{org}/migrations/{migration_id}/archive"
    ],
    downloadArchiveForOrg: [
      "GET /orgs/{org}/migrations/{migration_id}/archive"
    ],
    getArchiveForAuthenticatedUser: [
      "GET /user/migrations/{migration_id}/archive"
    ],
    getCommitAuthors: ["GET /repos/{owner}/{repo}/import/authors"],
    getImportStatus: ["GET /repos/{owner}/{repo}/import"],
    getLargeFiles: ["GET /repos/{owner}/{repo}/import/large_files"],
    getStatusForAuthenticatedUser: ["GET /user/migrations/{migration_id}"],
    getStatusForOrg: ["GET /orgs/{org}/migrations/{migration_id}"],
    listForAuthenticatedUser: ["GET /user/migrations"],
    listForOrg: ["GET /orgs/{org}/migrations"],
    listReposForAuthenticatedUser: [
      "GET /user/migrations/{migration_id}/repositories"
    ],
    listReposForOrg: ["GET /orgs/{org}/migrations/{migration_id}/repositories"],
    listReposForUser: [
      "GET /user/migrations/{migration_id}/repositories",
      {},
      { renamed: ["migrations", "listReposForAuthenticatedUser"] }
    ],
    mapCommitAuthor: ["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],
    setLfsPreference: ["PATCH /repos/{owner}/{repo}/import/lfs"],
    startForAuthenticatedUser: ["POST /user/migrations"],
    startForOrg: ["POST /orgs/{org}/migrations"],
    startImport: ["PUT /repos/{owner}/{repo}/import"],
    unlockRepoForAuthenticatedUser: [
      "DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"
    ],
    unlockRepoForOrg: [
      "DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"
    ],
    updateImport: ["PATCH /repos/{owner}/{repo}/import"]
  },
  orgs: {
    blockUser: ["PUT /orgs/{org}/blocks/{username}"],
    cancelInvitation: ["DELETE /orgs/{org}/invitations/{invitation_id}"],
    checkBlockedUser: ["GET /orgs/{org}/blocks/{username}"],
    checkMembershipForUser: ["GET /orgs/{org}/members/{username}"],
    checkPublicMembershipForUser: ["GET /orgs/{org}/public_members/{username}"],
    convertMemberToOutsideCollaborator: [
      "PUT /orgs/{org}/outside_collaborators/{username}"
    ],
    createInvitation: ["POST /orgs/{org}/invitations"],
    createWebhook: ["POST /orgs/{org}/hooks"],
    deleteWebhook: ["DELETE /orgs/{org}/hooks/{hook_id}"],
    get: ["GET /orgs/{org}"],
    getMembershipForAuthenticatedUser: ["GET /user/memberships/orgs/{org}"],
    getMembershipForUser: ["GET /orgs/{org}/memberships/{username}"],
    getWebhook: ["GET /orgs/{org}/hooks/{hook_id}"],
    getWebhookConfigForOrg: ["GET /orgs/{org}/hooks/{hook_id}/config"],
    getWebhookDelivery: [
      "GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"
    ],
    list: ["GET /organizations"],
    listAppInstallations: ["GET /orgs/{org}/installations"],
    listBlockedUsers: ["GET /orgs/{org}/blocks"],
    listCustomRoles: ["GET /organizations/{organization_id}/custom_roles"],
    listFailedInvitations: ["GET /orgs/{org}/failed_invitations"],
    listForAuthenticatedUser: ["GET /user/orgs"],
    listForUser: ["GET /users/{username}/orgs"],
    listInvitationTeams: ["GET /orgs/{org}/invitations/{invitation_id}/teams"],
    listMembers: ["GET /orgs/{org}/members"],
    listMembershipsForAuthenticatedUser: ["GET /user/memberships/orgs"],
    listOutsideCollaborators: ["GET /orgs/{org}/outside_collaborators"],
    listPendingInvitations: ["GET /orgs/{org}/invitations"],
    listPublicMembers: ["GET /orgs/{org}/public_members"],
    listWebhookDeliveries: ["GET /orgs/{org}/hooks/{hook_id}/deliveries"],
    listWebhooks: ["GET /orgs/{org}/hooks"],
    pingWebhook: ["POST /orgs/{org}/hooks/{hook_id}/pings"],
    redeliverWebhookDelivery: [
      "POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"
    ],
    removeMember: ["DELETE /orgs/{org}/members/{username}"],
    removeMembershipForUser: ["DELETE /orgs/{org}/memberships/{username}"],
    removeOutsideCollaborator: [
      "DELETE /orgs/{org}/outside_collaborators/{username}"
    ],
    removePublicMembershipForAuthenticatedUser: [
      "DELETE /orgs/{org}/public_members/{username}"
    ],
    setMembershipForUser: ["PUT /orgs/{org}/memberships/{username}"],
    setPublicMembershipForAuthenticatedUser: [
      "PUT /orgs/{org}/public_members/{username}"
    ],
    unblockUser: ["DELETE /orgs/{org}/blocks/{username}"],
    update: ["PATCH /orgs/{org}"],
    updateMembershipForAuthenticatedUser: [
      "PATCH /user/memberships/orgs/{org}"
    ],
    updateWebhook: ["PATCH /orgs/{org}/hooks/{hook_id}"],
    updateWebhookConfigForOrg: ["PATCH /orgs/{org}/hooks/{hook_id}/config"]
  },
  packages: {
    deletePackageForAuthenticatedUser: [
      "DELETE /user/packages/{package_type}/{package_name}"
    ],
    deletePackageForOrg: [
      "DELETE /orgs/{org}/packages/{package_type}/{package_name}"
    ],
    deletePackageForUser: [
      "DELETE /users/{username}/packages/{package_type}/{package_name}"
    ],
    deletePackageVersionForAuthenticatedUser: [
      "DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    deletePackageVersionForOrg: [
      "DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    deletePackageVersionForUser: [
      "DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    getAllPackageVersionsForAPackageOwnedByAnOrg: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}/versions",
      {},
      { renamed: ["packages", "getAllPackageVersionsForPackageOwnedByOrg"] }
    ],
    getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}/versions",
      {},
      {
        renamed: [
          "packages",
          "getAllPackageVersionsForPackageOwnedByAuthenticatedUser"
        ]
      }
    ],
    getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}/versions"
    ],
    getAllPackageVersionsForPackageOwnedByOrg: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}/versions"
    ],
    getAllPackageVersionsForPackageOwnedByUser: [
      "GET /users/{username}/packages/{package_type}/{package_name}/versions"
    ],
    getPackageForAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}"
    ],
    getPackageForOrganization: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}"
    ],
    getPackageForUser: [
      "GET /users/{username}/packages/{package_type}/{package_name}"
    ],
    getPackageVersionForAuthenticatedUser: [
      "GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    getPackageVersionForOrganization: [
      "GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    getPackageVersionForUser: [
      "GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"
    ],
    listPackagesForAuthenticatedUser: ["GET /user/packages"],
    listPackagesForOrganization: ["GET /orgs/{org}/packages"],
    listPackagesForUser: ["GET /users/{username}/packages"],
    restorePackageForAuthenticatedUser: [
      "POST /user/packages/{package_type}/{package_name}/restore{?token}"
    ],
    restorePackageForOrg: [
      "POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"
    ],
    restorePackageForUser: [
      "POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"
    ],
    restorePackageVersionForAuthenticatedUser: [
      "POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"
    ],
    restorePackageVersionForOrg: [
      "POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"
    ],
    restorePackageVersionForUser: [
      "POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"
    ]
  },
  projects: {
    addCollaborator: ["PUT /projects/{project_id}/collaborators/{username}"],
    createCard: ["POST /projects/columns/{column_id}/cards"],
    createColumn: ["POST /projects/{project_id}/columns"],
    createForAuthenticatedUser: ["POST /user/projects"],
    createForOrg: ["POST /orgs/{org}/projects"],
    createForRepo: ["POST /repos/{owner}/{repo}/projects"],
    delete: ["DELETE /projects/{project_id}"],
    deleteCard: ["DELETE /projects/columns/cards/{card_id}"],
    deleteColumn: ["DELETE /projects/columns/{column_id}"],
    get: ["GET /projects/{project_id}"],
    getCard: ["GET /projects/columns/cards/{card_id}"],
    getColumn: ["GET /projects/columns/{column_id}"],
    getPermissionForUser: [
      "GET /projects/{project_id}/collaborators/{username}/permission"
    ],
    listCards: ["GET /projects/columns/{column_id}/cards"],
    listCollaborators: ["GET /projects/{project_id}/collaborators"],
    listColumns: ["GET /projects/{project_id}/columns"],
    listForOrg: ["GET /orgs/{org}/projects"],
    listForRepo: ["GET /repos/{owner}/{repo}/projects"],
    listForUser: ["GET /users/{username}/projects"],
    moveCard: ["POST /projects/columns/cards/{card_id}/moves"],
    moveColumn: ["POST /projects/columns/{column_id}/moves"],
    removeCollaborator: [
      "DELETE /projects/{project_id}/collaborators/{username}"
    ],
    update: ["PATCH /projects/{project_id}"],
    updateCard: ["PATCH /projects/columns/cards/{card_id}"],
    updateColumn: ["PATCH /projects/columns/{column_id}"]
  },
  pulls: {
    checkIfMerged: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],
    create: ["POST /repos/{owner}/{repo}/pulls"],
    createReplyForReviewComment: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"
    ],
    createReview: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],
    createReviewComment: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"
    ],
    deletePendingReview: [
      "DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"
    ],
    deleteReviewComment: [
      "DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"
    ],
    dismissReview: [
      "PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"
    ],
    get: ["GET /repos/{owner}/{repo}/pulls/{pull_number}"],
    getReview: [
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"
    ],
    getReviewComment: ["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],
    list: ["GET /repos/{owner}/{repo}/pulls"],
    listCommentsForReview: [
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"
    ],
    listCommits: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],
    listFiles: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],
    listRequestedReviewers: [
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"
    ],
    listReviewComments: [
      "GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"
    ],
    listReviewCommentsForRepo: ["GET /repos/{owner}/{repo}/pulls/comments"],
    listReviews: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],
    merge: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],
    removeRequestedReviewers: [
      "DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"
    ],
    requestReviewers: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"
    ],
    submitReview: [
      "POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"
    ],
    update: ["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],
    updateBranch: [
      "PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"
    ],
    updateReview: [
      "PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"
    ],
    updateReviewComment: [
      "PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"
    ]
  },
  rateLimit: { get: ["GET /rate_limit"] },
  reactions: {
    createForCommitComment: [
      "POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"
    ],
    createForIssue: [
      "POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"
    ],
    createForIssueComment: [
      "POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"
    ],
    createForPullRequestReviewComment: [
      "POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"
    ],
    createForRelease: [
      "POST /repos/{owner}/{repo}/releases/{release_id}/reactions"
    ],
    createForTeamDiscussionCommentInOrg: [
      "POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"
    ],
    createForTeamDiscussionInOrg: [
      "POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"
    ],
    deleteForCommitComment: [
      "DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"
    ],
    deleteForIssue: [
      "DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"
    ],
    deleteForIssueComment: [
      "DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"
    ],
    deleteForPullRequestComment: [
      "DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"
    ],
    deleteForRelease: [
      "DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"
    ],
    deleteForTeamDiscussion: [
      "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"
    ],
    deleteForTeamDiscussionComment: [
      "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"
    ],
    listForCommitComment: [
      "GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"
    ],
    listForIssue: ["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],
    listForIssueComment: [
      "GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"
    ],
    listForPullRequestReviewComment: [
      "GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"
    ],
    listForRelease: [
      "GET /repos/{owner}/{repo}/releases/{release_id}/reactions"
    ],
    listForTeamDiscussionCommentInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"
    ],
    listForTeamDiscussionInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"
    ]
  },
  repos: {
    acceptInvitation: [
      "PATCH /user/repository_invitations/{invitation_id}",
      {},
      { renamed: ["repos", "acceptInvitationForAuthenticatedUser"] }
    ],
    acceptInvitationForAuthenticatedUser: [
      "PATCH /user/repository_invitations/{invitation_id}"
    ],
    addAppAccessRestrictions: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
      {},
      { mapToData: "apps" }
    ],
    addCollaborator: ["PUT /repos/{owner}/{repo}/collaborators/{username}"],
    addStatusCheckContexts: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
      {},
      { mapToData: "contexts" }
    ],
    addTeamAccessRestrictions: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
      {},
      { mapToData: "teams" }
    ],
    addUserAccessRestrictions: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
      {},
      { mapToData: "users" }
    ],
    checkCollaborator: ["GET /repos/{owner}/{repo}/collaborators/{username}"],
    checkVulnerabilityAlerts: [
      "GET /repos/{owner}/{repo}/vulnerability-alerts"
    ],
    codeownersErrors: ["GET /repos/{owner}/{repo}/codeowners/errors"],
    compareCommits: ["GET /repos/{owner}/{repo}/compare/{base}...{head}"],
    compareCommitsWithBasehead: [
      "GET /repos/{owner}/{repo}/compare/{basehead}"
    ],
    createAutolink: ["POST /repos/{owner}/{repo}/autolinks"],
    createCommitComment: [
      "POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"
    ],
    createCommitSignatureProtection: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"
    ],
    createCommitStatus: ["POST /repos/{owner}/{repo}/statuses/{sha}"],
    createDeployKey: ["POST /repos/{owner}/{repo}/keys"],
    createDeployment: ["POST /repos/{owner}/{repo}/deployments"],
    createDeploymentStatus: [
      "POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"
    ],
    createDispatchEvent: ["POST /repos/{owner}/{repo}/dispatches"],
    createForAuthenticatedUser: ["POST /user/repos"],
    createFork: ["POST /repos/{owner}/{repo}/forks"],
    createInOrg: ["POST /orgs/{org}/repos"],
    createOrUpdateEnvironment: [
      "PUT /repos/{owner}/{repo}/environments/{environment_name}"
    ],
    createOrUpdateFileContents: ["PUT /repos/{owner}/{repo}/contents/{path}"],
    createPagesSite: ["POST /repos/{owner}/{repo}/pages"],
    createRelease: ["POST /repos/{owner}/{repo}/releases"],
    createTagProtection: ["POST /repos/{owner}/{repo}/tags/protection"],
    createUsingTemplate: [
      "POST /repos/{template_owner}/{template_repo}/generate"
    ],
    createWebhook: ["POST /repos/{owner}/{repo}/hooks"],
    declineInvitation: [
      "DELETE /user/repository_invitations/{invitation_id}",
      {},
      { renamed: ["repos", "declineInvitationForAuthenticatedUser"] }
    ],
    declineInvitationForAuthenticatedUser: [
      "DELETE /user/repository_invitations/{invitation_id}"
    ],
    delete: ["DELETE /repos/{owner}/{repo}"],
    deleteAccessRestrictions: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"
    ],
    deleteAdminBranchProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"
    ],
    deleteAnEnvironment: [
      "DELETE /repos/{owner}/{repo}/environments/{environment_name}"
    ],
    deleteAutolink: ["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],
    deleteBranchProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection"
    ],
    deleteCommitComment: ["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],
    deleteCommitSignatureProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"
    ],
    deleteDeployKey: ["DELETE /repos/{owner}/{repo}/keys/{key_id}"],
    deleteDeployment: [
      "DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"
    ],
    deleteFile: ["DELETE /repos/{owner}/{repo}/contents/{path}"],
    deleteInvitation: [
      "DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"
    ],
    deletePagesSite: ["DELETE /repos/{owner}/{repo}/pages"],
    deletePullRequestReviewProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"
    ],
    deleteRelease: ["DELETE /repos/{owner}/{repo}/releases/{release_id}"],
    deleteReleaseAsset: [
      "DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"
    ],
    deleteTagProtection: [
      "DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"
    ],
    deleteWebhook: ["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],
    disableAutomatedSecurityFixes: [
      "DELETE /repos/{owner}/{repo}/automated-security-fixes"
    ],
    disableLfsForRepo: ["DELETE /repos/{owner}/{repo}/lfs"],
    disableVulnerabilityAlerts: [
      "DELETE /repos/{owner}/{repo}/vulnerability-alerts"
    ],
    downloadArchive: [
      "GET /repos/{owner}/{repo}/zipball/{ref}",
      {},
      { renamed: ["repos", "downloadZipballArchive"] }
    ],
    downloadTarballArchive: ["GET /repos/{owner}/{repo}/tarball/{ref}"],
    downloadZipballArchive: ["GET /repos/{owner}/{repo}/zipball/{ref}"],
    enableAutomatedSecurityFixes: [
      "PUT /repos/{owner}/{repo}/automated-security-fixes"
    ],
    enableLfsForRepo: ["PUT /repos/{owner}/{repo}/lfs"],
    enableVulnerabilityAlerts: [
      "PUT /repos/{owner}/{repo}/vulnerability-alerts"
    ],
    generateReleaseNotes: [
      "POST /repos/{owner}/{repo}/releases/generate-notes"
    ],
    get: ["GET /repos/{owner}/{repo}"],
    getAccessRestrictions: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"
    ],
    getAdminBranchProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"
    ],
    getAllEnvironments: ["GET /repos/{owner}/{repo}/environments"],
    getAllStatusCheckContexts: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"
    ],
    getAllTopics: ["GET /repos/{owner}/{repo}/topics"],
    getAppsWithAccessToProtectedBranch: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"
    ],
    getAutolink: ["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],
    getBranch: ["GET /repos/{owner}/{repo}/branches/{branch}"],
    getBranchProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection"
    ],
    getClones: ["GET /repos/{owner}/{repo}/traffic/clones"],
    getCodeFrequencyStats: ["GET /repos/{owner}/{repo}/stats/code_frequency"],
    getCollaboratorPermissionLevel: [
      "GET /repos/{owner}/{repo}/collaborators/{username}/permission"
    ],
    getCombinedStatusForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/status"],
    getCommit: ["GET /repos/{owner}/{repo}/commits/{ref}"],
    getCommitActivityStats: ["GET /repos/{owner}/{repo}/stats/commit_activity"],
    getCommitComment: ["GET /repos/{owner}/{repo}/comments/{comment_id}"],
    getCommitSignatureProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"
    ],
    getCommunityProfileMetrics: ["GET /repos/{owner}/{repo}/community/profile"],
    getContent: ["GET /repos/{owner}/{repo}/contents/{path}"],
    getContributorsStats: ["GET /repos/{owner}/{repo}/stats/contributors"],
    getDeployKey: ["GET /repos/{owner}/{repo}/keys/{key_id}"],
    getDeployment: ["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],
    getDeploymentStatus: [
      "GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"
    ],
    getEnvironment: [
      "GET /repos/{owner}/{repo}/environments/{environment_name}"
    ],
    getLatestPagesBuild: ["GET /repos/{owner}/{repo}/pages/builds/latest"],
    getLatestRelease: ["GET /repos/{owner}/{repo}/releases/latest"],
    getPages: ["GET /repos/{owner}/{repo}/pages"],
    getPagesBuild: ["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],
    getPagesHealthCheck: ["GET /repos/{owner}/{repo}/pages/health"],
    getParticipationStats: ["GET /repos/{owner}/{repo}/stats/participation"],
    getPullRequestReviewProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"
    ],
    getPunchCardStats: ["GET /repos/{owner}/{repo}/stats/punch_card"],
    getReadme: ["GET /repos/{owner}/{repo}/readme"],
    getReadmeInDirectory: ["GET /repos/{owner}/{repo}/readme/{dir}"],
    getRelease: ["GET /repos/{owner}/{repo}/releases/{release_id}"],
    getReleaseAsset: ["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],
    getReleaseByTag: ["GET /repos/{owner}/{repo}/releases/tags/{tag}"],
    getStatusChecksProtection: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"
    ],
    getTeamsWithAccessToProtectedBranch: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"
    ],
    getTopPaths: ["GET /repos/{owner}/{repo}/traffic/popular/paths"],
    getTopReferrers: ["GET /repos/{owner}/{repo}/traffic/popular/referrers"],
    getUsersWithAccessToProtectedBranch: [
      "GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"
    ],
    getViews: ["GET /repos/{owner}/{repo}/traffic/views"],
    getWebhook: ["GET /repos/{owner}/{repo}/hooks/{hook_id}"],
    getWebhookConfigForRepo: [
      "GET /repos/{owner}/{repo}/hooks/{hook_id}/config"
    ],
    getWebhookDelivery: [
      "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"
    ],
    listAutolinks: ["GET /repos/{owner}/{repo}/autolinks"],
    listBranches: ["GET /repos/{owner}/{repo}/branches"],
    listBranchesForHeadCommit: [
      "GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"
    ],
    listCollaborators: ["GET /repos/{owner}/{repo}/collaborators"],
    listCommentsForCommit: [
      "GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"
    ],
    listCommitCommentsForRepo: ["GET /repos/{owner}/{repo}/comments"],
    listCommitStatusesForRef: [
      "GET /repos/{owner}/{repo}/commits/{ref}/statuses"
    ],
    listCommits: ["GET /repos/{owner}/{repo}/commits"],
    listContributors: ["GET /repos/{owner}/{repo}/contributors"],
    listDeployKeys: ["GET /repos/{owner}/{repo}/keys"],
    listDeploymentStatuses: [
      "GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"
    ],
    listDeployments: ["GET /repos/{owner}/{repo}/deployments"],
    listForAuthenticatedUser: ["GET /user/repos"],
    listForOrg: ["GET /orgs/{org}/repos"],
    listForUser: ["GET /users/{username}/repos"],
    listForks: ["GET /repos/{owner}/{repo}/forks"],
    listInvitations: ["GET /repos/{owner}/{repo}/invitations"],
    listInvitationsForAuthenticatedUser: ["GET /user/repository_invitations"],
    listLanguages: ["GET /repos/{owner}/{repo}/languages"],
    listPagesBuilds: ["GET /repos/{owner}/{repo}/pages/builds"],
    listPublic: ["GET /repositories"],
    listPullRequestsAssociatedWithCommit: [
      "GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"
    ],
    listReleaseAssets: [
      "GET /repos/{owner}/{repo}/releases/{release_id}/assets"
    ],
    listReleases: ["GET /repos/{owner}/{repo}/releases"],
    listTagProtection: ["GET /repos/{owner}/{repo}/tags/protection"],
    listTags: ["GET /repos/{owner}/{repo}/tags"],
    listTeams: ["GET /repos/{owner}/{repo}/teams"],
    listWebhookDeliveries: [
      "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"
    ],
    listWebhooks: ["GET /repos/{owner}/{repo}/hooks"],
    merge: ["POST /repos/{owner}/{repo}/merges"],
    mergeUpstream: ["POST /repos/{owner}/{repo}/merge-upstream"],
    pingWebhook: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],
    redeliverWebhookDelivery: [
      "POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"
    ],
    removeAppAccessRestrictions: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
      {},
      { mapToData: "apps" }
    ],
    removeCollaborator: [
      "DELETE /repos/{owner}/{repo}/collaborators/{username}"
    ],
    removeStatusCheckContexts: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
      {},
      { mapToData: "contexts" }
    ],
    removeStatusCheckProtection: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"
    ],
    removeTeamAccessRestrictions: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
      {},
      { mapToData: "teams" }
    ],
    removeUserAccessRestrictions: [
      "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
      {},
      { mapToData: "users" }
    ],
    renameBranch: ["POST /repos/{owner}/{repo}/branches/{branch}/rename"],
    replaceAllTopics: ["PUT /repos/{owner}/{repo}/topics"],
    requestPagesBuild: ["POST /repos/{owner}/{repo}/pages/builds"],
    setAdminBranchProtection: [
      "POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"
    ],
    setAppAccessRestrictions: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
      {},
      { mapToData: "apps" }
    ],
    setStatusCheckContexts: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
      {},
      { mapToData: "contexts" }
    ],
    setTeamAccessRestrictions: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
      {},
      { mapToData: "teams" }
    ],
    setUserAccessRestrictions: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
      {},
      { mapToData: "users" }
    ],
    testPushWebhook: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],
    transfer: ["POST /repos/{owner}/{repo}/transfer"],
    update: ["PATCH /repos/{owner}/{repo}"],
    updateBranchProtection: [
      "PUT /repos/{owner}/{repo}/branches/{branch}/protection"
    ],
    updateCommitComment: ["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],
    updateInformationAboutPagesSite: ["PUT /repos/{owner}/{repo}/pages"],
    updateInvitation: [
      "PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"
    ],
    updatePullRequestReviewProtection: [
      "PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"
    ],
    updateRelease: ["PATCH /repos/{owner}/{repo}/releases/{release_id}"],
    updateReleaseAsset: [
      "PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"
    ],
    updateStatusCheckPotection: [
      "PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
      {},
      { renamed: ["repos", "updateStatusCheckProtection"] }
    ],
    updateStatusCheckProtection: [
      "PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"
    ],
    updateWebhook: ["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],
    updateWebhookConfigForRepo: [
      "PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"
    ],
    uploadReleaseAsset: [
      "POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",
      { baseUrl: "https://uploads.github.com" }
    ]
  },
  search: {
    code: ["GET /search/code"],
    commits: ["GET /search/commits"],
    issuesAndPullRequests: ["GET /search/issues"],
    labels: ["GET /search/labels"],
    repos: ["GET /search/repositories"],
    topics: ["GET /search/topics"],
    users: ["GET /search/users"]
  },
  secretScanning: {
    getAlert: [
      "GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"
    ],
    listAlertsForEnterprise: [
      "GET /enterprises/{enterprise}/secret-scanning/alerts"
    ],
    listAlertsForOrg: ["GET /orgs/{org}/secret-scanning/alerts"],
    listAlertsForRepo: ["GET /repos/{owner}/{repo}/secret-scanning/alerts"],
    listLocationsForAlert: [
      "GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"
    ],
    updateAlert: [
      "PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"
    ]
  },
  teams: {
    addOrUpdateMembershipForUserInOrg: [
      "PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"
    ],
    addOrUpdateProjectPermissionsInOrg: [
      "PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"
    ],
    addOrUpdateRepoPermissionsInOrg: [
      "PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"
    ],
    checkPermissionsForProjectInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"
    ],
    checkPermissionsForRepoInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"
    ],
    create: ["POST /orgs/{org}/teams"],
    createDiscussionCommentInOrg: [
      "POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"
    ],
    createDiscussionInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions"],
    deleteDiscussionCommentInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"
    ],
    deleteDiscussionInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"
    ],
    deleteInOrg: ["DELETE /orgs/{org}/teams/{team_slug}"],
    getByName: ["GET /orgs/{org}/teams/{team_slug}"],
    getDiscussionCommentInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"
    ],
    getDiscussionInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"
    ],
    getMembershipForUserInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/memberships/{username}"
    ],
    list: ["GET /orgs/{org}/teams"],
    listChildInOrg: ["GET /orgs/{org}/teams/{team_slug}/teams"],
    listDiscussionCommentsInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"
    ],
    listDiscussionsInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions"],
    listForAuthenticatedUser: ["GET /user/teams"],
    listMembersInOrg: ["GET /orgs/{org}/teams/{team_slug}/members"],
    listPendingInvitationsInOrg: [
      "GET /orgs/{org}/teams/{team_slug}/invitations"
    ],
    listProjectsInOrg: ["GET /orgs/{org}/teams/{team_slug}/projects"],
    listReposInOrg: ["GET /orgs/{org}/teams/{team_slug}/repos"],
    removeMembershipForUserInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"
    ],
    removeProjectInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"
    ],
    removeRepoInOrg: [
      "DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"
    ],
    updateDiscussionCommentInOrg: [
      "PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"
    ],
    updateDiscussionInOrg: [
      "PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"
    ],
    updateInOrg: ["PATCH /orgs/{org}/teams/{team_slug}"]
  },
  users: {
    addEmailForAuthenticated: [
      "POST /user/emails",
      {},
      { renamed: ["users", "addEmailForAuthenticatedUser"] }
    ],
    addEmailForAuthenticatedUser: ["POST /user/emails"],
    block: ["PUT /user/blocks/{username}"],
    checkBlocked: ["GET /user/blocks/{username}"],
    checkFollowingForUser: ["GET /users/{username}/following/{target_user}"],
    checkPersonIsFollowedByAuthenticated: ["GET /user/following/{username}"],
    createGpgKeyForAuthenticated: [
      "POST /user/gpg_keys",
      {},
      { renamed: ["users", "createGpgKeyForAuthenticatedUser"] }
    ],
    createGpgKeyForAuthenticatedUser: ["POST /user/gpg_keys"],
    createPublicSshKeyForAuthenticated: [
      "POST /user/keys",
      {},
      { renamed: ["users", "createPublicSshKeyForAuthenticatedUser"] }
    ],
    createPublicSshKeyForAuthenticatedUser: ["POST /user/keys"],
    deleteEmailForAuthenticated: [
      "DELETE /user/emails",
      {},
      { renamed: ["users", "deleteEmailForAuthenticatedUser"] }
    ],
    deleteEmailForAuthenticatedUser: ["DELETE /user/emails"],
    deleteGpgKeyForAuthenticated: [
      "DELETE /user/gpg_keys/{gpg_key_id}",
      {},
      { renamed: ["users", "deleteGpgKeyForAuthenticatedUser"] }
    ],
    deleteGpgKeyForAuthenticatedUser: ["DELETE /user/gpg_keys/{gpg_key_id}"],
    deletePublicSshKeyForAuthenticated: [
      "DELETE /user/keys/{key_id}",
      {},
      { renamed: ["users", "deletePublicSshKeyForAuthenticatedUser"] }
    ],
    deletePublicSshKeyForAuthenticatedUser: ["DELETE /user/keys/{key_id}"],
    follow: ["PUT /user/following/{username}"],
    getAuthenticated: ["GET /user"],
    getByUsername: ["GET /users/{username}"],
    getContextForUser: ["GET /users/{username}/hovercard"],
    getGpgKeyForAuthenticated: [
      "GET /user/gpg_keys/{gpg_key_id}",
      {},
      { renamed: ["users", "getGpgKeyForAuthenticatedUser"] }
    ],
    getGpgKeyForAuthenticatedUser: ["GET /user/gpg_keys/{gpg_key_id}"],
    getPublicSshKeyForAuthenticated: [
      "GET /user/keys/{key_id}",
      {},
      { renamed: ["users", "getPublicSshKeyForAuthenticatedUser"] }
    ],
    getPublicSshKeyForAuthenticatedUser: ["GET /user/keys/{key_id}"],
    list: ["GET /users"],
    listBlockedByAuthenticated: [
      "GET /user/blocks",
      {},
      { renamed: ["users", "listBlockedByAuthenticatedUser"] }
    ],
    listBlockedByAuthenticatedUser: ["GET /user/blocks"],
    listEmailsForAuthenticated: [
      "GET /user/emails",
      {},
      { renamed: ["users", "listEmailsForAuthenticatedUser"] }
    ],
    listEmailsForAuthenticatedUser: ["GET /user/emails"],
    listFollowedByAuthenticated: [
      "GET /user/following",
      {},
      { renamed: ["users", "listFollowedByAuthenticatedUser"] }
    ],
    listFollowedByAuthenticatedUser: ["GET /user/following"],
    listFollowersForAuthenticatedUser: ["GET /user/followers"],
    listFollowersForUser: ["GET /users/{username}/followers"],
    listFollowingForUser: ["GET /users/{username}/following"],
    listGpgKeysForAuthenticated: [
      "GET /user/gpg_keys",
      {},
      { renamed: ["users", "listGpgKeysForAuthenticatedUser"] }
    ],
    listGpgKeysForAuthenticatedUser: ["GET /user/gpg_keys"],
    listGpgKeysForUser: ["GET /users/{username}/gpg_keys"],
    listPublicEmailsForAuthenticated: [
      "GET /user/public_emails",
      {},
      { renamed: ["users", "listPublicEmailsForAuthenticatedUser"] }
    ],
    listPublicEmailsForAuthenticatedUser: ["GET /user/public_emails"],
    listPublicKeysForUser: ["GET /users/{username}/keys"],
    listPublicSshKeysForAuthenticated: [
      "GET /user/keys",
      {},
      { renamed: ["users", "listPublicSshKeysForAuthenticatedUser"] }
    ],
    listPublicSshKeysForAuthenticatedUser: ["GET /user/keys"],
    setPrimaryEmailVisibilityForAuthenticated: [
      "PATCH /user/email/visibility",
      {},
      { renamed: ["users", "setPrimaryEmailVisibilityForAuthenticatedUser"] }
    ],
    setPrimaryEmailVisibilityForAuthenticatedUser: [
      "PATCH /user/email/visibility"
    ],
    unblock: ["DELETE /user/blocks/{username}"],
    unfollow: ["DELETE /user/following/{username}"],
    updateAuthenticated: ["PATCH /user"]
  }
};
const VERSION$a = "5.16.0";
function endpointsToMethods(octokit2, endpointsMap) {
  const newMethods = {};
  for (const [scope, endpoints] of Object.entries(endpointsMap)) {
    for (const [methodName, endpoint2] of Object.entries(endpoints)) {
      const [route, defaults, decorations] = endpoint2;
      const [method, url] = route.split(/ /);
      const endpointDefaults = Object.assign({ method, url }, defaults);
      if (!newMethods[scope]) {
        newMethods[scope] = {};
      }
      const scopeMethods = newMethods[scope];
      if (decorations) {
        scopeMethods[methodName] = decorate(octokit2, scope, methodName, endpointDefaults, decorations);
        continue;
      }
      scopeMethods[methodName] = octokit2.request.defaults(endpointDefaults);
    }
  }
  return newMethods;
}
function decorate(octokit2, scope, methodName, defaults, decorations) {
  const requestWithDefaults = octokit2.request.defaults(defaults);
  function withDecorations(...args) {
    let options = requestWithDefaults.endpoint.merge(...args);
    if (decorations.mapToData) {
      options = Object.assign({}, options, {
        data: options[decorations.mapToData],
        [decorations.mapToData]: void 0
      });
      return requestWithDefaults(options);
    }
    if (decorations.renamed) {
      const [newScope, newMethodName] = decorations.renamed;
      octokit2.log.warn(`octokit.${scope}.${methodName}() has been renamed to octokit.${newScope}.${newMethodName}()`);
    }
    if (decorations.deprecated) {
      octokit2.log.warn(decorations.deprecated);
    }
    if (decorations.renamedParameters) {
      const options2 = requestWithDefaults.endpoint.merge(...args);
      for (const [name, alias] of Object.entries(decorations.renamedParameters)) {
        if (name in options2) {
          octokit2.log.warn(`"${name}" parameter is deprecated for "octokit.${scope}.${methodName}()". Use "${alias}" instead`);
          if (!(alias in options2)) {
            options2[alias] = options2[name];
          }
          delete options2[name];
        }
      }
      return requestWithDefaults(options2);
    }
    return requestWithDefaults(...args);
  }
  return Object.assign(withDecorations, requestWithDefaults);
}
function restEndpointMethods(octokit2) {
  const api = endpointsToMethods(octokit2, Endpoints);
  return {
    rest: api
  };
}
restEndpointMethods.VERSION = VERSION$a;
var light = { exports: {} };
(function(module, exports) {
  (function(global2, factory) {
    module.exports = factory();
  })(commonjsGlobal, function() {
    var commonjsGlobal$1 = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof commonjsGlobal !== "undefined" ? commonjsGlobal : typeof self !== "undefined" ? self : {};
    function getCjsExportFromNamespace(n2) {
      return n2 && n2["default"] || n2;
    }
    var load = function(received, defaults, onto = {}) {
      var k2, ref, v2;
      for (k2 in defaults) {
        v2 = defaults[k2];
        onto[k2] = (ref = received[k2]) != null ? ref : v2;
      }
      return onto;
    };
    var overwrite = function(received, defaults, onto = {}) {
      var k2, v2;
      for (k2 in received) {
        v2 = received[k2];
        if (defaults[k2] !== void 0) {
          onto[k2] = v2;
        }
      }
      return onto;
    };
    var parser = {
      load,
      overwrite
    };
    var DLList;
    DLList = class DLList {
      constructor(incr, decr) {
        this.incr = incr;
        this.decr = decr;
        this._first = null;
        this._last = null;
        this.length = 0;
      }
      push(value) {
        var node2;
        this.length++;
        if (typeof this.incr === "function") {
          this.incr();
        }
        node2 = {
          value,
          prev: this._last,
          next: null
        };
        if (this._last != null) {
          this._last.next = node2;
          this._last = node2;
        } else {
          this._first = this._last = node2;
        }
        return void 0;
      }
      shift() {
        var value;
        if (this._first == null) {
          return;
        } else {
          this.length--;
          if (typeof this.decr === "function") {
            this.decr();
          }
        }
        value = this._first.value;
        if ((this._first = this._first.next) != null) {
          this._first.prev = null;
        } else {
          this._last = null;
        }
        return value;
      }
      first() {
        if (this._first != null) {
          return this._first.value;
        }
      }
      getArray() {
        var node2, ref, results;
        node2 = this._first;
        results = [];
        while (node2 != null) {
          results.push((ref = node2, node2 = node2.next, ref.value));
        }
        return results;
      }
      forEachShift(cb2) {
        var node2;
        node2 = this.shift();
        while (node2 != null) {
          cb2(node2), node2 = this.shift();
        }
        return void 0;
      }
      debug() {
        var node2, ref, ref1, ref2, results;
        node2 = this._first;
        results = [];
        while (node2 != null) {
          results.push((ref = node2, node2 = node2.next, {
            value: ref.value,
            prev: (ref1 = ref.prev) != null ? ref1.value : void 0,
            next: (ref2 = ref.next) != null ? ref2.value : void 0
          }));
        }
        return results;
      }
    };
    var DLList_1 = DLList;
    var Events;
    Events = class Events {
      constructor(instance) {
        this.instance = instance;
        this._events = {};
        if (this.instance.on != null || this.instance.once != null || this.instance.removeAllListeners != null) {
          throw new Error("An Emitter already exists for this object");
        }
        this.instance.on = (name, cb2) => {
          return this._addListener(name, "many", cb2);
        };
        this.instance.once = (name, cb2) => {
          return this._addListener(name, "once", cb2);
        };
        this.instance.removeAllListeners = (name = null) => {
          if (name != null) {
            return delete this._events[name];
          } else {
            return this._events = {};
          }
        };
      }
      _addListener(name, status, cb2) {
        var base;
        if ((base = this._events)[name] == null) {
          base[name] = [];
        }
        this._events[name].push({ cb: cb2, status });
        return this.instance;
      }
      listenerCount(name) {
        if (this._events[name] != null) {
          return this._events[name].length;
        } else {
          return 0;
        }
      }
      async trigger(name, ...args) {
        var e2, promises;
        try {
          if (name !== "debug") {
            this.trigger("debug", `Event triggered: ${name}`, args);
          }
          if (this._events[name] == null) {
            return;
          }
          this._events[name] = this._events[name].filter(function(listener) {
            return listener.status !== "none";
          });
          promises = this._events[name].map(async (listener) => {
            var e3, returned;
            if (listener.status === "none") {
              return;
            }
            if (listener.status === "once") {
              listener.status = "none";
            }
            try {
              returned = typeof listener.cb === "function" ? listener.cb(...args) : void 0;
              if (typeof (returned != null ? returned.then : void 0) === "function") {
                return await returned;
              } else {
                return returned;
              }
            } catch (error) {
              e3 = error;
              {
                this.trigger("error", e3);
              }
              return null;
            }
          });
          return (await Promise.all(promises)).find(function(x2) {
            return x2 != null;
          });
        } catch (error) {
          e2 = error;
          {
            this.trigger("error", e2);
          }
          return null;
        }
      }
    };
    var Events_1 = Events;
    var DLList$1, Events$1, Queues;
    DLList$1 = DLList_1;
    Events$1 = Events_1;
    Queues = class Queues {
      constructor(num_priorities) {
        this.Events = new Events$1(this);
        this._length = 0;
        this._lists = function() {
          var j, ref, results;
          results = [];
          for (j = 1, ref = num_priorities; 1 <= ref ? j <= ref : j >= ref; 1 <= ref ? ++j : --j) {
            results.push(new DLList$1(() => {
              return this.incr();
            }, () => {
              return this.decr();
            }));
          }
          return results;
        }.call(this);
      }
      incr() {
        if (this._length++ === 0) {
          return this.Events.trigger("leftzero");
        }
      }
      decr() {
        if (--this._length === 0) {
          return this.Events.trigger("zero");
        }
      }
      push(job) {
        return this._lists[job.options.priority].push(job);
      }
      queued(priority) {
        if (priority != null) {
          return this._lists[priority].length;
        } else {
          return this._length;
        }
      }
      shiftAll(fn) {
        return this._lists.forEach(function(list) {
          return list.forEachShift(fn);
        });
      }
      getFirst(arr = this._lists) {
        var j, len2, list;
        for (j = 0, len2 = arr.length; j < len2; j++) {
          list = arr[j];
          if (list.length > 0) {
            return list;
          }
        }
        return [];
      }
      shiftLastFrom(priority) {
        return this.getFirst(this._lists.slice(priority).reverse()).shift();
      }
    };
    var Queues_1 = Queues;
    var BottleneckError;
    BottleneckError = class BottleneckError extends Error {
    };
    var BottleneckError_1 = BottleneckError;
    var BottleneckError$1, DEFAULT_PRIORITY, Job, NUM_PRIORITIES, parser$1;
    NUM_PRIORITIES = 10;
    DEFAULT_PRIORITY = 5;
    parser$1 = parser;
    BottleneckError$1 = BottleneckError_1;
    Job = class Job {
      constructor(task, args, options, jobDefaults, rejectOnDrop, Events2, _states, Promise2) {
        this.task = task;
        this.args = args;
        this.rejectOnDrop = rejectOnDrop;
        this.Events = Events2;
        this._states = _states;
        this.Promise = Promise2;
        this.options = parser$1.load(options, jobDefaults);
        this.options.priority = this._sanitizePriority(this.options.priority);
        if (this.options.id === jobDefaults.id) {
          this.options.id = `${this.options.id}-${this._randomIndex()}`;
        }
        this.promise = new this.Promise((_resolve, _reject) => {
          this._resolve = _resolve;
          this._reject = _reject;
        });
        this.retryCount = 0;
      }
      _sanitizePriority(priority) {
        var sProperty;
        sProperty = ~~priority !== priority ? DEFAULT_PRIORITY : priority;
        if (sProperty < 0) {
          return 0;
        } else if (sProperty > NUM_PRIORITIES - 1) {
          return NUM_PRIORITIES - 1;
        } else {
          return sProperty;
        }
      }
      _randomIndex() {
        return Math.random().toString(36).slice(2);
      }
      doDrop({ error, message = "This job has been dropped by Bottleneck" } = {}) {
        if (this._states.remove(this.options.id)) {
          if (this.rejectOnDrop) {
            this._reject(error != null ? error : new BottleneckError$1(message));
          }
          this.Events.trigger("dropped", { args: this.args, options: this.options, task: this.task, promise: this.promise });
          return true;
        } else {
          return false;
        }
      }
      _assertStatus(expected) {
        var status;
        status = this._states.jobStatus(this.options.id);
        if (!(status === expected || expected === "DONE" && status === null)) {
          throw new BottleneckError$1(`Invalid job status ${status}, expected ${expected}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`);
        }
      }
      doReceive() {
        this._states.start(this.options.id);
        return this.Events.trigger("received", { args: this.args, options: this.options });
      }
      doQueue(reachedHWM, blocked) {
        this._assertStatus("RECEIVED");
        this._states.next(this.options.id);
        return this.Events.trigger("queued", { args: this.args, options: this.options, reachedHWM, blocked });
      }
      doRun() {
        if (this.retryCount === 0) {
          this._assertStatus("QUEUED");
          this._states.next(this.options.id);
        } else {
          this._assertStatus("EXECUTING");
        }
        return this.Events.trigger("scheduled", { args: this.args, options: this.options });
      }
      async doExecute(chained, clearGlobalState, run, free) {
        var error, eventInfo, passed;
        if (this.retryCount === 0) {
          this._assertStatus("RUNNING");
          this._states.next(this.options.id);
        } else {
          this._assertStatus("EXECUTING");
        }
        eventInfo = { args: this.args, options: this.options, retryCount: this.retryCount };
        this.Events.trigger("executing", eventInfo);
        try {
          passed = await (chained != null ? chained.schedule(this.options, this.task, ...this.args) : this.task(...this.args));
          if (clearGlobalState()) {
            this.doDone(eventInfo);
            await free(this.options, eventInfo);
            this._assertStatus("DONE");
            return this._resolve(passed);
          }
        } catch (error1) {
          error = error1;
          return this._onFailure(error, eventInfo, clearGlobalState, run, free);
        }
      }
      doExpire(clearGlobalState, run, free) {
        var error, eventInfo;
        if (this._states.jobStatus(this.options.id === "RUNNING")) {
          this._states.next(this.options.id);
        }
        this._assertStatus("EXECUTING");
        eventInfo = { args: this.args, options: this.options, retryCount: this.retryCount };
        error = new BottleneckError$1(`This job timed out after ${this.options.expiration} ms.`);
        return this._onFailure(error, eventInfo, clearGlobalState, run, free);
      }
      async _onFailure(error, eventInfo, clearGlobalState, run, free) {
        var retry2, retryAfter;
        if (clearGlobalState()) {
          retry2 = await this.Events.trigger("failed", error, eventInfo);
          if (retry2 != null) {
            retryAfter = ~~retry2;
            this.Events.trigger("retry", `Retrying ${this.options.id} after ${retryAfter} ms`, eventInfo);
            this.retryCount++;
            return run(retryAfter);
          } else {
            this.doDone(eventInfo);
            await free(this.options, eventInfo);
            this._assertStatus("DONE");
            return this._reject(error);
          }
        }
      }
      doDone(eventInfo) {
        this._assertStatus("EXECUTING");
        this._states.next(this.options.id);
        return this.Events.trigger("done", eventInfo);
      }
    };
    var Job_1 = Job;
    var BottleneckError$2, LocalDatastore, parser$2;
    parser$2 = parser;
    BottleneckError$2 = BottleneckError_1;
    LocalDatastore = class LocalDatastore {
      constructor(instance, storeOptions, storeInstanceOptions) {
        this.instance = instance;
        this.storeOptions = storeOptions;
        this.clientId = this.instance._randomIndex();
        parser$2.load(storeInstanceOptions, storeInstanceOptions, this);
        this._nextRequest = this._lastReservoirRefresh = this._lastReservoirIncrease = Date.now();
        this._running = 0;
        this._done = 0;
        this._unblockTime = 0;
        this.ready = this.Promise.resolve();
        this.clients = {};
        this._startHeartbeat();
      }
      _startHeartbeat() {
        var base;
        if (this.heartbeat == null && (this.storeOptions.reservoirRefreshInterval != null && this.storeOptions.reservoirRefreshAmount != null || this.storeOptions.reservoirIncreaseInterval != null && this.storeOptions.reservoirIncreaseAmount != null)) {
          return typeof (base = this.heartbeat = setInterval(() => {
            var amount, incr, maximum, now, reservoir;
            now = Date.now();
            if (this.storeOptions.reservoirRefreshInterval != null && now >= this._lastReservoirRefresh + this.storeOptions.reservoirRefreshInterval) {
              this._lastReservoirRefresh = now;
              this.storeOptions.reservoir = this.storeOptions.reservoirRefreshAmount;
              this.instance._drainAll(this.computeCapacity());
            }
            if (this.storeOptions.reservoirIncreaseInterval != null && now >= this._lastReservoirIncrease + this.storeOptions.reservoirIncreaseInterval) {
              ({
                reservoirIncreaseAmount: amount,
                reservoirIncreaseMaximum: maximum,
                reservoir
              } = this.storeOptions);
              this._lastReservoirIncrease = now;
              incr = maximum != null ? Math.min(amount, maximum - reservoir) : amount;
              if (incr > 0) {
                this.storeOptions.reservoir += incr;
                return this.instance._drainAll(this.computeCapacity());
              }
            }
          }, this.heartbeatInterval)).unref === "function" ? base.unref() : void 0;
        } else {
          return clearInterval(this.heartbeat);
        }
      }
      async __publish__(message) {
        await this.yieldLoop();
        return this.instance.Events.trigger("message", message.toString());
      }
      async __disconnect__(flush) {
        await this.yieldLoop();
        clearInterval(this.heartbeat);
        return this.Promise.resolve();
      }
      yieldLoop(t2 = 0) {
        return new this.Promise(function(resolve, reject) {
          return setTimeout(resolve, t2);
        });
      }
      computePenalty() {
        var ref;
        return (ref = this.storeOptions.penalty) != null ? ref : 15 * this.storeOptions.minTime || 5e3;
      }
      async __updateSettings__(options) {
        await this.yieldLoop();
        parser$2.overwrite(options, options, this.storeOptions);
        this._startHeartbeat();
        this.instance._drainAll(this.computeCapacity());
        return true;
      }
      async __running__() {
        await this.yieldLoop();
        return this._running;
      }
      async __queued__() {
        await this.yieldLoop();
        return this.instance.queued();
      }
      async __done__() {
        await this.yieldLoop();
        return this._done;
      }
      async __groupCheck__(time) {
        await this.yieldLoop();
        return this._nextRequest + this.timeout < time;
      }
      computeCapacity() {
        var maxConcurrent, reservoir;
        ({ maxConcurrent, reservoir } = this.storeOptions);
        if (maxConcurrent != null && reservoir != null) {
          return Math.min(maxConcurrent - this._running, reservoir);
        } else if (maxConcurrent != null) {
          return maxConcurrent - this._running;
        } else if (reservoir != null) {
          return reservoir;
        } else {
          return null;
        }
      }
      conditionsCheck(weight) {
        var capacity;
        capacity = this.computeCapacity();
        return capacity == null || weight <= capacity;
      }
      async __incrementReservoir__(incr) {
        var reservoir;
        await this.yieldLoop();
        reservoir = this.storeOptions.reservoir += incr;
        this.instance._drainAll(this.computeCapacity());
        return reservoir;
      }
      async __currentReservoir__() {
        await this.yieldLoop();
        return this.storeOptions.reservoir;
      }
      isBlocked(now) {
        return this._unblockTime >= now;
      }
      check(weight, now) {
        return this.conditionsCheck(weight) && this._nextRequest - now <= 0;
      }
      async __check__(weight) {
        var now;
        await this.yieldLoop();
        now = Date.now();
        return this.check(weight, now);
      }
      async __register__(index, weight, expiration) {
        var now, wait2;
        await this.yieldLoop();
        now = Date.now();
        if (this.conditionsCheck(weight)) {
          this._running += weight;
          if (this.storeOptions.reservoir != null) {
            this.storeOptions.reservoir -= weight;
          }
          wait2 = Math.max(this._nextRequest - now, 0);
          this._nextRequest = now + wait2 + this.storeOptions.minTime;
          return {
            success: true,
            wait: wait2,
            reservoir: this.storeOptions.reservoir
          };
        } else {
          return {
            success: false
          };
        }
      }
      strategyIsBlock() {
        return this.storeOptions.strategy === 3;
      }
      async __submit__(queueLength, weight) {
        var blocked, now, reachedHWM;
        await this.yieldLoop();
        if (this.storeOptions.maxConcurrent != null && weight > this.storeOptions.maxConcurrent) {
          throw new BottleneckError$2(`Impossible to add a job having a weight of ${weight} to a limiter having a maxConcurrent setting of ${this.storeOptions.maxConcurrent}`);
        }
        now = Date.now();
        reachedHWM = this.storeOptions.highWater != null && queueLength === this.storeOptions.highWater && !this.check(weight, now);
        blocked = this.strategyIsBlock() && (reachedHWM || this.isBlocked(now));
        if (blocked) {
          this._unblockTime = now + this.computePenalty();
          this._nextRequest = this._unblockTime + this.storeOptions.minTime;
          this.instance._dropAllQueued();
        }
        return {
          reachedHWM,
          blocked,
          strategy: this.storeOptions.strategy
        };
      }
      async __free__(index, weight) {
        await this.yieldLoop();
        this._running -= weight;
        this._done += weight;
        this.instance._drainAll(this.computeCapacity());
        return {
          running: this._running
        };
      }
    };
    var LocalDatastore_1 = LocalDatastore;
    var BottleneckError$3, States;
    BottleneckError$3 = BottleneckError_1;
    States = class States {
      constructor(status1) {
        this.status = status1;
        this._jobs = {};
        this.counts = this.status.map(function() {
          return 0;
        });
      }
      next(id2) {
        var current, next2;
        current = this._jobs[id2];
        next2 = current + 1;
        if (current != null && next2 < this.status.length) {
          this.counts[current]--;
          this.counts[next2]++;
          return this._jobs[id2]++;
        } else if (current != null) {
          this.counts[current]--;
          return delete this._jobs[id2];
        }
      }
      start(id2) {
        var initial;
        initial = 0;
        this._jobs[id2] = initial;
        return this.counts[initial]++;
      }
      remove(id2) {
        var current;
        current = this._jobs[id2];
        if (current != null) {
          this.counts[current]--;
          delete this._jobs[id2];
        }
        return current != null;
      }
      jobStatus(id2) {
        var ref;
        return (ref = this.status[this._jobs[id2]]) != null ? ref : null;
      }
      statusJobs(status) {
        var k2, pos, ref, results, v2;
        if (status != null) {
          pos = this.status.indexOf(status);
          if (pos < 0) {
            throw new BottleneckError$3(`status must be one of ${this.status.join(", ")}`);
          }
          ref = this._jobs;
          results = [];
          for (k2 in ref) {
            v2 = ref[k2];
            if (v2 === pos) {
              results.push(k2);
            }
          }
          return results;
        } else {
          return Object.keys(this._jobs);
        }
      }
      statusCounts() {
        return this.counts.reduce((acc, v2, i2) => {
          acc[this.status[i2]] = v2;
          return acc;
        }, {});
      }
    };
    var States_1 = States;
    var DLList$2, Sync;
    DLList$2 = DLList_1;
    Sync = class Sync {
      constructor(name, Promise2) {
        this.schedule = this.schedule.bind(this);
        this.name = name;
        this.Promise = Promise2;
        this._running = 0;
        this._queue = new DLList$2();
      }
      isEmpty() {
        return this._queue.length === 0;
      }
      async _tryToRun() {
        var args, cb2, error, reject, resolve, returned, task;
        if (this._running < 1 && this._queue.length > 0) {
          this._running++;
          ({ task, args, resolve, reject } = this._queue.shift());
          cb2 = await async function() {
            try {
              returned = await task(...args);
              return function() {
                return resolve(returned);
              };
            } catch (error1) {
              error = error1;
              return function() {
                return reject(error);
              };
            }
          }();
          this._running--;
          this._tryToRun();
          return cb2();
        }
      }
      schedule(task, ...args) {
        var promise, reject, resolve;
        resolve = reject = null;
        promise = new this.Promise(function(_resolve, _reject) {
          resolve = _resolve;
          return reject = _reject;
        });
        this._queue.push({ task, args, resolve, reject });
        this._tryToRun();
        return promise;
      }
    };
    var Sync_1 = Sync;
    var version = "2.19.5";
    var version$1 = {
      version
    };
    var version$2 = /* @__PURE__ */ Object.freeze({
      version,
      default: version$1
    });
    var require$$22 = () => console.log("You must import the full version of Bottleneck in order to use this feature.");
    var require$$32 = () => console.log("You must import the full version of Bottleneck in order to use this feature.");
    var require$$42 = () => console.log("You must import the full version of Bottleneck in order to use this feature.");
    var Events$2, Group, IORedisConnection$1, RedisConnection$1, Scripts$1, parser$3;
    parser$3 = parser;
    Events$2 = Events_1;
    RedisConnection$1 = require$$22;
    IORedisConnection$1 = require$$32;
    Scripts$1 = require$$42;
    Group = function() {
      class Group2 {
        constructor(limiterOptions = {}) {
          this.deleteKey = this.deleteKey.bind(this);
          this.limiterOptions = limiterOptions;
          parser$3.load(this.limiterOptions, this.defaults, this);
          this.Events = new Events$2(this);
          this.instances = {};
          this.Bottleneck = Bottleneck_1;
          this._startAutoCleanup();
          this.sharedConnection = this.connection != null;
          if (this.connection == null) {
            if (this.limiterOptions.datastore === "redis") {
              this.connection = new RedisConnection$1(Object.assign({}, this.limiterOptions, { Events: this.Events }));
            } else if (this.limiterOptions.datastore === "ioredis") {
              this.connection = new IORedisConnection$1(Object.assign({}, this.limiterOptions, { Events: this.Events }));
            }
          }
        }
        key(key = "") {
          var ref;
          return (ref = this.instances[key]) != null ? ref : (() => {
            var limiter;
            limiter = this.instances[key] = new this.Bottleneck(Object.assign(this.limiterOptions, {
              id: `${this.id}-${key}`,
              timeout: this.timeout,
              connection: this.connection
            }));
            this.Events.trigger("created", limiter, key);
            return limiter;
          })();
        }
        async deleteKey(key = "") {
          var deleted, instance;
          instance = this.instances[key];
          if (this.connection) {
            deleted = await this.connection.__runCommand__(["del", ...Scripts$1.allKeys(`${this.id}-${key}`)]);
          }
          if (instance != null) {
            delete this.instances[key];
            await instance.disconnect();
          }
          return instance != null || deleted > 0;
        }
        limiters() {
          var k2, ref, results, v2;
          ref = this.instances;
          results = [];
          for (k2 in ref) {
            v2 = ref[k2];
            results.push({
              key: k2,
              limiter: v2
            });
          }
          return results;
        }
        keys() {
          return Object.keys(this.instances);
        }
        async clusterKeys() {
          var cursor2, end, found, i2, k2, keys, len2, next2, start;
          if (this.connection == null) {
            return this.Promise.resolve(this.keys());
          }
          keys = [];
          cursor2 = null;
          start = `b_${this.id}-`.length;
          end = "_settings".length;
          while (cursor2 !== 0) {
            [next2, found] = await this.connection.__runCommand__(["scan", cursor2 != null ? cursor2 : 0, "match", `b_${this.id}-*_settings`, "count", 1e4]);
            cursor2 = ~~next2;
            for (i2 = 0, len2 = found.length; i2 < len2; i2++) {
              k2 = found[i2];
              keys.push(k2.slice(start, -end));
            }
          }
          return keys;
        }
        _startAutoCleanup() {
          var base;
          clearInterval(this.interval);
          return typeof (base = this.interval = setInterval(async () => {
            var e2, k2, ref, results, time, v2;
            time = Date.now();
            ref = this.instances;
            results = [];
            for (k2 in ref) {
              v2 = ref[k2];
              try {
                if (await v2._store.__groupCheck__(time)) {
                  results.push(this.deleteKey(k2));
                } else {
                  results.push(void 0);
                }
              } catch (error) {
                e2 = error;
                results.push(v2.Events.trigger("error", e2));
              }
            }
            return results;
          }, this.timeout / 2)).unref === "function" ? base.unref() : void 0;
        }
        updateSettings(options = {}) {
          parser$3.overwrite(options, this.defaults, this);
          parser$3.overwrite(options, options, this.limiterOptions);
          if (options.timeout != null) {
            return this._startAutoCleanup();
          }
        }
        disconnect(flush = true) {
          var ref;
          if (!this.sharedConnection) {
            return (ref = this.connection) != null ? ref.disconnect(flush) : void 0;
          }
        }
      }
      Group2.prototype.defaults = {
        timeout: 1e3 * 60 * 5,
        connection: null,
        Promise,
        id: "group-key"
      };
      return Group2;
    }.call(commonjsGlobal$1);
    var Group_1 = Group;
    var Batcher, Events$3, parser$4;
    parser$4 = parser;
    Events$3 = Events_1;
    Batcher = function() {
      class Batcher2 {
        constructor(options = {}) {
          this.options = options;
          parser$4.load(this.options, this.defaults, this);
          this.Events = new Events$3(this);
          this._arr = [];
          this._resetPromise();
          this._lastFlush = Date.now();
        }
        _resetPromise() {
          return this._promise = new this.Promise((res, rej) => {
            return this._resolve = res;
          });
        }
        _flush() {
          clearTimeout(this._timeout);
          this._lastFlush = Date.now();
          this._resolve();
          this.Events.trigger("batch", this._arr);
          this._arr = [];
          return this._resetPromise();
        }
        add(data) {
          var ret;
          this._arr.push(data);
          ret = this._promise;
          if (this._arr.length === this.maxSize) {
            this._flush();
          } else if (this.maxTime != null && this._arr.length === 1) {
            this._timeout = setTimeout(() => {
              return this._flush();
            }, this.maxTime);
          }
          return ret;
        }
      }
      Batcher2.prototype.defaults = {
        maxTime: null,
        maxSize: null,
        Promise
      };
      return Batcher2;
    }.call(commonjsGlobal$1);
    var Batcher_1 = Batcher;
    var require$$4$1 = () => console.log("You must import the full version of Bottleneck in order to use this feature.");
    var require$$8 = getCjsExportFromNamespace(version$2);
    var Bottleneck, DEFAULT_PRIORITY$1, Events$4, Job$1, LocalDatastore$1, NUM_PRIORITIES$1, Queues$1, RedisDatastore$1, States$1, Sync$1, parser$5, splice = [].splice;
    NUM_PRIORITIES$1 = 10;
    DEFAULT_PRIORITY$1 = 5;
    parser$5 = parser;
    Queues$1 = Queues_1;
    Job$1 = Job_1;
    LocalDatastore$1 = LocalDatastore_1;
    RedisDatastore$1 = require$$4$1;
    Events$4 = Events_1;
    States$1 = States_1;
    Sync$1 = Sync_1;
    Bottleneck = function() {
      class Bottleneck2 {
        constructor(options = {}, ...invalid) {
          var storeInstanceOptions, storeOptions;
          this._addToQueue = this._addToQueue.bind(this);
          this._validateOptions(options, invalid);
          parser$5.load(options, this.instanceDefaults, this);
          this._queues = new Queues$1(NUM_PRIORITIES$1);
          this._scheduled = {};
          this._states = new States$1(["RECEIVED", "QUEUED", "RUNNING", "EXECUTING"].concat(this.trackDoneStatus ? ["DONE"] : []));
          this._limiter = null;
          this.Events = new Events$4(this);
          this._submitLock = new Sync$1("submit", this.Promise);
          this._registerLock = new Sync$1("register", this.Promise);
          storeOptions = parser$5.load(options, this.storeDefaults, {});
          this._store = function() {
            if (this.datastore === "redis" || this.datastore === "ioredis" || this.connection != null) {
              storeInstanceOptions = parser$5.load(options, this.redisStoreDefaults, {});
              return new RedisDatastore$1(this, storeOptions, storeInstanceOptions);
            } else if (this.datastore === "local") {
              storeInstanceOptions = parser$5.load(options, this.localStoreDefaults, {});
              return new LocalDatastore$1(this, storeOptions, storeInstanceOptions);
            } else {
              throw new Bottleneck2.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`);
            }
          }.call(this);
          this._queues.on("leftzero", () => {
            var ref;
            return (ref = this._store.heartbeat) != null ? typeof ref.ref === "function" ? ref.ref() : void 0 : void 0;
          });
          this._queues.on("zero", () => {
            var ref;
            return (ref = this._store.heartbeat) != null ? typeof ref.unref === "function" ? ref.unref() : void 0 : void 0;
          });
        }
        _validateOptions(options, invalid) {
          if (!(options != null && typeof options === "object" && invalid.length === 0)) {
            throw new Bottleneck2.prototype.BottleneckError("Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1.");
          }
        }
        ready() {
          return this._store.ready;
        }
        clients() {
          return this._store.clients;
        }
        channel() {
          return `b_${this.id}`;
        }
        channel_client() {
          return `b_${this.id}_${this._store.clientId}`;
        }
        publish(message) {
          return this._store.__publish__(message);
        }
        disconnect(flush = true) {
          return this._store.__disconnect__(flush);
        }
        chain(_limiter) {
          this._limiter = _limiter;
          return this;
        }
        queued(priority) {
          return this._queues.queued(priority);
        }
        clusterQueued() {
          return this._store.__queued__();
        }
        empty() {
          return this.queued() === 0 && this._submitLock.isEmpty();
        }
        running() {
          return this._store.__running__();
        }
        done() {
          return this._store.__done__();
        }
        jobStatus(id2) {
          return this._states.jobStatus(id2);
        }
        jobs(status) {
          return this._states.statusJobs(status);
        }
        counts() {
          return this._states.statusCounts();
        }
        _randomIndex() {
          return Math.random().toString(36).slice(2);
        }
        check(weight = 1) {
          return this._store.__check__(weight);
        }
        _clearGlobalState(index) {
          if (this._scheduled[index] != null) {
            clearTimeout(this._scheduled[index].expiration);
            delete this._scheduled[index];
            return true;
          } else {
            return false;
          }
        }
        async _free(index, job, options, eventInfo) {
          var e2, running;
          try {
            ({ running } = await this._store.__free__(index, options.weight));
            this.Events.trigger("debug", `Freed ${options.id}`, eventInfo);
            if (running === 0 && this.empty()) {
              return this.Events.trigger("idle");
            }
          } catch (error1) {
            e2 = error1;
            return this.Events.trigger("error", e2);
          }
        }
        _run(index, job, wait2) {
          var clearGlobalState, free, run;
          job.doRun();
          clearGlobalState = this._clearGlobalState.bind(this, index);
          run = this._run.bind(this, index, job);
          free = this._free.bind(this, index, job);
          return this._scheduled[index] = {
            timeout: setTimeout(() => {
              return job.doExecute(this._limiter, clearGlobalState, run, free);
            }, wait2),
            expiration: job.options.expiration != null ? setTimeout(function() {
              return job.doExpire(clearGlobalState, run, free);
            }, wait2 + job.options.expiration) : void 0,
            job
          };
        }
        _drainOne(capacity) {
          return this._registerLock.schedule(() => {
            var args, index, next2, options, queue2;
            if (this.queued() === 0) {
              return this.Promise.resolve(null);
            }
            queue2 = this._queues.getFirst();
            ({ options, args } = next2 = queue2.first());
            if (capacity != null && options.weight > capacity) {
              return this.Promise.resolve(null);
            }
            this.Events.trigger("debug", `Draining ${options.id}`, { args, options });
            index = this._randomIndex();
            return this._store.__register__(index, options.weight, options.expiration).then(({ success, wait: wait2, reservoir }) => {
              var empty2;
              this.Events.trigger("debug", `Drained ${options.id}`, { success, args, options });
              if (success) {
                queue2.shift();
                empty2 = this.empty();
                if (empty2) {
                  this.Events.trigger("empty");
                }
                if (reservoir === 0) {
                  this.Events.trigger("depleted", empty2);
                }
                this._run(index, next2, wait2);
                return this.Promise.resolve(options.weight);
              } else {
                return this.Promise.resolve(null);
              }
            });
          });
        }
        _drainAll(capacity, total = 0) {
          return this._drainOne(capacity).then((drained) => {
            var newCapacity;
            if (drained != null) {
              newCapacity = capacity != null ? capacity - drained : capacity;
              return this._drainAll(newCapacity, total + drained);
            } else {
              return this.Promise.resolve(total);
            }
          }).catch((e2) => {
            return this.Events.trigger("error", e2);
          });
        }
        _dropAllQueued(message) {
          return this._queues.shiftAll(function(job) {
            return job.doDrop({ message });
          });
        }
        stop(options = {}) {
          var done, waitForExecuting;
          options = parser$5.load(options, this.stopDefaults);
          waitForExecuting = (at) => {
            var finished;
            finished = () => {
              var counts;
              counts = this._states.counts;
              return counts[0] + counts[1] + counts[2] + counts[3] === at;
            };
            return new this.Promise((resolve, reject) => {
              if (finished()) {
                return resolve();
              } else {
                return this.on("done", () => {
                  if (finished()) {
                    this.removeAllListeners("done");
                    return resolve();
                  }
                });
              }
            });
          };
          done = options.dropWaitingJobs ? (this._run = function(index, next2) {
            return next2.doDrop({
              message: options.dropErrorMessage
            });
          }, this._drainOne = () => {
            return this.Promise.resolve(null);
          }, this._registerLock.schedule(() => {
            return this._submitLock.schedule(() => {
              var k2, ref, v2;
              ref = this._scheduled;
              for (k2 in ref) {
                v2 = ref[k2];
                if (this.jobStatus(v2.job.options.id) === "RUNNING") {
                  clearTimeout(v2.timeout);
                  clearTimeout(v2.expiration);
                  v2.job.doDrop({
                    message: options.dropErrorMessage
                  });
                }
              }
              this._dropAllQueued(options.dropErrorMessage);
              return waitForExecuting(0);
            });
          })) : this.schedule({
            priority: NUM_PRIORITIES$1 - 1,
            weight: 0
          }, () => {
            return waitForExecuting(1);
          });
          this._receive = function(job) {
            return job._reject(new Bottleneck2.prototype.BottleneckError(options.enqueueErrorMessage));
          };
          this.stop = () => {
            return this.Promise.reject(new Bottleneck2.prototype.BottleneckError("stop() has already been called"));
          };
          return done;
        }
        async _addToQueue(job) {
          var args, blocked, error, options, reachedHWM, shifted, strategy;
          ({ args, options } = job);
          try {
            ({ reachedHWM, blocked, strategy } = await this._store.__submit__(this.queued(), options.weight));
          } catch (error1) {
            error = error1;
            this.Events.trigger("debug", `Could not queue ${options.id}`, { args, options, error });
            job.doDrop({ error });
            return false;
          }
          if (blocked) {
            job.doDrop();
            return true;
          } else if (reachedHWM) {
            shifted = strategy === Bottleneck2.prototype.strategy.LEAK ? this._queues.shiftLastFrom(options.priority) : strategy === Bottleneck2.prototype.strategy.OVERFLOW_PRIORITY ? this._queues.shiftLastFrom(options.priority + 1) : strategy === Bottleneck2.prototype.strategy.OVERFLOW ? job : void 0;
            if (shifted != null) {
              shifted.doDrop();
            }
            if (shifted == null || strategy === Bottleneck2.prototype.strategy.OVERFLOW) {
              if (shifted == null) {
                job.doDrop();
              }
              return reachedHWM;
            }
          }
          job.doQueue(reachedHWM, blocked);
          this._queues.push(job);
          await this._drainAll();
          return reachedHWM;
        }
        _receive(job) {
          if (this._states.jobStatus(job.options.id) != null) {
            job._reject(new Bottleneck2.prototype.BottleneckError(`A job with the same id already exists (id=${job.options.id})`));
            return false;
          } else {
            job.doReceive();
            return this._submitLock.schedule(this._addToQueue, job);
          }
        }
        submit(...args) {
          var cb2, fn, job, options, ref, ref1, task;
          if (typeof args[0] === "function") {
            ref = args, [fn, ...args] = ref, [cb2] = splice.call(args, -1);
            options = parser$5.load({}, this.jobDefaults);
          } else {
            ref1 = args, [options, fn, ...args] = ref1, [cb2] = splice.call(args, -1);
            options = parser$5.load(options, this.jobDefaults);
          }
          task = (...args2) => {
            return new this.Promise(function(resolve, reject) {
              return fn(...args2, function(...args3) {
                return (args3[0] != null ? reject : resolve)(args3);
              });
            });
          };
          job = new Job$1(task, args, options, this.jobDefaults, this.rejectOnDrop, this.Events, this._states, this.Promise);
          job.promise.then(function(args2) {
            return typeof cb2 === "function" ? cb2(...args2) : void 0;
          }).catch(function(args2) {
            if (Array.isArray(args2)) {
              return typeof cb2 === "function" ? cb2(...args2) : void 0;
            } else {
              return typeof cb2 === "function" ? cb2(args2) : void 0;
            }
          });
          return this._receive(job);
        }
        schedule(...args) {
          var job, options, task;
          if (typeof args[0] === "function") {
            [task, ...args] = args;
            options = {};
          } else {
            [options, task, ...args] = args;
          }
          job = new Job$1(task, args, options, this.jobDefaults, this.rejectOnDrop, this.Events, this._states, this.Promise);
          this._receive(job);
          return job.promise;
        }
        wrap(fn) {
          var schedule, wrapped;
          schedule = this.schedule.bind(this);
          wrapped = function(...args) {
            return schedule(fn.bind(this), ...args);
          };
          wrapped.withOptions = function(options, ...args) {
            return schedule(options, fn, ...args);
          };
          return wrapped;
        }
        async updateSettings(options = {}) {
          await this._store.__updateSettings__(parser$5.overwrite(options, this.storeDefaults));
          parser$5.overwrite(options, this.instanceDefaults, this);
          return this;
        }
        currentReservoir() {
          return this._store.__currentReservoir__();
        }
        incrementReservoir(incr = 0) {
          return this._store.__incrementReservoir__(incr);
        }
      }
      Bottleneck2.default = Bottleneck2;
      Bottleneck2.Events = Events$4;
      Bottleneck2.version = Bottleneck2.prototype.version = require$$8.version;
      Bottleneck2.strategy = Bottleneck2.prototype.strategy = {
        LEAK: 1,
        OVERFLOW: 2,
        OVERFLOW_PRIORITY: 4,
        BLOCK: 3
      };
      Bottleneck2.BottleneckError = Bottleneck2.prototype.BottleneckError = BottleneckError_1;
      Bottleneck2.Group = Bottleneck2.prototype.Group = Group_1;
      Bottleneck2.RedisConnection = Bottleneck2.prototype.RedisConnection = require$$22;
      Bottleneck2.IORedisConnection = Bottleneck2.prototype.IORedisConnection = require$$32;
      Bottleneck2.Batcher = Bottleneck2.prototype.Batcher = Batcher_1;
      Bottleneck2.prototype.jobDefaults = {
        priority: DEFAULT_PRIORITY$1,
        weight: 1,
        expiration: null,
        id: "<no-id>"
      };
      Bottleneck2.prototype.storeDefaults = {
        maxConcurrent: null,
        minTime: 0,
        highWater: null,
        strategy: Bottleneck2.prototype.strategy.LEAK,
        penalty: null,
        reservoir: null,
        reservoirRefreshInterval: null,
        reservoirRefreshAmount: null,
        reservoirIncreaseInterval: null,
        reservoirIncreaseAmount: null,
        reservoirIncreaseMaximum: null
      };
      Bottleneck2.prototype.localStoreDefaults = {
        Promise,
        timeout: null,
        heartbeatInterval: 250
      };
      Bottleneck2.prototype.redisStoreDefaults = {
        Promise,
        timeout: null,
        heartbeatInterval: 5e3,
        clientTimeout: 1e4,
        Redis: null,
        clientOptions: {},
        clusterNodes: null,
        clearDatastore: false,
        connection: null
      };
      Bottleneck2.prototype.instanceDefaults = {
        datastore: "local",
        connection: null,
        id: "<no-id>",
        rejectOnDrop: true,
        trackDoneStatus: false,
        Promise
      };
      Bottleneck2.prototype.stopDefaults = {
        enqueueErrorMessage: "This limiter has been stopped and cannot accept new jobs.",
        dropWaitingJobs: true,
        dropErrorMessage: "This limiter has been stopped."
      };
      return Bottleneck2;
    }.call(commonjsGlobal$1);
    var Bottleneck_1 = Bottleneck;
    var lib = Bottleneck_1;
    return lib;
  });
})(light);
var BottleneckLight = light.exports;
async function errorRequest(octokit2, state, error, options) {
  if (!error.request || !error.request.request) {
    throw error;
  }
  if (error.status >= 400 && !state.doNotRetry.includes(error.status)) {
    const retries = options.request.retries != null ? options.request.retries : state.retries;
    const retryAfter = Math.pow((options.request.retryCount || 0) + 1, 2);
    throw octokit2.retry.retryRequest(error, retries, retryAfter);
  }
  throw error;
}
async function wrapRequest$1(state, request2, options) {
  const limiter = new BottleneckLight();
  limiter.on("failed", function(error, info) {
    const maxRetries = ~~error.request.request.retries;
    const after = ~~error.request.request.retryAfter;
    options.request.retryCount = info.retryCount + 1;
    if (maxRetries > info.retryCount) {
      return after * state.retryAfterBaseValue;
    }
  });
  return limiter.schedule(request2, options);
}
const VERSION$9 = "3.0.9";
function retry(octokit2, octokitOptions) {
  const state = Object.assign({
    enabled: true,
    retryAfterBaseValue: 1e3,
    doNotRetry: [400, 401, 403, 404, 422],
    retries: 3
  }, octokitOptions.retry);
  if (state.enabled) {
    octokit2.hook.error("request", errorRequest.bind(null, octokit2, state));
    octokit2.hook.wrap("request", wrapRequest$1.bind(null, state));
  }
  return {
    retry: {
      retryRequest: (error, retries, retryAfter) => {
        error.request.request = Object.assign({}, error.request.request, {
          retries,
          retryAfter
        });
        return error;
      }
    }
  };
}
retry.VERSION = VERSION$9;
const VERSION$8 = "3.7.0";
const noop$2 = () => Promise.resolve();
function wrapRequest(state, request2, options) {
  return state.retryLimiter.schedule(doRequest, state, request2, options);
}
async function doRequest(state, request2, options) {
  const isWrite = options.method !== "GET" && options.method !== "HEAD";
  const { pathname } = new URL(options.url, "http://github.test");
  const isSearch = options.method === "GET" && pathname.startsWith("/search/");
  const isGraphQL = pathname.startsWith("/graphql");
  const retryCount = ~~options.request.retryCount;
  const jobOptions = retryCount > 0 ? { priority: 0, weight: 0 } : {};
  if (state.clustering) {
    jobOptions.expiration = 1e3 * 60;
  }
  if (isWrite || isGraphQL) {
    await state.write.key(state.id).schedule(jobOptions, noop$2);
  }
  if (isWrite && state.triggersNotification(pathname)) {
    await state.notifications.key(state.id).schedule(jobOptions, noop$2);
  }
  if (isSearch) {
    await state.search.key(state.id).schedule(jobOptions, noop$2);
  }
  const req = state.global.key(state.id).schedule(jobOptions, request2, options);
  if (isGraphQL) {
    const res = await req;
    if (res.data.errors != null && res.data.errors.some((error) => error.type === "RATE_LIMITED")) {
      const error = Object.assign(new Error("GraphQL Rate Limit Exceeded"), {
        response: res,
        data: res.data
      });
      throw error;
    }
  }
  return req;
}
var triggersNotificationPaths = [
  "/orgs/{org}/invitations",
  "/orgs/{org}/invitations/{invitation_id}",
  "/orgs/{org}/teams/{team_slug}/discussions",
  "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments",
  "/repos/{owner}/{repo}/collaborators/{username}",
  "/repos/{owner}/{repo}/commits/{commit_sha}/comments",
  "/repos/{owner}/{repo}/issues",
  "/repos/{owner}/{repo}/issues/{issue_number}/comments",
  "/repos/{owner}/{repo}/pulls",
  "/repos/{owner}/{repo}/pulls/{pull_number}/comments",
  "/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies",
  "/repos/{owner}/{repo}/pulls/{pull_number}/merge",
  "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",
  "/repos/{owner}/{repo}/pulls/{pull_number}/reviews",
  "/repos/{owner}/{repo}/releases",
  "/teams/{team_id}/discussions",
  "/teams/{team_id}/discussions/{discussion_number}/comments"
];
function routeMatcher$1(paths) {
  const regexes = paths.map((path) => path.split("/").map((c2) => c2.startsWith("{") ? "(?:.+?)" : c2).join("/"));
  const regex2 = `^(?:${regexes.map((r2) => `(?:${r2})`).join("|")})[^/]*$`;
  return new RegExp(regex2, "i");
}
const regex = routeMatcher$1(triggersNotificationPaths);
const triggersNotification = regex.test.bind(regex);
const groups = {};
const createGroups = function(Bottleneck, common2) {
  groups.global = new Bottleneck.Group(__spreadValues({
    id: "octokit-global",
    maxConcurrent: 10
  }, common2));
  groups.search = new Bottleneck.Group(__spreadValues({
    id: "octokit-search",
    maxConcurrent: 1,
    minTime: 2e3
  }, common2));
  groups.write = new Bottleneck.Group(__spreadValues({
    id: "octokit-write",
    maxConcurrent: 1,
    minTime: 1e3
  }, common2));
  groups.notifications = new Bottleneck.Group(__spreadValues({
    id: "octokit-notifications",
    maxConcurrent: 1,
    minTime: 3e3
  }, common2));
};
function throttling(octokit2, octokitOptions) {
  const {
    enabled = true,
    Bottleneck = BottleneckLight,
    id: id2 = "no-id",
    timeout = 1e3 * 60 * 2,
    connection
  } = octokitOptions.throttle || {};
  if (!enabled) {
    return {};
  }
  const common2 = { connection, timeout };
  if (groups.global == null) {
    createGroups(Bottleneck, common2);
  }
  const state = Object.assign(__spreadValues({
    clustering: connection != null,
    triggersNotification,
    minimumSecondaryRateRetryAfter: 5,
    retryAfterBaseValue: 1e3,
    retryLimiter: new Bottleneck(),
    id: id2
  }, groups), octokitOptions.throttle);
  const isUsingDeprecatedOnAbuseLimitHandler = typeof state.onAbuseLimit === "function" && state.onAbuseLimit;
  if (typeof (isUsingDeprecatedOnAbuseLimitHandler ? state.onAbuseLimit : state.onSecondaryRateLimit) !== "function" || typeof state.onRateLimit !== "function") {
    throw new Error(`octokit/plugin-throttling error:
        You must pass the onSecondaryRateLimit and onRateLimit error handlers.
        See https://github.com/octokit/rest.js#throttling

        const octokit = new Octokit({
          throttle: {
            onSecondaryRateLimit: (retryAfter, options) => {/* ... */},
            onRateLimit: (retryAfter, options) => {/* ... */}
          }
        })
    `);
  }
  const events = {};
  const emitter = new Bottleneck.Events(events);
  events.on("secondary-limit", isUsingDeprecatedOnAbuseLimitHandler ? function(...args) {
    octokit2.log.warn("[@octokit/plugin-throttling] `onAbuseLimit()` is deprecated and will be removed in a future release of `@octokit/plugin-throttling`, please use the `onSecondaryRateLimit` handler instead");
    return state.onAbuseLimit(...args);
  } : state.onSecondaryRateLimit);
  events.on("rate-limit", state.onRateLimit);
  events.on("error", (e2) => octokit2.log.warn("Error in throttling-plugin limit handler", e2));
  state.retryLimiter.on("failed", async function(error, info) {
    const options = info.args[info.args.length - 1];
    const { pathname } = new URL(options.url, "http://github.test");
    const shouldRetryGraphQL = pathname.startsWith("/graphql") && error.status !== 401;
    if (!(shouldRetryGraphQL || error.status === 403)) {
      return;
    }
    const retryCount = ~~options.request.retryCount;
    options.request.retryCount = retryCount;
    const { wantRetry, retryAfter = 0 } = await async function() {
      if (/\bsecondary rate\b/i.test(error.message)) {
        const retryAfter2 = Math.max(~~error.response.headers["retry-after"], state.minimumSecondaryRateRetryAfter);
        const wantRetry2 = await emitter.trigger("secondary-limit", retryAfter2, options, octokit2);
        return { wantRetry: wantRetry2, retryAfter: retryAfter2 };
      }
      if (error.response.headers != null && error.response.headers["x-ratelimit-remaining"] === "0") {
        const rateLimitReset = new Date(~~error.response.headers["x-ratelimit-reset"] * 1e3).getTime();
        const retryAfter2 = Math.max(Math.ceil((rateLimitReset - Date.now()) / 1e3), 0);
        const wantRetry2 = await emitter.trigger("rate-limit", retryAfter2, options, octokit2);
        return { wantRetry: wantRetry2, retryAfter: retryAfter2 };
      }
      return {};
    }();
    if (wantRetry) {
      options.request.retryCount++;
      return retryAfter * state.retryAfterBaseValue;
    }
  });
  octokit2.hook.wrap("request", wrapRequest.bind(null, state));
  return {};
}
throttling.VERSION = VERSION$8;
throttling.triggersNotification = triggersNotification;
var distNode$2 = {};
var require$$0$4 = /* @__PURE__ */ getAugmentedNamespace(distWeb$7);
var btoaBrowser = function _btoa(str) {
  return btoa(str);
};
var distNode$1 = {};
function oauthAuthorizationUrl$1(options) {
  const clientType = options.clientType || "oauth-app";
  const baseUrl = options.baseUrl || "https://github.com";
  const result = {
    clientType,
    allowSignup: options.allowSignup === false ? false : true,
    clientId: options.clientId,
    login: options.login || null,
    redirectUrl: options.redirectUrl || null,
    state: options.state || Math.random().toString(36).substr(2),
    url: ""
  };
  if (clientType === "oauth-app") {
    const scopes = "scopes" in options ? options.scopes : [];
    result.scopes = typeof scopes === "string" ? scopes.split(/[,\s]+/).filter(Boolean) : scopes;
  }
  result.url = urlBuilderAuthorize(`${baseUrl}/login/oauth/authorize`, result);
  return result;
}
function urlBuilderAuthorize(base, options) {
  const map2 = {
    allowSignup: "allow_signup",
    clientId: "client_id",
    login: "login",
    redirectUrl: "redirect_uri",
    scopes: "scope",
    state: "state"
  };
  let url = base;
  Object.keys(map2).filter((k2) => options[k2] !== null).filter((k2) => {
    if (k2 !== "scopes")
      return true;
    if (options.clientType === "github-app")
      return false;
    return !Array.isArray(options[k2]) || options[k2].length > 0;
  }).map((key) => [map2[key], `${options[key]}`]).forEach(([key, value], index) => {
    url += index === 0 ? `?` : "&";
    url += `${key}=${encodeURIComponent(value)}`;
  });
  return url;
}
var distWeb$5 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  oauthAuthorizationUrl: oauthAuthorizationUrl$1
});
var require$$0$3 = /* @__PURE__ */ getAugmentedNamespace(distWeb$5);
var require$$1$1 = /* @__PURE__ */ getAugmentedNamespace(distWeb$8);
var require$$2$1 = /* @__PURE__ */ getAugmentedNamespace(distWeb$9);
Object.defineProperty(distNode$1, "__esModule", { value: true });
function _interopDefault$1(ex) {
  return ex && typeof ex === "object" && "default" in ex ? ex["default"] : ex;
}
var oauthAuthorizationUrl = require$$0$3;
var request = require$$1$1;
var requestError = require$$2$1;
var btoa$1 = _interopDefault$1(btoaBrowser);
const VERSION$7 = "1.2.6";
function ownKeys$2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2$2(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? arguments[i2] : {};
    if (i2 % 2) {
      ownKeys$2(Object(source), true).forEach(function(key) {
        _defineProperty$2(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$2(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key = sourceKeys[i2];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key = sourceSymbolKeys[i2];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function requestToOAuthBaseUrl(request2) {
  const endpointDefaults = request2.endpoint.DEFAULTS;
  return /^https:\/\/(api\.)?github\.com$/.test(endpointDefaults.baseUrl) ? "https://github.com" : endpointDefaults.baseUrl.replace("/api/v3", "");
}
async function oauthRequest(request2, route, parameters) {
  const withOAuthParameters = _objectSpread2$2({
    baseUrl: requestToOAuthBaseUrl(request2),
    headers: {
      accept: "application/json"
    }
  }, parameters);
  const response = await request2(route, withOAuthParameters);
  if ("error" in response.data) {
    const error = new requestError.RequestError(`${response.data.error_description} (${response.data.error}, ${response.data.error_uri})`, 400, {
      request: request2.endpoint.merge(route, withOAuthParameters),
      headers: response.headers
    });
    error.response = response;
    throw error;
  }
  return response;
}
const _excluded = ["request"];
function getWebFlowAuthorizationUrl(_ref) {
  let {
    request: request$12 = request.request
  } = _ref, options = _objectWithoutProperties(_ref, _excluded);
  const baseUrl = requestToOAuthBaseUrl(request$12);
  return oauthAuthorizationUrl.oauthAuthorizationUrl(_objectSpread2$2(_objectSpread2$2({}, options), {}, {
    baseUrl
  }));
}
async function exchangeWebFlowCode(options) {
  const request$12 = options.request || request.request;
  const response = await oauthRequest(request$12, "POST /login/oauth/access_token", {
    client_id: options.clientId,
    client_secret: options.clientSecret,
    code: options.code,
    redirect_uri: options.redirectUrl
  });
  const authentication = {
    clientType: options.clientType,
    clientId: options.clientId,
    clientSecret: options.clientSecret,
    token: response.data.access_token,
    scopes: response.data.scope.split(/\s+/).filter(Boolean)
  };
  if (options.clientType === "github-app") {
    if ("refresh_token" in response.data) {
      const apiTimeInMs = new Date(response.headers.date).getTime();
      authentication.refreshToken = response.data.refresh_token, authentication.expiresAt = toTimestamp(apiTimeInMs, response.data.expires_in), authentication.refreshTokenExpiresAt = toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in);
    }
    delete authentication.scopes;
  }
  return _objectSpread2$2(_objectSpread2$2({}, response), {}, {
    authentication
  });
}
function toTimestamp(apiTimeInMs, expirationInSeconds) {
  return new Date(apiTimeInMs + expirationInSeconds * 1e3).toISOString();
}
async function createDeviceCode(options) {
  const request$12 = options.request || request.request;
  const parameters = {
    client_id: options.clientId
  };
  if ("scopes" in options && Array.isArray(options.scopes)) {
    parameters.scope = options.scopes.join(" ");
  }
  return oauthRequest(request$12, "POST /login/device/code", parameters);
}
async function exchangeDeviceCode(options) {
  const request$12 = options.request || request.request;
  const response = await oauthRequest(request$12, "POST /login/oauth/access_token", {
    client_id: options.clientId,
    device_code: options.code,
    grant_type: "urn:ietf:params:oauth:grant-type:device_code"
  });
  const authentication = {
    clientType: options.clientType,
    clientId: options.clientId,
    token: response.data.access_token,
    scopes: response.data.scope.split(/\s+/).filter(Boolean)
  };
  if ("clientSecret" in options) {
    authentication.clientSecret = options.clientSecret;
  }
  if (options.clientType === "github-app") {
    if ("refresh_token" in response.data) {
      const apiTimeInMs = new Date(response.headers.date).getTime();
      authentication.refreshToken = response.data.refresh_token, authentication.expiresAt = toTimestamp$1(apiTimeInMs, response.data.expires_in), authentication.refreshTokenExpiresAt = toTimestamp$1(apiTimeInMs, response.data.refresh_token_expires_in);
    }
    delete authentication.scopes;
  }
  return _objectSpread2$2(_objectSpread2$2({}, response), {}, {
    authentication
  });
}
function toTimestamp$1(apiTimeInMs, expirationInSeconds) {
  return new Date(apiTimeInMs + expirationInSeconds * 1e3).toISOString();
}
async function checkToken(options) {
  const request$12 = options.request || request.request;
  const response = await request$12("POST /applications/{client_id}/token", {
    headers: {
      authorization: `basic ${btoa$1(`${options.clientId}:${options.clientSecret}`)}`
    },
    client_id: options.clientId,
    access_token: options.token
  });
  const authentication = {
    clientType: options.clientType,
    clientId: options.clientId,
    clientSecret: options.clientSecret,
    token: options.token,
    scopes: response.data.scopes
  };
  if (response.data.expires_at)
    authentication.expiresAt = response.data.expires_at;
  if (options.clientType === "github-app") {
    delete authentication.scopes;
  }
  return _objectSpread2$2(_objectSpread2$2({}, response), {}, {
    authentication
  });
}
async function refreshToken(options) {
  const request$12 = options.request || request.request;
  const response = await oauthRequest(request$12, "POST /login/oauth/access_token", {
    client_id: options.clientId,
    client_secret: options.clientSecret,
    grant_type: "refresh_token",
    refresh_token: options.refreshToken
  });
  const apiTimeInMs = new Date(response.headers.date).getTime();
  const authentication = {
    clientType: "github-app",
    clientId: options.clientId,
    clientSecret: options.clientSecret,
    token: response.data.access_token,
    refreshToken: response.data.refresh_token,
    expiresAt: toTimestamp$2(apiTimeInMs, response.data.expires_in),
    refreshTokenExpiresAt: toTimestamp$2(apiTimeInMs, response.data.refresh_token_expires_in)
  };
  return _objectSpread2$2(_objectSpread2$2({}, response), {}, {
    authentication
  });
}
function toTimestamp$2(apiTimeInMs, expirationInSeconds) {
  return new Date(apiTimeInMs + expirationInSeconds * 1e3).toISOString();
}
const _excluded$1 = ["request", "clientType", "clientId", "clientSecret", "token"];
async function scopeToken(options) {
  const {
    request: request$12,
    clientType,
    clientId,
    clientSecret,
    token: token2
  } = options, requestOptions = _objectWithoutProperties(options, _excluded$1);
  const response = await (request$12 || request.request)("POST /applications/{client_id}/token/scoped", _objectSpread2$2({
    headers: {
      authorization: `basic ${btoa$1(`${clientId}:${clientSecret}`)}`
    },
    client_id: clientId,
    access_token: token2
  }, requestOptions));
  const authentication = Object.assign({
    clientType,
    clientId,
    clientSecret,
    token: response.data.token
  }, response.data.expires_at ? {
    expiresAt: response.data.expires_at
  } : {});
  return _objectSpread2$2(_objectSpread2$2({}, response), {}, {
    authentication
  });
}
async function resetToken(options) {
  const request$12 = options.request || request.request;
  const auth2 = btoa$1(`${options.clientId}:${options.clientSecret}`);
  const response = await request$12("PATCH /applications/{client_id}/token", {
    headers: {
      authorization: `basic ${auth2}`
    },
    client_id: options.clientId,
    access_token: options.token
  });
  const authentication = {
    clientType: options.clientType,
    clientId: options.clientId,
    clientSecret: options.clientSecret,
    token: response.data.token,
    scopes: response.data.scopes
  };
  if (response.data.expires_at)
    authentication.expiresAt = response.data.expires_at;
  if (options.clientType === "github-app") {
    delete authentication.scopes;
  }
  return _objectSpread2$2(_objectSpread2$2({}, response), {}, {
    authentication
  });
}
async function deleteToken(options) {
  const request$12 = options.request || request.request;
  const auth2 = btoa$1(`${options.clientId}:${options.clientSecret}`);
  return request$12("DELETE /applications/{client_id}/token", {
    headers: {
      authorization: `basic ${auth2}`
    },
    client_id: options.clientId,
    access_token: options.token
  });
}
async function deleteAuthorization(options) {
  const request$12 = options.request || request.request;
  const auth2 = btoa$1(`${options.clientId}:${options.clientSecret}`);
  return request$12("DELETE /applications/{client_id}/grant", {
    headers: {
      authorization: `basic ${auth2}`
    },
    client_id: options.clientId,
    access_token: options.token
  });
}
distNode$1.VERSION = VERSION$7;
var checkToken_1 = distNode$1.checkToken = checkToken;
var createDeviceCode_1 = distNode$1.createDeviceCode = createDeviceCode;
var deleteAuthorization_1 = distNode$1.deleteAuthorization = deleteAuthorization;
var deleteToken_1 = distNode$1.deleteToken = deleteToken;
var exchangeDeviceCode_1 = distNode$1.exchangeDeviceCode = exchangeDeviceCode;
var exchangeWebFlowCode_1 = distNode$1.exchangeWebFlowCode = exchangeWebFlowCode;
distNode$1.getWebFlowAuthorizationUrl = getWebFlowAuthorizationUrl;
var refreshToken_1 = distNode$1.refreshToken = refreshToken;
var resetToken_1 = distNode$1.resetToken = resetToken;
distNode$1.scopeToken = scopeToken;
async function getOAuthAccessToken(state, options) {
  const cachedAuthentication = getCachedAuthentication(state, options.auth);
  if (cachedAuthentication)
    return cachedAuthentication;
  const { data: verification } = await createDeviceCode_1({
    clientType: state.clientType,
    clientId: state.clientId,
    request: options.request || state.request,
    scopes: options.auth.scopes || state.scopes
  });
  await state.onVerification(verification);
  const authentication = await waitForAccessToken(options.request || state.request, state.clientId, state.clientType, verification);
  state.authentication = authentication;
  return authentication;
}
function getCachedAuthentication(state, auth2) {
  if (auth2.refresh === true)
    return false;
  if (!state.authentication)
    return false;
  if (state.clientType === "github-app") {
    return state.authentication;
  }
  const authentication = state.authentication;
  const newScope = ("scopes" in auth2 && auth2.scopes || state.scopes).join(" ");
  const currentScope = authentication.scopes.join(" ");
  return newScope === currentScope ? authentication : false;
}
async function wait(seconds) {
  await new Promise((resolve) => setTimeout(resolve, seconds * 1e3));
}
async function waitForAccessToken(request2, clientId, clientType, verification) {
  try {
    const options = {
      clientId,
      request: request2,
      code: verification.device_code
    };
    const { authentication } = clientType === "oauth-app" ? await exchangeDeviceCode_1(__spreadProps(__spreadValues({}, options), {
      clientType: "oauth-app"
    })) : await exchangeDeviceCode_1(__spreadProps(__spreadValues({}, options), {
      clientType: "github-app"
    }));
    return __spreadValues({
      type: "token",
      tokenType: "oauth"
    }, authentication);
  } catch (error) {
    if (!error.response)
      throw error;
    const errorType = error.response.data.error;
    if (errorType === "authorization_pending") {
      await wait(verification.interval);
      return waitForAccessToken(request2, clientId, clientType, verification);
    }
    if (errorType === "slow_down") {
      await wait(verification.interval + 5);
      return waitForAccessToken(request2, clientId, clientType, verification);
    }
    throw error;
  }
}
async function auth$4(state, authOptions) {
  return getOAuthAccessToken(state, {
    auth: authOptions
  });
}
async function hook$4(state, request2, route, parameters) {
  let endpoint2 = request2.endpoint.merge(route, parameters);
  if (/\/login\/(oauth\/access_token|device\/code)$/.test(endpoint2.url)) {
    return request2(endpoint2);
  }
  const { token: token2 } = await getOAuthAccessToken(state, {
    request: request2,
    auth: { type: "oauth" }
  });
  endpoint2.headers.authorization = `token ${token2}`;
  return request2(endpoint2);
}
const VERSION$6 = "3.1.2";
function createOAuthDeviceAuth(options) {
  const requestWithDefaults = options.request || request$1.defaults({
    headers: {
      "user-agent": `octokit-auth-oauth-device.js/${VERSION$6} ${getUserAgent()}`
    }
  });
  const _a = options, { request: request$1$1 = requestWithDefaults } = _a, otherOptions = __objRest(_a, ["request"]);
  const state = options.clientType === "github-app" ? __spreadProps(__spreadValues({}, otherOptions), {
    clientType: "github-app",
    request: request$1$1
  }) : __spreadProps(__spreadValues({}, otherOptions), {
    clientType: "oauth-app",
    request: request$1$1,
    scopes: options.scopes || []
  });
  if (!options.clientId) {
    throw new Error('[@octokit/auth-oauth-device] "clientId" option must be set (https://github.com/octokit/auth-oauth-device.js#usage)');
  }
  if (!options.onVerification) {
    throw new Error('[@octokit/auth-oauth-device] "onVerification" option must be a function (https://github.com/octokit/auth-oauth-device.js#usage)');
  }
  return Object.assign(auth$4.bind(null, state), {
    hook: hook$4.bind(null, state)
  });
}
const VERSION$5 = "1.3.0";
async function getAuthentication(state) {
  if ("code" in state.strategyOptions) {
    const { authentication } = await exchangeWebFlowCode_1(__spreadProps(__spreadValues({
      clientId: state.clientId,
      clientSecret: state.clientSecret,
      clientType: state.clientType
    }, state.strategyOptions), {
      request: state.request
    }));
    return __spreadValues({
      type: "token",
      tokenType: "oauth"
    }, authentication);
  }
  if ("onVerification" in state.strategyOptions) {
    const deviceAuth = createOAuthDeviceAuth(__spreadProps(__spreadValues({
      clientType: state.clientType,
      clientId: state.clientId
    }, state.strategyOptions), {
      request: state.request
    }));
    const authentication = await deviceAuth({
      type: "oauth"
    });
    return __spreadValues({
      clientSecret: state.clientSecret
    }, authentication);
  }
  if ("token" in state.strategyOptions) {
    return __spreadValues({
      type: "token",
      tokenType: "oauth",
      clientId: state.clientId,
      clientSecret: state.clientSecret,
      clientType: state.clientType
    }, state.strategyOptions);
  }
  throw new Error("[@octokit/auth-oauth-user] Invalid strategy options");
}
async function auth$3(state, options = {}) {
  if (!state.authentication) {
    state.authentication = state.clientType === "oauth-app" ? await getAuthentication(state) : await getAuthentication(state);
  }
  if (state.authentication.invalid) {
    throw new Error("[@octokit/auth-oauth-user] Token is invalid");
  }
  const currentAuthentication = state.authentication;
  if ("expiresAt" in currentAuthentication) {
    if (options.type === "refresh" || new Date(currentAuthentication.expiresAt) < new Date()) {
      const { authentication } = await refreshToken_1({
        clientType: "github-app",
        clientId: state.clientId,
        clientSecret: state.clientSecret,
        refreshToken: currentAuthentication.refreshToken,
        request: state.request
      });
      state.authentication = __spreadValues({
        tokenType: "oauth",
        type: "token"
      }, authentication);
    }
  }
  if (options.type === "refresh") {
    if (state.clientType === "oauth-app") {
      throw new Error("[@octokit/auth-oauth-user] OAuth Apps do not support expiring tokens");
    }
    if (!currentAuthentication.hasOwnProperty("expiresAt")) {
      throw new Error("[@octokit/auth-oauth-user] Refresh token missing");
    }
  }
  if (options.type === "check" || options.type === "reset") {
    const method = options.type === "check" ? checkToken_1 : resetToken_1;
    try {
      const { authentication } = await method({
        clientType: state.clientType,
        clientId: state.clientId,
        clientSecret: state.clientSecret,
        token: state.authentication.token,
        request: state.request
      });
      state.authentication = __spreadValues({
        tokenType: "oauth",
        type: "token"
      }, authentication);
      return state.authentication;
    } catch (error) {
      if (error.status === 404) {
        error.message = "[@octokit/auth-oauth-user] Token is invalid";
        state.authentication.invalid = true;
      }
      throw error;
    }
  }
  if (options.type === "delete" || options.type === "deleteAuthorization") {
    const method = options.type === "delete" ? deleteToken_1 : deleteAuthorization_1;
    try {
      await method({
        clientType: state.clientType,
        clientId: state.clientId,
        clientSecret: state.clientSecret,
        token: state.authentication.token,
        request: state.request
      });
    } catch (error) {
      if (error.status !== 404)
        throw error;
    }
    state.authentication.invalid = true;
    return state.authentication;
  }
  return state.authentication;
}
const ROUTES_REQUIRING_BASIC_AUTH = /\/applications\/[^/]+\/(token|grant)s?/;
function requiresBasicAuth(url) {
  return url && ROUTES_REQUIRING_BASIC_AUTH.test(url);
}
async function hook$3(state, request2, route, parameters = {}) {
  const endpoint2 = request2.endpoint.merge(route, parameters);
  if (/\/login\/(oauth\/access_token|device\/code)$/.test(endpoint2.url)) {
    return request2(endpoint2);
  }
  if (requiresBasicAuth(endpoint2.url)) {
    const credentials = btoaBrowser(`${state.clientId}:${state.clientSecret}`);
    endpoint2.headers.authorization = `basic ${credentials}`;
    return request2(endpoint2);
  }
  const { token: token2 } = state.clientType === "oauth-app" ? await auth$3(__spreadProps(__spreadValues({}, state), { request: request2 })) : await auth$3(__spreadProps(__spreadValues({}, state), { request: request2 }));
  endpoint2.headers.authorization = "token " + token2;
  return request2(endpoint2);
}
function createOAuthUserAuth(_a) {
  var _b = _a, { clientId, clientSecret, clientType = "oauth-app", request: request$1$1 = request$1.defaults({
    headers: {
      "user-agent": `octokit-auth-oauth-app.js/${VERSION$5} ${getUserAgent()}`
    }
  }) } = _b, strategyOptions = __objRest(_b, ["clientId", "clientSecret", "clientType", "request"]);
  const state = Object.assign({
    clientType,
    clientId,
    clientSecret,
    strategyOptions,
    request: request$1$1
  });
  return Object.assign(auth$3.bind(null, state), {
    hook: hook$3.bind(null, state)
  });
}
createOAuthUserAuth.VERSION = VERSION$5;
var distWeb$4 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  createOAuthUserAuth,
  requiresBasicAuth
});
async function auth$2(state, authOptions) {
  if (authOptions.type === "oauth-app") {
    return {
      type: "oauth-app",
      clientId: state.clientId,
      clientSecret: state.clientSecret,
      clientType: state.clientType,
      headers: {
        authorization: `basic ${btoaBrowser(`${state.clientId}:${state.clientSecret}`)}`
      }
    };
  }
  if ("factory" in authOptions) {
    const _a = __spreadValues(__spreadValues({}, authOptions), state), { type } = _a, options = __objRest(_a, ["type"]);
    return authOptions.factory(options);
  }
  const common2 = __spreadValues({
    clientId: state.clientId,
    clientSecret: state.clientSecret,
    request: state.request
  }, authOptions);
  const userAuth = state.clientType === "oauth-app" ? await createOAuthUserAuth(__spreadProps(__spreadValues({}, common2), {
    clientType: state.clientType
  })) : await createOAuthUserAuth(__spreadProps(__spreadValues({}, common2), {
    clientType: state.clientType
  }));
  return userAuth();
}
async function hook$2(state, request2, route, parameters) {
  let endpoint2 = request2.endpoint.merge(route, parameters);
  if (/\/login\/(oauth\/access_token|device\/code)$/.test(endpoint2.url)) {
    return request2(endpoint2);
  }
  if (state.clientType === "github-app" && !requiresBasicAuth(endpoint2.url)) {
    throw new Error(`[@octokit/auth-oauth-app] GitHub Apps cannot use their client ID/secret for basic authentication for endpoints other than "/applications/{client_id}/**". "${endpoint2.method} ${endpoint2.url}" is not supported.`);
  }
  const credentials = btoaBrowser(`${state.clientId}:${state.clientSecret}`);
  endpoint2.headers.authorization = `basic ${credentials}`;
  try {
    return await request2(endpoint2);
  } catch (error) {
    if (error.status !== 401)
      throw error;
    error.message = `[@octokit/auth-oauth-app] "${endpoint2.method} ${endpoint2.url}" does not support clientId/clientSecret basic authentication.`;
    throw error;
  }
}
const VERSION$4 = "4.3.1";
function createOAuthAppAuth(options) {
  const state = Object.assign({
    request: request$1.defaults({
      headers: {
        "user-agent": `octokit-auth-oauth-app.js/${VERSION$4} ${getUserAgent()}`
      }
    }),
    clientType: "oauth-app"
  }, options);
  return Object.assign(auth$2.bind(null, state), {
    hook: hook$2.bind(null, state)
  });
}
var distWeb$3 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  createOAuthAppAuth,
  createOAuthUserAuth
});
function string2ArrayBuffer(str) {
  const buf = new ArrayBuffer(str.length);
  const bufView = new Uint8Array(buf);
  for (let i2 = 0, strLen = str.length; i2 < strLen; i2++) {
    bufView[i2] = str.charCodeAt(i2);
  }
  return buf;
}
function getDERfromPEM(pem) {
  const pemB64 = pem.trim().split("\n").slice(1, -1).join("");
  const decoded = atob(pemB64);
  return string2ArrayBuffer(decoded);
}
function getEncodedMessage(header, payload) {
  return `${base64encodeJSON(header)}.${base64encodeJSON(payload)}`;
}
function base64encode(buffer2) {
  var binary = "";
  var bytes = new Uint8Array(buffer2);
  var len2 = bytes.byteLength;
  for (var i2 = 0; i2 < len2; i2++) {
    binary += String.fromCharCode(bytes[i2]);
  }
  return fromBase64(btoa(binary));
}
function fromBase64(base64) {
  return base64.replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
}
function base64encodeJSON(obj) {
  return fromBase64(btoa(JSON.stringify(obj)));
}
const getToken = async ({ privateKey, payload }) => {
  if (/BEGIN RSA PRIVATE KEY/.test(privateKey)) {
    throw new Error("[universal-github-app-jwt] Private Key is in PKCS#1 format, but only PKCS#8 is supported. See https://github.com/gr2m/universal-github-app-jwt#readme");
  }
  const algorithm = {
    name: "RSASSA-PKCS1-v1_5",
    hash: { name: "SHA-256" }
  };
  const header = { alg: "RS256", typ: "JWT" };
  const privateKeyDER = getDERfromPEM(privateKey);
  const importedKey = await crypto.subtle.importKey("pkcs8", privateKeyDER, algorithm, false, ["sign"]);
  const encodedMessage = getEncodedMessage(header, payload);
  const encodedMessageArrBuf = string2ArrayBuffer(encodedMessage);
  const signatureArrBuf = await crypto.subtle.sign(algorithm.name, importedKey, encodedMessageArrBuf);
  const encodedSignature = base64encode(signatureArrBuf);
  return `${encodedMessage}.${encodedSignature}`;
};
async function githubAppJwt({ id: id2, privateKey, now = Math.floor(Date.now() / 1e3) }) {
  const nowWithSafetyMargin = now - 30;
  const expiration = nowWithSafetyMargin + 60 * 10;
  const payload = {
    iat: nowWithSafetyMargin,
    exp: expiration,
    iss: id2
  };
  const token2 = await getToken({
    privateKey,
    payload
  });
  return {
    appId: id2,
    expiration,
    token: token2
  };
}
var yallist = Yallist$1;
Yallist$1.Node = Node;
Yallist$1.create = Yallist$1;
function Yallist$1(list) {
  var self2 = this;
  if (!(self2 instanceof Yallist$1)) {
    self2 = new Yallist$1();
  }
  self2.tail = null;
  self2.head = null;
  self2.length = 0;
  if (list && typeof list.forEach === "function") {
    list.forEach(function(item) {
      self2.push(item);
    });
  } else if (arguments.length > 0) {
    for (var i2 = 0, l2 = arguments.length; i2 < l2; i2++) {
      self2.push(arguments[i2]);
    }
  }
  return self2;
}
Yallist$1.prototype.removeNode = function(node2) {
  if (node2.list !== this) {
    throw new Error("removing node which does not belong to this list");
  }
  var next2 = node2.next;
  var prev2 = node2.prev;
  if (next2) {
    next2.prev = prev2;
  }
  if (prev2) {
    prev2.next = next2;
  }
  if (node2 === this.head) {
    this.head = next2;
  }
  if (node2 === this.tail) {
    this.tail = prev2;
  }
  node2.list.length--;
  node2.next = null;
  node2.prev = null;
  node2.list = null;
  return next2;
};
Yallist$1.prototype.unshiftNode = function(node2) {
  if (node2 === this.head) {
    return;
  }
  if (node2.list) {
    node2.list.removeNode(node2);
  }
  var head = this.head;
  node2.list = this;
  node2.next = head;
  if (head) {
    head.prev = node2;
  }
  this.head = node2;
  if (!this.tail) {
    this.tail = node2;
  }
  this.length++;
};
Yallist$1.prototype.pushNode = function(node2) {
  if (node2 === this.tail) {
    return;
  }
  if (node2.list) {
    node2.list.removeNode(node2);
  }
  var tail = this.tail;
  node2.list = this;
  node2.prev = tail;
  if (tail) {
    tail.next = node2;
  }
  this.tail = node2;
  if (!this.head) {
    this.head = node2;
  }
  this.length++;
};
Yallist$1.prototype.push = function() {
  for (var i2 = 0, l2 = arguments.length; i2 < l2; i2++) {
    push(this, arguments[i2]);
  }
  return this.length;
};
Yallist$1.prototype.unshift = function() {
  for (var i2 = 0, l2 = arguments.length; i2 < l2; i2++) {
    unshift(this, arguments[i2]);
  }
  return this.length;
};
Yallist$1.prototype.pop = function() {
  if (!this.tail) {
    return void 0;
  }
  var res = this.tail.value;
  this.tail = this.tail.prev;
  if (this.tail) {
    this.tail.next = null;
  } else {
    this.head = null;
  }
  this.length--;
  return res;
};
Yallist$1.prototype.shift = function() {
  if (!this.head) {
    return void 0;
  }
  var res = this.head.value;
  this.head = this.head.next;
  if (this.head) {
    this.head.prev = null;
  } else {
    this.tail = null;
  }
  this.length--;
  return res;
};
Yallist$1.prototype.forEach = function(fn, thisp) {
  thisp = thisp || this;
  for (var walker = this.head, i2 = 0; walker !== null; i2++) {
    fn.call(thisp, walker.value, i2, this);
    walker = walker.next;
  }
};
Yallist$1.prototype.forEachReverse = function(fn, thisp) {
  thisp = thisp || this;
  for (var walker = this.tail, i2 = this.length - 1; walker !== null; i2--) {
    fn.call(thisp, walker.value, i2, this);
    walker = walker.prev;
  }
};
Yallist$1.prototype.get = function(n2) {
  for (var i2 = 0, walker = this.head; walker !== null && i2 < n2; i2++) {
    walker = walker.next;
  }
  if (i2 === n2 && walker !== null) {
    return walker.value;
  }
};
Yallist$1.prototype.getReverse = function(n2) {
  for (var i2 = 0, walker = this.tail; walker !== null && i2 < n2; i2++) {
    walker = walker.prev;
  }
  if (i2 === n2 && walker !== null) {
    return walker.value;
  }
};
Yallist$1.prototype.map = function(fn, thisp) {
  thisp = thisp || this;
  var res = new Yallist$1();
  for (var walker = this.head; walker !== null; ) {
    res.push(fn.call(thisp, walker.value, this));
    walker = walker.next;
  }
  return res;
};
Yallist$1.prototype.mapReverse = function(fn, thisp) {
  thisp = thisp || this;
  var res = new Yallist$1();
  for (var walker = this.tail; walker !== null; ) {
    res.push(fn.call(thisp, walker.value, this));
    walker = walker.prev;
  }
  return res;
};
Yallist$1.prototype.reduce = function(fn, initial) {
  var acc;
  var walker = this.head;
  if (arguments.length > 1) {
    acc = initial;
  } else if (this.head) {
    walker = this.head.next;
    acc = this.head.value;
  } else {
    throw new TypeError("Reduce of empty list with no initial value");
  }
  for (var i2 = 0; walker !== null; i2++) {
    acc = fn(acc, walker.value, i2);
    walker = walker.next;
  }
  return acc;
};
Yallist$1.prototype.reduceReverse = function(fn, initial) {
  var acc;
  var walker = this.tail;
  if (arguments.length > 1) {
    acc = initial;
  } else if (this.tail) {
    walker = this.tail.prev;
    acc = this.tail.value;
  } else {
    throw new TypeError("Reduce of empty list with no initial value");
  }
  for (var i2 = this.length - 1; walker !== null; i2--) {
    acc = fn(acc, walker.value, i2);
    walker = walker.prev;
  }
  return acc;
};
Yallist$1.prototype.toArray = function() {
  var arr = new Array(this.length);
  for (var i2 = 0, walker = this.head; walker !== null; i2++) {
    arr[i2] = walker.value;
    walker = walker.next;
  }
  return arr;
};
Yallist$1.prototype.toArrayReverse = function() {
  var arr = new Array(this.length);
  for (var i2 = 0, walker = this.tail; walker !== null; i2++) {
    arr[i2] = walker.value;
    walker = walker.prev;
  }
  return arr;
};
Yallist$1.prototype.slice = function(from2, to) {
  to = to || this.length;
  if (to < 0) {
    to += this.length;
  }
  from2 = from2 || 0;
  if (from2 < 0) {
    from2 += this.length;
  }
  var ret = new Yallist$1();
  if (to < from2 || to < 0) {
    return ret;
  }
  if (from2 < 0) {
    from2 = 0;
  }
  if (to > this.length) {
    to = this.length;
  }
  for (var i2 = 0, walker = this.head; walker !== null && i2 < from2; i2++) {
    walker = walker.next;
  }
  for (; walker !== null && i2 < to; i2++, walker = walker.next) {
    ret.push(walker.value);
  }
  return ret;
};
Yallist$1.prototype.sliceReverse = function(from2, to) {
  to = to || this.length;
  if (to < 0) {
    to += this.length;
  }
  from2 = from2 || 0;
  if (from2 < 0) {
    from2 += this.length;
  }
  var ret = new Yallist$1();
  if (to < from2 || to < 0) {
    return ret;
  }
  if (from2 < 0) {
    from2 = 0;
  }
  if (to > this.length) {
    to = this.length;
  }
  for (var i2 = this.length, walker = this.tail; walker !== null && i2 > to; i2--) {
    walker = walker.prev;
  }
  for (; walker !== null && i2 > from2; i2--, walker = walker.prev) {
    ret.push(walker.value);
  }
  return ret;
};
Yallist$1.prototype.splice = function(start, deleteCount, ...nodes) {
  if (start > this.length) {
    start = this.length - 1;
  }
  if (start < 0) {
    start = this.length + start;
  }
  for (var i2 = 0, walker = this.head; walker !== null && i2 < start; i2++) {
    walker = walker.next;
  }
  var ret = [];
  for (var i2 = 0; walker && i2 < deleteCount; i2++) {
    ret.push(walker.value);
    walker = this.removeNode(walker);
  }
  if (walker === null) {
    walker = this.tail;
  }
  if (walker !== this.head && walker !== this.tail) {
    walker = walker.prev;
  }
  for (var i2 = 0; i2 < nodes.length; i2++) {
    walker = insert(this, walker, nodes[i2]);
  }
  return ret;
};
Yallist$1.prototype.reverse = function() {
  var head = this.head;
  var tail = this.tail;
  for (var walker = head; walker !== null; walker = walker.prev) {
    var p2 = walker.prev;
    walker.prev = walker.next;
    walker.next = p2;
  }
  this.head = tail;
  this.tail = head;
  return this;
};
function insert(self2, node2, value) {
  var inserted = node2 === self2.head ? new Node(value, null, node2, self2) : new Node(value, node2, node2.next, self2);
  if (inserted.next === null) {
    self2.tail = inserted;
  }
  if (inserted.prev === null) {
    self2.head = inserted;
  }
  self2.length++;
  return inserted;
}
function push(self2, item) {
  self2.tail = new Node(item, self2.tail, null, self2);
  if (!self2.head) {
    self2.head = self2.tail;
  }
  self2.length++;
}
function unshift(self2, item) {
  self2.head = new Node(item, null, self2.head, self2);
  if (!self2.tail) {
    self2.tail = self2.head;
  }
  self2.length++;
}
function Node(value, prev2, next2, list) {
  if (!(this instanceof Node)) {
    return new Node(value, prev2, next2, list);
  }
  this.list = list;
  this.value = value;
  if (prev2) {
    prev2.next = this;
    this.prev = prev2;
  } else {
    this.prev = null;
  }
  if (next2) {
    next2.prev = this;
    this.next = next2;
  } else {
    this.next = null;
  }
}
try {
  require("./iterator.js")(Yallist$1);
} catch (er) {
}
const Yallist = yallist;
const MAX = Symbol("max");
const LENGTH = Symbol("length");
const LENGTH_CALCULATOR = Symbol("lengthCalculator");
const ALLOW_STALE = Symbol("allowStale");
const MAX_AGE = Symbol("maxAge");
const DISPOSE = Symbol("dispose");
const NO_DISPOSE_ON_SET = Symbol("noDisposeOnSet");
const LRU_LIST = Symbol("lruList");
const CACHE = Symbol("cache");
const UPDATE_AGE_ON_GET = Symbol("updateAgeOnGet");
const naiveLength = () => 1;
class LRUCache {
  constructor(options) {
    if (typeof options === "number")
      options = { max: options };
    if (!options)
      options = {};
    if (options.max && (typeof options.max !== "number" || options.max < 0))
      throw new TypeError("max must be a non-negative number");
    this[MAX] = options.max || Infinity;
    const lc2 = options.length || naiveLength;
    this[LENGTH_CALCULATOR] = typeof lc2 !== "function" ? naiveLength : lc2;
    this[ALLOW_STALE] = options.stale || false;
    if (options.maxAge && typeof options.maxAge !== "number")
      throw new TypeError("maxAge must be a number");
    this[MAX_AGE] = options.maxAge || 0;
    this[DISPOSE] = options.dispose;
    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false;
    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false;
    this.reset();
  }
  set max(mL) {
    if (typeof mL !== "number" || mL < 0)
      throw new TypeError("max must be a non-negative number");
    this[MAX] = mL || Infinity;
    trim(this);
  }
  get max() {
    return this[MAX];
  }
  set allowStale(allowStale) {
    this[ALLOW_STALE] = !!allowStale;
  }
  get allowStale() {
    return this[ALLOW_STALE];
  }
  set maxAge(mA) {
    if (typeof mA !== "number")
      throw new TypeError("maxAge must be a non-negative number");
    this[MAX_AGE] = mA;
    trim(this);
  }
  get maxAge() {
    return this[MAX_AGE];
  }
  set lengthCalculator(lC) {
    if (typeof lC !== "function")
      lC = naiveLength;
    if (lC !== this[LENGTH_CALCULATOR]) {
      this[LENGTH_CALCULATOR] = lC;
      this[LENGTH] = 0;
      this[LRU_LIST].forEach((hit) => {
        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key);
        this[LENGTH] += hit.length;
      });
    }
    trim(this);
  }
  get lengthCalculator() {
    return this[LENGTH_CALCULATOR];
  }
  get length() {
    return this[LENGTH];
  }
  get itemCount() {
    return this[LRU_LIST].length;
  }
  rforEach(fn, thisp) {
    thisp = thisp || this;
    for (let walker = this[LRU_LIST].tail; walker !== null; ) {
      const prev2 = walker.prev;
      forEachStep(this, fn, walker, thisp);
      walker = prev2;
    }
  }
  forEach(fn, thisp) {
    thisp = thisp || this;
    for (let walker = this[LRU_LIST].head; walker !== null; ) {
      const next2 = walker.next;
      forEachStep(this, fn, walker, thisp);
      walker = next2;
    }
  }
  keys() {
    return this[LRU_LIST].toArray().map((k2) => k2.key);
  }
  values() {
    return this[LRU_LIST].toArray().map((k2) => k2.value);
  }
  reset() {
    if (this[DISPOSE] && this[LRU_LIST] && this[LRU_LIST].length) {
      this[LRU_LIST].forEach((hit) => this[DISPOSE](hit.key, hit.value));
    }
    this[CACHE] = /* @__PURE__ */ new Map();
    this[LRU_LIST] = new Yallist();
    this[LENGTH] = 0;
  }
  dump() {
    return this[LRU_LIST].map((hit) => isStale(this, hit) ? false : {
      k: hit.key,
      v: hit.value,
      e: hit.now + (hit.maxAge || 0)
    }).toArray().filter((h2) => h2);
  }
  dumpLru() {
    return this[LRU_LIST];
  }
  set(key, value, maxAge) {
    maxAge = maxAge || this[MAX_AGE];
    if (maxAge && typeof maxAge !== "number")
      throw new TypeError("maxAge must be a number");
    const now = maxAge ? Date.now() : 0;
    const len2 = this[LENGTH_CALCULATOR](value, key);
    if (this[CACHE].has(key)) {
      if (len2 > this[MAX]) {
        del(this, this[CACHE].get(key));
        return false;
      }
      const node2 = this[CACHE].get(key);
      const item = node2.value;
      if (this[DISPOSE]) {
        if (!this[NO_DISPOSE_ON_SET])
          this[DISPOSE](key, item.value);
      }
      item.now = now;
      item.maxAge = maxAge;
      item.value = value;
      this[LENGTH] += len2 - item.length;
      item.length = len2;
      this.get(key);
      trim(this);
      return true;
    }
    const hit = new Entry(key, value, len2, now, maxAge);
    if (hit.length > this[MAX]) {
      if (this[DISPOSE])
        this[DISPOSE](key, value);
      return false;
    }
    this[LENGTH] += hit.length;
    this[LRU_LIST].unshift(hit);
    this[CACHE].set(key, this[LRU_LIST].head);
    trim(this);
    return true;
  }
  has(key) {
    if (!this[CACHE].has(key))
      return false;
    const hit = this[CACHE].get(key).value;
    return !isStale(this, hit);
  }
  get(key) {
    return get$1(this, key, true);
  }
  peek(key) {
    return get$1(this, key, false);
  }
  pop() {
    const node2 = this[LRU_LIST].tail;
    if (!node2)
      return null;
    del(this, node2);
    return node2.value;
  }
  del(key) {
    del(this, this[CACHE].get(key));
  }
  load(arr) {
    this.reset();
    const now = Date.now();
    for (let l2 = arr.length - 1; l2 >= 0; l2--) {
      const hit = arr[l2];
      const expiresAt = hit.e || 0;
      if (expiresAt === 0)
        this.set(hit.k, hit.v);
      else {
        const maxAge = expiresAt - now;
        if (maxAge > 0) {
          this.set(hit.k, hit.v, maxAge);
        }
      }
    }
  }
  prune() {
    this[CACHE].forEach((value, key) => get$1(this, key, false));
  }
}
const get$1 = (self2, key, doUse) => {
  const node2 = self2[CACHE].get(key);
  if (node2) {
    const hit = node2.value;
    if (isStale(self2, hit)) {
      del(self2, node2);
      if (!self2[ALLOW_STALE])
        return void 0;
    } else {
      if (doUse) {
        if (self2[UPDATE_AGE_ON_GET])
          node2.value.now = Date.now();
        self2[LRU_LIST].unshiftNode(node2);
      }
    }
    return hit.value;
  }
};
const isStale = (self2, hit) => {
  if (!hit || !hit.maxAge && !self2[MAX_AGE])
    return false;
  const diff = Date.now() - hit.now;
  return hit.maxAge ? diff > hit.maxAge : self2[MAX_AGE] && diff > self2[MAX_AGE];
};
const trim = (self2) => {
  if (self2[LENGTH] > self2[MAX]) {
    for (let walker = self2[LRU_LIST].tail; self2[LENGTH] > self2[MAX] && walker !== null; ) {
      const prev2 = walker.prev;
      del(self2, walker);
      walker = prev2;
    }
  }
};
const del = (self2, node2) => {
  if (node2) {
    const hit = node2.value;
    if (self2[DISPOSE])
      self2[DISPOSE](hit.key, hit.value);
    self2[LENGTH] -= hit.length;
    self2[CACHE].delete(hit.key);
    self2[LRU_LIST].removeNode(node2);
  }
};
class Entry {
  constructor(key, value, length2, now, maxAge) {
    this.key = key;
    this.value = value;
    this.length = length2;
    this.now = now;
    this.maxAge = maxAge || 0;
  }
}
const forEachStep = (self2, fn, node2, thisp) => {
  let hit = node2.value;
  if (isStale(self2, hit)) {
    del(self2, node2);
    if (!self2[ALLOW_STALE])
      hit = void 0;
  }
  if (hit)
    fn.call(thisp, hit.value, hit.key, self2);
};
var lruCache = LRUCache;
async function getAppAuthentication({ appId, privateKey, timeDifference }) {
  try {
    const appAuthentication = await githubAppJwt({
      id: +appId,
      privateKey,
      now: timeDifference && Math.floor(Date.now() / 1e3) + timeDifference
    });
    return {
      type: "app",
      token: appAuthentication.token,
      appId: appAuthentication.appId,
      expiresAt: new Date(appAuthentication.expiration * 1e3).toISOString()
    };
  } catch (error) {
    if (privateKey === "-----BEGIN RSA PRIVATE KEY-----") {
      throw new Error("The 'privateKey` option contains only the first line '-----BEGIN RSA PRIVATE KEY-----'. If you are setting it using a `.env` file, make sure it is set on a single line with newlines replaced by '\n'");
    } else {
      throw error;
    }
  }
}
function getCache() {
  return new lruCache({
    max: 15e3,
    maxAge: 1e3 * 60 * 59
  });
}
async function get(cache, options) {
  const cacheKey = optionsToCacheKey(options);
  const result = await cache.get(cacheKey);
  if (!result) {
    return;
  }
  const [token2, createdAt, expiresAt, repositorySelection, permissionsString, singleFileName] = result.split("|");
  const permissions = options.permissions || permissionsString.split(/,/).reduce((permissions2, string) => {
    if (/!$/.test(string)) {
      permissions2[string.slice(0, -1)] = "write";
    } else {
      permissions2[string] = "read";
    }
    return permissions2;
  }, {});
  return {
    token: token2,
    createdAt,
    expiresAt,
    permissions,
    repositoryIds: options.repositoryIds,
    repositoryNames: options.repositoryNames,
    singleFileName,
    repositorySelection
  };
}
async function set(cache, options, data) {
  const key = optionsToCacheKey(options);
  const permissionsString = options.permissions ? "" : Object.keys(data.permissions).map((name) => `${name}${data.permissions[name] === "write" ? "!" : ""}`).join(",");
  const value = [
    data.token,
    data.createdAt,
    data.expiresAt,
    data.repositorySelection,
    permissionsString,
    data.singleFileName
  ].join("|");
  await cache.set(key, value);
}
function optionsToCacheKey({ installationId, permissions = {}, repositoryIds = [], repositoryNames = [] }) {
  const permissionsString = Object.keys(permissions).sort().map((name) => permissions[name] === "read" ? name : `${name}!`).join(",");
  const repositoryIdsString = repositoryIds.sort().join(",");
  const repositoryNamesString = repositoryNames.join(",");
  return [
    installationId,
    repositoryIdsString,
    repositoryNamesString,
    permissionsString
  ].filter(Boolean).join("|");
}
function toTokenAuthentication({ installationId, token: token2, createdAt, expiresAt, repositorySelection, permissions, repositoryIds, repositoryNames, singleFileName }) {
  return Object.assign({
    type: "token",
    tokenType: "installation",
    token: token2,
    installationId,
    permissions,
    createdAt,
    expiresAt,
    repositorySelection
  }, repositoryIds ? { repositoryIds } : null, repositoryNames ? { repositoryNames } : null, singleFileName ? { singleFileName } : null);
}
async function getInstallationAuthentication(state, options, customRequest) {
  const installationId = Number(options.installationId || state.installationId);
  if (!installationId) {
    throw new Error("[@octokit/auth-app] installationId option is required for installation authentication.");
  }
  if (options.factory) {
    const _a = __spreadValues(__spreadValues({}, state), options), { type, factory, oauthApp: oauthApp2 } = _a, factoryAuthOptions = __objRest(_a, ["type", "factory", "oauthApp"]);
    return factory(factoryAuthOptions);
  }
  const optionsWithInstallationTokenFromState = Object.assign({ installationId }, options);
  if (!options.refresh) {
    const result = await get(state.cache, optionsWithInstallationTokenFromState);
    if (result) {
      const { token: token3, createdAt: createdAt2, expiresAt: expiresAt2, permissions: permissions2, repositoryIds: repositoryIds2, repositoryNames: repositoryNames2, singleFileName: singleFileName2, repositorySelection: repositorySelection2 } = result;
      return toTokenAuthentication({
        installationId,
        token: token3,
        createdAt: createdAt2,
        expiresAt: expiresAt2,
        permissions: permissions2,
        repositorySelection: repositorySelection2,
        repositoryIds: repositoryIds2,
        repositoryNames: repositoryNames2,
        singleFileName: singleFileName2
      });
    }
  }
  const appAuthentication = await getAppAuthentication(state);
  const request2 = customRequest || state.request;
  const { data: { token: token2, expires_at: expiresAt, repositories, permissions: permissionsOptional, repository_selection: repositorySelectionOptional, single_file: singleFileName } } = await request2("POST /app/installations/{installation_id}/access_tokens", {
    installation_id: installationId,
    repository_ids: options.repositoryIds,
    repositories: options.repositoryNames,
    permissions: options.permissions,
    mediaType: {
      previews: ["machine-man"]
    },
    headers: {
      authorization: `bearer ${appAuthentication.token}`
    }
  });
  const permissions = permissionsOptional || {};
  const repositorySelection = repositorySelectionOptional || "all";
  const repositoryIds = repositories ? repositories.map((r2) => r2.id) : void 0;
  const repositoryNames = repositories ? repositories.map((repo) => repo.name) : void 0;
  const createdAt = new Date().toISOString();
  await set(state.cache, optionsWithInstallationTokenFromState, {
    token: token2,
    createdAt,
    expiresAt,
    repositorySelection,
    permissions,
    repositoryIds,
    repositoryNames,
    singleFileName
  });
  return toTokenAuthentication({
    installationId,
    token: token2,
    createdAt,
    expiresAt,
    repositorySelection,
    permissions,
    repositoryIds,
    repositoryNames,
    singleFileName
  });
}
async function auth$1(state, authOptions) {
  switch (authOptions.type) {
    case "app":
      return getAppAuthentication(state);
    case "oauth":
      state.log.warn(new Deprecation(`[@octokit/auth-app] {type: "oauth"} is deprecated. Use {type: "oauth-app"} instead`));
    case "oauth-app":
      return state.oauthApp({ type: "oauth-app" });
    case "installation":
      return getInstallationAuthentication(state, __spreadProps(__spreadValues({}, authOptions), {
        type: "installation"
      }));
    case "oauth-user":
      return state.oauthApp(authOptions);
    default:
      throw new Error(`Invalid auth type: ${authOptions.type}`);
  }
}
const PATHS = [
  "/app",
  "/app/hook/config",
  "/app/hook/deliveries",
  "/app/hook/deliveries/{delivery_id}",
  "/app/hook/deliveries/{delivery_id}/attempts",
  "/app/installations",
  "/app/installations/{installation_id}",
  "/app/installations/{installation_id}/access_tokens",
  "/app/installations/{installation_id}/suspended",
  "/marketplace_listing/accounts/{account_id}",
  "/marketplace_listing/plan",
  "/marketplace_listing/plans",
  "/marketplace_listing/plans/{plan_id}/accounts",
  "/marketplace_listing/stubbed/accounts/{account_id}",
  "/marketplace_listing/stubbed/plan",
  "/marketplace_listing/stubbed/plans",
  "/marketplace_listing/stubbed/plans/{plan_id}/accounts",
  "/orgs/{org}/installation",
  "/repos/{owner}/{repo}/installation",
  "/users/{username}/installation"
];
function routeMatcher(paths) {
  const regexes = paths.map((p2) => p2.split("/").map((c2) => c2.startsWith("{") ? "(?:.+?)" : c2).join("/"));
  const regex2 = `^(?:${regexes.map((r2) => `(?:${r2})`).join("|")})[^/]*$`;
  return new RegExp(regex2, "i");
}
const REGEX = routeMatcher(PATHS);
function requiresAppAuth(url) {
  return !!url && REGEX.test(url);
}
const FIVE_SECONDS_IN_MS = 5 * 1e3;
function isNotTimeSkewError(error) {
  return !(error.message.match(/'Expiration time' claim \('exp'\) must be a numeric value representing the future time at which the assertion expires/) || error.message.match(/'Issued at' claim \('iat'\) must be an Integer representing the time that the assertion was issued/));
}
async function hook$1(state, request2, route, parameters) {
  const endpoint2 = request2.endpoint.merge(route, parameters);
  const url = endpoint2.url;
  if (/\/login\/oauth\/access_token$/.test(url)) {
    return request2(endpoint2);
  }
  if (requiresAppAuth(url.replace(request2.endpoint.DEFAULTS.baseUrl, ""))) {
    const { token: token3 } = await getAppAuthentication(state);
    endpoint2.headers.authorization = `bearer ${token3}`;
    let response;
    try {
      response = await request2(endpoint2);
    } catch (error) {
      if (isNotTimeSkewError(error)) {
        throw error;
      }
      if (typeof error.response.headers.date === "undefined") {
        throw error;
      }
      const diff = Math.floor((Date.parse(error.response.headers.date) - Date.parse(new Date().toString())) / 1e3);
      state.log.warn(error.message);
      state.log.warn(`[@octokit/auth-app] GitHub API time and system time are different by ${diff} seconds. Retrying request with the difference accounted for.`);
      const { token: token4 } = await getAppAuthentication(__spreadProps(__spreadValues({}, state), {
        timeDifference: diff
      }));
      endpoint2.headers.authorization = `bearer ${token4}`;
      return request2(endpoint2);
    }
    return response;
  }
  if (requiresBasicAuth(url)) {
    const authentication = await state.oauthApp({ type: "oauth-app" });
    endpoint2.headers.authorization = authentication.headers.authorization;
    return request2(endpoint2);
  }
  const { token: token2, createdAt } = await getInstallationAuthentication(state, {}, request2);
  endpoint2.headers.authorization = `token ${token2}`;
  return sendRequestWithRetries(state, request2, endpoint2, createdAt);
}
async function sendRequestWithRetries(state, request2, options, createdAt, retries = 0) {
  const timeSinceTokenCreationInMs = +new Date() - +new Date(createdAt);
  try {
    return await request2(options);
  } catch (error) {
    if (error.status !== 401) {
      throw error;
    }
    if (timeSinceTokenCreationInMs >= FIVE_SECONDS_IN_MS) {
      if (retries > 0) {
        error.message = `After ${retries} retries within ${timeSinceTokenCreationInMs / 1e3}s of creating the installation access token, the response remains 401. At this point, the cause may be an authentication problem or a system outage. Please check https://www.githubstatus.com for status information`;
      }
      throw error;
    }
    ++retries;
    const awaitTime = retries * 1e3;
    state.log.warn(`[@octokit/auth-app] Retrying after 401 response to account for token replication delay (retry: ${retries}, wait: ${awaitTime / 1e3}s)`);
    await new Promise((resolve) => setTimeout(resolve, awaitTime));
    return sendRequestWithRetries(state, request2, options, createdAt, retries);
  }
}
const VERSION$3 = "3.6.1";
function createAppAuth(options) {
  if (!options.appId) {
    throw new Error("[@octokit/auth-app] appId option is required");
  }
  if (!options.privateKey) {
    throw new Error("[@octokit/auth-app] privateKey option is required");
  }
  if ("installationId" in options && !options.installationId) {
    throw new Error("[@octokit/auth-app] installationId is set to a falsy value");
  }
  const log = Object.assign({
    warn: console.warn.bind(console)
  }, options.log);
  const request$1$1 = options.request || request$1.defaults({
    headers: {
      "user-agent": `octokit-auth-app.js/${VERSION$3} ${getUserAgent()}`
    }
  });
  const state = Object.assign({
    request: request$1$1,
    cache: getCache()
  }, options, options.installationId ? { installationId: Number(options.installationId) } : {}, {
    log,
    oauthApp: createOAuthAppAuth({
      clientType: "github-app",
      clientId: options.clientId || "",
      clientSecret: options.clientSecret || "",
      request: request$1$1
    })
  });
  return Object.assign(auth$1.bind(null, state), {
    hook: hook$1.bind(null, state)
  });
}
var distWeb$2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  createAppAuth,
  createOAuthUserAuth
});
var require$$1 = /* @__PURE__ */ getAugmentedNamespace(distWeb$2);
var distNode = {};
var require$$0$2 = /* @__PURE__ */ getAugmentedNamespace(distWeb$3);
var require$$2 = /* @__PURE__ */ getAugmentedNamespace(distWeb$a);
var require$$3$1 = /* @__PURE__ */ getAugmentedNamespace(distWeb$4);
async function auth(reason) {
  return {
    type: "unauthenticated",
    reason
  };
}
function isRateLimitError(error) {
  if (error.status !== 403) {
    return false;
  }
  if (!error.response) {
    return false;
  }
  return error.response.headers["x-ratelimit-remaining"] === "0";
}
const REGEX_ABUSE_LIMIT_MESSAGE = /\babuse\b/i;
function isAbuseLimitError(error) {
  if (error.status !== 403) {
    return false;
  }
  return REGEX_ABUSE_LIMIT_MESSAGE.test(error.message);
}
async function hook(reason, request2, route, parameters) {
  const endpoint2 = request2.endpoint.merge(route, parameters);
  return request2(endpoint2).catch((error) => {
    if (error.status === 404) {
      error.message = `Not found. May be due to lack of authentication. Reason: ${reason}`;
      throw error;
    }
    if (isRateLimitError(error)) {
      error.message = `API rate limit exceeded. This maybe caused by the lack of authentication. Reason: ${reason}`;
      throw error;
    }
    if (isAbuseLimitError(error)) {
      error.message = `You have triggered an abuse detection mechanism. This maybe caused by the lack of authentication. Reason: ${reason}`;
      throw error;
    }
    if (error.status === 401) {
      error.message = `Unauthorized. "${endpoint2.method} ${endpoint2.url}" failed most likely due to lack of authentication. Reason: ${reason}`;
      throw error;
    }
    if (error.status >= 400 && error.status < 500) {
      error.message = error.message.replace(/\.?$/, `. May be caused by lack of authentication (${reason}).`);
    }
    throw error;
  });
}
const createUnauthenticatedAuth = function createUnauthenticatedAuth2(options) {
  if (!options || !options.reason) {
    throw new Error("[@octokit/auth-unauthenticated] No reason passed to createUnauthenticatedAuth");
  }
  return Object.assign(auth.bind(null, options.reason), {
    hook: hook.bind(null, options.reason)
  });
};
var distWeb$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  createUnauthenticatedAuth
});
var require$$3 = /* @__PURE__ */ getAugmentedNamespace(distWeb$1);
/*! fromentries. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
var fromentries = function fromEntries2(iterable) {
  return [...iterable].reduce((obj, [key, val]) => {
    obj[key] = val;
    return obj;
  }, {});
};
Object.defineProperty(distNode, "__esModule", { value: true });
function _interopDefault(ex) {
  return ex && typeof ex === "object" && "default" in ex ? ex["default"] : ex;
}
var OAuthAppAuth = require$$0$2;
var core$1 = require$$0$4;
var universalUserAgent = require$$2;
var authOauthUser = require$$3$1;
var OAuthMethods = distNode$1;
var authUnauthenticated$1 = require$$3;
var fromEntries = _interopDefault(fromentries);
function ownKeys$1(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2$1(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? arguments[i2] : {};
    if (i2 % 2) {
      ownKeys$1(Object(source), true).forEach(function(key) {
        _defineProperty$1(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys$1(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty$1(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
const VERSION$2 = "3.6.3";
function addEventHandler(state, eventName, eventHandler) {
  if (Array.isArray(eventName)) {
    for (const singleEventName of eventName) {
      addEventHandler(state, singleEventName, eventHandler);
    }
    return;
  }
  if (!state.eventHandlers[eventName]) {
    state.eventHandlers[eventName] = [];
  }
  state.eventHandlers[eventName].push(eventHandler);
}
const OAuthAppOctokit = core$1.Octokit.defaults({
  userAgent: `octokit-oauth-app.js/${VERSION$2} ${universalUserAgent.getUserAgent()}`
});
async function emitEvent(state, context) {
  const {
    name,
    action
  } = context;
  if (state.eventHandlers[`${name}.${action}`]) {
    for (const eventHandler of state.eventHandlers[`${name}.${action}`]) {
      await eventHandler(context);
    }
  }
  if (state.eventHandlers[name]) {
    for (const eventHandler of state.eventHandlers[name]) {
      await eventHandler(context);
    }
  }
}
async function getUserOctokitWithState(state, options) {
  return state.octokit.auth(_objectSpread2$1(_objectSpread2$1({
    type: "oauth-user"
  }, options), {}, {
    async factory(options2) {
      const octokit2 = new state.Octokit({
        authStrategy: authOauthUser.createOAuthUserAuth,
        auth: options2
      });
      const authentication = await octokit2.auth({
        type: "get"
      });
      await emitEvent(state, {
        name: "token",
        action: "created",
        token: authentication.token,
        scopes: authentication.scopes,
        authentication,
        octokit: octokit2
      });
      return octokit2;
    }
  }));
}
function getWebFlowAuthorizationUrlWithState(state, options) {
  const optionsWithDefaults = _objectSpread2$1(_objectSpread2$1({
    clientId: state.clientId,
    request: state.octokit.request
  }, options), {}, {
    allowSignup: options.allowSignup || state.allowSignup,
    scopes: options.scopes || state.defaultScopes
  });
  return OAuthMethods.getWebFlowAuthorizationUrl(_objectSpread2$1({
    clientType: state.clientType
  }, optionsWithDefaults));
}
async function createTokenWithState(state, options) {
  const authentication = await state.octokit.auth(_objectSpread2$1({
    type: "oauth-user"
  }, options));
  await emitEvent(state, {
    name: "token",
    action: "created",
    token: authentication.token,
    scopes: authentication.scopes,
    authentication,
    octokit: new state.Octokit({
      authStrategy: OAuthAppAuth.createOAuthUserAuth,
      auth: {
        clientType: state.clientType,
        clientId: state.clientId,
        clientSecret: state.clientSecret,
        token: authentication.token,
        scopes: authentication.scopes,
        refreshToken: authentication.refreshToken,
        expiresAt: authentication.expiresAt,
        refreshTokenExpiresAt: authentication.refreshTokenExpiresAt
      }
    })
  });
  return {
    authentication
  };
}
async function checkTokenWithState(state, options) {
  const result = await OAuthMethods.checkToken(_objectSpread2$1({
    clientType: state.clientType,
    clientId: state.clientId,
    clientSecret: state.clientSecret,
    request: state.octokit.request
  }, options));
  Object.assign(result.authentication, {
    type: "token",
    tokenType: "oauth"
  });
  return result;
}
async function resetTokenWithState(state, options) {
  const optionsWithDefaults = _objectSpread2$1({
    clientId: state.clientId,
    clientSecret: state.clientSecret,
    request: state.octokit.request
  }, options);
  if (state.clientType === "oauth-app") {
    const response2 = await OAuthMethods.resetToken(_objectSpread2$1({
      clientType: "oauth-app"
    }, optionsWithDefaults));
    const authentication2 = Object.assign(response2.authentication, {
      type: "token",
      tokenType: "oauth"
    });
    await emitEvent(state, {
      name: "token",
      action: "reset",
      token: response2.authentication.token,
      scopes: response2.authentication.scopes || void 0,
      authentication: authentication2,
      octokit: new state.Octokit({
        authStrategy: authOauthUser.createOAuthUserAuth,
        auth: {
          clientType: state.clientType,
          clientId: state.clientId,
          clientSecret: state.clientSecret,
          token: response2.authentication.token,
          scopes: response2.authentication.scopes
        }
      })
    });
    return _objectSpread2$1(_objectSpread2$1({}, response2), {}, {
      authentication: authentication2
    });
  }
  const response = await OAuthMethods.resetToken(_objectSpread2$1({
    clientType: "github-app"
  }, optionsWithDefaults));
  const authentication = Object.assign(response.authentication, {
    type: "token",
    tokenType: "oauth"
  });
  await emitEvent(state, {
    name: "token",
    action: "reset",
    token: response.authentication.token,
    authentication,
    octokit: new state.Octokit({
      authStrategy: authOauthUser.createOAuthUserAuth,
      auth: {
        clientType: state.clientType,
        clientId: state.clientId,
        clientSecret: state.clientSecret,
        token: response.authentication.token
      }
    })
  });
  return _objectSpread2$1(_objectSpread2$1({}, response), {}, {
    authentication
  });
}
async function refreshTokenWithState(state, options) {
  if (state.clientType === "oauth-app") {
    throw new Error("[@octokit/oauth-app] app.refreshToken() is not supported for OAuth Apps");
  }
  const response = await OAuthMethods.refreshToken({
    clientType: "github-app",
    clientId: state.clientId,
    clientSecret: state.clientSecret,
    request: state.octokit.request,
    refreshToken: options.refreshToken
  });
  const authentication = Object.assign(response.authentication, {
    type: "token",
    tokenType: "oauth"
  });
  await emitEvent(state, {
    name: "token",
    action: "refreshed",
    token: response.authentication.token,
    authentication,
    octokit: new state.Octokit({
      authStrategy: authOauthUser.createOAuthUserAuth,
      auth: {
        clientType: state.clientType,
        clientId: state.clientId,
        clientSecret: state.clientSecret,
        token: response.authentication.token
      }
    })
  });
  return _objectSpread2$1(_objectSpread2$1({}, response), {}, {
    authentication
  });
}
async function scopeTokenWithState(state, options) {
  if (state.clientType === "oauth-app") {
    throw new Error("[@octokit/oauth-app] app.scopeToken() is not supported for OAuth Apps");
  }
  const response = await OAuthMethods.scopeToken(_objectSpread2$1({
    clientType: "github-app",
    clientId: state.clientId,
    clientSecret: state.clientSecret,
    request: state.octokit.request
  }, options));
  const authentication = Object.assign(response.authentication, {
    type: "token",
    tokenType: "oauth"
  });
  await emitEvent(state, {
    name: "token",
    action: "scoped",
    token: response.authentication.token,
    authentication,
    octokit: new state.Octokit({
      authStrategy: authOauthUser.createOAuthUserAuth,
      auth: {
        clientType: state.clientType,
        clientId: state.clientId,
        clientSecret: state.clientSecret,
        token: response.authentication.token
      }
    })
  });
  return _objectSpread2$1(_objectSpread2$1({}, response), {}, {
    authentication
  });
}
async function deleteTokenWithState(state, options) {
  const optionsWithDefaults = _objectSpread2$1({
    clientId: state.clientId,
    clientSecret: state.clientSecret,
    request: state.octokit.request
  }, options);
  const response = state.clientType === "oauth-app" ? await OAuthMethods.deleteToken(_objectSpread2$1({
    clientType: "oauth-app"
  }, optionsWithDefaults)) : await OAuthMethods.deleteToken(_objectSpread2$1({
    clientType: "github-app"
  }, optionsWithDefaults));
  await emitEvent(state, {
    name: "token",
    action: "deleted",
    token: options.token,
    octokit: new state.Octokit({
      authStrategy: authUnauthenticated$1.createUnauthenticatedAuth,
      auth: {
        reason: `Handling "token.deleted" event. The access for the token has been revoked.`
      }
    })
  });
  return response;
}
async function deleteAuthorizationWithState(state, options) {
  const optionsWithDefaults = _objectSpread2$1({
    clientId: state.clientId,
    clientSecret: state.clientSecret,
    request: state.octokit.request
  }, options);
  const response = state.clientType === "oauth-app" ? await OAuthMethods.deleteAuthorization(_objectSpread2$1({
    clientType: "oauth-app"
  }, optionsWithDefaults)) : await OAuthMethods.deleteAuthorization(_objectSpread2$1({
    clientType: "github-app"
  }, optionsWithDefaults));
  await emitEvent(state, {
    name: "token",
    action: "deleted",
    token: options.token,
    octokit: new state.Octokit({
      authStrategy: authUnauthenticated$1.createUnauthenticatedAuth,
      auth: {
        reason: `Handling "token.deleted" event. The access for the token has been revoked.`
      }
    })
  });
  await emitEvent(state, {
    name: "authorization",
    action: "deleted",
    token: options.token,
    octokit: new state.Octokit({
      authStrategy: authUnauthenticated$1.createUnauthenticatedAuth,
      auth: {
        reason: `Handling "authorization.deleted" event. The access for the app has been revoked.`
      }
    })
  });
  return response;
}
function parseRequest(request2) {
  const {
    method,
    url,
    headers
  } = request2;
  async function text() {
    const text2 = await new Promise((resolve, reject) => {
      let bodyChunks = [];
      request2.on("error", reject).on("data", (chunk) => bodyChunks.push(chunk)).on("end", () => resolve(Buffer.concat(bodyChunks).toString()));
    });
    return text2;
  }
  return {
    method,
    url,
    headers,
    text
  };
}
function sendResponse(octokitResponse, response) {
  response.writeHead(octokitResponse.status, octokitResponse.headers);
  response.end(octokitResponse.text);
}
function onUnhandledRequestDefault$2(request2) {
  return {
    status: 404,
    headers: {
      "content-type": "application/json"
    },
    text: JSON.stringify({
      error: `Unknown route: ${request2.method} ${request2.url}`
    })
  };
}
async function handleRequest(app, {
  pathPrefix = "/api/github/oauth"
}, request2) {
  if (request2.method === "OPTIONS") {
    return {
      status: 200,
      headers: {
        "access-control-allow-origin": "*",
        "access-control-allow-methods": "*",
        "access-control-allow-headers": "Content-Type, User-Agent, Authorization"
      }
    };
  }
  const {
    pathname
  } = new URL(request2.url, "http://localhost");
  const route = [request2.method, pathname].join(" ");
  const routes = {
    getLogin: `GET ${pathPrefix}/login`,
    getCallback: `GET ${pathPrefix}/callback`,
    createToken: `POST ${pathPrefix}/token`,
    getToken: `GET ${pathPrefix}/token`,
    patchToken: `PATCH ${pathPrefix}/token`,
    patchRefreshToken: `PATCH ${pathPrefix}/refresh-token`,
    scopeToken: `POST ${pathPrefix}/token/scoped`,
    deleteToken: `DELETE ${pathPrefix}/token`,
    deleteGrant: `DELETE ${pathPrefix}/grant`
  };
  if (!Object.values(routes).includes(route)) {
    return null;
  }
  let json;
  try {
    const text = await request2.text();
    json = text ? JSON.parse(text) : {};
  } catch (error) {
    return {
      status: 400,
      headers: {
        "content-type": "application/json",
        "access-control-allow-origin": "*"
      },
      text: JSON.stringify({
        error: "[@octokit/oauth-app] request error"
      })
    };
  }
  const {
    searchParams
  } = new URL(request2.url, "http://localhost");
  const query = fromEntries(searchParams);
  const headers = request2.headers;
  try {
    var _headers$authorizatio6;
    if (route === routes.getLogin) {
      const {
        url
      } = app.getWebFlowAuthorizationUrl({
        state: query.state,
        scopes: query.scopes ? query.scopes.split(",") : void 0,
        allowSignup: query.allowSignup !== "false",
        redirectUrl: query.redirectUrl
      });
      return {
        status: 302,
        headers: {
          location: url
        }
      };
    }
    if (route === routes.getCallback) {
      if (query.error) {
        throw new Error(`[@octokit/oauth-app] ${query.error} ${query.error_description}`);
      }
      if (!query.code) {
        throw new Error('[@octokit/oauth-app] "code" parameter is required');
      }
      const {
        authentication: {
          token: token3
        }
      } = await app.createToken({
        code: query.code
      });
      return {
        status: 200,
        headers: {
          "content-type": "text/html"
        },
        text: `<h1>Token created successfull</h1>
    
<p>Your token is: <strong>${token3}</strong>. Copy it now as it cannot be shown again.</p>`
      };
    }
    if (route === routes.createToken) {
      const {
        code: code2,
        redirectUrl
      } = json;
      if (!code2) {
        throw new Error('[@octokit/oauth-app] "code" parameter is required');
      }
      const result = await app.createToken({
        code: code2,
        redirectUrl
      });
      delete result.authentication.clientSecret;
      return {
        status: 201,
        headers: {
          "content-type": "application/json",
          "access-control-allow-origin": "*"
        },
        text: JSON.stringify(result)
      };
    }
    if (route === routes.getToken) {
      var _headers$authorizatio;
      const token3 = (_headers$authorizatio = headers.authorization) === null || _headers$authorizatio === void 0 ? void 0 : _headers$authorizatio.substr("token ".length);
      if (!token3) {
        throw new Error('[@octokit/oauth-app] "Authorization" header is required');
      }
      const result = await app.checkToken({
        token: token3
      });
      delete result.authentication.clientSecret;
      return {
        status: 200,
        headers: {
          "content-type": "application/json",
          "access-control-allow-origin": "*"
        },
        text: JSON.stringify(result)
      };
    }
    if (route === routes.patchToken) {
      var _headers$authorizatio2;
      const token3 = (_headers$authorizatio2 = headers.authorization) === null || _headers$authorizatio2 === void 0 ? void 0 : _headers$authorizatio2.substr("token ".length);
      if (!token3) {
        throw new Error('[@octokit/oauth-app] "Authorization" header is required');
      }
      const result = await app.resetToken({
        token: token3
      });
      delete result.authentication.clientSecret;
      return {
        status: 200,
        headers: {
          "content-type": "application/json",
          "access-control-allow-origin": "*"
        },
        text: JSON.stringify(result)
      };
    }
    if (route === routes.patchRefreshToken) {
      var _headers$authorizatio3;
      const token3 = (_headers$authorizatio3 = headers.authorization) === null || _headers$authorizatio3 === void 0 ? void 0 : _headers$authorizatio3.substr("token ".length);
      if (!token3) {
        throw new Error('[@octokit/oauth-app] "Authorization" header is required');
      }
      const {
        refreshToken: refreshToken2
      } = json;
      if (!refreshToken2) {
        throw new Error("[@octokit/oauth-app] refreshToken must be sent in request body");
      }
      const result = await app.refreshToken({
        refreshToken: refreshToken2
      });
      delete result.authentication.clientSecret;
      return {
        status: 200,
        headers: {
          "content-type": "application/json",
          "access-control-allow-origin": "*"
        },
        text: JSON.stringify(result)
      };
    }
    if (route === routes.scopeToken) {
      var _headers$authorizatio4;
      const token3 = (_headers$authorizatio4 = headers.authorization) === null || _headers$authorizatio4 === void 0 ? void 0 : _headers$authorizatio4.substr("token ".length);
      if (!token3) {
        throw new Error('[@octokit/oauth-app] "Authorization" header is required');
      }
      const result = await app.scopeToken(_objectSpread2$1({
        token: token3
      }, json));
      delete result.authentication.clientSecret;
      return {
        status: 200,
        headers: {
          "content-type": "application/json",
          "access-control-allow-origin": "*"
        },
        text: JSON.stringify(result)
      };
    }
    if (route === routes.deleteToken) {
      var _headers$authorizatio5;
      const token3 = (_headers$authorizatio5 = headers.authorization) === null || _headers$authorizatio5 === void 0 ? void 0 : _headers$authorizatio5.substr("token ".length);
      if (!token3) {
        throw new Error('[@octokit/oauth-app] "Authorization" header is required');
      }
      await app.deleteToken({
        token: token3
      });
      return {
        status: 204,
        headers: {
          "access-control-allow-origin": "*"
        }
      };
    }
    const token2 = (_headers$authorizatio6 = headers.authorization) === null || _headers$authorizatio6 === void 0 ? void 0 : _headers$authorizatio6.substr("token ".length);
    if (!token2) {
      throw new Error('[@octokit/oauth-app] "Authorization" header is required');
    }
    await app.deleteAuthorization({
      token: token2
    });
    return {
      status: 204,
      headers: {
        "access-control-allow-origin": "*"
      }
    };
  } catch (error) {
    return {
      status: 400,
      headers: {
        "content-type": "application/json",
        "access-control-allow-origin": "*"
      },
      text: JSON.stringify({
        error: error.message
      })
    };
  }
}
function onUnhandledRequestDefaultNode(request2, response) {
  const octokitRequest = parseRequest(request2);
  const octokitResponse = onUnhandledRequestDefault$2(octokitRequest);
  sendResponse(octokitResponse, response);
}
function createNodeMiddleware$2(app, {
  pathPrefix,
  onUnhandledRequest = onUnhandledRequestDefaultNode
} = {}) {
  return async function(request2, response, next2) {
    const octokitRequest = parseRequest(request2);
    const octokitResponse = await handleRequest(app, {
      pathPrefix
    }, octokitRequest);
    if (octokitResponse) {
      sendResponse(octokitResponse, response);
    } else if (typeof next2 === "function") {
      next2();
    } else {
      onUnhandledRequest(request2, response);
    }
  };
}
function parseRequest$1(request2) {
  const headers = Object.fromEntries(request2.headers.entries());
  return {
    method: request2.method,
    url: request2.url,
    headers,
    text: () => request2.text()
  };
}
function sendResponse$1(octokitResponse) {
  return new Response(octokitResponse.text, {
    status: octokitResponse.status,
    headers: octokitResponse.headers
  });
}
async function onUnhandledRequestDefaultCloudflare(request2) {
  const octokitRequest = parseRequest$1(request2);
  const octokitResponse = onUnhandledRequestDefault$2(octokitRequest);
  return sendResponse$1(octokitResponse);
}
function createCloudflareHandler(app, {
  pathPrefix,
  onUnhandledRequest = onUnhandledRequestDefaultCloudflare
} = {}) {
  return async function(request2) {
    const octokitRequest = parseRequest$1(request2);
    const octokitResponse = await handleRequest(app, {
      pathPrefix
    }, octokitRequest);
    return octokitResponse ? sendResponse$1(octokitResponse) : await onUnhandledRequest(request2);
  };
}
function parseRequest$2(request2) {
  const {
    method
  } = request2.requestContext.http;
  let url = request2.rawPath;
  const {
    stage
  } = request2.requestContext;
  if (url.startsWith("/" + stage))
    url = url.substring(stage.length + 1);
  if (request2.rawQueryString)
    url += "?" + request2.rawQueryString;
  const headers = request2.headers;
  const text = async () => request2.body || "";
  return {
    method,
    url,
    headers,
    text
  };
}
function sendResponse$2(octokitResponse) {
  return {
    statusCode: octokitResponse.status,
    headers: octokitResponse.headers,
    body: octokitResponse.text
  };
}
async function onUnhandledRequestDefaultAWSAPIGatewayV2(event2) {
  const request2 = parseRequest$2(event2);
  const response = onUnhandledRequestDefault$2(request2);
  return sendResponse$2(response);
}
function createAWSLambdaAPIGatewayV2Handler(app, {
  pathPrefix,
  onUnhandledRequest = onUnhandledRequestDefaultAWSAPIGatewayV2
} = {}) {
  return async function(event2) {
    const request2 = parseRequest$2(event2);
    const response = await handleRequest(app, {
      pathPrefix
    }, request2);
    return response ? sendResponse$2(response) : onUnhandledRequest(event2);
  };
}
class OAuthApp {
  constructor(options) {
    const Octokit2 = options.Octokit || OAuthAppOctokit;
    this.type = options.clientType || "oauth-app";
    const octokit2 = new Octokit2({
      authStrategy: OAuthAppAuth.createOAuthAppAuth,
      auth: {
        clientType: this.type,
        clientId: options.clientId,
        clientSecret: options.clientSecret
      }
    });
    const state = {
      clientType: this.type,
      clientId: options.clientId,
      clientSecret: options.clientSecret,
      defaultScopes: options.defaultScopes || [],
      allowSignup: options.allowSignup,
      baseUrl: options.baseUrl,
      log: options.log,
      Octokit: Octokit2,
      octokit: octokit2,
      eventHandlers: {}
    };
    this.on = addEventHandler.bind(null, state);
    this.octokit = octokit2;
    this.getUserOctokit = getUserOctokitWithState.bind(null, state);
    this.getWebFlowAuthorizationUrl = getWebFlowAuthorizationUrlWithState.bind(null, state);
    this.createToken = createTokenWithState.bind(null, state);
    this.checkToken = checkTokenWithState.bind(null, state);
    this.resetToken = resetTokenWithState.bind(null, state);
    this.refreshToken = refreshTokenWithState.bind(null, state);
    this.scopeToken = scopeTokenWithState.bind(null, state);
    this.deleteToken = deleteTokenWithState.bind(null, state);
    this.deleteAuthorization = deleteAuthorizationWithState.bind(null, state);
  }
  static defaults(defaults) {
    const OAuthAppWithDefaults = class extends this {
      constructor(...args) {
        super(_objectSpread2$1(_objectSpread2$1({}, defaults), args[0]));
      }
    };
    return OAuthAppWithDefaults;
  }
}
OAuthApp.VERSION = VERSION$2;
var OAuthApp_1 = distNode.OAuthApp = OAuthApp;
distNode.createAWSLambdaAPIGatewayV2Handler = createAWSLambdaAPIGatewayV2Handler;
distNode.createCloudflareHandler = createCloudflareHandler;
distNode.createNodeMiddleware = createNodeMiddleware$2;
var indentString$1 = (string, count = 1, options) => {
  options = __spreadValues({
    indent: " ",
    includeEmptyLines: false
  }, options);
  if (typeof string !== "string") {
    throw new TypeError(`Expected \`input\` to be a \`string\`, got \`${typeof string}\``);
  }
  if (typeof count !== "number") {
    throw new TypeError(`Expected \`count\` to be a \`number\`, got \`${typeof count}\``);
  }
  if (typeof options.indent !== "string") {
    throw new TypeError(`Expected \`options.indent\` to be a \`string\`, got \`${typeof options.indent}\``);
  }
  if (count === 0) {
    return string;
  }
  const regex2 = options.includeEmptyLines ? /^/gm : /^(?!\s*$)/gm;
  return string.replace(regex2, options.indent.repeat(count));
};
var __viteBrowserExternal = {};
var __viteBrowserExternal$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  "default": __viteBrowserExternal
});
var require$$0$1 = /* @__PURE__ */ getAugmentedNamespace(__viteBrowserExternal$1);
const os = require$$0$1;
const extractPathRegex = /\s+at.*(?:\(|\s)(.*)\)?/;
const pathRegex = /^(?:(?:(?:node|(?:internal\/[\w/]*|.*node_modules\/(?:babel-polyfill|pirates)\/.*)?\w+)\.js:\d+:\d+)|native)/;
const homeDir = typeof os.homedir === "undefined" ? "" : os.homedir();
var cleanStack$1 = (stack, options) => {
  options = Object.assign({ pretty: false }, options);
  return stack.replace(/\\/g, "/").split("\n").filter((line2) => {
    const pathMatches = line2.match(extractPathRegex);
    if (pathMatches === null || !pathMatches[1]) {
      return true;
    }
    const match2 = pathMatches[1];
    if (match2.includes(".app/Contents/Resources/electron.asar") || match2.includes(".app/Contents/Resources/default_app.asar")) {
      return false;
    }
    return !pathRegex.test(match2);
  }).filter((line2) => line2.trim() !== "").map((line2) => {
    if (options.pretty) {
      return line2.replace(extractPathRegex, (m2, p1) => m2.replace(p1, p1.replace(homeDir, "~")));
    }
    return line2;
  }).join("\n");
};
const indentString = indentString$1;
const cleanStack = cleanStack$1;
const cleanInternalStack = (stack) => stack.replace(/\s+at .*aggregate-error\/index.js:\d+:\d+\)?/g, "");
class AggregateError extends Error {
  constructor(errors) {
    if (!Array.isArray(errors)) {
      throw new TypeError(`Expected input to be an Array, got ${typeof errors}`);
    }
    errors = [...errors].map((error) => {
      if (error instanceof Error) {
        return error;
      }
      if (error !== null && typeof error === "object") {
        return Object.assign(new Error(error.message), error);
      }
      return new Error(error);
    });
    let message = errors.map((error) => {
      return typeof error.stack === "string" ? cleanInternalStack(cleanStack(error.stack)) : String(error);
    }).join("\n");
    message = "\n" + indentString(message, 4);
    super(message);
    this.name = "AggregateError";
    Object.defineProperty(this, "_errors", { value: errors });
  }
  *[Symbol.iterator]() {
    for (const error of this._errors) {
      yield error;
    }
  }
}
var aggregateError = AggregateError;
const enc = new TextEncoder();
async function sign$1(secret, data) {
  const signature = await crypto.subtle.sign("HMAC", await importKey(secret), enc.encode(data));
  return UInt8ArrayToHex(signature);
}
async function verify$1(secret, data, signature) {
  return await crypto.subtle.verify("HMAC", await importKey(secret), hexToUInt8Array(signature), enc.encode(data));
}
function hexToUInt8Array(string) {
  const pairs2 = string.match(/[\dA-F]{2}/gi);
  const integers = pairs2.map(function(s) {
    return parseInt(s, 16);
  });
  return new Uint8Array(integers);
}
function UInt8ArrayToHex(signature) {
  return Array.prototype.map.call(new Uint8Array(signature), (x2) => x2.toString(16).padStart(2, "0")).join("");
}
async function importKey(secret) {
  return crypto.subtle.importKey("raw", enc.encode(secret), {
    name: "HMAC",
    hash: { name: "SHA-256" }
  }, false, ["sign", "verify"]);
}
const createLogger = (logger) => __spreadValues({
  debug: () => {
  },
  info: () => {
  },
  warn: console.warn.bind(console),
  error: console.error.bind(console)
}, logger);
const emitterEventNames = [
  "branch_protection_rule",
  "branch_protection_rule.created",
  "branch_protection_rule.deleted",
  "branch_protection_rule.edited",
  "check_run",
  "check_run.completed",
  "check_run.created",
  "check_run.requested_action",
  "check_run.rerequested",
  "check_suite",
  "check_suite.completed",
  "check_suite.requested",
  "check_suite.rerequested",
  "code_scanning_alert",
  "code_scanning_alert.appeared_in_branch",
  "code_scanning_alert.closed_by_user",
  "code_scanning_alert.created",
  "code_scanning_alert.fixed",
  "code_scanning_alert.reopened",
  "code_scanning_alert.reopened_by_user",
  "commit_comment",
  "commit_comment.created",
  "create",
  "delete",
  "deploy_key",
  "deploy_key.created",
  "deploy_key.deleted",
  "deployment",
  "deployment.created",
  "deployment_status",
  "deployment_status.created",
  "discussion",
  "discussion.answered",
  "discussion.category_changed",
  "discussion.created",
  "discussion.deleted",
  "discussion.edited",
  "discussion.labeled",
  "discussion.locked",
  "discussion.pinned",
  "discussion.transferred",
  "discussion.unanswered",
  "discussion.unlabeled",
  "discussion.unlocked",
  "discussion.unpinned",
  "discussion_comment",
  "discussion_comment.created",
  "discussion_comment.deleted",
  "discussion_comment.edited",
  "fork",
  "github_app_authorization",
  "github_app_authorization.revoked",
  "gollum",
  "installation",
  "installation.created",
  "installation.deleted",
  "installation.new_permissions_accepted",
  "installation.suspend",
  "installation.unsuspend",
  "installation_repositories",
  "installation_repositories.added",
  "installation_repositories.removed",
  "issue_comment",
  "issue_comment.created",
  "issue_comment.deleted",
  "issue_comment.edited",
  "issues",
  "issues.assigned",
  "issues.closed",
  "issues.deleted",
  "issues.demilestoned",
  "issues.edited",
  "issues.labeled",
  "issues.locked",
  "issues.milestoned",
  "issues.opened",
  "issues.pinned",
  "issues.reopened",
  "issues.transferred",
  "issues.unassigned",
  "issues.unlabeled",
  "issues.unlocked",
  "issues.unpinned",
  "label",
  "label.created",
  "label.deleted",
  "label.edited",
  "marketplace_purchase",
  "marketplace_purchase.cancelled",
  "marketplace_purchase.changed",
  "marketplace_purchase.pending_change",
  "marketplace_purchase.pending_change_cancelled",
  "marketplace_purchase.purchased",
  "member",
  "member.added",
  "member.edited",
  "member.removed",
  "membership",
  "membership.added",
  "membership.removed",
  "meta",
  "meta.deleted",
  "milestone",
  "milestone.closed",
  "milestone.created",
  "milestone.deleted",
  "milestone.edited",
  "milestone.opened",
  "org_block",
  "org_block.blocked",
  "org_block.unblocked",
  "organization",
  "organization.deleted",
  "organization.member_added",
  "organization.member_invited",
  "organization.member_removed",
  "organization.renamed",
  "package",
  "package.published",
  "package.updated",
  "page_build",
  "ping",
  "project",
  "project.closed",
  "project.created",
  "project.deleted",
  "project.edited",
  "project.reopened",
  "project_card",
  "project_card.converted",
  "project_card.created",
  "project_card.deleted",
  "project_card.edited",
  "project_card.moved",
  "project_column",
  "project_column.created",
  "project_column.deleted",
  "project_column.edited",
  "project_column.moved",
  "projects_v2_item",
  "projects_v2_item.archived",
  "projects_v2_item.converted",
  "projects_v2_item.created",
  "projects_v2_item.deleted",
  "projects_v2_item.edited",
  "projects_v2_item.reordered",
  "projects_v2_item.restored",
  "public",
  "pull_request",
  "pull_request.assigned",
  "pull_request.auto_merge_disabled",
  "pull_request.auto_merge_enabled",
  "pull_request.closed",
  "pull_request.converted_to_draft",
  "pull_request.edited",
  "pull_request.labeled",
  "pull_request.locked",
  "pull_request.opened",
  "pull_request.ready_for_review",
  "pull_request.reopened",
  "pull_request.review_request_removed",
  "pull_request.review_requested",
  "pull_request.synchronize",
  "pull_request.unassigned",
  "pull_request.unlabeled",
  "pull_request.unlocked",
  "pull_request_review",
  "pull_request_review.dismissed",
  "pull_request_review.edited",
  "pull_request_review.submitted",
  "pull_request_review_comment",
  "pull_request_review_comment.created",
  "pull_request_review_comment.deleted",
  "pull_request_review_comment.edited",
  "pull_request_review_thread",
  "pull_request_review_thread.resolved",
  "pull_request_review_thread.unresolved",
  "push",
  "release",
  "release.created",
  "release.deleted",
  "release.edited",
  "release.prereleased",
  "release.published",
  "release.released",
  "release.unpublished",
  "repository",
  "repository.archived",
  "repository.created",
  "repository.deleted",
  "repository.edited",
  "repository.privatized",
  "repository.publicized",
  "repository.renamed",
  "repository.transferred",
  "repository.unarchived",
  "repository_dispatch",
  "repository_import",
  "repository_vulnerability_alert",
  "repository_vulnerability_alert.create",
  "repository_vulnerability_alert.dismiss",
  "repository_vulnerability_alert.reopen",
  "repository_vulnerability_alert.resolve",
  "secret_scanning_alert",
  "secret_scanning_alert.created",
  "secret_scanning_alert.reopened",
  "secret_scanning_alert.resolved",
  "security_advisory",
  "security_advisory.performed",
  "security_advisory.published",
  "security_advisory.updated",
  "security_advisory.withdrawn",
  "sponsorship",
  "sponsorship.cancelled",
  "sponsorship.created",
  "sponsorship.edited",
  "sponsorship.pending_cancellation",
  "sponsorship.pending_tier_change",
  "sponsorship.tier_changed",
  "star",
  "star.created",
  "star.deleted",
  "status",
  "team",
  "team.added_to_repository",
  "team.created",
  "team.deleted",
  "team.edited",
  "team.removed_from_repository",
  "team_add",
  "watch",
  "watch.started",
  "workflow_dispatch",
  "workflow_job",
  "workflow_job.completed",
  "workflow_job.in_progress",
  "workflow_job.queued",
  "workflow_run",
  "workflow_run.completed",
  "workflow_run.requested"
];
function handleEventHandlers(state, webhookName, handler) {
  if (!state.hooks[webhookName]) {
    state.hooks[webhookName] = [];
  }
  state.hooks[webhookName].push(handler);
}
function receiverOn(state, webhookNameOrNames, handler) {
  if (Array.isArray(webhookNameOrNames)) {
    webhookNameOrNames.forEach((webhookName) => receiverOn(state, webhookName, handler));
    return;
  }
  if (["*", "error"].includes(webhookNameOrNames)) {
    const webhookName = webhookNameOrNames === "*" ? "any" : webhookNameOrNames;
    const message = `Using the "${webhookNameOrNames}" event with the regular Webhooks.on() function is not supported. Please use the Webhooks.on${webhookName.charAt(0).toUpperCase() + webhookName.slice(1)}() method instead`;
    throw new Error(message);
  }
  if (!emitterEventNames.includes(webhookNameOrNames)) {
    state.log.warn(`"${webhookNameOrNames}" is not a known webhook name (https://developer.github.com/v3/activity/events/types/)`);
  }
  handleEventHandlers(state, webhookNameOrNames, handler);
}
function receiverOnAny(state, handler) {
  handleEventHandlers(state, "*", handler);
}
function receiverOnError(state, handler) {
  handleEventHandlers(state, "error", handler);
}
function wrapErrorHandler(handler, error) {
  let returnValue;
  try {
    returnValue = handler(error);
  } catch (error2) {
    console.log('FATAL: Error occurred in "error" event handler');
    console.log(error2);
  }
  if (returnValue && returnValue.catch) {
    returnValue.catch((error2) => {
      console.log('FATAL: Error occurred in "error" event handler');
      console.log(error2);
    });
  }
}
function getHooks(state, eventPayloadAction, eventName) {
  const hooks = [state.hooks[eventName], state.hooks["*"]];
  if (eventPayloadAction) {
    hooks.unshift(state.hooks[`${eventName}.${eventPayloadAction}`]);
  }
  return [].concat(...hooks.filter(Boolean));
}
function receiverHandle(state, event2) {
  const errorHandlers = state.hooks.error || [];
  if (event2 instanceof Error) {
    const error = Object.assign(new aggregateError([event2]), {
      event: event2,
      errors: [event2]
    });
    errorHandlers.forEach((handler) => wrapErrorHandler(handler, error));
    return Promise.reject(error);
  }
  if (!event2 || !event2.name) {
    throw new aggregateError(["Event name not passed"]);
  }
  if (!event2.payload) {
    throw new aggregateError(["Event payload not passed"]);
  }
  const hooks = getHooks(state, "action" in event2.payload ? event2.payload.action : null, event2.name);
  if (hooks.length === 0) {
    return Promise.resolve();
  }
  const errors = [];
  const promises = hooks.map((handler) => {
    let promise = Promise.resolve(event2);
    if (state.transform) {
      promise = promise.then(state.transform);
    }
    return promise.then((event3) => {
      return handler(event3);
    }).catch((error) => errors.push(Object.assign(error, { event: event2 })));
  });
  return Promise.all(promises).then(() => {
    if (errors.length === 0) {
      return;
    }
    const error = new aggregateError(errors);
    Object.assign(error, {
      event: event2,
      errors
    });
    errorHandlers.forEach((handler) => wrapErrorHandler(handler, error));
    throw error;
  });
}
function removeListener(state, webhookNameOrNames, handler) {
  if (Array.isArray(webhookNameOrNames)) {
    webhookNameOrNames.forEach((webhookName) => removeListener(state, webhookName, handler));
    return;
  }
  if (!state.hooks[webhookNameOrNames]) {
    return;
  }
  for (let i2 = state.hooks[webhookNameOrNames].length - 1; i2 >= 0; i2--) {
    if (state.hooks[webhookNameOrNames][i2] === handler) {
      state.hooks[webhookNameOrNames].splice(i2, 1);
      return;
    }
  }
}
function createEventHandler(options) {
  const state = {
    hooks: {},
    log: createLogger(options && options.log)
  };
  if (options && options.transform) {
    state.transform = options.transform;
  }
  return {
    on: receiverOn.bind(null, state),
    onAny: receiverOnAny.bind(null, state),
    onError: receiverOnError.bind(null, state),
    removeListener: removeListener.bind(null, state),
    receive: receiverHandle.bind(null, state)
  };
}
function toNormalizedJsonString(payload) {
  const payloadString = JSON.stringify(payload);
  return payloadString.replace(/[^\\]\\u[\da-f]{4}/g, (s) => {
    return s.substr(0, 3) + s.substr(3).toUpperCase();
  });
}
async function sign(secret, payload) {
  return sign$1(secret, typeof payload === "string" ? payload : toNormalizedJsonString(payload));
}
async function verify(secret, payload, signature) {
  return verify$1(secret, typeof payload === "string" ? payload : toNormalizedJsonString(payload), signature);
}
async function verifyAndReceive(state, event2) {
  const matchesSignature = await verify$1(state.secret, typeof event2.payload === "object" ? toNormalizedJsonString(event2.payload) : event2.payload, event2.signature);
  if (!matchesSignature) {
    const error = new Error("[@octokit/webhooks] signature does not match event payload and secret");
    return state.eventHandler.receive(Object.assign(error, { event: event2, status: 400 }));
  }
  return state.eventHandler.receive({
    id: event2.id,
    name: event2.name,
    payload: typeof event2.payload === "string" ? JSON.parse(event2.payload) : event2.payload
  });
}
const WEBHOOK_HEADERS = [
  "x-github-event",
  "x-hub-signature-256",
  "x-github-delivery"
];
function getMissingHeaders(request2) {
  return WEBHOOK_HEADERS.filter((header) => !(header in request2.headers));
}
function getPayload(request2) {
  if (request2.body)
    return Promise.resolve(request2.body);
  return new Promise((resolve, reject) => {
    let data = "";
    request2.setEncoding("utf8");
    request2.on("error", (error) => reject(new aggregateError([error])));
    request2.on("data", (chunk) => data += chunk);
    request2.on("end", () => {
      try {
        resolve(JSON.parse(data));
      } catch (error) {
        error.message = "Invalid JSON";
        error.status = 400;
        reject(new aggregateError([error]));
      }
    });
  });
}
async function middleware$1(webhooks2, options, request2, response, next2) {
  let pathname;
  try {
    pathname = new URL(request2.url, "http://localhost").pathname;
  } catch (error) {
    response.writeHead(422, {
      "content-type": "application/json"
    });
    response.end(JSON.stringify({
      error: `Request URL could not be parsed: ${request2.url}`
    }));
    return;
  }
  const isUnknownRoute = request2.method !== "POST" || pathname !== options.path;
  const isExpressMiddleware = typeof next2 === "function";
  if (isUnknownRoute) {
    if (isExpressMiddleware) {
      return next2();
    } else {
      return options.onUnhandledRequest(request2, response);
    }
  }
  const missingHeaders = getMissingHeaders(request2).join(", ");
  if (missingHeaders) {
    response.writeHead(400, {
      "content-type": "application/json"
    });
    response.end(JSON.stringify({
      error: `Required headers missing: ${missingHeaders}`
    }));
    return;
  }
  const eventName = request2.headers["x-github-event"];
  const signatureSHA256 = request2.headers["x-hub-signature-256"];
  const id2 = request2.headers["x-github-delivery"];
  options.log.debug(`${eventName} event received (id: ${id2})`);
  let didTimeout = false;
  const timeout = setTimeout(() => {
    didTimeout = true;
    response.statusCode = 202;
    response.end("still processing\n");
  }, 9e3).unref();
  try {
    const payload = await getPayload(request2);
    await webhooks2.verifyAndReceive({
      id: id2,
      name: eventName,
      payload,
      signature: signatureSHA256
    });
    clearTimeout(timeout);
    if (didTimeout)
      return;
    response.end("ok\n");
  } catch (error) {
    clearTimeout(timeout);
    if (didTimeout)
      return;
    const statusCode = Array.from(error)[0].status;
    response.statusCode = typeof statusCode !== "undefined" ? statusCode : 500;
    response.end(String(error));
  }
}
function onUnhandledRequestDefault$1(request2, response) {
  response.writeHead(404, {
    "content-type": "application/json"
  });
  response.end(JSON.stringify({
    error: `Unknown route: ${request2.method} ${request2.url}`
  }));
}
function createNodeMiddleware$1(webhooks2, { path = "/api/github/webhooks", onUnhandledRequest = onUnhandledRequestDefault$1, log = createLogger() } = {}) {
  return middleware$1.bind(null, webhooks2, {
    path,
    onUnhandledRequest,
    log
  });
}
class Webhooks {
  constructor(options) {
    if (!options || !options.secret) {
      throw new Error("[@octokit/webhooks] options.secret required");
    }
    const state = {
      eventHandler: createEventHandler(options),
      secret: options.secret,
      hooks: {},
      log: createLogger(options.log)
    };
    this.sign = sign.bind(null, options.secret);
    this.verify = verify.bind(null, options.secret);
    this.on = state.eventHandler.on;
    this.onAny = state.eventHandler.onAny;
    this.onError = state.eventHandler.onError;
    this.removeListener = state.eventHandler.removeListener;
    this.receive = state.eventHandler.receive;
    this.verifyAndReceive = verifyAndReceive.bind(null, state);
  }
}
var distWeb = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  Webhooks,
  createEventHandler,
  createNodeMiddleware: createNodeMiddleware$1,
  emitterEventNames
});
var require$$4 = /* @__PURE__ */ getAugmentedNamespace(distWeb);
var require$$5 = /* @__PURE__ */ getAugmentedNamespace(distWeb$6);
Object.defineProperty(distNode$2, "__esModule", { value: true });
var core = require$$0$4;
var authApp = require$$1;
var oauthApp = distNode;
var authUnauthenticated = require$$3;
var webhooks$1 = require$$4;
var pluginPaginateRest = require$$5;
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? arguments[i2] : {};
    if (i2 % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _asyncIterator(iterable) {
  var method;
  if (typeof Symbol !== "undefined") {
    if (Symbol.asyncIterator)
      method = iterable[Symbol.asyncIterator];
    if (method == null && Symbol.iterator)
      method = iterable[Symbol.iterator];
  }
  if (method == null)
    method = iterable["@@asyncIterator"];
  if (method == null)
    method = iterable["@@iterator"];
  if (method == null)
    throw new TypeError("Object is not async iterable");
  return method.call(iterable);
}
function _AwaitValue(value) {
  this.wrapped = value;
}
function _AsyncGenerator(gen) {
  var front, back;
  function send(key, arg) {
    return new Promise(function(resolve, reject) {
      var request2 = {
        key,
        arg,
        resolve,
        reject,
        next: null
      };
      if (back) {
        back = back.next = request2;
      } else {
        front = back = request2;
        resume(key, arg);
      }
    });
  }
  function resume(key, arg) {
    try {
      var result = gen[key](arg);
      var value = result.value;
      var wrappedAwait = value instanceof _AwaitValue;
      Promise.resolve(wrappedAwait ? value.wrapped : value).then(function(arg2) {
        if (wrappedAwait) {
          resume(key === "return" ? "return" : "next", arg2);
          return;
        }
        settle(result.done ? "return" : "normal", arg2);
      }, function(err) {
        resume("throw", err);
      });
    } catch (err) {
      settle("throw", err);
    }
  }
  function settle(type, value) {
    switch (type) {
      case "return":
        front.resolve({
          value,
          done: true
        });
        break;
      case "throw":
        front.reject(value);
        break;
      default:
        front.resolve({
          value,
          done: false
        });
        break;
    }
    front = front.next;
    if (front) {
      resume(front.key, front.arg);
    } else {
      back = null;
    }
  }
  this._invoke = send;
  if (typeof gen.return !== "function") {
    this.return = void 0;
  }
}
_AsyncGenerator.prototype[typeof Symbol === "function" && Symbol.asyncIterator || "@@asyncIterator"] = function() {
  return this;
};
_AsyncGenerator.prototype.next = function(arg) {
  return this._invoke("next", arg);
};
_AsyncGenerator.prototype.throw = function(arg) {
  return this._invoke("throw", arg);
};
_AsyncGenerator.prototype.return = function(arg) {
  return this._invoke("return", arg);
};
function _wrapAsyncGenerator(fn) {
  return function() {
    return new _AsyncGenerator(fn.apply(this, arguments));
  };
}
function _awaitAsyncGenerator(value) {
  return new _AwaitValue(value);
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
const VERSION$1 = "12.0.7";
function webhooks(appOctokit, options) {
  return new webhooks$1.Webhooks({
    secret: options.secret,
    transform: async (event2) => {
      if (!("installation" in event2.payload) || typeof event2.payload.installation !== "object") {
        const octokit3 = new appOctokit.constructor({
          authStrategy: authUnauthenticated.createUnauthenticatedAuth,
          auth: {
            reason: `"installation" key missing in webhook event payload`
          }
        });
        return _objectSpread2(_objectSpread2({}, event2), {}, {
          octokit: octokit3
        });
      }
      const installationId = event2.payload.installation.id;
      const octokit2 = await appOctokit.auth({
        type: "installation",
        installationId,
        factory(auth2) {
          return new auth2.octokit.constructor(_objectSpread2(_objectSpread2({}, auth2.octokitOptions), {}, {
            authStrategy: authApp.createAppAuth
          }, {
            auth: _objectSpread2(_objectSpread2({}, auth2), {}, {
              installationId
            })
          }));
        }
      });
      return _objectSpread2(_objectSpread2({}, event2), {}, {
        octokit: octokit2
      });
    }
  });
}
async function getInstallationOctokit(app, installationId) {
  return app.octokit.auth({
    type: "installation",
    installationId,
    factory(auth2) {
      const options = _objectSpread2(_objectSpread2({}, auth2.octokitOptions), {}, {
        authStrategy: authApp.createAppAuth
      }, {
        auth: _objectSpread2(_objectSpread2({}, auth2), {}, {
          installationId
        })
      });
      return new auth2.octokit.constructor(options);
    }
  });
}
function eachInstallationFactory(app) {
  return Object.assign(eachInstallation.bind(null, app), {
    iterator: eachInstallationIterator.bind(null, app)
  });
}
async function eachInstallation(app, callback) {
  const i2 = eachInstallationIterator(app)[Symbol.asyncIterator]();
  let result = await i2.next();
  while (!result.done) {
    await callback(result.value);
    result = await i2.next();
  }
}
function eachInstallationIterator(app) {
  return {
    [Symbol.asyncIterator]() {
      return _wrapAsyncGenerator(function* () {
        const iterator2 = pluginPaginateRest.composePaginateRest.iterator(app.octokit, "GET /app/installations");
        var _iteratorAbruptCompletion = false;
        var _didIteratorError = false;
        var _iteratorError;
        try {
          for (var _iterator = _asyncIterator(iterator2), _step; _iteratorAbruptCompletion = !(_step = yield _awaitAsyncGenerator(_iterator.next())).done; _iteratorAbruptCompletion = false) {
            const {
              data: installations
            } = _step.value;
            for (const installation of installations) {
              const installationOctokit = yield _awaitAsyncGenerator(getInstallationOctokit(app, installation.id));
              yield {
                octokit: installationOctokit,
                installation
              };
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (_iteratorAbruptCompletion && _iterator.return != null) {
              yield _awaitAsyncGenerator(_iterator.return());
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      })();
    }
  };
}
function eachRepositoryFactory(app) {
  return Object.assign(eachRepository.bind(null, app), {
    iterator: eachRepositoryIterator.bind(null, app)
  });
}
async function eachRepository(app, queryOrCallback, callback) {
  const i2 = eachRepositoryIterator(app, callback ? queryOrCallback : void 0)[Symbol.asyncIterator]();
  let result = await i2.next();
  while (!result.done) {
    if (callback) {
      await callback(result.value);
    } else {
      await queryOrCallback(result.value);
    }
    result = await i2.next();
  }
}
function singleInstallationIterator(app, installationId) {
  return {
    [Symbol.asyncIterator]() {
      return _wrapAsyncGenerator(function* () {
        yield {
          octokit: yield _awaitAsyncGenerator(app.getInstallationOctokit(installationId))
        };
      })();
    }
  };
}
function eachRepositoryIterator(app, query) {
  return {
    [Symbol.asyncIterator]() {
      return _wrapAsyncGenerator(function* () {
        const iterator2 = query ? singleInstallationIterator(app, query.installationId) : app.eachInstallation.iterator();
        var _iteratorAbruptCompletion = false;
        var _didIteratorError = false;
        var _iteratorError;
        try {
          for (var _iterator = _asyncIterator(iterator2), _step; _iteratorAbruptCompletion = !(_step = yield _awaitAsyncGenerator(_iterator.next())).done; _iteratorAbruptCompletion = false) {
            const {
              octokit: octokit2
            } = _step.value;
            const repositoriesIterator = pluginPaginateRest.composePaginateRest.iterator(octokit2, "GET /installation/repositories");
            var _iteratorAbruptCompletion2 = false;
            var _didIteratorError2 = false;
            var _iteratorError2;
            try {
              for (var _iterator2 = _asyncIterator(repositoriesIterator), _step2; _iteratorAbruptCompletion2 = !(_step2 = yield _awaitAsyncGenerator(_iterator2.next())).done; _iteratorAbruptCompletion2 = false) {
                const {
                  data: repositories
                } = _step2.value;
                for (const repository of repositories) {
                  yield {
                    octokit: octokit2,
                    repository
                  };
                }
              }
            } catch (err) {
              _didIteratorError2 = true;
              _iteratorError2 = err;
            } finally {
              try {
                if (_iteratorAbruptCompletion2 && _iterator2.return != null) {
                  yield _awaitAsyncGenerator(_iterator2.return());
                }
              } finally {
                if (_didIteratorError2) {
                  throw _iteratorError2;
                }
              }
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (_iteratorAbruptCompletion && _iterator.return != null) {
              yield _awaitAsyncGenerator(_iterator.return());
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      })();
    }
  };
}
function onUnhandledRequestDefault(request2, response) {
  response.writeHead(404, {
    "content-type": "application/json"
  });
  response.end(JSON.stringify({
    error: `Unknown route: ${request2.method} ${request2.url}`
  }));
}
function noop$1() {
}
function createNodeMiddleware(app, options = {}) {
  const log = Object.assign({
    debug: noop$1,
    info: noop$1,
    warn: console.warn.bind(console),
    error: console.error.bind(console)
  }, options.log);
  const optionsWithDefaults = _objectSpread2(_objectSpread2({
    onUnhandledRequest: onUnhandledRequestDefault,
    pathPrefix: "/api/github"
  }, options), {}, {
    log
  });
  const webhooksMiddleware = webhooks$1.createNodeMiddleware(app.webhooks, {
    path: optionsWithDefaults.pathPrefix + "/webhooks",
    log,
    onUnhandledRequest: optionsWithDefaults.onUnhandledRequest
  });
  const oauthMiddleware = oauthApp.createNodeMiddleware(app.oauth, {
    pathPrefix: optionsWithDefaults.pathPrefix + "/oauth",
    onUnhandledRequest: optionsWithDefaults.onUnhandledRequest
  });
  return middleware.bind(null, optionsWithDefaults, {
    webhooksMiddleware,
    oauthMiddleware
  });
}
async function middleware(options, {
  webhooksMiddleware,
  oauthMiddleware
}, request2, response, next2) {
  const {
    pathname
  } = new URL(request2.url, "http://localhost");
  if (pathname === `${options.pathPrefix}/webhooks`) {
    return webhooksMiddleware(request2, response, next2);
  }
  if (pathname.startsWith(`${options.pathPrefix}/oauth/`)) {
    return oauthMiddleware(request2, response, next2);
  }
  const isExpressMiddleware = typeof next2 === "function";
  if (isExpressMiddleware) {
    return next2();
  }
  return options.onUnhandledRequest(request2, response);
}
class App {
  constructor(options) {
    const Octokit2 = options.Octokit || core.Octokit;
    const authOptions = Object.assign({
      appId: options.appId,
      privateKey: options.privateKey
    }, options.oauth ? {
      clientId: options.oauth.clientId,
      clientSecret: options.oauth.clientSecret
    } : {});
    this.octokit = new Octokit2({
      authStrategy: authApp.createAppAuth,
      auth: authOptions,
      log: options.log
    });
    this.log = Object.assign({
      debug: () => {
      },
      info: () => {
      },
      warn: console.warn.bind(console),
      error: console.error.bind(console)
    }, options.log);
    if (options.webhooks) {
      this.webhooks = webhooks(this.octokit, options.webhooks);
    } else {
      Object.defineProperty(this, "webhooks", {
        get() {
          throw new Error("[@octokit/app] webhooks option not set");
        }
      });
    }
    if (options.oauth) {
      this.oauth = new oauthApp.OAuthApp(_objectSpread2(_objectSpread2({}, options.oauth), {}, {
        clientType: "github-app",
        Octokit: Octokit2
      }));
    } else {
      Object.defineProperty(this, "oauth", {
        get() {
          throw new Error("[@octokit/app] oauth.clientId / oauth.clientSecret options are not set");
        }
      });
    }
    this.getInstallationOctokit = getInstallationOctokit.bind(null, this);
    this.eachInstallation = eachInstallationFactory(this);
    this.eachRepository = eachRepositoryFactory(this);
  }
  static defaults(defaults) {
    const AppWithDefaults = class extends this {
      constructor(...args) {
        super(_objectSpread2(_objectSpread2({}, defaults), args[0]));
      }
    };
    return AppWithDefaults;
  }
}
App.VERSION = VERSION$1;
var App_1 = distNode$2.App = App;
distNode$2.createNodeMiddleware = createNodeMiddleware;
const VERSION = "1.8.1";
const Octokit = Octokit$1.plugin(restEndpointMethods, paginateRest, retry, throttling).defaults({
  userAgent: `octokit.js/${VERSION}`,
  throttle: {
    onRateLimit,
    onAbuseLimit
  }
});
function onRateLimit(retryAfter, options, octokit2) {
  octokit2.log.warn(`Request quota exhausted for request ${options.method} ${options.url}`);
  if (options.request.retryCount === 0) {
    octokit2.log.info(`Retrying after ${retryAfter} seconds!`);
    return true;
  }
}
function onAbuseLimit(retryAfter, options, octokit2) {
  octokit2.log.warn(`Abuse detected for request ${options.method} ${options.url}`);
  if (options.request.retryCount === 0) {
    octokit2.log.info(`Retrying after ${retryAfter} seconds!`);
    return true;
  }
}
App_1.defaults({ Octokit });
OAuthApp_1.defaults({ Octokit });
var buffer = {};
var base64Js = {};
base64Js.byteLength = byteLength;
base64Js.toByteArray = toByteArray;
base64Js.fromByteArray = fromByteArray;
var lookup = [];
var revLookup = [];
var Arr = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
var code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i];
  revLookup[code.charCodeAt(i)] = i;
}
revLookup["-".charCodeAt(0)] = 62;
revLookup["_".charCodeAt(0)] = 63;
function getLens(b64) {
  var len2 = b64.length;
  if (len2 % 4 > 0) {
    throw new Error("Invalid string. Length must be a multiple of 4");
  }
  var validLen = b64.indexOf("=");
  if (validLen === -1)
    validLen = len2;
  var placeHoldersLen = validLen === len2 ? 0 : 4 - validLen % 4;
  return [validLen, placeHoldersLen];
}
function byteLength(b64) {
  var lens = getLens(b64);
  var validLen = lens[0];
  var placeHoldersLen = lens[1];
  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}
function _byteLength(b64, validLen, placeHoldersLen) {
  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}
function toByteArray(b64) {
  var tmp;
  var lens = getLens(b64);
  var validLen = lens[0];
  var placeHoldersLen = lens[1];
  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
  var curByte = 0;
  var len2 = placeHoldersLen > 0 ? validLen - 4 : validLen;
  var i2;
  for (i2 = 0; i2 < len2; i2 += 4) {
    tmp = revLookup[b64.charCodeAt(i2)] << 18 | revLookup[b64.charCodeAt(i2 + 1)] << 12 | revLookup[b64.charCodeAt(i2 + 2)] << 6 | revLookup[b64.charCodeAt(i2 + 3)];
    arr[curByte++] = tmp >> 16 & 255;
    arr[curByte++] = tmp >> 8 & 255;
    arr[curByte++] = tmp & 255;
  }
  if (placeHoldersLen === 2) {
    tmp = revLookup[b64.charCodeAt(i2)] << 2 | revLookup[b64.charCodeAt(i2 + 1)] >> 4;
    arr[curByte++] = tmp & 255;
  }
  if (placeHoldersLen === 1) {
    tmp = revLookup[b64.charCodeAt(i2)] << 10 | revLookup[b64.charCodeAt(i2 + 1)] << 4 | revLookup[b64.charCodeAt(i2 + 2)] >> 2;
    arr[curByte++] = tmp >> 8 & 255;
    arr[curByte++] = tmp & 255;
  }
  return arr;
}
function tripletToBase64(num) {
  return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];
}
function encodeChunk(uint8, start, end) {
  var tmp;
  var output = [];
  for (var i2 = start; i2 < end; i2 += 3) {
    tmp = (uint8[i2] << 16 & 16711680) + (uint8[i2 + 1] << 8 & 65280) + (uint8[i2 + 2] & 255);
    output.push(tripletToBase64(tmp));
  }
  return output.join("");
}
function fromByteArray(uint8) {
  var tmp;
  var len2 = uint8.length;
  var extraBytes = len2 % 3;
  var parts = [];
  var maxChunkLength = 16383;
  for (var i2 = 0, len22 = len2 - extraBytes; i2 < len22; i2 += maxChunkLength) {
    parts.push(encodeChunk(uint8, i2, i2 + maxChunkLength > len22 ? len22 : i2 + maxChunkLength));
  }
  if (extraBytes === 1) {
    tmp = uint8[len2 - 1];
    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 63] + "==");
  } else if (extraBytes === 2) {
    tmp = (uint8[len2 - 2] << 8) + uint8[len2 - 1];
    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + "=");
  }
  return parts.join("");
}
var ieee754 = {};
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
ieee754.read = function(buffer2, offset, isLE, mLen, nBytes) {
  var e2, m2;
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var nBits = -7;
  var i2 = isLE ? nBytes - 1 : 0;
  var d2 = isLE ? -1 : 1;
  var s = buffer2[offset + i2];
  i2 += d2;
  e2 = s & (1 << -nBits) - 1;
  s >>= -nBits;
  nBits += eLen;
  for (; nBits > 0; e2 = e2 * 256 + buffer2[offset + i2], i2 += d2, nBits -= 8) {
  }
  m2 = e2 & (1 << -nBits) - 1;
  e2 >>= -nBits;
  nBits += mLen;
  for (; nBits > 0; m2 = m2 * 256 + buffer2[offset + i2], i2 += d2, nBits -= 8) {
  }
  if (e2 === 0) {
    e2 = 1 - eBias;
  } else if (e2 === eMax) {
    return m2 ? NaN : (s ? -1 : 1) * Infinity;
  } else {
    m2 = m2 + Math.pow(2, mLen);
    e2 = e2 - eBias;
  }
  return (s ? -1 : 1) * m2 * Math.pow(2, e2 - mLen);
};
ieee754.write = function(buffer2, value, offset, isLE, mLen, nBytes) {
  var e2, m2, c2;
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
  var i2 = isLE ? 0 : nBytes - 1;
  var d2 = isLE ? 1 : -1;
  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
  value = Math.abs(value);
  if (isNaN(value) || value === Infinity) {
    m2 = isNaN(value) ? 1 : 0;
    e2 = eMax;
  } else {
    e2 = Math.floor(Math.log(value) / Math.LN2);
    if (value * (c2 = Math.pow(2, -e2)) < 1) {
      e2--;
      c2 *= 2;
    }
    if (e2 + eBias >= 1) {
      value += rt / c2;
    } else {
      value += rt * Math.pow(2, 1 - eBias);
    }
    if (value * c2 >= 2) {
      e2++;
      c2 /= 2;
    }
    if (e2 + eBias >= eMax) {
      m2 = 0;
      e2 = eMax;
    } else if (e2 + eBias >= 1) {
      m2 = (value * c2 - 1) * Math.pow(2, mLen);
      e2 = e2 + eBias;
    } else {
      m2 = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
      e2 = 0;
    }
  }
  for (; mLen >= 8; buffer2[offset + i2] = m2 & 255, i2 += d2, m2 /= 256, mLen -= 8) {
  }
  e2 = e2 << mLen | m2;
  eLen += mLen;
  for (; eLen > 0; buffer2[offset + i2] = e2 & 255, i2 += d2, e2 /= 256, eLen -= 8) {
  }
  buffer2[offset + i2 - d2] |= s * 128;
};
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
(function(exports) {
  const base64 = base64Js;
  const ieee754$1 = ieee754;
  const customInspectSymbol = typeof Symbol === "function" && typeof Symbol["for"] === "function" ? Symbol["for"]("nodejs.util.inspect.custom") : null;
  exports.Buffer = Buffer2;
  exports.SlowBuffer = SlowBuffer;
  exports.INSPECT_MAX_BYTES = 50;
  const K_MAX_LENGTH = 2147483647;
  exports.kMaxLength = K_MAX_LENGTH;
  Buffer2.TYPED_ARRAY_SUPPORT = typedArraySupport();
  if (!Buffer2.TYPED_ARRAY_SUPPORT && typeof console !== "undefined" && typeof console.error === "function") {
    console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
  }
  function typedArraySupport() {
    try {
      const arr = new Uint8Array(1);
      const proto = { foo: function() {
        return 42;
      } };
      Object.setPrototypeOf(proto, Uint8Array.prototype);
      Object.setPrototypeOf(arr, proto);
      return arr.foo() === 42;
    } catch (e2) {
      return false;
    }
  }
  Object.defineProperty(Buffer2.prototype, "parent", {
    enumerable: true,
    get: function() {
      if (!Buffer2.isBuffer(this))
        return void 0;
      return this.buffer;
    }
  });
  Object.defineProperty(Buffer2.prototype, "offset", {
    enumerable: true,
    get: function() {
      if (!Buffer2.isBuffer(this))
        return void 0;
      return this.byteOffset;
    }
  });
  function createBuffer(length2) {
    if (length2 > K_MAX_LENGTH) {
      throw new RangeError('The value "' + length2 + '" is invalid for option "size"');
    }
    const buf = new Uint8Array(length2);
    Object.setPrototypeOf(buf, Buffer2.prototype);
    return buf;
  }
  function Buffer2(arg, encodingOrOffset, length2) {
    if (typeof arg === "number") {
      if (typeof encodingOrOffset === "string") {
        throw new TypeError('The "string" argument must be of type string. Received type number');
      }
      return allocUnsafe(arg);
    }
    return from2(arg, encodingOrOffset, length2);
  }
  Buffer2.poolSize = 8192;
  function from2(value, encodingOrOffset, length2) {
    if (typeof value === "string") {
      return fromString(value, encodingOrOffset);
    }
    if (ArrayBuffer.isView(value)) {
      return fromArrayView(value);
    }
    if (value == null) {
      throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
    }
    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {
      return fromArrayBuffer(value, encodingOrOffset, length2);
    }
    if (typeof SharedArrayBuffer !== "undefined" && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {
      return fromArrayBuffer(value, encodingOrOffset, length2);
    }
    if (typeof value === "number") {
      throw new TypeError('The "value" argument must not be of type number. Received type number');
    }
    const valueOf = value.valueOf && value.valueOf();
    if (valueOf != null && valueOf !== value) {
      return Buffer2.from(valueOf, encodingOrOffset, length2);
    }
    const b2 = fromObject(value);
    if (b2)
      return b2;
    if (typeof Symbol !== "undefined" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === "function") {
      return Buffer2.from(value[Symbol.toPrimitive]("string"), encodingOrOffset, length2);
    }
    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
  }
  Buffer2.from = function(value, encodingOrOffset, length2) {
    return from2(value, encodingOrOffset, length2);
  };
  Object.setPrototypeOf(Buffer2.prototype, Uint8Array.prototype);
  Object.setPrototypeOf(Buffer2, Uint8Array);
  function assertSize(size) {
    if (typeof size !== "number") {
      throw new TypeError('"size" argument must be of type number');
    } else if (size < 0) {
      throw new RangeError('The value "' + size + '" is invalid for option "size"');
    }
  }
  function alloc2(size, fill, encoding) {
    assertSize(size);
    if (size <= 0) {
      return createBuffer(size);
    }
    if (fill !== void 0) {
      return typeof encoding === "string" ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
    }
    return createBuffer(size);
  }
  Buffer2.alloc = function(size, fill, encoding) {
    return alloc2(size, fill, encoding);
  };
  function allocUnsafe(size) {
    assertSize(size);
    return createBuffer(size < 0 ? 0 : checked(size) | 0);
  }
  Buffer2.allocUnsafe = function(size) {
    return allocUnsafe(size);
  };
  Buffer2.allocUnsafeSlow = function(size) {
    return allocUnsafe(size);
  };
  function fromString(string, encoding) {
    if (typeof encoding !== "string" || encoding === "") {
      encoding = "utf8";
    }
    if (!Buffer2.isEncoding(encoding)) {
      throw new TypeError("Unknown encoding: " + encoding);
    }
    const length2 = byteLength2(string, encoding) | 0;
    let buf = createBuffer(length2);
    const actual = buf.write(string, encoding);
    if (actual !== length2) {
      buf = buf.slice(0, actual);
    }
    return buf;
  }
  function fromArrayLike(array) {
    const length2 = array.length < 0 ? 0 : checked(array.length) | 0;
    const buf = createBuffer(length2);
    for (let i2 = 0; i2 < length2; i2 += 1) {
      buf[i2] = array[i2] & 255;
    }
    return buf;
  }
  function fromArrayView(arrayView) {
    if (isInstance(arrayView, Uint8Array)) {
      const copy2 = new Uint8Array(arrayView);
      return fromArrayBuffer(copy2.buffer, copy2.byteOffset, copy2.byteLength);
    }
    return fromArrayLike(arrayView);
  }
  function fromArrayBuffer(array, byteOffset, length2) {
    if (byteOffset < 0 || array.byteLength < byteOffset) {
      throw new RangeError('"offset" is outside of buffer bounds');
    }
    if (array.byteLength < byteOffset + (length2 || 0)) {
      throw new RangeError('"length" is outside of buffer bounds');
    }
    let buf;
    if (byteOffset === void 0 && length2 === void 0) {
      buf = new Uint8Array(array);
    } else if (length2 === void 0) {
      buf = new Uint8Array(array, byteOffset);
    } else {
      buf = new Uint8Array(array, byteOffset, length2);
    }
    Object.setPrototypeOf(buf, Buffer2.prototype);
    return buf;
  }
  function fromObject(obj) {
    if (Buffer2.isBuffer(obj)) {
      const len2 = checked(obj.length) | 0;
      const buf = createBuffer(len2);
      if (buf.length === 0) {
        return buf;
      }
      obj.copy(buf, 0, 0, len2);
      return buf;
    }
    if (obj.length !== void 0) {
      if (typeof obj.length !== "number" || numberIsNaN(obj.length)) {
        return createBuffer(0);
      }
      return fromArrayLike(obj);
    }
    if (obj.type === "Buffer" && Array.isArray(obj.data)) {
      return fromArrayLike(obj.data);
    }
  }
  function checked(length2) {
    if (length2 >= K_MAX_LENGTH) {
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + " bytes");
    }
    return length2 | 0;
  }
  function SlowBuffer(length2) {
    if (+length2 != length2) {
      length2 = 0;
    }
    return Buffer2.alloc(+length2);
  }
  Buffer2.isBuffer = function isBuffer(b2) {
    return b2 != null && b2._isBuffer === true && b2 !== Buffer2.prototype;
  };
  Buffer2.compare = function compare(a, b2) {
    if (isInstance(a, Uint8Array))
      a = Buffer2.from(a, a.offset, a.byteLength);
    if (isInstance(b2, Uint8Array))
      b2 = Buffer2.from(b2, b2.offset, b2.byteLength);
    if (!Buffer2.isBuffer(a) || !Buffer2.isBuffer(b2)) {
      throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
    }
    if (a === b2)
      return 0;
    let x2 = a.length;
    let y2 = b2.length;
    for (let i2 = 0, len2 = Math.min(x2, y2); i2 < len2; ++i2) {
      if (a[i2] !== b2[i2]) {
        x2 = a[i2];
        y2 = b2[i2];
        break;
      }
    }
    if (x2 < y2)
      return -1;
    if (y2 < x2)
      return 1;
    return 0;
  };
  Buffer2.isEncoding = function isEncoding(encoding) {
    switch (String(encoding).toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "latin1":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return true;
      default:
        return false;
    }
  };
  Buffer2.concat = function concat2(list, length2) {
    if (!Array.isArray(list)) {
      throw new TypeError('"list" argument must be an Array of Buffers');
    }
    if (list.length === 0) {
      return Buffer2.alloc(0);
    }
    let i2;
    if (length2 === void 0) {
      length2 = 0;
      for (i2 = 0; i2 < list.length; ++i2) {
        length2 += list[i2].length;
      }
    }
    const buffer2 = Buffer2.allocUnsafe(length2);
    let pos = 0;
    for (i2 = 0; i2 < list.length; ++i2) {
      let buf = list[i2];
      if (isInstance(buf, Uint8Array)) {
        if (pos + buf.length > buffer2.length) {
          if (!Buffer2.isBuffer(buf))
            buf = Buffer2.from(buf);
          buf.copy(buffer2, pos);
        } else {
          Uint8Array.prototype.set.call(buffer2, buf, pos);
        }
      } else if (!Buffer2.isBuffer(buf)) {
        throw new TypeError('"list" argument must be an Array of Buffers');
      } else {
        buf.copy(buffer2, pos);
      }
      pos += buf.length;
    }
    return buffer2;
  };
  function byteLength2(string, encoding) {
    if (Buffer2.isBuffer(string)) {
      return string.length;
    }
    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
      return string.byteLength;
    }
    if (typeof string !== "string") {
      throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string);
    }
    const len2 = string.length;
    const mustMatch = arguments.length > 2 && arguments[2] === true;
    if (!mustMatch && len2 === 0)
      return 0;
    let loweredCase = false;
    for (; ; ) {
      switch (encoding) {
        case "ascii":
        case "latin1":
        case "binary":
          return len2;
        case "utf8":
        case "utf-8":
          return utf8ToBytes(string).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return len2 * 2;
        case "hex":
          return len2 >>> 1;
        case "base64":
          return base64ToBytes(string).length;
        default:
          if (loweredCase) {
            return mustMatch ? -1 : utf8ToBytes(string).length;
          }
          encoding = ("" + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  }
  Buffer2.byteLength = byteLength2;
  function slowToString(encoding, start, end) {
    let loweredCase = false;
    if (start === void 0 || start < 0) {
      start = 0;
    }
    if (start > this.length) {
      return "";
    }
    if (end === void 0 || end > this.length) {
      end = this.length;
    }
    if (end <= 0) {
      return "";
    }
    end >>>= 0;
    start >>>= 0;
    if (end <= start) {
      return "";
    }
    if (!encoding)
      encoding = "utf8";
    while (true) {
      switch (encoding) {
        case "hex":
          return hexSlice(this, start, end);
        case "utf8":
        case "utf-8":
          return utf8Slice(this, start, end);
        case "ascii":
          return asciiSlice(this, start, end);
        case "latin1":
        case "binary":
          return latin1Slice(this, start, end);
        case "base64":
          return base64Slice(this, start, end);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return utf16leSlice(this, start, end);
        default:
          if (loweredCase)
            throw new TypeError("Unknown encoding: " + encoding);
          encoding = (encoding + "").toLowerCase();
          loweredCase = true;
      }
    }
  }
  Buffer2.prototype._isBuffer = true;
  function swap(b2, n2, m2) {
    const i2 = b2[n2];
    b2[n2] = b2[m2];
    b2[m2] = i2;
  }
  Buffer2.prototype.swap16 = function swap16() {
    const len2 = this.length;
    if (len2 % 2 !== 0) {
      throw new RangeError("Buffer size must be a multiple of 16-bits");
    }
    for (let i2 = 0; i2 < len2; i2 += 2) {
      swap(this, i2, i2 + 1);
    }
    return this;
  };
  Buffer2.prototype.swap32 = function swap32() {
    const len2 = this.length;
    if (len2 % 4 !== 0) {
      throw new RangeError("Buffer size must be a multiple of 32-bits");
    }
    for (let i2 = 0; i2 < len2; i2 += 4) {
      swap(this, i2, i2 + 3);
      swap(this, i2 + 1, i2 + 2);
    }
    return this;
  };
  Buffer2.prototype.swap64 = function swap64() {
    const len2 = this.length;
    if (len2 % 8 !== 0) {
      throw new RangeError("Buffer size must be a multiple of 64-bits");
    }
    for (let i2 = 0; i2 < len2; i2 += 8) {
      swap(this, i2, i2 + 7);
      swap(this, i2 + 1, i2 + 6);
      swap(this, i2 + 2, i2 + 5);
      swap(this, i2 + 3, i2 + 4);
    }
    return this;
  };
  Buffer2.prototype.toString = function toString() {
    const length2 = this.length;
    if (length2 === 0)
      return "";
    if (arguments.length === 0)
      return utf8Slice(this, 0, length2);
    return slowToString.apply(this, arguments);
  };
  Buffer2.prototype.toLocaleString = Buffer2.prototype.toString;
  Buffer2.prototype.equals = function equals(b2) {
    if (!Buffer2.isBuffer(b2))
      throw new TypeError("Argument must be a Buffer");
    if (this === b2)
      return true;
    return Buffer2.compare(this, b2) === 0;
  };
  Buffer2.prototype.inspect = function inspect() {
    let str = "";
    const max = exports.INSPECT_MAX_BYTES;
    str = this.toString("hex", 0, max).replace(/(.{2})/g, "$1 ").trim();
    if (this.length > max)
      str += " ... ";
    return "<Buffer " + str + ">";
  };
  if (customInspectSymbol) {
    Buffer2.prototype[customInspectSymbol] = Buffer2.prototype.inspect;
  }
  Buffer2.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
    if (isInstance(target, Uint8Array)) {
      target = Buffer2.from(target, target.offset, target.byteLength);
    }
    if (!Buffer2.isBuffer(target)) {
      throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target);
    }
    if (start === void 0) {
      start = 0;
    }
    if (end === void 0) {
      end = target ? target.length : 0;
    }
    if (thisStart === void 0) {
      thisStart = 0;
    }
    if (thisEnd === void 0) {
      thisEnd = this.length;
    }
    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
      throw new RangeError("out of range index");
    }
    if (thisStart >= thisEnd && start >= end) {
      return 0;
    }
    if (thisStart >= thisEnd) {
      return -1;
    }
    if (start >= end) {
      return 1;
    }
    start >>>= 0;
    end >>>= 0;
    thisStart >>>= 0;
    thisEnd >>>= 0;
    if (this === target)
      return 0;
    let x2 = thisEnd - thisStart;
    let y2 = end - start;
    const len2 = Math.min(x2, y2);
    const thisCopy = this.slice(thisStart, thisEnd);
    const targetCopy = target.slice(start, end);
    for (let i2 = 0; i2 < len2; ++i2) {
      if (thisCopy[i2] !== targetCopy[i2]) {
        x2 = thisCopy[i2];
        y2 = targetCopy[i2];
        break;
      }
    }
    if (x2 < y2)
      return -1;
    if (y2 < x2)
      return 1;
    return 0;
  };
  function bidirectionalIndexOf(buffer2, val, byteOffset, encoding, dir) {
    if (buffer2.length === 0)
      return -1;
    if (typeof byteOffset === "string") {
      encoding = byteOffset;
      byteOffset = 0;
    } else if (byteOffset > 2147483647) {
      byteOffset = 2147483647;
    } else if (byteOffset < -2147483648) {
      byteOffset = -2147483648;
    }
    byteOffset = +byteOffset;
    if (numberIsNaN(byteOffset)) {
      byteOffset = dir ? 0 : buffer2.length - 1;
    }
    if (byteOffset < 0)
      byteOffset = buffer2.length + byteOffset;
    if (byteOffset >= buffer2.length) {
      if (dir)
        return -1;
      else
        byteOffset = buffer2.length - 1;
    } else if (byteOffset < 0) {
      if (dir)
        byteOffset = 0;
      else
        return -1;
    }
    if (typeof val === "string") {
      val = Buffer2.from(val, encoding);
    }
    if (Buffer2.isBuffer(val)) {
      if (val.length === 0) {
        return -1;
      }
      return arrayIndexOf(buffer2, val, byteOffset, encoding, dir);
    } else if (typeof val === "number") {
      val = val & 255;
      if (typeof Uint8Array.prototype.indexOf === "function") {
        if (dir) {
          return Uint8Array.prototype.indexOf.call(buffer2, val, byteOffset);
        } else {
          return Uint8Array.prototype.lastIndexOf.call(buffer2, val, byteOffset);
        }
      }
      return arrayIndexOf(buffer2, [val], byteOffset, encoding, dir);
    }
    throw new TypeError("val must be string, number or Buffer");
  }
  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
    let indexSize = 1;
    let arrLength = arr.length;
    let valLength = val.length;
    if (encoding !== void 0) {
      encoding = String(encoding).toLowerCase();
      if (encoding === "ucs2" || encoding === "ucs-2" || encoding === "utf16le" || encoding === "utf-16le") {
        if (arr.length < 2 || val.length < 2) {
          return -1;
        }
        indexSize = 2;
        arrLength /= 2;
        valLength /= 2;
        byteOffset /= 2;
      }
    }
    function read(buf, i3) {
      if (indexSize === 1) {
        return buf[i3];
      } else {
        return buf.readUInt16BE(i3 * indexSize);
      }
    }
    let i2;
    if (dir) {
      let foundIndex = -1;
      for (i2 = byteOffset; i2 < arrLength; i2++) {
        if (read(arr, i2) === read(val, foundIndex === -1 ? 0 : i2 - foundIndex)) {
          if (foundIndex === -1)
            foundIndex = i2;
          if (i2 - foundIndex + 1 === valLength)
            return foundIndex * indexSize;
        } else {
          if (foundIndex !== -1)
            i2 -= i2 - foundIndex;
          foundIndex = -1;
        }
      }
    } else {
      if (byteOffset + valLength > arrLength)
        byteOffset = arrLength - valLength;
      for (i2 = byteOffset; i2 >= 0; i2--) {
        let found = true;
        for (let j = 0; j < valLength; j++) {
          if (read(arr, i2 + j) !== read(val, j)) {
            found = false;
            break;
          }
        }
        if (found)
          return i2;
      }
    }
    return -1;
  }
  Buffer2.prototype.includes = function includes(val, byteOffset, encoding) {
    return this.indexOf(val, byteOffset, encoding) !== -1;
  };
  Buffer2.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
  };
  Buffer2.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
  };
  function hexWrite(buf, string, offset, length2) {
    offset = Number(offset) || 0;
    const remaining = buf.length - offset;
    if (!length2) {
      length2 = remaining;
    } else {
      length2 = Number(length2);
      if (length2 > remaining) {
        length2 = remaining;
      }
    }
    const strLen = string.length;
    if (length2 > strLen / 2) {
      length2 = strLen / 2;
    }
    let i2;
    for (i2 = 0; i2 < length2; ++i2) {
      const parsed = parseInt(string.substr(i2 * 2, 2), 16);
      if (numberIsNaN(parsed))
        return i2;
      buf[offset + i2] = parsed;
    }
    return i2;
  }
  function utf8Write(buf, string, offset, length2) {
    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length2);
  }
  function asciiWrite(buf, string, offset, length2) {
    return blitBuffer(asciiToBytes(string), buf, offset, length2);
  }
  function base64Write(buf, string, offset, length2) {
    return blitBuffer(base64ToBytes(string), buf, offset, length2);
  }
  function ucs2Write(buf, string, offset, length2) {
    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length2);
  }
  Buffer2.prototype.write = function write(string, offset, length2, encoding) {
    if (offset === void 0) {
      encoding = "utf8";
      length2 = this.length;
      offset = 0;
    } else if (length2 === void 0 && typeof offset === "string") {
      encoding = offset;
      length2 = this.length;
      offset = 0;
    } else if (isFinite(offset)) {
      offset = offset >>> 0;
      if (isFinite(length2)) {
        length2 = length2 >>> 0;
        if (encoding === void 0)
          encoding = "utf8";
      } else {
        encoding = length2;
        length2 = void 0;
      }
    } else {
      throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
    }
    const remaining = this.length - offset;
    if (length2 === void 0 || length2 > remaining)
      length2 = remaining;
    if (string.length > 0 && (length2 < 0 || offset < 0) || offset > this.length) {
      throw new RangeError("Attempt to write outside buffer bounds");
    }
    if (!encoding)
      encoding = "utf8";
    let loweredCase = false;
    for (; ; ) {
      switch (encoding) {
        case "hex":
          return hexWrite(this, string, offset, length2);
        case "utf8":
        case "utf-8":
          return utf8Write(this, string, offset, length2);
        case "ascii":
        case "latin1":
        case "binary":
          return asciiWrite(this, string, offset, length2);
        case "base64":
          return base64Write(this, string, offset, length2);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return ucs2Write(this, string, offset, length2);
        default:
          if (loweredCase)
            throw new TypeError("Unknown encoding: " + encoding);
          encoding = ("" + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  };
  Buffer2.prototype.toJSON = function toJSON() {
    return {
      type: "Buffer",
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };
  function base64Slice(buf, start, end) {
    if (start === 0 && end === buf.length) {
      return base64.fromByteArray(buf);
    } else {
      return base64.fromByteArray(buf.slice(start, end));
    }
  }
  function utf8Slice(buf, start, end) {
    end = Math.min(buf.length, end);
    const res = [];
    let i2 = start;
    while (i2 < end) {
      const firstByte = buf[i2];
      let codePoint = null;
      let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
      if (i2 + bytesPerSequence <= end) {
        let secondByte, thirdByte, fourthByte, tempCodePoint;
        switch (bytesPerSequence) {
          case 1:
            if (firstByte < 128) {
              codePoint = firstByte;
            }
            break;
          case 2:
            secondByte = buf[i2 + 1];
            if ((secondByte & 192) === 128) {
              tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;
              if (tempCodePoint > 127) {
                codePoint = tempCodePoint;
              }
            }
            break;
          case 3:
            secondByte = buf[i2 + 1];
            thirdByte = buf[i2 + 2];
            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {
              tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;
              if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {
                codePoint = tempCodePoint;
              }
            }
            break;
          case 4:
            secondByte = buf[i2 + 1];
            thirdByte = buf[i2 + 2];
            fourthByte = buf[i2 + 3];
            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {
              tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;
              if (tempCodePoint > 65535 && tempCodePoint < 1114112) {
                codePoint = tempCodePoint;
              }
            }
        }
      }
      if (codePoint === null) {
        codePoint = 65533;
        bytesPerSequence = 1;
      } else if (codePoint > 65535) {
        codePoint -= 65536;
        res.push(codePoint >>> 10 & 1023 | 55296);
        codePoint = 56320 | codePoint & 1023;
      }
      res.push(codePoint);
      i2 += bytesPerSequence;
    }
    return decodeCodePointsArray(res);
  }
  const MAX_ARGUMENTS_LENGTH = 4096;
  function decodeCodePointsArray(codePoints) {
    const len2 = codePoints.length;
    if (len2 <= MAX_ARGUMENTS_LENGTH) {
      return String.fromCharCode.apply(String, codePoints);
    }
    let res = "";
    let i2 = 0;
    while (i2 < len2) {
      res += String.fromCharCode.apply(String, codePoints.slice(i2, i2 += MAX_ARGUMENTS_LENGTH));
    }
    return res;
  }
  function asciiSlice(buf, start, end) {
    let ret = "";
    end = Math.min(buf.length, end);
    for (let i2 = start; i2 < end; ++i2) {
      ret += String.fromCharCode(buf[i2] & 127);
    }
    return ret;
  }
  function latin1Slice(buf, start, end) {
    let ret = "";
    end = Math.min(buf.length, end);
    for (let i2 = start; i2 < end; ++i2) {
      ret += String.fromCharCode(buf[i2]);
    }
    return ret;
  }
  function hexSlice(buf, start, end) {
    const len2 = buf.length;
    if (!start || start < 0)
      start = 0;
    if (!end || end < 0 || end > len2)
      end = len2;
    let out = "";
    for (let i2 = start; i2 < end; ++i2) {
      out += hexSliceLookupTable[buf[i2]];
    }
    return out;
  }
  function utf16leSlice(buf, start, end) {
    const bytes = buf.slice(start, end);
    let res = "";
    for (let i2 = 0; i2 < bytes.length - 1; i2 += 2) {
      res += String.fromCharCode(bytes[i2] + bytes[i2 + 1] * 256);
    }
    return res;
  }
  Buffer2.prototype.slice = function slice2(start, end) {
    const len2 = this.length;
    start = ~~start;
    end = end === void 0 ? len2 : ~~end;
    if (start < 0) {
      start += len2;
      if (start < 0)
        start = 0;
    } else if (start > len2) {
      start = len2;
    }
    if (end < 0) {
      end += len2;
      if (end < 0)
        end = 0;
    } else if (end > len2) {
      end = len2;
    }
    if (end < start)
      end = start;
    const newBuf = this.subarray(start, end);
    Object.setPrototypeOf(newBuf, Buffer2.prototype);
    return newBuf;
  };
  function checkOffset(offset, ext, length2) {
    if (offset % 1 !== 0 || offset < 0)
      throw new RangeError("offset is not uint");
    if (offset + ext > length2)
      throw new RangeError("Trying to access beyond buffer length");
  }
  Buffer2.prototype.readUintLE = Buffer2.prototype.readUIntLE = function readUIntLE(offset, byteLength3, noAssert) {
    offset = offset >>> 0;
    byteLength3 = byteLength3 >>> 0;
    if (!noAssert)
      checkOffset(offset, byteLength3, this.length);
    let val = this[offset];
    let mul = 1;
    let i2 = 0;
    while (++i2 < byteLength3 && (mul *= 256)) {
      val += this[offset + i2] * mul;
    }
    return val;
  };
  Buffer2.prototype.readUintBE = Buffer2.prototype.readUIntBE = function readUIntBE(offset, byteLength3, noAssert) {
    offset = offset >>> 0;
    byteLength3 = byteLength3 >>> 0;
    if (!noAssert) {
      checkOffset(offset, byteLength3, this.length);
    }
    let val = this[offset + --byteLength3];
    let mul = 1;
    while (byteLength3 > 0 && (mul *= 256)) {
      val += this[offset + --byteLength3] * mul;
    }
    return val;
  };
  Buffer2.prototype.readUint8 = Buffer2.prototype.readUInt8 = function readUInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert)
      checkOffset(offset, 1, this.length);
    return this[offset];
  };
  Buffer2.prototype.readUint16LE = Buffer2.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert)
      checkOffset(offset, 2, this.length);
    return this[offset] | this[offset + 1] << 8;
  };
  Buffer2.prototype.readUint16BE = Buffer2.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert)
      checkOffset(offset, 2, this.length);
    return this[offset] << 8 | this[offset + 1];
  };
  Buffer2.prototype.readUint32LE = Buffer2.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert)
      checkOffset(offset, 4, this.length);
    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;
  };
  Buffer2.prototype.readUint32BE = Buffer2.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert)
      checkOffset(offset, 4, this.length);
    return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
  };
  Buffer2.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {
    offset = offset >>> 0;
    validateNumber(offset, "offset");
    const first = this[offset];
    const last = this[offset + 7];
    if (first === void 0 || last === void 0) {
      boundsError(offset, this.length - 8);
    }
    const lo = first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;
    const hi2 = this[++offset] + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;
    return BigInt(lo) + (BigInt(hi2) << BigInt(32));
  });
  Buffer2.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {
    offset = offset >>> 0;
    validateNumber(offset, "offset");
    const first = this[offset];
    const last = this[offset + 7];
    if (first === void 0 || last === void 0) {
      boundsError(offset, this.length - 8);
    }
    const hi2 = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];
    const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;
    return (BigInt(hi2) << BigInt(32)) + BigInt(lo);
  });
  Buffer2.prototype.readIntLE = function readIntLE(offset, byteLength3, noAssert) {
    offset = offset >>> 0;
    byteLength3 = byteLength3 >>> 0;
    if (!noAssert)
      checkOffset(offset, byteLength3, this.length);
    let val = this[offset];
    let mul = 1;
    let i2 = 0;
    while (++i2 < byteLength3 && (mul *= 256)) {
      val += this[offset + i2] * mul;
    }
    mul *= 128;
    if (val >= mul)
      val -= Math.pow(2, 8 * byteLength3);
    return val;
  };
  Buffer2.prototype.readIntBE = function readIntBE(offset, byteLength3, noAssert) {
    offset = offset >>> 0;
    byteLength3 = byteLength3 >>> 0;
    if (!noAssert)
      checkOffset(offset, byteLength3, this.length);
    let i2 = byteLength3;
    let mul = 1;
    let val = this[offset + --i2];
    while (i2 > 0 && (mul *= 256)) {
      val += this[offset + --i2] * mul;
    }
    mul *= 128;
    if (val >= mul)
      val -= Math.pow(2, 8 * byteLength3);
    return val;
  };
  Buffer2.prototype.readInt8 = function readInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert)
      checkOffset(offset, 1, this.length);
    if (!(this[offset] & 128))
      return this[offset];
    return (255 - this[offset] + 1) * -1;
  };
  Buffer2.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert)
      checkOffset(offset, 2, this.length);
    const val = this[offset] | this[offset + 1] << 8;
    return val & 32768 ? val | 4294901760 : val;
  };
  Buffer2.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert)
      checkOffset(offset, 2, this.length);
    const val = this[offset + 1] | this[offset] << 8;
    return val & 32768 ? val | 4294901760 : val;
  };
  Buffer2.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert)
      checkOffset(offset, 4, this.length);
    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
  };
  Buffer2.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert)
      checkOffset(offset, 4, this.length);
    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
  };
  Buffer2.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {
    offset = offset >>> 0;
    validateNumber(offset, "offset");
    const first = this[offset];
    const last = this[offset + 7];
    if (first === void 0 || last === void 0) {
      boundsError(offset, this.length - 8);
    }
    const val = this[offset + 4] + this[offset + 5] * 2 ** 8 + this[offset + 6] * 2 ** 16 + (last << 24);
    return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);
  });
  Buffer2.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {
    offset = offset >>> 0;
    validateNumber(offset, "offset");
    const first = this[offset];
    const last = this[offset + 7];
    if (first === void 0 || last === void 0) {
      boundsError(offset, this.length - 8);
    }
    const val = (first << 24) + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];
    return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last);
  });
  Buffer2.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert)
      checkOffset(offset, 4, this.length);
    return ieee754$1.read(this, offset, true, 23, 4);
  };
  Buffer2.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert)
      checkOffset(offset, 4, this.length);
    return ieee754$1.read(this, offset, false, 23, 4);
  };
  Buffer2.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert)
      checkOffset(offset, 8, this.length);
    return ieee754$1.read(this, offset, true, 52, 8);
  };
  Buffer2.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert)
      checkOffset(offset, 8, this.length);
    return ieee754$1.read(this, offset, false, 52, 8);
  };
  function checkInt(buf, value, offset, ext, max, min) {
    if (!Buffer2.isBuffer(buf))
      throw new TypeError('"buffer" argument must be a Buffer instance');
    if (value > max || value < min)
      throw new RangeError('"value" argument is out of bounds');
    if (offset + ext > buf.length)
      throw new RangeError("Index out of range");
  }
  Buffer2.prototype.writeUintLE = Buffer2.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength3, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength3 = byteLength3 >>> 0;
    if (!noAssert) {
      const maxBytes = Math.pow(2, 8 * byteLength3) - 1;
      checkInt(this, value, offset, byteLength3, maxBytes, 0);
    }
    let mul = 1;
    let i2 = 0;
    this[offset] = value & 255;
    while (++i2 < byteLength3 && (mul *= 256)) {
      this[offset + i2] = value / mul & 255;
    }
    return offset + byteLength3;
  };
  Buffer2.prototype.writeUintBE = Buffer2.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength3, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength3 = byteLength3 >>> 0;
    if (!noAssert) {
      const maxBytes = Math.pow(2, 8 * byteLength3) - 1;
      checkInt(this, value, offset, byteLength3, maxBytes, 0);
    }
    let i2 = byteLength3 - 1;
    let mul = 1;
    this[offset + i2] = value & 255;
    while (--i2 >= 0 && (mul *= 256)) {
      this[offset + i2] = value / mul & 255;
    }
    return offset + byteLength3;
  };
  Buffer2.prototype.writeUint8 = Buffer2.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert)
      checkInt(this, value, offset, 1, 255, 0);
    this[offset] = value & 255;
    return offset + 1;
  };
  Buffer2.prototype.writeUint16LE = Buffer2.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert)
      checkInt(this, value, offset, 2, 65535, 0);
    this[offset] = value & 255;
    this[offset + 1] = value >>> 8;
    return offset + 2;
  };
  Buffer2.prototype.writeUint16BE = Buffer2.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert)
      checkInt(this, value, offset, 2, 65535, 0);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 255;
    return offset + 2;
  };
  Buffer2.prototype.writeUint32LE = Buffer2.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert)
      checkInt(this, value, offset, 4, 4294967295, 0);
    this[offset + 3] = value >>> 24;
    this[offset + 2] = value >>> 16;
    this[offset + 1] = value >>> 8;
    this[offset] = value & 255;
    return offset + 4;
  };
  Buffer2.prototype.writeUint32BE = Buffer2.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert)
      checkInt(this, value, offset, 4, 4294967295, 0);
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 255;
    return offset + 4;
  };
  function wrtBigUInt64LE(buf, value, offset, min, max) {
    checkIntBI(value, min, max, buf, offset, 7);
    let lo = Number(value & BigInt(4294967295));
    buf[offset++] = lo;
    lo = lo >> 8;
    buf[offset++] = lo;
    lo = lo >> 8;
    buf[offset++] = lo;
    lo = lo >> 8;
    buf[offset++] = lo;
    let hi2 = Number(value >> BigInt(32) & BigInt(4294967295));
    buf[offset++] = hi2;
    hi2 = hi2 >> 8;
    buf[offset++] = hi2;
    hi2 = hi2 >> 8;
    buf[offset++] = hi2;
    hi2 = hi2 >> 8;
    buf[offset++] = hi2;
    return offset;
  }
  function wrtBigUInt64BE(buf, value, offset, min, max) {
    checkIntBI(value, min, max, buf, offset, 7);
    let lo = Number(value & BigInt(4294967295));
    buf[offset + 7] = lo;
    lo = lo >> 8;
    buf[offset + 6] = lo;
    lo = lo >> 8;
    buf[offset + 5] = lo;
    lo = lo >> 8;
    buf[offset + 4] = lo;
    let hi2 = Number(value >> BigInt(32) & BigInt(4294967295));
    buf[offset + 3] = hi2;
    hi2 = hi2 >> 8;
    buf[offset + 2] = hi2;
    hi2 = hi2 >> 8;
    buf[offset + 1] = hi2;
    hi2 = hi2 >> 8;
    buf[offset] = hi2;
    return offset + 8;
  }
  Buffer2.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {
    return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt("0xffffffffffffffff"));
  });
  Buffer2.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {
    return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt("0xffffffffffffffff"));
  });
  Buffer2.prototype.writeIntLE = function writeIntLE(value, offset, byteLength3, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
      const limit = Math.pow(2, 8 * byteLength3 - 1);
      checkInt(this, value, offset, byteLength3, limit - 1, -limit);
    }
    let i2 = 0;
    let mul = 1;
    let sub = 0;
    this[offset] = value & 255;
    while (++i2 < byteLength3 && (mul *= 256)) {
      if (value < 0 && sub === 0 && this[offset + i2 - 1] !== 0) {
        sub = 1;
      }
      this[offset + i2] = (value / mul >> 0) - sub & 255;
    }
    return offset + byteLength3;
  };
  Buffer2.prototype.writeIntBE = function writeIntBE(value, offset, byteLength3, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
      const limit = Math.pow(2, 8 * byteLength3 - 1);
      checkInt(this, value, offset, byteLength3, limit - 1, -limit);
    }
    let i2 = byteLength3 - 1;
    let mul = 1;
    let sub = 0;
    this[offset + i2] = value & 255;
    while (--i2 >= 0 && (mul *= 256)) {
      if (value < 0 && sub === 0 && this[offset + i2 + 1] !== 0) {
        sub = 1;
      }
      this[offset + i2] = (value / mul >> 0) - sub & 255;
    }
    return offset + byteLength3;
  };
  Buffer2.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert)
      checkInt(this, value, offset, 1, 127, -128);
    if (value < 0)
      value = 255 + value + 1;
    this[offset] = value & 255;
    return offset + 1;
  };
  Buffer2.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert)
      checkInt(this, value, offset, 2, 32767, -32768);
    this[offset] = value & 255;
    this[offset + 1] = value >>> 8;
    return offset + 2;
  };
  Buffer2.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert)
      checkInt(this, value, offset, 2, 32767, -32768);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 255;
    return offset + 2;
  };
  Buffer2.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert)
      checkInt(this, value, offset, 4, 2147483647, -2147483648);
    this[offset] = value & 255;
    this[offset + 1] = value >>> 8;
    this[offset + 2] = value >>> 16;
    this[offset + 3] = value >>> 24;
    return offset + 4;
  };
  Buffer2.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert)
      checkInt(this, value, offset, 4, 2147483647, -2147483648);
    if (value < 0)
      value = 4294967295 + value + 1;
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 255;
    return offset + 4;
  };
  Buffer2.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {
    return wrtBigUInt64LE(this, value, offset, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  });
  Buffer2.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {
    return wrtBigUInt64BE(this, value, offset, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  });
  function checkIEEE754(buf, value, offset, ext, max, min) {
    if (offset + ext > buf.length)
      throw new RangeError("Index out of range");
    if (offset < 0)
      throw new RangeError("Index out of range");
  }
  function writeFloat(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
      checkIEEE754(buf, value, offset, 4);
    }
    ieee754$1.write(buf, value, offset, littleEndian, 23, 4);
    return offset + 4;
  }
  Buffer2.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
    return writeFloat(this, value, offset, true, noAssert);
  };
  Buffer2.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
    return writeFloat(this, value, offset, false, noAssert);
  };
  function writeDouble(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
      checkIEEE754(buf, value, offset, 8);
    }
    ieee754$1.write(buf, value, offset, littleEndian, 52, 8);
    return offset + 8;
  }
  Buffer2.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
    return writeDouble(this, value, offset, true, noAssert);
  };
  Buffer2.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
    return writeDouble(this, value, offset, false, noAssert);
  };
  Buffer2.prototype.copy = function copy2(target, targetStart, start, end) {
    if (!Buffer2.isBuffer(target))
      throw new TypeError("argument should be a Buffer");
    if (!start)
      start = 0;
    if (!end && end !== 0)
      end = this.length;
    if (targetStart >= target.length)
      targetStart = target.length;
    if (!targetStart)
      targetStart = 0;
    if (end > 0 && end < start)
      end = start;
    if (end === start)
      return 0;
    if (target.length === 0 || this.length === 0)
      return 0;
    if (targetStart < 0) {
      throw new RangeError("targetStart out of bounds");
    }
    if (start < 0 || start >= this.length)
      throw new RangeError("Index out of range");
    if (end < 0)
      throw new RangeError("sourceEnd out of bounds");
    if (end > this.length)
      end = this.length;
    if (target.length - targetStart < end - start) {
      end = target.length - targetStart + start;
    }
    const len2 = end - start;
    if (this === target && typeof Uint8Array.prototype.copyWithin === "function") {
      this.copyWithin(targetStart, start, end);
    } else {
      Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);
    }
    return len2;
  };
  Buffer2.prototype.fill = function fill(val, start, end, encoding) {
    if (typeof val === "string") {
      if (typeof start === "string") {
        encoding = start;
        start = 0;
        end = this.length;
      } else if (typeof end === "string") {
        encoding = end;
        end = this.length;
      }
      if (encoding !== void 0 && typeof encoding !== "string") {
        throw new TypeError("encoding must be a string");
      }
      if (typeof encoding === "string" && !Buffer2.isEncoding(encoding)) {
        throw new TypeError("Unknown encoding: " + encoding);
      }
      if (val.length === 1) {
        const code2 = val.charCodeAt(0);
        if (encoding === "utf8" && code2 < 128 || encoding === "latin1") {
          val = code2;
        }
      }
    } else if (typeof val === "number") {
      val = val & 255;
    } else if (typeof val === "boolean") {
      val = Number(val);
    }
    if (start < 0 || this.length < start || this.length < end) {
      throw new RangeError("Out of range index");
    }
    if (end <= start) {
      return this;
    }
    start = start >>> 0;
    end = end === void 0 ? this.length : end >>> 0;
    if (!val)
      val = 0;
    let i2;
    if (typeof val === "number") {
      for (i2 = start; i2 < end; ++i2) {
        this[i2] = val;
      }
    } else {
      const bytes = Buffer2.isBuffer(val) ? val : Buffer2.from(val, encoding);
      const len2 = bytes.length;
      if (len2 === 0) {
        throw new TypeError('The value "' + val + '" is invalid for argument "value"');
      }
      for (i2 = 0; i2 < end - start; ++i2) {
        this[i2 + start] = bytes[i2 % len2];
      }
    }
    return this;
  };
  const errors = {};
  function E2(sym, getMessage, Base) {
    errors[sym] = class NodeError extends Base {
      constructor() {
        super();
        Object.defineProperty(this, "message", {
          value: getMessage.apply(this, arguments),
          writable: true,
          configurable: true
        });
        this.name = `${this.name} [${sym}]`;
        this.stack;
        delete this.name;
      }
      get code() {
        return sym;
      }
      set code(value) {
        Object.defineProperty(this, "code", {
          configurable: true,
          enumerable: true,
          value,
          writable: true
        });
      }
      toString() {
        return `${this.name} [${sym}]: ${this.message}`;
      }
    };
  }
  E2("ERR_BUFFER_OUT_OF_BOUNDS", function(name) {
    if (name) {
      return `${name} is outside of buffer bounds`;
    }
    return "Attempt to access memory outside buffer bounds";
  }, RangeError);
  E2("ERR_INVALID_ARG_TYPE", function(name, actual) {
    return `The "${name}" argument must be of type number. Received type ${typeof actual}`;
  }, TypeError);
  E2("ERR_OUT_OF_RANGE", function(str, range2, input) {
    let msg = `The value of "${str}" is out of range.`;
    let received = input;
    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {
      received = addNumericalSeparator(String(input));
    } else if (typeof input === "bigint") {
      received = String(input);
      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {
        received = addNumericalSeparator(received);
      }
      received += "n";
    }
    msg += ` It must be ${range2}. Received ${received}`;
    return msg;
  }, RangeError);
  function addNumericalSeparator(val) {
    let res = "";
    let i2 = val.length;
    const start = val[0] === "-" ? 1 : 0;
    for (; i2 >= start + 4; i2 -= 3) {
      res = `_${val.slice(i2 - 3, i2)}${res}`;
    }
    return `${val.slice(0, i2)}${res}`;
  }
  function checkBounds(buf, offset, byteLength3) {
    validateNumber(offset, "offset");
    if (buf[offset] === void 0 || buf[offset + byteLength3] === void 0) {
      boundsError(offset, buf.length - (byteLength3 + 1));
    }
  }
  function checkIntBI(value, min, max, buf, offset, byteLength3) {
    if (value > max || value < min) {
      const n2 = typeof min === "bigint" ? "n" : "";
      let range2;
      if (byteLength3 > 3) {
        if (min === 0 || min === BigInt(0)) {
          range2 = `>= 0${n2} and < 2${n2} ** ${(byteLength3 + 1) * 8}${n2}`;
        } else {
          range2 = `>= -(2${n2} ** ${(byteLength3 + 1) * 8 - 1}${n2}) and < 2 ** ${(byteLength3 + 1) * 8 - 1}${n2}`;
        }
      } else {
        range2 = `>= ${min}${n2} and <= ${max}${n2}`;
      }
      throw new errors.ERR_OUT_OF_RANGE("value", range2, value);
    }
    checkBounds(buf, offset, byteLength3);
  }
  function validateNumber(value, name) {
    if (typeof value !== "number") {
      throw new errors.ERR_INVALID_ARG_TYPE(name, "number", value);
    }
  }
  function boundsError(value, length2, type) {
    if (Math.floor(value) !== value) {
      validateNumber(value, type);
      throw new errors.ERR_OUT_OF_RANGE(type || "offset", "an integer", value);
    }
    if (length2 < 0) {
      throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();
    }
    throw new errors.ERR_OUT_OF_RANGE(type || "offset", `>= ${type ? 1 : 0} and <= ${length2}`, value);
  }
  const INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
  function base64clean(str) {
    str = str.split("=")[0];
    str = str.trim().replace(INVALID_BASE64_RE, "");
    if (str.length < 2)
      return "";
    while (str.length % 4 !== 0) {
      str = str + "=";
    }
    return str;
  }
  function utf8ToBytes(string, units) {
    units = units || Infinity;
    let codePoint;
    const length2 = string.length;
    let leadSurrogate = null;
    const bytes = [];
    for (let i2 = 0; i2 < length2; ++i2) {
      codePoint = string.charCodeAt(i2);
      if (codePoint > 55295 && codePoint < 57344) {
        if (!leadSurrogate) {
          if (codePoint > 56319) {
            if ((units -= 3) > -1)
              bytes.push(239, 191, 189);
            continue;
          } else if (i2 + 1 === length2) {
            if ((units -= 3) > -1)
              bytes.push(239, 191, 189);
            continue;
          }
          leadSurrogate = codePoint;
          continue;
        }
        if (codePoint < 56320) {
          if ((units -= 3) > -1)
            bytes.push(239, 191, 189);
          leadSurrogate = codePoint;
          continue;
        }
        codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;
      } else if (leadSurrogate) {
        if ((units -= 3) > -1)
          bytes.push(239, 191, 189);
      }
      leadSurrogate = null;
      if (codePoint < 128) {
        if ((units -= 1) < 0)
          break;
        bytes.push(codePoint);
      } else if (codePoint < 2048) {
        if ((units -= 2) < 0)
          break;
        bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);
      } else if (codePoint < 65536) {
        if ((units -= 3) < 0)
          break;
        bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);
      } else if (codePoint < 1114112) {
        if ((units -= 4) < 0)
          break;
        bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);
      } else {
        throw new Error("Invalid code point");
      }
    }
    return bytes;
  }
  function asciiToBytes(str) {
    const byteArray = [];
    for (let i2 = 0; i2 < str.length; ++i2) {
      byteArray.push(str.charCodeAt(i2) & 255);
    }
    return byteArray;
  }
  function utf16leToBytes(str, units) {
    let c2, hi2, lo;
    const byteArray = [];
    for (let i2 = 0; i2 < str.length; ++i2) {
      if ((units -= 2) < 0)
        break;
      c2 = str.charCodeAt(i2);
      hi2 = c2 >> 8;
      lo = c2 % 256;
      byteArray.push(lo);
      byteArray.push(hi2);
    }
    return byteArray;
  }
  function base64ToBytes(str) {
    return base64.toByteArray(base64clean(str));
  }
  function blitBuffer(src, dst, offset, length2) {
    let i2;
    for (i2 = 0; i2 < length2; ++i2) {
      if (i2 + offset >= dst.length || i2 >= src.length)
        break;
      dst[i2 + offset] = src[i2];
    }
    return i2;
  }
  function isInstance(obj, type) {
    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
  }
  function numberIsNaN(obj) {
    return obj !== obj;
  }
  const hexSliceLookupTable = function() {
    const alphabet = "0123456789abcdef";
    const table = new Array(256);
    for (let i2 = 0; i2 < 16; ++i2) {
      const i16 = i2 * 16;
      for (let j = 0; j < 16; ++j) {
        table[i16 + j] = alphabet[i2] + alphabet[j];
      }
    }
    return table;
  }();
  function defineBigIntMethod(fn) {
    return typeof BigInt === "undefined" ? BufferBigIntNotDefined : fn;
  }
  function BufferBigIntNotDefined() {
    throw new Error("BigInt not supported");
  }
})(buffer);
const BYTE_UNITS = [
  "B",
  "kB",
  "MB",
  "GB",
  "TB",
  "PB",
  "EB",
  "ZB",
  "YB"
];
const BIBYTE_UNITS = [
  "B",
  "kiB",
  "MiB",
  "GiB",
  "TiB",
  "PiB",
  "EiB",
  "ZiB",
  "YiB"
];
const BIT_UNITS = [
  "b",
  "kbit",
  "Mbit",
  "Gbit",
  "Tbit",
  "Pbit",
  "Ebit",
  "Zbit",
  "Ybit"
];
const BIBIT_UNITS = [
  "b",
  "kibit",
  "Mibit",
  "Gibit",
  "Tibit",
  "Pibit",
  "Eibit",
  "Zibit",
  "Yibit"
];
const toLocaleString = (number, locale, options) => {
  let result = number;
  if (typeof locale === "string" || Array.isArray(locale)) {
    result = number.toLocaleString(locale, options);
  } else if (locale === true || options !== void 0) {
    result = number.toLocaleString(void 0, options);
  }
  return result;
};
function prettyBytes(number, options) {
  if (!Number.isFinite(number)) {
    throw new TypeError(`Expected a finite number, got ${typeof number}: ${number}`);
  }
  options = __spreadValues({
    bits: false,
    binary: false
  }, options);
  const UNITS = options.bits ? options.binary ? BIBIT_UNITS : BIT_UNITS : options.binary ? BIBYTE_UNITS : BYTE_UNITS;
  if (options.signed && number === 0) {
    return ` 0 ${UNITS[0]}`;
  }
  const isNegative = number < 0;
  const prefix2 = isNegative ? "-" : options.signed ? "+" : "";
  if (isNegative) {
    number = -number;
  }
  let localeOptions;
  if (options.minimumFractionDigits !== void 0) {
    localeOptions = { minimumFractionDigits: options.minimumFractionDigits };
  }
  if (options.maximumFractionDigits !== void 0) {
    localeOptions = __spreadValues({ maximumFractionDigits: options.maximumFractionDigits }, localeOptions);
  }
  if (number < 1) {
    const numberString2 = toLocaleString(number, options.locale, localeOptions);
    return prefix2 + numberString2 + " " + UNITS[0];
  }
  const exponent = Math.min(Math.floor(options.binary ? Math.log(number) / Math.log(1024) : Math.log10(number) / 3), UNITS.length - 1);
  number /= (options.binary ? 1024 : 1e3) ** exponent;
  if (!localeOptions) {
    number = number.toPrecision(3);
  }
  const numberString = toLocaleString(Number(number), options.locale, localeOptions);
  const unit = UNITS[exponent];
  return prefix2 + numberString + " " + unit;
}
const octokit = new Octokit();
async function getCommitSHA(owner, repo, branch) {
  const ref = await octokit.rest.git.getRef({
    owner,
    repo,
    ref: `heads/${branch}`
  });
  return ref.data.object.sha;
}
async function getMetricsBlob(owner, repo, commit_sha, files = ["metrics.csv"]) {
  const ref = await octokit.rest.git.getRef({
    owner,
    repo,
    ref: `metrics/${commit_sha}`
  });
  const tree_sha = ref.data.object.sha;
  const response = await octokit.rest.git.getTree({
    owner,
    repo,
    tree_sha
  });
  response.data.tree.map((object) => {
    console.log(object.path, prettyBytes(object.size));
  });
  return await Promise.all(files.map(async (file) => {
    const found_file = response.data.tree.find((object) => object.path == file);
    const file_sha = found_file == null ? void 0 : found_file.sha;
    if (!file_sha) {
      console.warn(`${file} not found in tree object`);
      return { content: "", size: 0 };
    }
    const blob = await octokit.rest.git.getBlob({
      owner,
      repo,
      file_sha
    });
    const blob_string = buffer.Buffer.from(blob.data.content, "base64").toString();
    if (!blob_string) {
      console.warn(`${file} not found in blob object`);
      return { content: "", size: 0 };
    }
    console.log(blob_string);
    return { content: blob_string, size: blob.data.size };
  }));
}
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
var extendStatics = function(d2, b2) {
  extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d3, b3) {
    d3.__proto__ = b3;
  } || function(d3, b3) {
    for (var p2 in b3)
      if (b3.hasOwnProperty(p2))
        d3[p2] = b3[p2];
  };
  return extendStatics(d2, b2);
};
function __extends(d2, b2) {
  extendStatics(d2, b2);
  function __() {
    this.constructor = d2;
  }
  d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
}
function isFunction(x2) {
  return typeof x2 === "function";
}
var _enable_super_gross_mode_that_will_cause_bad_things = false;
var config = {
  Promise: void 0,
  set useDeprecatedSynchronousErrorHandling(value) {
    if (value) {
      var error = /* @__PURE__ */ new Error();
      /* @__PURE__ */ console.warn("DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n" + error.stack);
    }
    _enable_super_gross_mode_that_will_cause_bad_things = value;
  },
  get useDeprecatedSynchronousErrorHandling() {
    return _enable_super_gross_mode_that_will_cause_bad_things;
  }
};
function hostReportError(err) {
  setTimeout(function() {
    throw err;
  });
}
var empty$1 = {
  closed: true,
  next: function(value) {
  },
  error: function(err) {
    if (config.useDeprecatedSynchronousErrorHandling) {
      throw err;
    } else {
      hostReportError(err);
    }
  },
  complete: function() {
  }
};
var isArray = Array.isArray || function(x2) {
  return x2 && typeof x2.length === "number";
};
function isObject(x2) {
  return x2 !== null && typeof x2 === "object";
}
function UnsubscriptionErrorImpl(errors) {
  Error.call(this);
  this.message = errors ? errors.length + " errors occurred during unsubscription:\n" + errors.map(function(err, i2) {
    return i2 + 1 + ") " + err.toString();
  }).join("\n  ") : "";
  this.name = "UnsubscriptionError";
  this.errors = errors;
  return this;
}
UnsubscriptionErrorImpl.prototype = /* @__PURE__ */ Object.create(Error.prototype);
var UnsubscriptionError = UnsubscriptionErrorImpl;
var Subscription = /* @__PURE__ */ function() {
  function Subscription2(unsubscribe) {
    this.closed = false;
    this._parent = null;
    this._parents = null;
    this._subscriptions = null;
    if (unsubscribe) {
      this._unsubscribe = unsubscribe;
    }
  }
  Subscription2.prototype.unsubscribe = function() {
    var hasErrors = false;
    var errors;
    if (this.closed) {
      return;
    }
    var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;
    this.closed = true;
    this._parent = null;
    this._parents = null;
    this._subscriptions = null;
    var index = -1;
    var len2 = _parents ? _parents.length : 0;
    while (_parent) {
      _parent.remove(this);
      _parent = ++index < len2 && _parents[index] || null;
    }
    if (isFunction(_unsubscribe)) {
      try {
        _unsubscribe.call(this);
      } catch (e2) {
        hasErrors = true;
        errors = e2 instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e2.errors) : [e2];
      }
    }
    if (isArray(_subscriptions)) {
      index = -1;
      len2 = _subscriptions.length;
      while (++index < len2) {
        var sub = _subscriptions[index];
        if (isObject(sub)) {
          try {
            sub.unsubscribe();
          } catch (e2) {
            hasErrors = true;
            errors = errors || [];
            if (e2 instanceof UnsubscriptionError) {
              errors = errors.concat(flattenUnsubscriptionErrors(e2.errors));
            } else {
              errors.push(e2);
            }
          }
        }
      }
    }
    if (hasErrors) {
      throw new UnsubscriptionError(errors);
    }
  };
  Subscription2.prototype.add = function(teardown) {
    var subscription = teardown;
    switch (typeof teardown) {
      case "function":
        subscription = new Subscription2(teardown);
      case "object":
        if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== "function") {
          return subscription;
        } else if (this.closed) {
          subscription.unsubscribe();
          return subscription;
        } else if (!(subscription instanceof Subscription2)) {
          var tmp = subscription;
          subscription = new Subscription2();
          subscription._subscriptions = [tmp];
        }
        break;
      default: {
        if (!teardown) {
          return Subscription2.EMPTY;
        }
        throw new Error("unrecognized teardown " + teardown + " added to Subscription.");
      }
    }
    if (subscription._addParent(this)) {
      var subscriptions = this._subscriptions;
      if (subscriptions) {
        subscriptions.push(subscription);
      } else {
        this._subscriptions = [subscription];
      }
    }
    return subscription;
  };
  Subscription2.prototype.remove = function(subscription) {
    var subscriptions = this._subscriptions;
    if (subscriptions) {
      var subscriptionIndex = subscriptions.indexOf(subscription);
      if (subscriptionIndex !== -1) {
        subscriptions.splice(subscriptionIndex, 1);
      }
    }
  };
  Subscription2.prototype._addParent = function(parent) {
    var _a = this, _parent = _a._parent, _parents = _a._parents;
    if (_parent === parent) {
      return false;
    } else if (!_parent) {
      this._parent = parent;
      return true;
    } else if (!_parents) {
      this._parents = [parent];
      return true;
    } else if (_parents.indexOf(parent) === -1) {
      _parents.push(parent);
      return true;
    }
    return false;
  };
  Subscription2.EMPTY = function(empty2) {
    empty2.closed = true;
    return empty2;
  }(new Subscription2());
  return Subscription2;
}();
function flattenUnsubscriptionErrors(errors) {
  return errors.reduce(function(errs, err) {
    return errs.concat(err instanceof UnsubscriptionError ? err.errors : err);
  }, []);
}
var rxSubscriber = typeof Symbol === "function" ? /* @__PURE__ */ Symbol("rxSubscriber") : "@@rxSubscriber_" + /* @__PURE__ */ Math.random();
var Subscriber = /* @__PURE__ */ function(_super) {
  __extends(Subscriber2, _super);
  function Subscriber2(destinationOrNext, error, complete) {
    var _this = _super.call(this) || this;
    _this.syncErrorValue = null;
    _this.syncErrorThrown = false;
    _this.syncErrorThrowable = false;
    _this.isStopped = false;
    switch (arguments.length) {
      case 0:
        _this.destination = empty$1;
        break;
      case 1:
        if (!destinationOrNext) {
          _this.destination = empty$1;
          break;
        }
        if (typeof destinationOrNext === "object") {
          if (destinationOrNext instanceof Subscriber2) {
            _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;
            _this.destination = destinationOrNext;
            destinationOrNext.add(_this);
          } else {
            _this.syncErrorThrowable = true;
            _this.destination = new SafeSubscriber(_this, destinationOrNext);
          }
          break;
        }
      default:
        _this.syncErrorThrowable = true;
        _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);
        break;
    }
    return _this;
  }
  Subscriber2.prototype[rxSubscriber] = function() {
    return this;
  };
  Subscriber2.create = function(next2, error, complete) {
    var subscriber = new Subscriber2(next2, error, complete);
    subscriber.syncErrorThrowable = false;
    return subscriber;
  };
  Subscriber2.prototype.next = function(value) {
    if (!this.isStopped) {
      this._next(value);
    }
  };
  Subscriber2.prototype.error = function(err) {
    if (!this.isStopped) {
      this.isStopped = true;
      this._error(err);
    }
  };
  Subscriber2.prototype.complete = function() {
    if (!this.isStopped) {
      this.isStopped = true;
      this._complete();
    }
  };
  Subscriber2.prototype.unsubscribe = function() {
    if (this.closed) {
      return;
    }
    this.isStopped = true;
    _super.prototype.unsubscribe.call(this);
  };
  Subscriber2.prototype._next = function(value) {
    this.destination.next(value);
  };
  Subscriber2.prototype._error = function(err) {
    this.destination.error(err);
    this.unsubscribe();
  };
  Subscriber2.prototype._complete = function() {
    this.destination.complete();
    this.unsubscribe();
  };
  Subscriber2.prototype._unsubscribeAndRecycle = function() {
    var _a = this, _parent = _a._parent, _parents = _a._parents;
    this._parent = null;
    this._parents = null;
    this.unsubscribe();
    this.closed = false;
    this.isStopped = false;
    this._parent = _parent;
    this._parents = _parents;
    return this;
  };
  return Subscriber2;
}(Subscription);
var SafeSubscriber = /* @__PURE__ */ function(_super) {
  __extends(SafeSubscriber2, _super);
  function SafeSubscriber2(_parentSubscriber, observerOrNext, error, complete) {
    var _this = _super.call(this) || this;
    _this._parentSubscriber = _parentSubscriber;
    var next2;
    var context = _this;
    if (isFunction(observerOrNext)) {
      next2 = observerOrNext;
    } else if (observerOrNext) {
      next2 = observerOrNext.next;
      error = observerOrNext.error;
      complete = observerOrNext.complete;
      if (observerOrNext !== empty$1) {
        context = Object.create(observerOrNext);
        if (isFunction(context.unsubscribe)) {
          _this.add(context.unsubscribe.bind(context));
        }
        context.unsubscribe = _this.unsubscribe.bind(_this);
      }
    }
    _this._context = context;
    _this._next = next2;
    _this._error = error;
    _this._complete = complete;
    return _this;
  }
  SafeSubscriber2.prototype.next = function(value) {
    if (!this.isStopped && this._next) {
      var _parentSubscriber = this._parentSubscriber;
      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
        this.__tryOrUnsub(this._next, value);
      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
        this.unsubscribe();
      }
    }
  };
  SafeSubscriber2.prototype.error = function(err) {
    if (!this.isStopped) {
      var _parentSubscriber = this._parentSubscriber;
      var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;
      if (this._error) {
        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
          this.__tryOrUnsub(this._error, err);
          this.unsubscribe();
        } else {
          this.__tryOrSetError(_parentSubscriber, this._error, err);
          this.unsubscribe();
        }
      } else if (!_parentSubscriber.syncErrorThrowable) {
        this.unsubscribe();
        if (useDeprecatedSynchronousErrorHandling) {
          throw err;
        }
        hostReportError(err);
      } else {
        if (useDeprecatedSynchronousErrorHandling) {
          _parentSubscriber.syncErrorValue = err;
          _parentSubscriber.syncErrorThrown = true;
        } else {
          hostReportError(err);
        }
        this.unsubscribe();
      }
    }
  };
  SafeSubscriber2.prototype.complete = function() {
    var _this = this;
    if (!this.isStopped) {
      var _parentSubscriber = this._parentSubscriber;
      if (this._complete) {
        var wrappedComplete = function() {
          return _this._complete.call(_this._context);
        };
        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
          this.__tryOrUnsub(wrappedComplete);
          this.unsubscribe();
        } else {
          this.__tryOrSetError(_parentSubscriber, wrappedComplete);
          this.unsubscribe();
        }
      } else {
        this.unsubscribe();
      }
    }
  };
  SafeSubscriber2.prototype.__tryOrUnsub = function(fn, value) {
    try {
      fn.call(this._context, value);
    } catch (err) {
      this.unsubscribe();
      if (config.useDeprecatedSynchronousErrorHandling) {
        throw err;
      } else {
        hostReportError(err);
      }
    }
  };
  SafeSubscriber2.prototype.__tryOrSetError = function(parent, fn, value) {
    if (!config.useDeprecatedSynchronousErrorHandling) {
      throw new Error("bad call");
    }
    try {
      fn.call(this._context, value);
    } catch (err) {
      if (config.useDeprecatedSynchronousErrorHandling) {
        parent.syncErrorValue = err;
        parent.syncErrorThrown = true;
        return true;
      } else {
        hostReportError(err);
        return true;
      }
    }
    return false;
  };
  SafeSubscriber2.prototype._unsubscribe = function() {
    var _parentSubscriber = this._parentSubscriber;
    this._context = null;
    this._parentSubscriber = null;
    _parentSubscriber.unsubscribe();
  };
  return SafeSubscriber2;
}(Subscriber);
function canReportError(observer) {
  while (observer) {
    var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;
    if (closed_1 || isStopped) {
      return false;
    } else if (destination && destination instanceof Subscriber) {
      observer = destination;
    } else {
      observer = null;
    }
  }
  return true;
}
function toSubscriber(nextOrObserver, error, complete) {
  if (nextOrObserver) {
    if (nextOrObserver instanceof Subscriber) {
      return nextOrObserver;
    }
    if (nextOrObserver[rxSubscriber]) {
      return nextOrObserver[rxSubscriber]();
    }
  }
  if (!nextOrObserver && !error && !complete) {
    return new Subscriber(empty$1);
  }
  return new Subscriber(nextOrObserver, error, complete);
}
var observable = typeof Symbol === "function" && Symbol.observable || "@@observable";
function noop() {
}
function pipe() {
  var fns = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    fns[_i] = arguments[_i];
  }
  return pipeFromArray(fns);
}
function pipeFromArray(fns) {
  if (!fns) {
    return noop;
  }
  if (fns.length === 1) {
    return fns[0];
  }
  return function piped(input) {
    return fns.reduce(function(prev2, fn) {
      return fn(prev2);
    }, input);
  };
}
var Observable = /* @__PURE__ */ function() {
  function Observable2(subscribe) {
    this._isScalar = false;
    if (subscribe) {
      this._subscribe = subscribe;
    }
  }
  Observable2.prototype.lift = function(operator) {
    var observable2 = new Observable2();
    observable2.source = this;
    observable2.operator = operator;
    return observable2;
  };
  Observable2.prototype.subscribe = function(observerOrNext, error, complete) {
    var operator = this.operator;
    var sink = toSubscriber(observerOrNext, error, complete);
    if (operator) {
      sink.add(operator.call(sink, this.source));
    } else {
      sink.add(this.source || config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));
    }
    if (config.useDeprecatedSynchronousErrorHandling) {
      if (sink.syncErrorThrowable) {
        sink.syncErrorThrowable = false;
        if (sink.syncErrorThrown) {
          throw sink.syncErrorValue;
        }
      }
    }
    return sink;
  };
  Observable2.prototype._trySubscribe = function(sink) {
    try {
      return this._subscribe(sink);
    } catch (err) {
      if (config.useDeprecatedSynchronousErrorHandling) {
        sink.syncErrorThrown = true;
        sink.syncErrorValue = err;
      }
      if (canReportError(sink)) {
        sink.error(err);
      } else {
        console.warn(err);
      }
    }
  };
  Observable2.prototype.forEach = function(next2, promiseCtor) {
    var _this = this;
    promiseCtor = getPromiseCtor(promiseCtor);
    return new promiseCtor(function(resolve, reject) {
      var subscription;
      subscription = _this.subscribe(function(value) {
        try {
          next2(value);
        } catch (err) {
          reject(err);
          if (subscription) {
            subscription.unsubscribe();
          }
        }
      }, reject, resolve);
    });
  };
  Observable2.prototype._subscribe = function(subscriber) {
    var source = this.source;
    return source && source.subscribe(subscriber);
  };
  Observable2.prototype[observable] = function() {
    return this;
  };
  Observable2.prototype.pipe = function() {
    var operations = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      operations[_i] = arguments[_i];
    }
    if (operations.length === 0) {
      return this;
    }
    return pipeFromArray(operations)(this);
  };
  Observable2.prototype.toPromise = function(promiseCtor) {
    var _this = this;
    promiseCtor = getPromiseCtor(promiseCtor);
    return new promiseCtor(function(resolve, reject) {
      var value;
      _this.subscribe(function(x2) {
        return value = x2;
      }, function(err) {
        return reject(err);
      }, function() {
        return resolve(value);
      });
    });
  };
  Observable2.create = function(subscribe) {
    return new Observable2(subscribe);
  };
  return Observable2;
}();
function getPromiseCtor(promiseCtor) {
  if (!promiseCtor) {
    promiseCtor = config.Promise || Promise;
  }
  if (!promiseCtor) {
    throw new Error("no Promise impl found");
  }
  return promiseCtor;
}
function ObjectUnsubscribedErrorImpl() {
  Error.call(this);
  this.message = "object unsubscribed";
  this.name = "ObjectUnsubscribedError";
  return this;
}
ObjectUnsubscribedErrorImpl.prototype = /* @__PURE__ */ Object.create(Error.prototype);
var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;
var SubjectSubscription = /* @__PURE__ */ function(_super) {
  __extends(SubjectSubscription2, _super);
  function SubjectSubscription2(subject, subscriber) {
    var _this = _super.call(this) || this;
    _this.subject = subject;
    _this.subscriber = subscriber;
    _this.closed = false;
    return _this;
  }
  SubjectSubscription2.prototype.unsubscribe = function() {
    if (this.closed) {
      return;
    }
    this.closed = true;
    var subject = this.subject;
    var observers = subject.observers;
    this.subject = null;
    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {
      return;
    }
    var subscriberIndex = observers.indexOf(this.subscriber);
    if (subscriberIndex !== -1) {
      observers.splice(subscriberIndex, 1);
    }
  };
  return SubjectSubscription2;
}(Subscription);
var SubjectSubscriber = /* @__PURE__ */ function(_super) {
  __extends(SubjectSubscriber2, _super);
  function SubjectSubscriber2(destination) {
    var _this = _super.call(this, destination) || this;
    _this.destination = destination;
    return _this;
  }
  return SubjectSubscriber2;
}(Subscriber);
var Subject = /* @__PURE__ */ function(_super) {
  __extends(Subject2, _super);
  function Subject2() {
    var _this = _super.call(this) || this;
    _this.observers = [];
    _this.closed = false;
    _this.isStopped = false;
    _this.hasError = false;
    _this.thrownError = null;
    return _this;
  }
  Subject2.prototype[rxSubscriber] = function() {
    return new SubjectSubscriber(this);
  };
  Subject2.prototype.lift = function(operator) {
    var subject = new AnonymousSubject(this, this);
    subject.operator = operator;
    return subject;
  };
  Subject2.prototype.next = function(value) {
    if (this.closed) {
      throw new ObjectUnsubscribedError();
    }
    if (!this.isStopped) {
      var observers = this.observers;
      var len2 = observers.length;
      var copy2 = observers.slice();
      for (var i2 = 0; i2 < len2; i2++) {
        copy2[i2].next(value);
      }
    }
  };
  Subject2.prototype.error = function(err) {
    if (this.closed) {
      throw new ObjectUnsubscribedError();
    }
    this.hasError = true;
    this.thrownError = err;
    this.isStopped = true;
    var observers = this.observers;
    var len2 = observers.length;
    var copy2 = observers.slice();
    for (var i2 = 0; i2 < len2; i2++) {
      copy2[i2].error(err);
    }
    this.observers.length = 0;
  };
  Subject2.prototype.complete = function() {
    if (this.closed) {
      throw new ObjectUnsubscribedError();
    }
    this.isStopped = true;
    var observers = this.observers;
    var len2 = observers.length;
    var copy2 = observers.slice();
    for (var i2 = 0; i2 < len2; i2++) {
      copy2[i2].complete();
    }
    this.observers.length = 0;
  };
  Subject2.prototype.unsubscribe = function() {
    this.isStopped = true;
    this.closed = true;
    this.observers = null;
  };
  Subject2.prototype._trySubscribe = function(subscriber) {
    if (this.closed) {
      throw new ObjectUnsubscribedError();
    } else {
      return _super.prototype._trySubscribe.call(this, subscriber);
    }
  };
  Subject2.prototype._subscribe = function(subscriber) {
    if (this.closed) {
      throw new ObjectUnsubscribedError();
    } else if (this.hasError) {
      subscriber.error(this.thrownError);
      return Subscription.EMPTY;
    } else if (this.isStopped) {
      subscriber.complete();
      return Subscription.EMPTY;
    } else {
      this.observers.push(subscriber);
      return new SubjectSubscription(this, subscriber);
    }
  };
  Subject2.prototype.asObservable = function() {
    var observable2 = new Observable();
    observable2.source = this;
    return observable2;
  };
  Subject2.create = function(destination, source) {
    return new AnonymousSubject(destination, source);
  };
  return Subject2;
}(Observable);
var AnonymousSubject = /* @__PURE__ */ function(_super) {
  __extends(AnonymousSubject2, _super);
  function AnonymousSubject2(destination, source) {
    var _this = _super.call(this) || this;
    _this.destination = destination;
    _this.source = source;
    return _this;
  }
  AnonymousSubject2.prototype.next = function(value) {
    var destination = this.destination;
    if (destination && destination.next) {
      destination.next(value);
    }
  };
  AnonymousSubject2.prototype.error = function(err) {
    var destination = this.destination;
    if (destination && destination.error) {
      this.destination.error(err);
    }
  };
  AnonymousSubject2.prototype.complete = function() {
    var destination = this.destination;
    if (destination && destination.complete) {
      this.destination.complete();
    }
  };
  AnonymousSubject2.prototype._subscribe = function(subscriber) {
    var source = this.source;
    if (source) {
      return this.source.subscribe(subscriber);
    } else {
      return Subscription.EMPTY;
    }
  };
  return AnonymousSubject2;
}(Subject);
function refCount() {
  return function refCountOperatorFunction(source) {
    return source.lift(new RefCountOperator(source));
  };
}
var RefCountOperator = /* @__PURE__ */ function() {
  function RefCountOperator2(connectable) {
    this.connectable = connectable;
  }
  RefCountOperator2.prototype.call = function(subscriber, source) {
    var connectable = this.connectable;
    connectable._refCount++;
    var refCounter = new RefCountSubscriber(subscriber, connectable);
    var subscription = source.subscribe(refCounter);
    if (!refCounter.closed) {
      refCounter.connection = connectable.connect();
    }
    return subscription;
  };
  return RefCountOperator2;
}();
var RefCountSubscriber = /* @__PURE__ */ function(_super) {
  __extends(RefCountSubscriber2, _super);
  function RefCountSubscriber2(destination, connectable) {
    var _this = _super.call(this, destination) || this;
    _this.connectable = connectable;
    return _this;
  }
  RefCountSubscriber2.prototype._unsubscribe = function() {
    var connectable = this.connectable;
    if (!connectable) {
      this.connection = null;
      return;
    }
    this.connectable = null;
    var refCount2 = connectable._refCount;
    if (refCount2 <= 0) {
      this.connection = null;
      return;
    }
    connectable._refCount = refCount2 - 1;
    if (refCount2 > 1) {
      this.connection = null;
      return;
    }
    var connection = this.connection;
    var sharedConnection = connectable._connection;
    this.connection = null;
    if (sharedConnection && (!connection || sharedConnection === connection)) {
      sharedConnection.unsubscribe();
    }
  };
  return RefCountSubscriber2;
}(Subscriber);
var ConnectableObservable = /* @__PURE__ */ function(_super) {
  __extends(ConnectableObservable2, _super);
  function ConnectableObservable2(source, subjectFactory) {
    var _this = _super.call(this) || this;
    _this.source = source;
    _this.subjectFactory = subjectFactory;
    _this._refCount = 0;
    _this._isComplete = false;
    return _this;
  }
  ConnectableObservable2.prototype._subscribe = function(subscriber) {
    return this.getSubject().subscribe(subscriber);
  };
  ConnectableObservable2.prototype.getSubject = function() {
    var subject = this._subject;
    if (!subject || subject.isStopped) {
      this._subject = this.subjectFactory();
    }
    return this._subject;
  };
  ConnectableObservable2.prototype.connect = function() {
    var connection = this._connection;
    if (!connection) {
      this._isComplete = false;
      connection = this._connection = new Subscription();
      connection.add(this.source.subscribe(new ConnectableSubscriber(this.getSubject(), this)));
      if (connection.closed) {
        this._connection = null;
        connection = Subscription.EMPTY;
      } else {
        this._connection = connection;
      }
    }
    return connection;
  };
  ConnectableObservable2.prototype.refCount = function() {
    return refCount()(this);
  };
  return ConnectableObservable2;
}(Observable);
var connectableProto = ConnectableObservable.prototype;
({
  operator: { value: null },
  _refCount: { value: 0, writable: true },
  _subject: { value: null, writable: true },
  _connection: { value: null, writable: true },
  _subscribe: { value: connectableProto._subscribe },
  _isComplete: { value: connectableProto._isComplete, writable: true },
  getSubject: { value: connectableProto.getSubject },
  connect: { value: connectableProto.connect },
  refCount: { value: connectableProto.refCount }
});
var ConnectableSubscriber = /* @__PURE__ */ function(_super) {
  __extends(ConnectableSubscriber2, _super);
  function ConnectableSubscriber2(destination, connectable) {
    var _this = _super.call(this, destination) || this;
    _this.connectable = connectable;
    return _this;
  }
  ConnectableSubscriber2.prototype._error = function(err) {
    this._unsubscribe();
    _super.prototype._error.call(this, err);
  };
  ConnectableSubscriber2.prototype._complete = function() {
    this.connectable._isComplete = true;
    this._unsubscribe();
    _super.prototype._complete.call(this);
  };
  ConnectableSubscriber2.prototype._unsubscribe = function() {
    var connectable = this.connectable;
    if (connectable) {
      this.connectable = null;
      var connection = connectable._connection;
      connectable._refCount = 0;
      connectable._subject = null;
      connectable._connection = null;
      if (connection) {
        connection.unsubscribe();
      }
    }
  };
  return ConnectableSubscriber2;
}(SubjectSubscriber);
var GroupedObservable = /* @__PURE__ */ function(_super) {
  __extends(GroupedObservable2, _super);
  function GroupedObservable2(key, groupSubject, refCountSubscription) {
    var _this = _super.call(this) || this;
    _this.key = key;
    _this.groupSubject = groupSubject;
    _this.refCountSubscription = refCountSubscription;
    return _this;
  }
  GroupedObservable2.prototype._subscribe = function(subscriber) {
    var subscription = new Subscription();
    var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;
    if (refCountSubscription && !refCountSubscription.closed) {
      subscription.add(new InnerRefCountSubscription(refCountSubscription));
    }
    subscription.add(groupSubject.subscribe(subscriber));
    return subscription;
  };
  return GroupedObservable2;
}(Observable);
var InnerRefCountSubscription = /* @__PURE__ */ function(_super) {
  __extends(InnerRefCountSubscription2, _super);
  function InnerRefCountSubscription2(parent) {
    var _this = _super.call(this) || this;
    _this.parent = parent;
    parent.count++;
    return _this;
  }
  InnerRefCountSubscription2.prototype.unsubscribe = function() {
    var parent = this.parent;
    if (!parent.closed && !this.closed) {
      _super.prototype.unsubscribe.call(this);
      parent.count -= 1;
      if (parent.count === 0 && parent.attemptedToUnsubscribe) {
        parent.unsubscribe();
      }
    }
  };
  return InnerRefCountSubscription2;
}(Subscription);
var BehaviorSubject = /* @__PURE__ */ function(_super) {
  __extends(BehaviorSubject2, _super);
  function BehaviorSubject2(_value) {
    var _this = _super.call(this) || this;
    _this._value = _value;
    return _this;
  }
  Object.defineProperty(BehaviorSubject2.prototype, "value", {
    get: function() {
      return this.getValue();
    },
    enumerable: true,
    configurable: true
  });
  BehaviorSubject2.prototype._subscribe = function(subscriber) {
    var subscription = _super.prototype._subscribe.call(this, subscriber);
    if (subscription && !subscription.closed) {
      subscriber.next(this._value);
    }
    return subscription;
  };
  BehaviorSubject2.prototype.getValue = function() {
    if (this.hasError) {
      throw this.thrownError;
    } else if (this.closed) {
      throw new ObjectUnsubscribedError();
    } else {
      return this._value;
    }
  };
  BehaviorSubject2.prototype.next = function(value) {
    _super.prototype.next.call(this, this._value = value);
  };
  return BehaviorSubject2;
}(Subject);
var Action = /* @__PURE__ */ function(_super) {
  __extends(Action2, _super);
  function Action2(scheduler2, work) {
    return _super.call(this) || this;
  }
  Action2.prototype.schedule = function(state, delay) {
    return this;
  };
  return Action2;
}(Subscription);
var AsyncAction = /* @__PURE__ */ function(_super) {
  __extends(AsyncAction2, _super);
  function AsyncAction2(scheduler2, work) {
    var _this = _super.call(this, scheduler2, work) || this;
    _this.scheduler = scheduler2;
    _this.work = work;
    _this.pending = false;
    return _this;
  }
  AsyncAction2.prototype.schedule = function(state, delay) {
    if (delay === void 0) {
      delay = 0;
    }
    if (this.closed) {
      return this;
    }
    this.state = state;
    var id2 = this.id;
    var scheduler2 = this.scheduler;
    if (id2 != null) {
      this.id = this.recycleAsyncId(scheduler2, id2, delay);
    }
    this.pending = true;
    this.delay = delay;
    this.id = this.id || this.requestAsyncId(scheduler2, this.id, delay);
    return this;
  };
  AsyncAction2.prototype.requestAsyncId = function(scheduler2, id2, delay) {
    if (delay === void 0) {
      delay = 0;
    }
    return setInterval(scheduler2.flush.bind(scheduler2, this), delay);
  };
  AsyncAction2.prototype.recycleAsyncId = function(scheduler2, id2, delay) {
    if (delay === void 0) {
      delay = 0;
    }
    if (delay !== null && this.delay === delay && this.pending === false) {
      return id2;
    }
    clearInterval(id2);
    return void 0;
  };
  AsyncAction2.prototype.execute = function(state, delay) {
    if (this.closed) {
      return new Error("executing a cancelled action");
    }
    this.pending = false;
    var error = this._execute(state, delay);
    if (error) {
      return error;
    } else if (this.pending === false && this.id != null) {
      this.id = this.recycleAsyncId(this.scheduler, this.id, null);
    }
  };
  AsyncAction2.prototype._execute = function(state, delay) {
    var errored = false;
    var errorValue = void 0;
    try {
      this.work(state);
    } catch (e2) {
      errored = true;
      errorValue = !!e2 && e2 || new Error(e2);
    }
    if (errored) {
      this.unsubscribe();
      return errorValue;
    }
  };
  AsyncAction2.prototype._unsubscribe = function() {
    var id2 = this.id;
    var scheduler2 = this.scheduler;
    var actions = scheduler2.actions;
    var index = actions.indexOf(this);
    this.work = null;
    this.state = null;
    this.pending = false;
    this.scheduler = null;
    if (index !== -1) {
      actions.splice(index, 1);
    }
    if (id2 != null) {
      this.id = this.recycleAsyncId(scheduler2, id2, null);
    }
    this.delay = null;
  };
  return AsyncAction2;
}(Action);
var QueueAction = /* @__PURE__ */ function(_super) {
  __extends(QueueAction2, _super);
  function QueueAction2(scheduler2, work) {
    var _this = _super.call(this, scheduler2, work) || this;
    _this.scheduler = scheduler2;
    _this.work = work;
    return _this;
  }
  QueueAction2.prototype.schedule = function(state, delay) {
    if (delay === void 0) {
      delay = 0;
    }
    if (delay > 0) {
      return _super.prototype.schedule.call(this, state, delay);
    }
    this.delay = delay;
    this.state = state;
    this.scheduler.flush(this);
    return this;
  };
  QueueAction2.prototype.execute = function(state, delay) {
    return delay > 0 || this.closed ? _super.prototype.execute.call(this, state, delay) : this._execute(state, delay);
  };
  QueueAction2.prototype.requestAsyncId = function(scheduler2, id2, delay) {
    if (delay === void 0) {
      delay = 0;
    }
    if (delay !== null && delay > 0 || delay === null && this.delay > 0) {
      return _super.prototype.requestAsyncId.call(this, scheduler2, id2, delay);
    }
    return scheduler2.flush(this);
  };
  return QueueAction2;
}(AsyncAction);
var Scheduler = /* @__PURE__ */ function() {
  function Scheduler2(SchedulerAction, now) {
    if (now === void 0) {
      now = Scheduler2.now;
    }
    this.SchedulerAction = SchedulerAction;
    this.now = now;
  }
  Scheduler2.prototype.schedule = function(work, delay, state) {
    if (delay === void 0) {
      delay = 0;
    }
    return new this.SchedulerAction(this, work).schedule(state, delay);
  };
  Scheduler2.now = function() {
    return Date.now();
  };
  return Scheduler2;
}();
var AsyncScheduler = /* @__PURE__ */ function(_super) {
  __extends(AsyncScheduler2, _super);
  function AsyncScheduler2(SchedulerAction, now) {
    if (now === void 0) {
      now = Scheduler.now;
    }
    var _this = _super.call(this, SchedulerAction, function() {
      if (AsyncScheduler2.delegate && AsyncScheduler2.delegate !== _this) {
        return AsyncScheduler2.delegate.now();
      } else {
        return now();
      }
    }) || this;
    _this.actions = [];
    _this.active = false;
    _this.scheduled = void 0;
    return _this;
  }
  AsyncScheduler2.prototype.schedule = function(work, delay, state) {
    if (delay === void 0) {
      delay = 0;
    }
    if (AsyncScheduler2.delegate && AsyncScheduler2.delegate !== this) {
      return AsyncScheduler2.delegate.schedule(work, delay, state);
    } else {
      return _super.prototype.schedule.call(this, work, delay, state);
    }
  };
  AsyncScheduler2.prototype.flush = function(action) {
    var actions = this.actions;
    if (this.active) {
      actions.push(action);
      return;
    }
    var error;
    this.active = true;
    do {
      if (error = action.execute(action.state, action.delay)) {
        break;
      }
    } while (action = actions.shift());
    this.active = false;
    if (error) {
      while (action = actions.shift()) {
        action.unsubscribe();
      }
      throw error;
    }
  };
  return AsyncScheduler2;
}(Scheduler);
var QueueScheduler = /* @__PURE__ */ function(_super) {
  __extends(QueueScheduler2, _super);
  function QueueScheduler2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  return QueueScheduler2;
}(AsyncScheduler);
var queue = /* @__PURE__ */ new QueueScheduler(QueueAction);
var EMPTY = /* @__PURE__ */ new Observable(function(subscriber) {
  return subscriber.complete();
});
function empty(scheduler2) {
  return scheduler2 ? emptyScheduled(scheduler2) : EMPTY;
}
function emptyScheduled(scheduler2) {
  return new Observable(function(subscriber) {
    return scheduler2.schedule(function() {
      return subscriber.complete();
    });
  });
}
function isScheduler(value) {
  return value && typeof value.schedule === "function";
}
var subscribeToArray = function(array) {
  return function(subscriber) {
    for (var i2 = 0, len2 = array.length; i2 < len2 && !subscriber.closed; i2++) {
      subscriber.next(array[i2]);
    }
    if (!subscriber.closed) {
      subscriber.complete();
    }
  };
};
function fromArray(input, scheduler2) {
  if (!scheduler2) {
    return new Observable(subscribeToArray(input));
  } else {
    return new Observable(function(subscriber) {
      var sub = new Subscription();
      var i2 = 0;
      sub.add(scheduler2.schedule(function() {
        if (i2 === input.length) {
          subscriber.complete();
          return;
        }
        subscriber.next(input[i2++]);
        if (!subscriber.closed) {
          sub.add(this.schedule());
        }
      }));
      return sub;
    });
  }
}
function scalar(value) {
  var result = new Observable(function(subscriber) {
    subscriber.next(value);
    subscriber.complete();
  });
  result._isScalar = true;
  result.value = value;
  return result;
}
function of() {
  var args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }
  var scheduler2 = args[args.length - 1];
  if (isScheduler(scheduler2)) {
    args.pop();
  } else {
    scheduler2 = void 0;
  }
  switch (args.length) {
    case 0:
      return empty(scheduler2);
    case 1:
      return scheduler2 ? fromArray(args, scheduler2) : scalar(args[0]);
    default:
      return fromArray(args, scheduler2);
  }
}
function throwError(error, scheduler2) {
  if (!scheduler2) {
    return new Observable(function(subscriber) {
      return subscriber.error(error);
    });
  } else {
    return new Observable(function(subscriber) {
      return scheduler2.schedule(dispatch$7, 0, { error, subscriber });
    });
  }
}
function dispatch$7(_a) {
  var error = _a.error, subscriber = _a.subscriber;
  subscriber.error(error);
}
var Notification = /* @__PURE__ */ function() {
  function Notification2(kind, value, error) {
    this.kind = kind;
    this.value = value;
    this.error = error;
    this.hasValue = kind === "N";
  }
  Notification2.prototype.observe = function(observer) {
    switch (this.kind) {
      case "N":
        return observer.next && observer.next(this.value);
      case "E":
        return observer.error && observer.error(this.error);
      case "C":
        return observer.complete && observer.complete();
    }
  };
  Notification2.prototype.do = function(next2, error, complete) {
    var kind = this.kind;
    switch (kind) {
      case "N":
        return next2 && next2(this.value);
      case "E":
        return error && error(this.error);
      case "C":
        return complete && complete();
    }
  };
  Notification2.prototype.accept = function(nextOrObserver, error, complete) {
    if (nextOrObserver && typeof nextOrObserver.next === "function") {
      return this.observe(nextOrObserver);
    } else {
      return this.do(nextOrObserver, error, complete);
    }
  };
  Notification2.prototype.toObservable = function() {
    var kind = this.kind;
    switch (kind) {
      case "N":
        return of(this.value);
      case "E":
        return throwError(this.error);
      case "C":
        return empty();
    }
    throw new Error("unexpected notification kind value");
  };
  Notification2.createNext = function(value) {
    if (typeof value !== "undefined") {
      return new Notification2("N", value);
    }
    return Notification2.undefinedValueNotification;
  };
  Notification2.createError = function(err) {
    return new Notification2("E", void 0, err);
  };
  Notification2.createComplete = function() {
    return Notification2.completeNotification;
  };
  Notification2.completeNotification = new Notification2("C");
  Notification2.undefinedValueNotification = new Notification2("N", void 0);
  return Notification2;
}();
var ObserveOnSubscriber = /* @__PURE__ */ function(_super) {
  __extends(ObserveOnSubscriber2, _super);
  function ObserveOnSubscriber2(destination, scheduler2, delay) {
    if (delay === void 0) {
      delay = 0;
    }
    var _this = _super.call(this, destination) || this;
    _this.scheduler = scheduler2;
    _this.delay = delay;
    return _this;
  }
  ObserveOnSubscriber2.dispatch = function(arg) {
    var notification = arg.notification, destination = arg.destination;
    notification.observe(destination);
    this.unsubscribe();
  };
  ObserveOnSubscriber2.prototype.scheduleMessage = function(notification) {
    var destination = this.destination;
    destination.add(this.scheduler.schedule(ObserveOnSubscriber2.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));
  };
  ObserveOnSubscriber2.prototype._next = function(value) {
    this.scheduleMessage(Notification.createNext(value));
  };
  ObserveOnSubscriber2.prototype._error = function(err) {
    this.scheduleMessage(Notification.createError(err));
    this.unsubscribe();
  };
  ObserveOnSubscriber2.prototype._complete = function() {
    this.scheduleMessage(Notification.createComplete());
    this.unsubscribe();
  };
  return ObserveOnSubscriber2;
}(Subscriber);
var ObserveOnMessage = /* @__PURE__ */ function() {
  function ObserveOnMessage2(notification, destination) {
    this.notification = notification;
    this.destination = destination;
  }
  return ObserveOnMessage2;
}();
var ReplaySubject = /* @__PURE__ */ function(_super) {
  __extends(ReplaySubject2, _super);
  function ReplaySubject2(bufferSize, windowTime, scheduler2) {
    if (bufferSize === void 0) {
      bufferSize = Number.POSITIVE_INFINITY;
    }
    if (windowTime === void 0) {
      windowTime = Number.POSITIVE_INFINITY;
    }
    var _this = _super.call(this) || this;
    _this.scheduler = scheduler2;
    _this._events = [];
    _this._infiniteTimeWindow = false;
    _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;
    _this._windowTime = windowTime < 1 ? 1 : windowTime;
    if (windowTime === Number.POSITIVE_INFINITY) {
      _this._infiniteTimeWindow = true;
      _this.next = _this.nextInfiniteTimeWindow;
    } else {
      _this.next = _this.nextTimeWindow;
    }
    return _this;
  }
  ReplaySubject2.prototype.nextInfiniteTimeWindow = function(value) {
    var _events = this._events;
    _events.push(value);
    if (_events.length > this._bufferSize) {
      _events.shift();
    }
    _super.prototype.next.call(this, value);
  };
  ReplaySubject2.prototype.nextTimeWindow = function(value) {
    this._events.push(new ReplayEvent(this._getNow(), value));
    this._trimBufferThenGetEvents();
    _super.prototype.next.call(this, value);
  };
  ReplaySubject2.prototype._subscribe = function(subscriber) {
    var _infiniteTimeWindow = this._infiniteTimeWindow;
    var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();
    var scheduler2 = this.scheduler;
    var len2 = _events.length;
    var subscription;
    if (this.closed) {
      throw new ObjectUnsubscribedError();
    } else if (this.isStopped || this.hasError) {
      subscription = Subscription.EMPTY;
    } else {
      this.observers.push(subscriber);
      subscription = new SubjectSubscription(this, subscriber);
    }
    if (scheduler2) {
      subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler2));
    }
    if (_infiniteTimeWindow) {
      for (var i2 = 0; i2 < len2 && !subscriber.closed; i2++) {
        subscriber.next(_events[i2]);
      }
    } else {
      for (var i2 = 0; i2 < len2 && !subscriber.closed; i2++) {
        subscriber.next(_events[i2].value);
      }
    }
    if (this.hasError) {
      subscriber.error(this.thrownError);
    } else if (this.isStopped) {
      subscriber.complete();
    }
    return subscription;
  };
  ReplaySubject2.prototype._getNow = function() {
    return (this.scheduler || queue).now();
  };
  ReplaySubject2.prototype._trimBufferThenGetEvents = function() {
    var now = this._getNow();
    var _bufferSize = this._bufferSize;
    var _windowTime = this._windowTime;
    var _events = this._events;
    var eventsCount = _events.length;
    var spliceCount = 0;
    while (spliceCount < eventsCount) {
      if (now - _events[spliceCount].time < _windowTime) {
        break;
      }
      spliceCount++;
    }
    if (eventsCount > _bufferSize) {
      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);
    }
    if (spliceCount > 0) {
      _events.splice(0, spliceCount);
    }
    return _events;
  };
  return ReplaySubject2;
}(Subject);
var ReplayEvent = /* @__PURE__ */ function() {
  function ReplayEvent2(time, value) {
    this.time = time;
    this.value = value;
  }
  return ReplayEvent2;
}();
var AsyncSubject = /* @__PURE__ */ function(_super) {
  __extends(AsyncSubject2, _super);
  function AsyncSubject2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this.value = null;
    _this.hasNext = false;
    _this.hasCompleted = false;
    return _this;
  }
  AsyncSubject2.prototype._subscribe = function(subscriber) {
    if (this.hasError) {
      subscriber.error(this.thrownError);
      return Subscription.EMPTY;
    } else if (this.hasCompleted && this.hasNext) {
      subscriber.next(this.value);
      subscriber.complete();
      return Subscription.EMPTY;
    }
    return _super.prototype._subscribe.call(this, subscriber);
  };
  AsyncSubject2.prototype.next = function(value) {
    if (!this.hasCompleted) {
      this.value = value;
      this.hasNext = true;
    }
  };
  AsyncSubject2.prototype.error = function(error) {
    if (!this.hasCompleted) {
      _super.prototype.error.call(this, error);
    }
  };
  AsyncSubject2.prototype.complete = function() {
    this.hasCompleted = true;
    if (this.hasNext) {
      _super.prototype.next.call(this, this.value);
    }
    _super.prototype.complete.call(this);
  };
  return AsyncSubject2;
}(Subject);
var nextHandle = 1;
var tasksByHandle = {};
function runIfPresent(handle) {
  var cb2 = tasksByHandle[handle];
  if (cb2) {
    cb2();
  }
}
var Immediate = {
  setImmediate: function(cb2) {
    var handle = nextHandle++;
    tasksByHandle[handle] = cb2;
    Promise.resolve().then(function() {
      return runIfPresent(handle);
    });
    return handle;
  },
  clearImmediate: function(handle) {
    delete tasksByHandle[handle];
  }
};
var AsapAction = /* @__PURE__ */ function(_super) {
  __extends(AsapAction2, _super);
  function AsapAction2(scheduler2, work) {
    var _this = _super.call(this, scheduler2, work) || this;
    _this.scheduler = scheduler2;
    _this.work = work;
    return _this;
  }
  AsapAction2.prototype.requestAsyncId = function(scheduler2, id2, delay) {
    if (delay === void 0) {
      delay = 0;
    }
    if (delay !== null && delay > 0) {
      return _super.prototype.requestAsyncId.call(this, scheduler2, id2, delay);
    }
    scheduler2.actions.push(this);
    return scheduler2.scheduled || (scheduler2.scheduled = Immediate.setImmediate(scheduler2.flush.bind(scheduler2, null)));
  };
  AsapAction2.prototype.recycleAsyncId = function(scheduler2, id2, delay) {
    if (delay === void 0) {
      delay = 0;
    }
    if (delay !== null && delay > 0 || delay === null && this.delay > 0) {
      return _super.prototype.recycleAsyncId.call(this, scheduler2, id2, delay);
    }
    if (scheduler2.actions.length === 0) {
      Immediate.clearImmediate(id2);
      scheduler2.scheduled = void 0;
    }
    return void 0;
  };
  return AsapAction2;
}(AsyncAction);
var AsapScheduler = /* @__PURE__ */ function(_super) {
  __extends(AsapScheduler2, _super);
  function AsapScheduler2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  AsapScheduler2.prototype.flush = function(action) {
    this.active = true;
    this.scheduled = void 0;
    var actions = this.actions;
    var error;
    var index = -1;
    var count = actions.length;
    action = action || actions.shift();
    do {
      if (error = action.execute(action.state, action.delay)) {
        break;
      }
    } while (++index < count && (action = actions.shift()));
    this.active = false;
    if (error) {
      while (++index < count && (action = actions.shift())) {
        action.unsubscribe();
      }
      throw error;
    }
  };
  return AsapScheduler2;
}(AsyncScheduler);
var asap = /* @__PURE__ */ new AsapScheduler(AsapAction);
var async = /* @__PURE__ */ new AsyncScheduler(AsyncAction);
var AnimationFrameAction = /* @__PURE__ */ function(_super) {
  __extends(AnimationFrameAction2, _super);
  function AnimationFrameAction2(scheduler2, work) {
    var _this = _super.call(this, scheduler2, work) || this;
    _this.scheduler = scheduler2;
    _this.work = work;
    return _this;
  }
  AnimationFrameAction2.prototype.requestAsyncId = function(scheduler2, id2, delay) {
    if (delay === void 0) {
      delay = 0;
    }
    if (delay !== null && delay > 0) {
      return _super.prototype.requestAsyncId.call(this, scheduler2, id2, delay);
    }
    scheduler2.actions.push(this);
    return scheduler2.scheduled || (scheduler2.scheduled = requestAnimationFrame(function() {
      return scheduler2.flush(null);
    }));
  };
  AnimationFrameAction2.prototype.recycleAsyncId = function(scheduler2, id2, delay) {
    if (delay === void 0) {
      delay = 0;
    }
    if (delay !== null && delay > 0 || delay === null && this.delay > 0) {
      return _super.prototype.recycleAsyncId.call(this, scheduler2, id2, delay);
    }
    if (scheduler2.actions.length === 0) {
      cancelAnimationFrame(id2);
      scheduler2.scheduled = void 0;
    }
    return void 0;
  };
  return AnimationFrameAction2;
}(AsyncAction);
var AnimationFrameScheduler = /* @__PURE__ */ function(_super) {
  __extends(AnimationFrameScheduler2, _super);
  function AnimationFrameScheduler2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  AnimationFrameScheduler2.prototype.flush = function(action) {
    this.active = true;
    this.scheduled = void 0;
    var actions = this.actions;
    var error;
    var index = -1;
    var count = actions.length;
    action = action || actions.shift();
    do {
      if (error = action.execute(action.state, action.delay)) {
        break;
      }
    } while (++index < count && (action = actions.shift()));
    this.active = false;
    if (error) {
      while (++index < count && (action = actions.shift())) {
        action.unsubscribe();
      }
      throw error;
    }
  };
  return AnimationFrameScheduler2;
}(AsyncScheduler);
var animationFrame = /* @__PURE__ */ new AnimationFrameScheduler(AnimationFrameAction);
var VirtualTimeScheduler = /* @__PURE__ */ function(_super) {
  __extends(VirtualTimeScheduler2, _super);
  function VirtualTimeScheduler2(SchedulerAction, maxFrames) {
    if (SchedulerAction === void 0) {
      SchedulerAction = VirtualAction;
    }
    if (maxFrames === void 0) {
      maxFrames = Number.POSITIVE_INFINITY;
    }
    var _this = _super.call(this, SchedulerAction, function() {
      return _this.frame;
    }) || this;
    _this.maxFrames = maxFrames;
    _this.frame = 0;
    _this.index = -1;
    return _this;
  }
  VirtualTimeScheduler2.prototype.flush = function() {
    var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;
    var error, action;
    while ((action = actions[0]) && action.delay <= maxFrames) {
      actions.shift();
      this.frame = action.delay;
      if (error = action.execute(action.state, action.delay)) {
        break;
      }
    }
    if (error) {
      while (action = actions.shift()) {
        action.unsubscribe();
      }
      throw error;
    }
  };
  VirtualTimeScheduler2.frameTimeFactor = 10;
  return VirtualTimeScheduler2;
}(AsyncScheduler);
var VirtualAction = /* @__PURE__ */ function(_super) {
  __extends(VirtualAction2, _super);
  function VirtualAction2(scheduler2, work, index) {
    if (index === void 0) {
      index = scheduler2.index += 1;
    }
    var _this = _super.call(this, scheduler2, work) || this;
    _this.scheduler = scheduler2;
    _this.work = work;
    _this.index = index;
    _this.active = true;
    _this.index = scheduler2.index = index;
    return _this;
  }
  VirtualAction2.prototype.schedule = function(state, delay) {
    if (delay === void 0) {
      delay = 0;
    }
    if (!this.id) {
      return _super.prototype.schedule.call(this, state, delay);
    }
    this.active = false;
    var action = new VirtualAction2(this.scheduler, this.work);
    this.add(action);
    return action.schedule(state, delay);
  };
  VirtualAction2.prototype.requestAsyncId = function(scheduler2, id2, delay) {
    if (delay === void 0) {
      delay = 0;
    }
    this.delay = scheduler2.frame + delay;
    var actions = scheduler2.actions;
    actions.push(this);
    actions.sort(VirtualAction2.sortActions);
    return true;
  };
  VirtualAction2.prototype.recycleAsyncId = function(scheduler2, id2, delay) {
    return void 0;
  };
  VirtualAction2.prototype._execute = function(state, delay) {
    if (this.active === true) {
      return _super.prototype._execute.call(this, state, delay);
    }
  };
  VirtualAction2.sortActions = function(a, b2) {
    if (a.delay === b2.delay) {
      if (a.index === b2.index) {
        return 0;
      } else if (a.index > b2.index) {
        return 1;
      } else {
        return -1;
      }
    } else if (a.delay > b2.delay) {
      return 1;
    } else {
      return -1;
    }
  };
  return VirtualAction2;
}(AsyncAction);
function identity(x2) {
  return x2;
}
function isObservable(obj) {
  return !!obj && (obj instanceof Observable || typeof obj.lift === "function" && typeof obj.subscribe === "function");
}
function ArgumentOutOfRangeErrorImpl() {
  Error.call(this);
  this.message = "argument out of range";
  this.name = "ArgumentOutOfRangeError";
  return this;
}
ArgumentOutOfRangeErrorImpl.prototype = /* @__PURE__ */ Object.create(Error.prototype);
var ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl;
function EmptyErrorImpl() {
  Error.call(this);
  this.message = "no elements in sequence";
  this.name = "EmptyError";
  return this;
}
EmptyErrorImpl.prototype = /* @__PURE__ */ Object.create(Error.prototype);
var EmptyError = EmptyErrorImpl;
function TimeoutErrorImpl() {
  Error.call(this);
  this.message = "Timeout has occurred";
  this.name = "TimeoutError";
  return this;
}
TimeoutErrorImpl.prototype = /* @__PURE__ */ Object.create(Error.prototype);
var TimeoutError = TimeoutErrorImpl;
function map(project, thisArg) {
  return function mapOperation(source) {
    if (typeof project !== "function") {
      throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");
    }
    return source.lift(new MapOperator(project, thisArg));
  };
}
var MapOperator = /* @__PURE__ */ function() {
  function MapOperator2(project, thisArg) {
    this.project = project;
    this.thisArg = thisArg;
  }
  MapOperator2.prototype.call = function(subscriber, source) {
    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
  };
  return MapOperator2;
}();
var MapSubscriber = /* @__PURE__ */ function(_super) {
  __extends(MapSubscriber2, _super);
  function MapSubscriber2(destination, project, thisArg) {
    var _this = _super.call(this, destination) || this;
    _this.project = project;
    _this.count = 0;
    _this.thisArg = thisArg || _this;
    return _this;
  }
  MapSubscriber2.prototype._next = function(value) {
    var result;
    try {
      result = this.project.call(this.thisArg, value, this.count++);
    } catch (err) {
      this.destination.error(err);
      return;
    }
    this.destination.next(result);
  };
  return MapSubscriber2;
}(Subscriber);
function bindCallback(callbackFunc, resultSelector, scheduler2) {
  if (resultSelector) {
    if (isScheduler(resultSelector)) {
      scheduler2 = resultSelector;
    } else {
      return function() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        return bindCallback(callbackFunc, scheduler2).apply(void 0, args).pipe(map(function(args2) {
          return isArray(args2) ? resultSelector.apply(void 0, args2) : resultSelector(args2);
        }));
      };
    }
  }
  return function() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    var context = this;
    var subject;
    var params = {
      context,
      subject,
      callbackFunc,
      scheduler: scheduler2
    };
    return new Observable(function(subscriber) {
      if (!scheduler2) {
        if (!subject) {
          subject = new AsyncSubject();
          var handler = function() {
            var innerArgs = [];
            for (var _i2 = 0; _i2 < arguments.length; _i2++) {
              innerArgs[_i2] = arguments[_i2];
            }
            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
            subject.complete();
          };
          try {
            callbackFunc.apply(context, args.concat([handler]));
          } catch (err) {
            if (canReportError(subject)) {
              subject.error(err);
            } else {
              console.warn(err);
            }
          }
        }
        return subject.subscribe(subscriber);
      } else {
        var state = {
          args,
          subscriber,
          params
        };
        return scheduler2.schedule(dispatch$6, 0, state);
      }
    });
  };
}
function dispatch$6(state) {
  var _this = this;
  var args = state.args, subscriber = state.subscriber, params = state.params;
  var callbackFunc = params.callbackFunc, context = params.context, scheduler2 = params.scheduler;
  var subject = params.subject;
  if (!subject) {
    subject = params.subject = new AsyncSubject();
    var handler = function() {
      var innerArgs = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        innerArgs[_i] = arguments[_i];
      }
      var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;
      _this.add(scheduler2.schedule(dispatchNext$1, 0, { value, subject }));
    };
    try {
      callbackFunc.apply(context, args.concat([handler]));
    } catch (err) {
      subject.error(err);
    }
  }
  this.add(subject.subscribe(subscriber));
}
function dispatchNext$1(state) {
  var value = state.value, subject = state.subject;
  subject.next(value);
  subject.complete();
}
function bindNodeCallback(callbackFunc, resultSelector, scheduler2) {
  if (resultSelector) {
    if (isScheduler(resultSelector)) {
      scheduler2 = resultSelector;
    } else {
      return function() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        return bindNodeCallback(callbackFunc, scheduler2).apply(void 0, args).pipe(map(function(args2) {
          return isArray(args2) ? resultSelector.apply(void 0, args2) : resultSelector(args2);
        }));
      };
    }
  }
  return function() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    var params = {
      subject: void 0,
      args,
      callbackFunc,
      scheduler: scheduler2,
      context: this
    };
    return new Observable(function(subscriber) {
      var context = params.context;
      var subject = params.subject;
      if (!scheduler2) {
        if (!subject) {
          subject = params.subject = new AsyncSubject();
          var handler = function() {
            var innerArgs = [];
            for (var _i2 = 0; _i2 < arguments.length; _i2++) {
              innerArgs[_i2] = arguments[_i2];
            }
            var err = innerArgs.shift();
            if (err) {
              subject.error(err);
              return;
            }
            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
            subject.complete();
          };
          try {
            callbackFunc.apply(context, args.concat([handler]));
          } catch (err) {
            if (canReportError(subject)) {
              subject.error(err);
            } else {
              console.warn(err);
            }
          }
        }
        return subject.subscribe(subscriber);
      } else {
        return scheduler2.schedule(dispatch$5, 0, { params, subscriber, context });
      }
    });
  };
}
function dispatch$5(state) {
  var _this = this;
  var params = state.params, subscriber = state.subscriber, context = state.context;
  var callbackFunc = params.callbackFunc, args = params.args, scheduler2 = params.scheduler;
  var subject = params.subject;
  if (!subject) {
    subject = params.subject = new AsyncSubject();
    var handler = function() {
      var innerArgs = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        innerArgs[_i] = arguments[_i];
      }
      var err = innerArgs.shift();
      if (err) {
        _this.add(scheduler2.schedule(dispatchError, 0, { err, subject }));
      } else {
        var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;
        _this.add(scheduler2.schedule(dispatchNext, 0, { value, subject }));
      }
    };
    try {
      callbackFunc.apply(context, args.concat([handler]));
    } catch (err) {
      this.add(scheduler2.schedule(dispatchError, 0, { err, subject }));
    }
  }
  this.add(subject.subscribe(subscriber));
}
function dispatchNext(arg) {
  var value = arg.value, subject = arg.subject;
  subject.next(value);
  subject.complete();
}
function dispatchError(arg) {
  var err = arg.err, subject = arg.subject;
  subject.error(err);
}
var OuterSubscriber = /* @__PURE__ */ function(_super) {
  __extends(OuterSubscriber2, _super);
  function OuterSubscriber2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  OuterSubscriber2.prototype.notifyNext = function(outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.destination.next(innerValue);
  };
  OuterSubscriber2.prototype.notifyError = function(error, innerSub) {
    this.destination.error(error);
  };
  OuterSubscriber2.prototype.notifyComplete = function(innerSub) {
    this.destination.complete();
  };
  return OuterSubscriber2;
}(Subscriber);
var InnerSubscriber = /* @__PURE__ */ function(_super) {
  __extends(InnerSubscriber2, _super);
  function InnerSubscriber2(parent, outerValue, outerIndex) {
    var _this = _super.call(this) || this;
    _this.parent = parent;
    _this.outerValue = outerValue;
    _this.outerIndex = outerIndex;
    _this.index = 0;
    return _this;
  }
  InnerSubscriber2.prototype._next = function(value) {
    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);
  };
  InnerSubscriber2.prototype._error = function(error) {
    this.parent.notifyError(error, this);
    this.unsubscribe();
  };
  InnerSubscriber2.prototype._complete = function() {
    this.parent.notifyComplete(this);
    this.unsubscribe();
  };
  return InnerSubscriber2;
}(Subscriber);
var subscribeToPromise = function(promise) {
  return function(subscriber) {
    promise.then(function(value) {
      if (!subscriber.closed) {
        subscriber.next(value);
        subscriber.complete();
      }
    }, function(err) {
      return subscriber.error(err);
    }).then(null, hostReportError);
    return subscriber;
  };
};
function getSymbolIterator() {
  if (typeof Symbol !== "function" || !Symbol.iterator) {
    return "@@iterator";
  }
  return Symbol.iterator;
}
var iterator = /* @__PURE__ */ getSymbolIterator();
var subscribeToIterable = function(iterable) {
  return function(subscriber) {
    var iterator$12 = iterable[iterator]();
    do {
      var item = iterator$12.next();
      if (item.done) {
        subscriber.complete();
        break;
      }
      subscriber.next(item.value);
      if (subscriber.closed) {
        break;
      }
    } while (true);
    if (typeof iterator$12.return === "function") {
      subscriber.add(function() {
        if (iterator$12.return) {
          iterator$12.return();
        }
      });
    }
    return subscriber;
  };
};
var subscribeToObservable = function(obj) {
  return function(subscriber) {
    var obs = obj[observable]();
    if (typeof obs.subscribe !== "function") {
      throw new TypeError("Provided object does not correctly implement Symbol.observable");
    } else {
      return obs.subscribe(subscriber);
    }
  };
};
var isArrayLike = function(x2) {
  return x2 && typeof x2.length === "number" && typeof x2 !== "function";
};
function isPromise(value) {
  return !!value && typeof value.subscribe !== "function" && typeof value.then === "function";
}
var subscribeTo = function(result) {
  if (result instanceof Observable) {
    return function(subscriber) {
      if (result._isScalar) {
        subscriber.next(result.value);
        subscriber.complete();
        return void 0;
      } else {
        return result.subscribe(subscriber);
      }
    };
  } else if (!!result && typeof result[observable] === "function") {
    return subscribeToObservable(result);
  } else if (isArrayLike(result)) {
    return subscribeToArray(result);
  } else if (isPromise(result)) {
    return subscribeToPromise(result);
  } else if (!!result && typeof result[iterator] === "function") {
    return subscribeToIterable(result);
  } else {
    var value = isObject(result) ? "an invalid object" : "'" + result + "'";
    var msg = "You provided " + value + " where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.";
    throw new TypeError(msg);
  }
};
function subscribeToResult(outerSubscriber, result, outerValue, outerIndex, destination) {
  if (destination === void 0) {
    destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);
  }
  if (destination.closed) {
    return;
  }
  return subscribeTo(result)(destination);
}
var NONE = {};
function combineLatest() {
  var observables = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }
  var resultSelector = null;
  var scheduler2 = null;
  if (isScheduler(observables[observables.length - 1])) {
    scheduler2 = observables.pop();
  }
  if (typeof observables[observables.length - 1] === "function") {
    resultSelector = observables.pop();
  }
  if (observables.length === 1 && isArray(observables[0])) {
    observables = observables[0];
  }
  return fromArray(observables, scheduler2).lift(new CombineLatestOperator(resultSelector));
}
var CombineLatestOperator = /* @__PURE__ */ function() {
  function CombineLatestOperator2(resultSelector) {
    this.resultSelector = resultSelector;
  }
  CombineLatestOperator2.prototype.call = function(subscriber, source) {
    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));
  };
  return CombineLatestOperator2;
}();
var CombineLatestSubscriber = /* @__PURE__ */ function(_super) {
  __extends(CombineLatestSubscriber2, _super);
  function CombineLatestSubscriber2(destination, resultSelector) {
    var _this = _super.call(this, destination) || this;
    _this.resultSelector = resultSelector;
    _this.active = 0;
    _this.values = [];
    _this.observables = [];
    return _this;
  }
  CombineLatestSubscriber2.prototype._next = function(observable2) {
    this.values.push(NONE);
    this.observables.push(observable2);
  };
  CombineLatestSubscriber2.prototype._complete = function() {
    var observables = this.observables;
    var len2 = observables.length;
    if (len2 === 0) {
      this.destination.complete();
    } else {
      this.active = len2;
      this.toRespond = len2;
      for (var i2 = 0; i2 < len2; i2++) {
        var observable2 = observables[i2];
        this.add(subscribeToResult(this, observable2, observable2, i2));
      }
    }
  };
  CombineLatestSubscriber2.prototype.notifyComplete = function(unused) {
    if ((this.active -= 1) === 0) {
      this.destination.complete();
    }
  };
  CombineLatestSubscriber2.prototype.notifyNext = function(outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    var values2 = this.values;
    var oldVal = values2[outerIndex];
    var toRespond = !this.toRespond ? 0 : oldVal === NONE ? --this.toRespond : this.toRespond;
    values2[outerIndex] = innerValue;
    if (toRespond === 0) {
      if (this.resultSelector) {
        this._tryResultSelector(values2);
      } else {
        this.destination.next(values2.slice());
      }
    }
  };
  CombineLatestSubscriber2.prototype._tryResultSelector = function(values2) {
    var result;
    try {
      result = this.resultSelector.apply(this, values2);
    } catch (err) {
      this.destination.error(err);
      return;
    }
    this.destination.next(result);
  };
  return CombineLatestSubscriber2;
}(OuterSubscriber);
function isInteropObservable(input) {
  return input && typeof input[observable] === "function";
}
function isIterable(input) {
  return input && typeof input[iterator] === "function";
}
function fromPromise(input, scheduler2) {
  if (!scheduler2) {
    return new Observable(subscribeToPromise(input));
  } else {
    return new Observable(function(subscriber) {
      var sub = new Subscription();
      sub.add(scheduler2.schedule(function() {
        return input.then(function(value) {
          sub.add(scheduler2.schedule(function() {
            subscriber.next(value);
            sub.add(scheduler2.schedule(function() {
              return subscriber.complete();
            }));
          }));
        }, function(err) {
          sub.add(scheduler2.schedule(function() {
            return subscriber.error(err);
          }));
        });
      }));
      return sub;
    });
  }
}
function fromIterable(input, scheduler2) {
  if (!input) {
    throw new Error("Iterable cannot be null");
  }
  if (!scheduler2) {
    return new Observable(subscribeToIterable(input));
  } else {
    return new Observable(function(subscriber) {
      var sub = new Subscription();
      var iterator$12;
      sub.add(function() {
        if (iterator$12 && typeof iterator$12.return === "function") {
          iterator$12.return();
        }
      });
      sub.add(scheduler2.schedule(function() {
        iterator$12 = input[iterator]();
        sub.add(scheduler2.schedule(function() {
          if (subscriber.closed) {
            return;
          }
          var value;
          var done;
          try {
            var result = iterator$12.next();
            value = result.value;
            done = result.done;
          } catch (err) {
            subscriber.error(err);
            return;
          }
          if (done) {
            subscriber.complete();
          } else {
            subscriber.next(value);
            this.schedule();
          }
        }));
      }));
      return sub;
    });
  }
}
function fromObservable(input, scheduler2) {
  if (!scheduler2) {
    return new Observable(subscribeToObservable(input));
  } else {
    return new Observable(function(subscriber) {
      var sub = new Subscription();
      sub.add(scheduler2.schedule(function() {
        var observable$1 = input[observable]();
        sub.add(observable$1.subscribe({
          next: function(value) {
            sub.add(scheduler2.schedule(function() {
              return subscriber.next(value);
            }));
          },
          error: function(err) {
            sub.add(scheduler2.schedule(function() {
              return subscriber.error(err);
            }));
          },
          complete: function() {
            sub.add(scheduler2.schedule(function() {
              return subscriber.complete();
            }));
          }
        }));
      }));
      return sub;
    });
  }
}
function from(input, scheduler2) {
  if (!scheduler2) {
    if (input instanceof Observable) {
      return input;
    }
    return new Observable(subscribeTo(input));
  }
  if (input != null) {
    if (isInteropObservable(input)) {
      return fromObservable(input, scheduler2);
    } else if (isPromise(input)) {
      return fromPromise(input, scheduler2);
    } else if (isArrayLike(input)) {
      return fromArray(input, scheduler2);
    } else if (isIterable(input) || typeof input === "string") {
      return fromIterable(input, scheduler2);
    }
  }
  throw new TypeError((input !== null && typeof input || input) + " is not observable");
}
function mergeMap(project, resultSelector, concurrent) {
  if (concurrent === void 0) {
    concurrent = Number.POSITIVE_INFINITY;
  }
  if (typeof resultSelector === "function") {
    return function(source) {
      return source.pipe(mergeMap(function(a, i2) {
        return from(project(a, i2)).pipe(map(function(b2, ii2) {
          return resultSelector(a, b2, i2, ii2);
        }));
      }, concurrent));
    };
  } else if (typeof resultSelector === "number") {
    concurrent = resultSelector;
  }
  return function(source) {
    return source.lift(new MergeMapOperator(project, concurrent));
  };
}
var MergeMapOperator = /* @__PURE__ */ function() {
  function MergeMapOperator2(project, concurrent) {
    if (concurrent === void 0) {
      concurrent = Number.POSITIVE_INFINITY;
    }
    this.project = project;
    this.concurrent = concurrent;
  }
  MergeMapOperator2.prototype.call = function(observer, source) {
    return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));
  };
  return MergeMapOperator2;
}();
var MergeMapSubscriber = /* @__PURE__ */ function(_super) {
  __extends(MergeMapSubscriber2, _super);
  function MergeMapSubscriber2(destination, project, concurrent) {
    if (concurrent === void 0) {
      concurrent = Number.POSITIVE_INFINITY;
    }
    var _this = _super.call(this, destination) || this;
    _this.project = project;
    _this.concurrent = concurrent;
    _this.hasCompleted = false;
    _this.buffer = [];
    _this.active = 0;
    _this.index = 0;
    return _this;
  }
  MergeMapSubscriber2.prototype._next = function(value) {
    if (this.active < this.concurrent) {
      this._tryNext(value);
    } else {
      this.buffer.push(value);
    }
  };
  MergeMapSubscriber2.prototype._tryNext = function(value) {
    var result;
    var index = this.index++;
    try {
      result = this.project(value, index);
    } catch (err) {
      this.destination.error(err);
      return;
    }
    this.active++;
    this._innerSub(result, value, index);
  };
  MergeMapSubscriber2.prototype._innerSub = function(ish, value, index) {
    var innerSubscriber = new InnerSubscriber(this, void 0, void 0);
    var destination = this.destination;
    destination.add(innerSubscriber);
    subscribeToResult(this, ish, value, index, innerSubscriber);
  };
  MergeMapSubscriber2.prototype._complete = function() {
    this.hasCompleted = true;
    if (this.active === 0 && this.buffer.length === 0) {
      this.destination.complete();
    }
    this.unsubscribe();
  };
  MergeMapSubscriber2.prototype.notifyNext = function(outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.destination.next(innerValue);
  };
  MergeMapSubscriber2.prototype.notifyComplete = function(innerSub) {
    var buffer2 = this.buffer;
    this.remove(innerSub);
    this.active--;
    if (buffer2.length > 0) {
      this._next(buffer2.shift());
    } else if (this.active === 0 && this.hasCompleted) {
      this.destination.complete();
    }
  };
  return MergeMapSubscriber2;
}(OuterSubscriber);
function mergeAll(concurrent) {
  if (concurrent === void 0) {
    concurrent = Number.POSITIVE_INFINITY;
  }
  return mergeMap(identity, concurrent);
}
function concatAll() {
  return mergeAll(1);
}
function concat() {
  var observables = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }
  return concatAll()(of.apply(void 0, observables));
}
function defer(observableFactory) {
  return new Observable(function(subscriber) {
    var input;
    try {
      input = observableFactory();
    } catch (err) {
      subscriber.error(err);
      return void 0;
    }
    var source = input ? from(input) : empty();
    return source.subscribe(subscriber);
  });
}
function forkJoin() {
  var sources = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    sources[_i] = arguments[_i];
  }
  var resultSelector;
  if (typeof sources[sources.length - 1] === "function") {
    resultSelector = sources.pop();
  }
  if (sources.length === 1 && isArray(sources[0])) {
    sources = sources[0];
  }
  if (sources.length === 0) {
    return EMPTY;
  }
  if (resultSelector) {
    return forkJoin(sources).pipe(map(function(args) {
      return resultSelector.apply(void 0, args);
    }));
  }
  return new Observable(function(subscriber) {
    return new ForkJoinSubscriber(subscriber, sources);
  });
}
var ForkJoinSubscriber = /* @__PURE__ */ function(_super) {
  __extends(ForkJoinSubscriber2, _super);
  function ForkJoinSubscriber2(destination, sources) {
    var _this = _super.call(this, destination) || this;
    _this.sources = sources;
    _this.completed = 0;
    _this.haveValues = 0;
    var len2 = sources.length;
    _this.values = new Array(len2);
    for (var i2 = 0; i2 < len2; i2++) {
      var source = sources[i2];
      var innerSubscription = subscribeToResult(_this, source, null, i2);
      if (innerSubscription) {
        _this.add(innerSubscription);
      }
    }
    return _this;
  }
  ForkJoinSubscriber2.prototype.notifyNext = function(outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.values[outerIndex] = innerValue;
    if (!innerSub._hasValue) {
      innerSub._hasValue = true;
      this.haveValues++;
    }
  };
  ForkJoinSubscriber2.prototype.notifyComplete = function(innerSub) {
    var _a = this, destination = _a.destination, haveValues = _a.haveValues, values2 = _a.values;
    var len2 = values2.length;
    if (!innerSub._hasValue) {
      destination.complete();
      return;
    }
    this.completed++;
    if (this.completed !== len2) {
      return;
    }
    if (haveValues === len2) {
      destination.next(values2);
    }
    destination.complete();
  };
  return ForkJoinSubscriber2;
}(OuterSubscriber);
function fromEvent(target, eventName, options, resultSelector) {
  if (isFunction(options)) {
    resultSelector = options;
    options = void 0;
  }
  if (resultSelector) {
    return fromEvent(target, eventName, options).pipe(map(function(args) {
      return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args);
    }));
  }
  return new Observable(function(subscriber) {
    function handler(e2) {
      if (arguments.length > 1) {
        subscriber.next(Array.prototype.slice.call(arguments));
      } else {
        subscriber.next(e2);
      }
    }
    setupSubscription(target, eventName, handler, subscriber, options);
  });
}
function setupSubscription(sourceObj, eventName, handler, subscriber, options) {
  var unsubscribe;
  if (isEventTarget(sourceObj)) {
    var source_1 = sourceObj;
    sourceObj.addEventListener(eventName, handler, options);
    unsubscribe = function() {
      return source_1.removeEventListener(eventName, handler, options);
    };
  } else if (isJQueryStyleEventEmitter(sourceObj)) {
    var source_2 = sourceObj;
    sourceObj.on(eventName, handler);
    unsubscribe = function() {
      return source_2.off(eventName, handler);
    };
  } else if (isNodeStyleEventEmitter(sourceObj)) {
    var source_3 = sourceObj;
    sourceObj.addListener(eventName, handler);
    unsubscribe = function() {
      return source_3.removeListener(eventName, handler);
    };
  } else if (sourceObj && sourceObj.length) {
    for (var i2 = 0, len2 = sourceObj.length; i2 < len2; i2++) {
      setupSubscription(sourceObj[i2], eventName, handler, subscriber, options);
    }
  } else {
    throw new TypeError("Invalid event target");
  }
  subscriber.add(unsubscribe);
}
function isNodeStyleEventEmitter(sourceObj) {
  return sourceObj && typeof sourceObj.addListener === "function" && typeof sourceObj.removeListener === "function";
}
function isJQueryStyleEventEmitter(sourceObj) {
  return sourceObj && typeof sourceObj.on === "function" && typeof sourceObj.off === "function";
}
function isEventTarget(sourceObj) {
  return sourceObj && typeof sourceObj.addEventListener === "function" && typeof sourceObj.removeEventListener === "function";
}
function fromEventPattern(addHandler, removeHandler, resultSelector) {
  if (resultSelector) {
    return fromEventPattern(addHandler, removeHandler).pipe(map(function(args) {
      return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args);
    }));
  }
  return new Observable(function(subscriber) {
    var handler = function() {
      var e2 = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        e2[_i] = arguments[_i];
      }
      return subscriber.next(e2.length === 1 ? e2[0] : e2);
    };
    var retValue;
    try {
      retValue = addHandler(handler);
    } catch (err) {
      subscriber.error(err);
      return void 0;
    }
    if (!isFunction(removeHandler)) {
      return void 0;
    }
    return function() {
      return removeHandler(handler, retValue);
    };
  });
}
function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler2) {
  var resultSelector;
  var initialState;
  if (arguments.length == 1) {
    var options = initialStateOrOptions;
    initialState = options.initialState;
    condition = options.condition;
    iterate = options.iterate;
    resultSelector = options.resultSelector || identity;
    scheduler2 = options.scheduler;
  } else if (resultSelectorOrObservable === void 0 || isScheduler(resultSelectorOrObservable)) {
    initialState = initialStateOrOptions;
    resultSelector = identity;
    scheduler2 = resultSelectorOrObservable;
  } else {
    initialState = initialStateOrOptions;
    resultSelector = resultSelectorOrObservable;
  }
  return new Observable(function(subscriber) {
    var state = initialState;
    if (scheduler2) {
      return scheduler2.schedule(dispatch$4, 0, {
        subscriber,
        iterate,
        condition,
        resultSelector,
        state
      });
    }
    do {
      if (condition) {
        var conditionResult = void 0;
        try {
          conditionResult = condition(state);
        } catch (err) {
          subscriber.error(err);
          return void 0;
        }
        if (!conditionResult) {
          subscriber.complete();
          break;
        }
      }
      var value = void 0;
      try {
        value = resultSelector(state);
      } catch (err) {
        subscriber.error(err);
        return void 0;
      }
      subscriber.next(value);
      if (subscriber.closed) {
        break;
      }
      try {
        state = iterate(state);
      } catch (err) {
        subscriber.error(err);
        return void 0;
      }
    } while (true);
    return void 0;
  });
}
function dispatch$4(state) {
  var subscriber = state.subscriber, condition = state.condition;
  if (subscriber.closed) {
    return void 0;
  }
  if (state.needIterate) {
    try {
      state.state = state.iterate(state.state);
    } catch (err) {
      subscriber.error(err);
      return void 0;
    }
  } else {
    state.needIterate = true;
  }
  if (condition) {
    var conditionResult = void 0;
    try {
      conditionResult = condition(state.state);
    } catch (err) {
      subscriber.error(err);
      return void 0;
    }
    if (!conditionResult) {
      subscriber.complete();
      return void 0;
    }
    if (subscriber.closed) {
      return void 0;
    }
  }
  var value;
  try {
    value = state.resultSelector(state.state);
  } catch (err) {
    subscriber.error(err);
    return void 0;
  }
  if (subscriber.closed) {
    return void 0;
  }
  subscriber.next(value);
  if (subscriber.closed) {
    return void 0;
  }
  return this.schedule(state);
}
function iif(condition, trueResult, falseResult) {
  if (trueResult === void 0) {
    trueResult = EMPTY;
  }
  if (falseResult === void 0) {
    falseResult = EMPTY;
  }
  return defer(function() {
    return condition() ? trueResult : falseResult;
  });
}
function isNumeric(val) {
  return !isArray(val) && val - parseFloat(val) + 1 >= 0;
}
function interval(period, scheduler2) {
  if (period === void 0) {
    period = 0;
  }
  if (scheduler2 === void 0) {
    scheduler2 = async;
  }
  if (!isNumeric(period) || period < 0) {
    period = 0;
  }
  if (!scheduler2 || typeof scheduler2.schedule !== "function") {
    scheduler2 = async;
  }
  return new Observable(function(subscriber) {
    subscriber.add(scheduler2.schedule(dispatch$3, period, { subscriber, counter: 0, period }));
    return subscriber;
  });
}
function dispatch$3(state) {
  var subscriber = state.subscriber, counter = state.counter, period = state.period;
  subscriber.next(counter);
  this.schedule({ subscriber, counter: counter + 1, period }, period);
}
function merge() {
  var observables = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }
  var concurrent = Number.POSITIVE_INFINITY;
  var scheduler2 = null;
  var last = observables[observables.length - 1];
  if (isScheduler(last)) {
    scheduler2 = observables.pop();
    if (observables.length > 1 && typeof observables[observables.length - 1] === "number") {
      concurrent = observables.pop();
    }
  } else if (typeof last === "number") {
    concurrent = observables.pop();
  }
  if (scheduler2 === null && observables.length === 1 && observables[0] instanceof Observable) {
    return observables[0];
  }
  return mergeAll(concurrent)(fromArray(observables, scheduler2));
}
var NEVER = /* @__PURE__ */ new Observable(noop);
function never() {
  return NEVER;
}
function onErrorResumeNext() {
  var sources = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    sources[_i] = arguments[_i];
  }
  if (sources.length === 0) {
    return EMPTY;
  }
  var first = sources[0], remainder = sources.slice(1);
  if (sources.length === 1 && isArray(first)) {
    return onErrorResumeNext.apply(void 0, first);
  }
  return new Observable(function(subscriber) {
    var subNext = function() {
      return subscriber.add(onErrorResumeNext.apply(void 0, remainder).subscribe(subscriber));
    };
    return from(first).subscribe({
      next: function(value) {
        subscriber.next(value);
      },
      error: subNext,
      complete: subNext
    });
  });
}
function pairs(obj, scheduler2) {
  if (!scheduler2) {
    return new Observable(function(subscriber) {
      var keys = Object.keys(obj);
      for (var i2 = 0; i2 < keys.length && !subscriber.closed; i2++) {
        var key = keys[i2];
        if (obj.hasOwnProperty(key)) {
          subscriber.next([key, obj[key]]);
        }
      }
      subscriber.complete();
    });
  } else {
    return new Observable(function(subscriber) {
      var keys = Object.keys(obj);
      var subscription = new Subscription();
      subscription.add(scheduler2.schedule(dispatch$2, 0, { keys, index: 0, subscriber, subscription, obj }));
      return subscription;
    });
  }
}
function dispatch$2(state) {
  var keys = state.keys, index = state.index, subscriber = state.subscriber, subscription = state.subscription, obj = state.obj;
  if (!subscriber.closed) {
    if (index < keys.length) {
      var key = keys[index];
      subscriber.next([key, obj[key]]);
      subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));
    } else {
      subscriber.complete();
    }
  }
}
function race() {
  var observables = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }
  if (observables.length === 1) {
    if (isArray(observables[0])) {
      observables = observables[0];
    } else {
      return observables[0];
    }
  }
  return fromArray(observables, void 0).lift(new RaceOperator());
}
var RaceOperator = /* @__PURE__ */ function() {
  function RaceOperator2() {
  }
  RaceOperator2.prototype.call = function(subscriber, source) {
    return source.subscribe(new RaceSubscriber(subscriber));
  };
  return RaceOperator2;
}();
var RaceSubscriber = /* @__PURE__ */ function(_super) {
  __extends(RaceSubscriber2, _super);
  function RaceSubscriber2(destination) {
    var _this = _super.call(this, destination) || this;
    _this.hasFirst = false;
    _this.observables = [];
    _this.subscriptions = [];
    return _this;
  }
  RaceSubscriber2.prototype._next = function(observable2) {
    this.observables.push(observable2);
  };
  RaceSubscriber2.prototype._complete = function() {
    var observables = this.observables;
    var len2 = observables.length;
    if (len2 === 0) {
      this.destination.complete();
    } else {
      for (var i2 = 0; i2 < len2 && !this.hasFirst; i2++) {
        var observable2 = observables[i2];
        var subscription = subscribeToResult(this, observable2, observable2, i2);
        if (this.subscriptions) {
          this.subscriptions.push(subscription);
        }
        this.add(subscription);
      }
      this.observables = null;
    }
  };
  RaceSubscriber2.prototype.notifyNext = function(outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    if (!this.hasFirst) {
      this.hasFirst = true;
      for (var i2 = 0; i2 < this.subscriptions.length; i2++) {
        if (i2 !== outerIndex) {
          var subscription = this.subscriptions[i2];
          subscription.unsubscribe();
          this.remove(subscription);
        }
      }
      this.subscriptions = null;
    }
    this.destination.next(innerValue);
  };
  return RaceSubscriber2;
}(OuterSubscriber);
function range(start, count, scheduler2) {
  if (start === void 0) {
    start = 0;
  }
  return new Observable(function(subscriber) {
    if (count === void 0) {
      count = start;
      start = 0;
    }
    var index = 0;
    var current = start;
    if (scheduler2) {
      return scheduler2.schedule(dispatch$1, 0, {
        index,
        count,
        start,
        subscriber
      });
    } else {
      do {
        if (index++ >= count) {
          subscriber.complete();
          break;
        }
        subscriber.next(current++);
        if (subscriber.closed) {
          break;
        }
      } while (true);
    }
    return void 0;
  });
}
function dispatch$1(state) {
  var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;
  if (index >= count) {
    subscriber.complete();
    return;
  }
  subscriber.next(start);
  if (subscriber.closed) {
    return;
  }
  state.index = index + 1;
  state.start = start + 1;
  this.schedule(state);
}
function timer(dueTime, periodOrScheduler, scheduler2) {
  if (dueTime === void 0) {
    dueTime = 0;
  }
  var period = -1;
  if (isNumeric(periodOrScheduler)) {
    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);
  } else if (isScheduler(periodOrScheduler)) {
    scheduler2 = periodOrScheduler;
  }
  if (!isScheduler(scheduler2)) {
    scheduler2 = async;
  }
  return new Observable(function(subscriber) {
    var due = isNumeric(dueTime) ? dueTime : +dueTime - scheduler2.now();
    return scheduler2.schedule(dispatch, due, {
      index: 0,
      period,
      subscriber
    });
  });
}
function dispatch(state) {
  var index = state.index, period = state.period, subscriber = state.subscriber;
  subscriber.next(index);
  if (subscriber.closed) {
    return;
  } else if (period === -1) {
    return subscriber.complete();
  }
  state.index = index + 1;
  this.schedule(state, period);
}
function using(resourceFactory, observableFactory) {
  return new Observable(function(subscriber) {
    var resource;
    try {
      resource = resourceFactory();
    } catch (err) {
      subscriber.error(err);
      return void 0;
    }
    var result;
    try {
      result = observableFactory(resource);
    } catch (err) {
      subscriber.error(err);
      return void 0;
    }
    var source = result ? from(result) : EMPTY;
    var subscription = source.subscribe(subscriber);
    return function() {
      subscription.unsubscribe();
      if (resource) {
        resource.unsubscribe();
      }
    };
  });
}
function zip() {
  var observables = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    observables[_i] = arguments[_i];
  }
  var resultSelector = observables[observables.length - 1];
  if (typeof resultSelector === "function") {
    observables.pop();
  }
  return fromArray(observables, void 0).lift(new ZipOperator(resultSelector));
}
var ZipOperator = /* @__PURE__ */ function() {
  function ZipOperator2(resultSelector) {
    this.resultSelector = resultSelector;
  }
  ZipOperator2.prototype.call = function(subscriber, source) {
    return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));
  };
  return ZipOperator2;
}();
var ZipSubscriber = /* @__PURE__ */ function(_super) {
  __extends(ZipSubscriber2, _super);
  function ZipSubscriber2(destination, resultSelector, values2) {
    if (values2 === void 0) {
      values2 = /* @__PURE__ */ Object.create(null);
    }
    var _this = _super.call(this, destination) || this;
    _this.iterators = [];
    _this.active = 0;
    _this.resultSelector = typeof resultSelector === "function" ? resultSelector : null;
    _this.values = values2;
    return _this;
  }
  ZipSubscriber2.prototype._next = function(value) {
    var iterators = this.iterators;
    if (isArray(value)) {
      iterators.push(new StaticArrayIterator(value));
    } else if (typeof value[iterator] === "function") {
      iterators.push(new StaticIterator(value[iterator]()));
    } else {
      iterators.push(new ZipBufferIterator(this.destination, this, value));
    }
  };
  ZipSubscriber2.prototype._complete = function() {
    var iterators = this.iterators;
    var len2 = iterators.length;
    this.unsubscribe();
    if (len2 === 0) {
      this.destination.complete();
      return;
    }
    this.active = len2;
    for (var i2 = 0; i2 < len2; i2++) {
      var iterator2 = iterators[i2];
      if (iterator2.stillUnsubscribed) {
        var destination = this.destination;
        destination.add(iterator2.subscribe(iterator2, i2));
      } else {
        this.active--;
      }
    }
  };
  ZipSubscriber2.prototype.notifyInactive = function() {
    this.active--;
    if (this.active === 0) {
      this.destination.complete();
    }
  };
  ZipSubscriber2.prototype.checkIterators = function() {
    var iterators = this.iterators;
    var len2 = iterators.length;
    var destination = this.destination;
    for (var i2 = 0; i2 < len2; i2++) {
      var iterator2 = iterators[i2];
      if (typeof iterator2.hasValue === "function" && !iterator2.hasValue()) {
        return;
      }
    }
    var shouldComplete = false;
    var args = [];
    for (var i2 = 0; i2 < len2; i2++) {
      var iterator2 = iterators[i2];
      var result = iterator2.next();
      if (iterator2.hasCompleted()) {
        shouldComplete = true;
      }
      if (result.done) {
        destination.complete();
        return;
      }
      args.push(result.value);
    }
    if (this.resultSelector) {
      this._tryresultSelector(args);
    } else {
      destination.next(args);
    }
    if (shouldComplete) {
      destination.complete();
    }
  };
  ZipSubscriber2.prototype._tryresultSelector = function(args) {
    var result;
    try {
      result = this.resultSelector.apply(this, args);
    } catch (err) {
      this.destination.error(err);
      return;
    }
    this.destination.next(result);
  };
  return ZipSubscriber2;
}(Subscriber);
var StaticIterator = /* @__PURE__ */ function() {
  function StaticIterator2(iterator2) {
    this.iterator = iterator2;
    this.nextResult = iterator2.next();
  }
  StaticIterator2.prototype.hasValue = function() {
    return true;
  };
  StaticIterator2.prototype.next = function() {
    var result = this.nextResult;
    this.nextResult = this.iterator.next();
    return result;
  };
  StaticIterator2.prototype.hasCompleted = function() {
    var nextResult = this.nextResult;
    return nextResult && nextResult.done;
  };
  return StaticIterator2;
}();
var StaticArrayIterator = /* @__PURE__ */ function() {
  function StaticArrayIterator2(array) {
    this.array = array;
    this.index = 0;
    this.length = 0;
    this.length = array.length;
  }
  StaticArrayIterator2.prototype[iterator] = function() {
    return this;
  };
  StaticArrayIterator2.prototype.next = function(value) {
    var i2 = this.index++;
    var array = this.array;
    return i2 < this.length ? { value: array[i2], done: false } : { value: null, done: true };
  };
  StaticArrayIterator2.prototype.hasValue = function() {
    return this.array.length > this.index;
  };
  StaticArrayIterator2.prototype.hasCompleted = function() {
    return this.array.length === this.index;
  };
  return StaticArrayIterator2;
}();
var ZipBufferIterator = /* @__PURE__ */ function(_super) {
  __extends(ZipBufferIterator2, _super);
  function ZipBufferIterator2(destination, parent, observable2) {
    var _this = _super.call(this, destination) || this;
    _this.parent = parent;
    _this.observable = observable2;
    _this.stillUnsubscribed = true;
    _this.buffer = [];
    _this.isComplete = false;
    return _this;
  }
  ZipBufferIterator2.prototype[iterator] = function() {
    return this;
  };
  ZipBufferIterator2.prototype.next = function() {
    var buffer2 = this.buffer;
    if (buffer2.length === 0 && this.isComplete) {
      return { value: null, done: true };
    } else {
      return { value: buffer2.shift(), done: false };
    }
  };
  ZipBufferIterator2.prototype.hasValue = function() {
    return this.buffer.length > 0;
  };
  ZipBufferIterator2.prototype.hasCompleted = function() {
    return this.buffer.length === 0 && this.isComplete;
  };
  ZipBufferIterator2.prototype.notifyComplete = function() {
    if (this.buffer.length > 0) {
      this.isComplete = true;
      this.parent.notifyInactive();
    } else {
      this.destination.complete();
    }
  };
  ZipBufferIterator2.prototype.notifyNext = function(outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.buffer.push(innerValue);
    this.parent.checkIterators();
  };
  ZipBufferIterator2.prototype.subscribe = function(value, index) {
    return subscribeToResult(this, this.observable, this, index);
  };
  return ZipBufferIterator2;
}(OuterSubscriber);
var _esm5 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  Observable,
  ConnectableObservable,
  GroupedObservable,
  observable,
  Subject,
  BehaviorSubject,
  ReplaySubject,
  AsyncSubject,
  asapScheduler: asap,
  asyncScheduler: async,
  queueScheduler: queue,
  animationFrameScheduler: animationFrame,
  VirtualTimeScheduler,
  VirtualAction,
  Scheduler,
  Subscription,
  Subscriber,
  Notification,
  pipe,
  noop,
  identity,
  isObservable,
  ArgumentOutOfRangeError,
  EmptyError,
  ObjectUnsubscribedError,
  UnsubscriptionError,
  TimeoutError,
  bindCallback,
  bindNodeCallback,
  combineLatest,
  concat,
  defer,
  empty,
  forkJoin,
  from,
  fromEvent,
  fromEventPattern,
  generate,
  iif,
  interval,
  merge,
  never,
  of,
  onErrorResumeNext,
  pairs,
  race,
  range,
  throwError,
  timer,
  using,
  zip,
  EMPTY,
  NEVER,
  config
});
var require$$0 = /* @__PURE__ */ getAugmentedNamespace(_esm5);
var treemap = function(e2) {
  var t2 = {};
  function r2(i2) {
    if (t2[i2])
      return t2[i2].exports;
    var n2 = t2[i2] = { i: i2, l: false, exports: {} };
    return e2[i2].call(n2.exports, n2, n2.exports, r2), n2.l = true, n2.exports;
  }
  return r2.m = e2, r2.c = t2, r2.d = function(e3, t3, i2) {
    r2.o(e3, t3) || Object.defineProperty(e3, t3, { enumerable: true, get: i2 });
  }, r2.r = function(e3) {
    typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(e3, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e3, "__esModule", { value: true });
  }, r2.t = function(e3, t3) {
    if (1 & t3 && (e3 = r2(e3)), 8 & t3)
      return e3;
    if (4 & t3 && typeof e3 == "object" && e3 && e3.__esModule)
      return e3;
    var i2 = /* @__PURE__ */ Object.create(null);
    if (r2.r(i2), Object.defineProperty(i2, "default", { enumerable: true, value: e3 }), 2 & t3 && typeof e3 != "string")
      for (var n2 in e3)
        r2.d(i2, n2, function(t4) {
          return e3[t4];
        }.bind(null, n2));
    return i2;
  }, r2.n = function(e3) {
    var t3 = e3 && e3.__esModule ? function() {
      return e3.default;
    } : function() {
      return e3;
    };
    return r2.d(t3, "a", t3), t3;
  }, r2.o = function(e3, t3) {
    return Object.prototype.hasOwnProperty.call(e3, t3);
  }, r2.p = "", r2(r2.s = 33);
}([function(e2, t2, r2) {
  e2.exports = function(e3) {
    var t3 = {};
    function r3(i2) {
      if (t3[i2])
        return t3[i2].exports;
      var n2 = t3[i2] = { i: i2, l: false, exports: {} };
      return e3[i2].call(n2.exports, n2, n2.exports, r3), n2.l = true, n2.exports;
    }
    return r3.m = e3, r3.c = t3, r3.d = function(e4, t4, i2) {
      r3.o(e4, t4) || Object.defineProperty(e4, t4, { enumerable: true, get: i2 });
    }, r3.r = function(e4) {
      typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(e4, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e4, "__esModule", { value: true });
    }, r3.t = function(e4, t4) {
      if (1 & t4 && (e4 = r3(e4)), 8 & t4)
        return e4;
      if (4 & t4 && typeof e4 == "object" && e4 && e4.__esModule)
        return e4;
      var i2 = /* @__PURE__ */ Object.create(null);
      if (r3.r(i2), Object.defineProperty(i2, "default", { enumerable: true, value: e4 }), 2 & t4 && typeof e4 != "string")
        for (var n2 in e4)
          r3.d(i2, n2, function(t5) {
            return e4[t5];
          }.bind(null, n2));
      return i2;
    }, r3.n = function(e4) {
      var t4 = e4 && e4.__esModule ? function() {
        return e4.default;
      } : function() {
        return e4;
      };
      return r3.d(t4, "a", t4), t4;
    }, r3.o = function(e4, t4) {
      return Object.prototype.hasOwnProperty.call(e4, t4);
    }, r3.p = "", r3(r3.s = 79);
  }([function(e3, t3, r3) {
    var i2, n2 = this && this.__spreadArrays || function() {
      for (var e4 = 0, t4 = 0, r4 = arguments.length; t4 < r4; t4++)
        e4 += arguments[t4].length;
      var i3 = Array(e4), n3 = 0;
      for (t4 = 0; t4 < r4; t4++)
        for (var o2 = arguments[t4], a = 0, s = o2.length; a < s; a++, n3++)
          i3[n3] = o2[a];
      return i3;
    }, o = r3(3);
    !function(e4) {
      var t4, r4 = 2;
      e4.logVerbosity = function(e5) {
        return e5 !== void 0 && (r4 = Math.max(-1, e5)), r4;
      }, function(e5) {
        e5[e5.Debug = 3] = "Debug", e5[e5.Info = 2] = "Info", e5[e5.Warning = 1] = "Warning", e5[e5.Error = 0] = "Error";
      }(t4 = e4.LogLevel || (e4.LogLevel = {}));
      var i3 = function(e5, t5) {
        if (!e5)
          throw new EvalError(t5);
      }, a = function(e5, t5) {
      };
      function s(e5) {
        for (var t5 = [], i4 = 1; i4 < arguments.length; i4++)
          t5[i4 - 1] = arguments[i4];
        e5 > r4 || console.log.apply(console, n2(["[" + e5 + "]"], t5));
      }
      function u2(t5) {
        var r5 = t5 + "-start";
        e4.assert(performance.getEntriesByName(t5).length === 0, "expected mark identifier to not already exists, given " + t5), e4.assert(performance.getEntriesByName(r5).length === 0, "expected mark identifier to not already exists, given " + r5), performance.mark(r5);
      }
      function c2(r5, i4, n3) {
        n3 === void 0 && (n3 = 0);
        var o2 = r5 + "-start", a2 = r5 + "-end";
        e4.assert(performance.getEntriesByName(r5).length === 0, "expected mark identifier to not already exists, given " + r5), e4.assert(performance.getEntriesByName(a2).length === 0, "expected mark identifier to not already exists, given " + a2), performance.mark(a2), performance.measure(r5, o2, a2);
        var u3 = performance.getEntriesByName(r5)[0];
        performance.clearMarks(o2), performance.clearMarks(a2), performance.clearMeasures(r5);
        var c3 = i4 === void 0 || i4.length === 0 ? 0 : 2, l3 = Math.max(c3, n3 - r5.length - (i4 ? i4.length : 0) - 1), f3 = d2(u3.duration);
        s(t4.Debug, "" + r5 + " ".repeat(l3) + (i4 || "") + " | " + f3);
      }
      e4.assert = i3, e4.assertions = function(t5) {
        return t5 !== void 0 && (e4.assert = t5 ? i3 : a), e4.assert !== a;
      }, e4.log = s, e4.logIf = function(e5, t5) {
        for (var r5 = [], i4 = 2; i4 < arguments.length; i4++)
          r5[i4 - 2] = arguments[i4];
        e5 && s.apply(void 0, n2([t5], r5));
      }, e4.logPerformanceStart = u2, e4.logPerformanceStartIf = function(e5, t5) {
        e5 && u2(t5);
      }, e4.logPerformanceStop = c2, e4.logPerformanceStopIf = function(e5, t5, r5, i4) {
        i4 === void 0 && (i4 = 0), e5 && c2(t5, r5, i4);
      }, e4.rand = function(e5, t5) {
        return e5 === void 0 && (e5 = 0), t5 === void 0 && (t5 = 1), Math.random() * (t5 - e5) + e5;
      }, e4.isPowerOfTwo = function(e5) {
        return Number.isInteger(e5) && Number.isInteger(Math.log2(e5));
      }, e4.upperPowerOfTwo = function(e5) {
        return --e5, e5 |= e5 >> 1, e5 |= e5 >> 2, e5 |= e5 >> 4, e5 |= e5 >> 8, e5 |= e5 >> 16, ++e5;
      };
      var l2 = ["", "Ki", "Mi", "Gi", "Ti", "Pi", "Ei", "Zi", "Yi"];
      e4.prettyPrintBytes = function(e5) {
        var t5 = e5 > 0 ? Math.floor(Math.log(e5) / Math.log(1024)) : 0, r5 = e5 / Math.pow(1024, t5);
        return "" + (t5 > 0 ? r5.toFixed(3) : r5) + l2[t5] + "B";
      };
      var f2 = ["ms", "ns", "\u03BCs", "ms", "s"], h2 = [0, 1e6, 1e3, 1, 1e-3];
      function d2(e5) {
        var t5 = e5 > 0 ? Math.max(1, Math.floor(Math.log(10 * e5) / Math.log(1e3)) + 3) : 0;
        return t5 = o.clamp(t5, 0, 4), "" + (e5 * h2[t5]).toFixed(3) + f2[t5];
      }
      e4.prettyPrintMilliseconds = d2, e4.bitInBitfield = function(e5, t5) {
        return t5 !== void 0 && (e5 & t5) === t5;
      }, e4.RAD2DEG = 57.29577951308232, e4.DEG2RAD = 0.017453292519943295, e4.GETsearch = function() {
        return window.location.search;
      }, e4.GETparameter = function(e5) {
        var t5 = new RegExp(e5 + "=([^&]+)"), r5 = window.location.search.match(t5);
        if (r5)
          return r5[1];
      }, e4.PATH_SEPARATOR = "/", e4.dirname = function(t5) {
        return t5.includes(e4.PATH_SEPARATOR) === false ? "" : t5.substr(0, t5.lastIndexOf(e4.PATH_SEPARATOR)).trimLeft();
      }, e4.basename = function(t5) {
        return t5.includes(e4.PATH_SEPARATOR) === false ? t5 : t5.substr(t5.lastIndexOf(e4.PATH_SEPARATOR) + 1).trimRight();
      };
    }(i2 || (i2 = {})), e3.exports = i2;
  }, function(e3, t3, r3) {
    r3.r(t3), r3.d(t3, "glMatrix", function() {
      return i2;
    }), r3.d(t3, "mat2", function() {
      return n2;
    }), r3.d(t3, "mat2d", function() {
      return o;
    }), r3.d(t3, "mat3", function() {
      return a;
    }), r3.d(t3, "mat4", function() {
      return s;
    }), r3.d(t3, "quat", function() {
      return l2;
    }), r3.d(t3, "quat2", function() {
      return f2;
    }), r3.d(t3, "vec2", function() {
      return h2;
    }), r3.d(t3, "vec3", function() {
      return u2;
    }), r3.d(t3, "vec4", function() {
      return c2;
    });
    var i2 = {};
    r3.r(i2), r3.d(i2, "EPSILON", function() {
      return d2;
    }), r3.d(i2, "ARRAY_TYPE", function() {
      return p2;
    }), r3.d(i2, "RANDOM", function() {
      return _2;
    }), r3.d(i2, "setMatrixArrayType", function() {
      return g2;
    }), r3.d(i2, "toRadian", function() {
      return v2;
    }), r3.d(i2, "equals", function() {
      return b2;
    });
    var n2 = {};
    r3.r(n2), r3.d(n2, "create", function() {
      return y2;
    }), r3.d(n2, "clone", function() {
      return E2;
    }), r3.d(n2, "copy", function() {
      return x2;
    }), r3.d(n2, "identity", function() {
      return T2;
    }), r3.d(n2, "fromValues", function() {
      return A2;
    }), r3.d(n2, "set", function() {
      return O2;
    }), r3.d(n2, "transpose", function() {
      return P2;
    }), r3.d(n2, "invert", function() {
      return L2;
    }), r3.d(n2, "adjoint", function() {
      return w2;
    }), r3.d(n2, "determinant", function() {
      return S2;
    }), r3.d(n2, "multiply", function() {
      return R2;
    }), r3.d(n2, "rotate", function() {
      return I2;
    }), r3.d(n2, "scale", function() {
      return M2;
    }), r3.d(n2, "fromRotation", function() {
      return C2;
    }), r3.d(n2, "fromScaling", function() {
      return N2;
    }), r3.d(n2, "str", function() {
      return D2;
    }), r3.d(n2, "frob", function() {
      return B2;
    }), r3.d(n2, "LDU", function() {
      return F2;
    }), r3.d(n2, "add", function() {
      return z2;
    }), r3.d(n2, "subtract", function() {
      return j;
    }), r3.d(n2, "exactEquals", function() {
      return U2;
    }), r3.d(n2, "equals", function() {
      return G2;
    }), r3.d(n2, "multiplyScalar", function() {
      return k2;
    }), r3.d(n2, "multiplyScalarAndAdd", function() {
      return V2;
    }), r3.d(n2, "mul", function() {
      return H2;
    }), r3.d(n2, "sub", function() {
      return W2;
    });
    var o = {};
    r3.r(o), r3.d(o, "create", function() {
      return X2;
    }), r3.d(o, "clone", function() {
      return q2;
    }), r3.d(o, "copy", function() {
      return Y2;
    }), r3.d(o, "identity", function() {
      return K2;
    }), r3.d(o, "fromValues", function() {
      return Z;
    }), r3.d(o, "set", function() {
      return $;
    }), r3.d(o, "invert", function() {
      return Q2;
    }), r3.d(o, "determinant", function() {
      return J2;
    }), r3.d(o, "multiply", function() {
      return ee2;
    }), r3.d(o, "rotate", function() {
      return te2;
    }), r3.d(o, "scale", function() {
      return re2;
    }), r3.d(o, "translate", function() {
      return ie2;
    }), r3.d(o, "fromRotation", function() {
      return ne2;
    }), r3.d(o, "fromScaling", function() {
      return oe2;
    }), r3.d(o, "fromTranslation", function() {
      return ae2;
    }), r3.d(o, "str", function() {
      return se2;
    }), r3.d(o, "frob", function() {
      return ue2;
    }), r3.d(o, "add", function() {
      return ce2;
    }), r3.d(o, "subtract", function() {
      return le2;
    }), r3.d(o, "multiplyScalar", function() {
      return fe2;
    }), r3.d(o, "multiplyScalarAndAdd", function() {
      return he2;
    }), r3.d(o, "exactEquals", function() {
      return de2;
    }), r3.d(o, "equals", function() {
      return pe2;
    }), r3.d(o, "mul", function() {
      return _e;
    }), r3.d(o, "sub", function() {
      return ge2;
    });
    var a = {};
    r3.r(a), r3.d(a, "create", function() {
      return me2;
    }), r3.d(a, "fromMat4", function() {
      return ve2;
    }), r3.d(a, "clone", function() {
      return be2;
    }), r3.d(a, "copy", function() {
      return ye2;
    }), r3.d(a, "fromValues", function() {
      return Ee2;
    }), r3.d(a, "set", function() {
      return xe2;
    }), r3.d(a, "identity", function() {
      return Te2;
    }), r3.d(a, "transpose", function() {
      return Ae2;
    }), r3.d(a, "invert", function() {
      return Oe2;
    }), r3.d(a, "adjoint", function() {
      return Pe2;
    }), r3.d(a, "determinant", function() {
      return Le2;
    }), r3.d(a, "multiply", function() {
      return we2;
    }), r3.d(a, "translate", function() {
      return Se2;
    }), r3.d(a, "rotate", function() {
      return Re2;
    }), r3.d(a, "scale", function() {
      return Ie2;
    }), r3.d(a, "fromTranslation", function() {
      return Me2;
    }), r3.d(a, "fromRotation", function() {
      return Ce2;
    }), r3.d(a, "fromScaling", function() {
      return Ne2;
    }), r3.d(a, "fromMat2d", function() {
      return De2;
    }), r3.d(a, "fromQuat", function() {
      return Be2;
    }), r3.d(a, "normalFromMat4", function() {
      return Fe2;
    }), r3.d(a, "projection", function() {
      return ze2;
    }), r3.d(a, "str", function() {
      return je2;
    }), r3.d(a, "frob", function() {
      return Ue2;
    }), r3.d(a, "add", function() {
      return Ge2;
    }), r3.d(a, "subtract", function() {
      return ke2;
    }), r3.d(a, "multiplyScalar", function() {
      return Ve2;
    }), r3.d(a, "multiplyScalarAndAdd", function() {
      return He2;
    }), r3.d(a, "exactEquals", function() {
      return We2;
    }), r3.d(a, "equals", function() {
      return Xe2;
    }), r3.d(a, "mul", function() {
      return qe2;
    }), r3.d(a, "sub", function() {
      return Ye2;
    });
    var s = {};
    r3.r(s), r3.d(s, "create", function() {
      return Ke2;
    }), r3.d(s, "clone", function() {
      return Ze2;
    }), r3.d(s, "copy", function() {
      return $e2;
    }), r3.d(s, "fromValues", function() {
      return Qe2;
    }), r3.d(s, "set", function() {
      return Je2;
    }), r3.d(s, "identity", function() {
      return et;
    }), r3.d(s, "transpose", function() {
      return tt;
    }), r3.d(s, "invert", function() {
      return rt;
    }), r3.d(s, "adjoint", function() {
      return it;
    }), r3.d(s, "determinant", function() {
      return nt;
    }), r3.d(s, "multiply", function() {
      return ot;
    }), r3.d(s, "translate", function() {
      return at;
    }), r3.d(s, "scale", function() {
      return st;
    }), r3.d(s, "rotate", function() {
      return ut;
    }), r3.d(s, "rotateX", function() {
      return ct;
    }), r3.d(s, "rotateY", function() {
      return lt;
    }), r3.d(s, "rotateZ", function() {
      return ft;
    }), r3.d(s, "fromTranslation", function() {
      return ht;
    }), r3.d(s, "fromScaling", function() {
      return dt;
    }), r3.d(s, "fromRotation", function() {
      return pt;
    }), r3.d(s, "fromXRotation", function() {
      return _t7;
    }), r3.d(s, "fromYRotation", function() {
      return gt;
    }), r3.d(s, "fromZRotation", function() {
      return mt;
    }), r3.d(s, "fromRotationTranslation", function() {
      return vt;
    }), r3.d(s, "fromQuat2", function() {
      return bt;
    }), r3.d(s, "getTranslation", function() {
      return yt;
    }), r3.d(s, "getScaling", function() {
      return Et;
    }), r3.d(s, "getRotation", function() {
      return xt;
    }), r3.d(s, "fromRotationTranslationScale", function() {
      return Tt;
    }), r3.d(s, "fromRotationTranslationScaleOrigin", function() {
      return At;
    }), r3.d(s, "fromQuat", function() {
      return Ot;
    }), r3.d(s, "frustum", function() {
      return Pt;
    }), r3.d(s, "perspective", function() {
      return Lt;
    }), r3.d(s, "perspectiveFromFieldOfView", function() {
      return wt;
    }), r3.d(s, "ortho", function() {
      return St;
    }), r3.d(s, "lookAt", function() {
      return Rt;
    }), r3.d(s, "targetTo", function() {
      return It;
    }), r3.d(s, "str", function() {
      return Mt;
    }), r3.d(s, "frob", function() {
      return Ct;
    }), r3.d(s, "add", function() {
      return Nt;
    }), r3.d(s, "subtract", function() {
      return Dt;
    }), r3.d(s, "multiplyScalar", function() {
      return Bt;
    }), r3.d(s, "multiplyScalarAndAdd", function() {
      return Ft;
    }), r3.d(s, "exactEquals", function() {
      return zt;
    }), r3.d(s, "equals", function() {
      return jt;
    }), r3.d(s, "mul", function() {
      return Ut;
    }), r3.d(s, "sub", function() {
      return Gt;
    });
    var u2 = {};
    r3.r(u2), r3.d(u2, "create", function() {
      return kt;
    }), r3.d(u2, "clone", function() {
      return Vt;
    }), r3.d(u2, "length", function() {
      return Ht;
    }), r3.d(u2, "fromValues", function() {
      return Wt;
    }), r3.d(u2, "copy", function() {
      return Xt;
    }), r3.d(u2, "set", function() {
      return qt;
    }), r3.d(u2, "add", function() {
      return Yt;
    }), r3.d(u2, "subtract", function() {
      return Kt;
    }), r3.d(u2, "multiply", function() {
      return Zt;
    }), r3.d(u2, "divide", function() {
      return $t;
    }), r3.d(u2, "ceil", function() {
      return Qt;
    }), r3.d(u2, "floor", function() {
      return Jt;
    }), r3.d(u2, "min", function() {
      return er;
    }), r3.d(u2, "max", function() {
      return tr;
    }), r3.d(u2, "round", function() {
      return rr;
    }), r3.d(u2, "scale", function() {
      return ir;
    }), r3.d(u2, "scaleAndAdd", function() {
      return nr;
    }), r3.d(u2, "distance", function() {
      return or;
    }), r3.d(u2, "squaredDistance", function() {
      return ar;
    }), r3.d(u2, "squaredLength", function() {
      return sr;
    }), r3.d(u2, "negate", function() {
      return ur;
    }), r3.d(u2, "inverse", function() {
      return cr;
    }), r3.d(u2, "normalize", function() {
      return lr;
    }), r3.d(u2, "dot", function() {
      return fr;
    }), r3.d(u2, "cross", function() {
      return hr;
    }), r3.d(u2, "lerp", function() {
      return dr;
    }), r3.d(u2, "hermite", function() {
      return pr;
    }), r3.d(u2, "bezier", function() {
      return _r;
    }), r3.d(u2, "random", function() {
      return gr;
    }), r3.d(u2, "transformMat4", function() {
      return mr;
    }), r3.d(u2, "transformMat3", function() {
      return vr;
    }), r3.d(u2, "transformQuat", function() {
      return br;
    }), r3.d(u2, "rotateX", function() {
      return yr;
    }), r3.d(u2, "rotateY", function() {
      return Er;
    }), r3.d(u2, "rotateZ", function() {
      return xr;
    }), r3.d(u2, "angle", function() {
      return Tr;
    }), r3.d(u2, "zero", function() {
      return Ar;
    }), r3.d(u2, "str", function() {
      return Or;
    }), r3.d(u2, "exactEquals", function() {
      return Pr;
    }), r3.d(u2, "equals", function() {
      return Lr;
    }), r3.d(u2, "sub", function() {
      return Sr;
    }), r3.d(u2, "mul", function() {
      return Rr;
    }), r3.d(u2, "div", function() {
      return Ir;
    }), r3.d(u2, "dist", function() {
      return Mr;
    }), r3.d(u2, "sqrDist", function() {
      return Cr;
    }), r3.d(u2, "len", function() {
      return Nr;
    }), r3.d(u2, "sqrLen", function() {
      return Dr;
    }), r3.d(u2, "forEach", function() {
      return Br;
    });
    var c2 = {};
    r3.r(c2), r3.d(c2, "create", function() {
      return Fr;
    }), r3.d(c2, "clone", function() {
      return zr;
    }), r3.d(c2, "fromValues", function() {
      return jr;
    }), r3.d(c2, "copy", function() {
      return Ur;
    }), r3.d(c2, "set", function() {
      return Gr;
    }), r3.d(c2, "add", function() {
      return kr;
    }), r3.d(c2, "subtract", function() {
      return Vr;
    }), r3.d(c2, "multiply", function() {
      return Hr;
    }), r3.d(c2, "divide", function() {
      return Wr;
    }), r3.d(c2, "ceil", function() {
      return Xr;
    }), r3.d(c2, "floor", function() {
      return qr;
    }), r3.d(c2, "min", function() {
      return Yr;
    }), r3.d(c2, "max", function() {
      return Kr;
    }), r3.d(c2, "round", function() {
      return Zr;
    }), r3.d(c2, "scale", function() {
      return $r;
    }), r3.d(c2, "scaleAndAdd", function() {
      return Qr;
    }), r3.d(c2, "distance", function() {
      return Jr;
    }), r3.d(c2, "squaredDistance", function() {
      return ei2;
    }), r3.d(c2, "length", function() {
      return ti2;
    }), r3.d(c2, "squaredLength", function() {
      return ri2;
    }), r3.d(c2, "negate", function() {
      return ii2;
    }), r3.d(c2, "inverse", function() {
      return ni2;
    }), r3.d(c2, "normalize", function() {
      return oi2;
    }), r3.d(c2, "dot", function() {
      return ai2;
    }), r3.d(c2, "cross", function() {
      return si2;
    }), r3.d(c2, "lerp", function() {
      return ui2;
    }), r3.d(c2, "random", function() {
      return ci2;
    }), r3.d(c2, "transformMat4", function() {
      return li2;
    }), r3.d(c2, "transformQuat", function() {
      return fi2;
    }), r3.d(c2, "zero", function() {
      return hi2;
    }), r3.d(c2, "str", function() {
      return di2;
    }), r3.d(c2, "exactEquals", function() {
      return pi2;
    }), r3.d(c2, "equals", function() {
      return _i;
    }), r3.d(c2, "sub", function() {
      return gi2;
    }), r3.d(c2, "mul", function() {
      return mi2;
    }), r3.d(c2, "div", function() {
      return vi2;
    }), r3.d(c2, "dist", function() {
      return bi2;
    }), r3.d(c2, "sqrDist", function() {
      return yi2;
    }), r3.d(c2, "len", function() {
      return Ei2;
    }), r3.d(c2, "sqrLen", function() {
      return xi2;
    }), r3.d(c2, "forEach", function() {
      return Ti2;
    });
    var l2 = {};
    r3.r(l2), r3.d(l2, "create", function() {
      return Ai2;
    }), r3.d(l2, "identity", function() {
      return Oi2;
    }), r3.d(l2, "setAxisAngle", function() {
      return Pi2;
    }), r3.d(l2, "getAxisAngle", function() {
      return Li2;
    }), r3.d(l2, "getAngle", function() {
      return wi2;
    }), r3.d(l2, "multiply", function() {
      return Si2;
    }), r3.d(l2, "rotateX", function() {
      return Ri2;
    }), r3.d(l2, "rotateY", function() {
      return Ii2;
    }), r3.d(l2, "rotateZ", function() {
      return Mi2;
    }), r3.d(l2, "calculateW", function() {
      return Ci2;
    }), r3.d(l2, "exp", function() {
      return Ni2;
    }), r3.d(l2, "ln", function() {
      return Di2;
    }), r3.d(l2, "pow", function() {
      return Bi2;
    }), r3.d(l2, "slerp", function() {
      return Fi2;
    }), r3.d(l2, "random", function() {
      return zi2;
    }), r3.d(l2, "invert", function() {
      return ji2;
    }), r3.d(l2, "conjugate", function() {
      return Ui2;
    }), r3.d(l2, "fromMat3", function() {
      return Gi2;
    }), r3.d(l2, "fromEuler", function() {
      return ki2;
    }), r3.d(l2, "str", function() {
      return Vi2;
    }), r3.d(l2, "clone", function() {
      return Zi2;
    }), r3.d(l2, "fromValues", function() {
      return $i2;
    }), r3.d(l2, "copy", function() {
      return Qi2;
    }), r3.d(l2, "set", function() {
      return Ji2;
    }), r3.d(l2, "add", function() {
      return en;
    }), r3.d(l2, "mul", function() {
      return tn;
    }), r3.d(l2, "scale", function() {
      return rn;
    }), r3.d(l2, "dot", function() {
      return nn;
    }), r3.d(l2, "lerp", function() {
      return on;
    }), r3.d(l2, "length", function() {
      return an;
    }), r3.d(l2, "len", function() {
      return sn;
    }), r3.d(l2, "squaredLength", function() {
      return un;
    }), r3.d(l2, "sqrLen", function() {
      return cn;
    }), r3.d(l2, "normalize", function() {
      return ln;
    }), r3.d(l2, "exactEquals", function() {
      return fn;
    }), r3.d(l2, "equals", function() {
      return hn;
    }), r3.d(l2, "rotationTo", function() {
      return dn;
    }), r3.d(l2, "sqlerp", function() {
      return pn;
    }), r3.d(l2, "setAxes", function() {
      return _n;
    });
    var f2 = {};
    r3.r(f2), r3.d(f2, "create", function() {
      return gn;
    }), r3.d(f2, "clone", function() {
      return mn;
    }), r3.d(f2, "fromValues", function() {
      return vn;
    }), r3.d(f2, "fromRotationTranslationValues", function() {
      return bn;
    }), r3.d(f2, "fromRotationTranslation", function() {
      return yn;
    }), r3.d(f2, "fromTranslation", function() {
      return En;
    }), r3.d(f2, "fromRotation", function() {
      return xn;
    }), r3.d(f2, "fromMat4", function() {
      return Tn;
    }), r3.d(f2, "copy", function() {
      return An;
    }), r3.d(f2, "identity", function() {
      return On;
    }), r3.d(f2, "set", function() {
      return Pn;
    }), r3.d(f2, "getReal", function() {
      return Ln;
    }), r3.d(f2, "getDual", function() {
      return wn;
    }), r3.d(f2, "setReal", function() {
      return Sn;
    }), r3.d(f2, "setDual", function() {
      return Rn;
    }), r3.d(f2, "getTranslation", function() {
      return In;
    }), r3.d(f2, "translate", function() {
      return Mn;
    }), r3.d(f2, "rotateX", function() {
      return Cn;
    }), r3.d(f2, "rotateY", function() {
      return Nn;
    }), r3.d(f2, "rotateZ", function() {
      return Dn;
    }), r3.d(f2, "rotateByQuatAppend", function() {
      return Bn;
    }), r3.d(f2, "rotateByQuatPrepend", function() {
      return Fn;
    }), r3.d(f2, "rotateAroundAxis", function() {
      return zn;
    }), r3.d(f2, "add", function() {
      return jn;
    }), r3.d(f2, "multiply", function() {
      return Un;
    }), r3.d(f2, "mul", function() {
      return Gn;
    }), r3.d(f2, "scale", function() {
      return kn;
    }), r3.d(f2, "dot", function() {
      return Vn;
    }), r3.d(f2, "lerp", function() {
      return Hn;
    }), r3.d(f2, "invert", function() {
      return Wn;
    }), r3.d(f2, "conjugate", function() {
      return Xn;
    }), r3.d(f2, "length", function() {
      return qn;
    }), r3.d(f2, "len", function() {
      return Yn;
    }), r3.d(f2, "squaredLength", function() {
      return Kn;
    }), r3.d(f2, "sqrLen", function() {
      return Zn;
    }), r3.d(f2, "normalize", function() {
      return $n;
    }), r3.d(f2, "str", function() {
      return Qn;
    }), r3.d(f2, "exactEquals", function() {
      return Jn;
    }), r3.d(f2, "equals", function() {
      return eo;
    });
    var h2 = {};
    r3.r(h2), r3.d(h2, "create", function() {
      return to;
    }), r3.d(h2, "clone", function() {
      return ro;
    }), r3.d(h2, "fromValues", function() {
      return io;
    }), r3.d(h2, "copy", function() {
      return no;
    }), r3.d(h2, "set", function() {
      return oo;
    }), r3.d(h2, "add", function() {
      return ao;
    }), r3.d(h2, "subtract", function() {
      return so;
    }), r3.d(h2, "multiply", function() {
      return uo;
    }), r3.d(h2, "divide", function() {
      return co;
    }), r3.d(h2, "ceil", function() {
      return lo;
    }), r3.d(h2, "floor", function() {
      return fo;
    }), r3.d(h2, "min", function() {
      return ho;
    }), r3.d(h2, "max", function() {
      return po;
    }), r3.d(h2, "round", function() {
      return _o;
    }), r3.d(h2, "scale", function() {
      return go;
    }), r3.d(h2, "scaleAndAdd", function() {
      return mo;
    }), r3.d(h2, "distance", function() {
      return vo;
    }), r3.d(h2, "squaredDistance", function() {
      return bo;
    }), r3.d(h2, "length", function() {
      return yo;
    }), r3.d(h2, "squaredLength", function() {
      return Eo;
    }), r3.d(h2, "negate", function() {
      return xo;
    }), r3.d(h2, "inverse", function() {
      return To;
    }), r3.d(h2, "normalize", function() {
      return Ao;
    }), r3.d(h2, "dot", function() {
      return Oo;
    }), r3.d(h2, "cross", function() {
      return Po;
    }), r3.d(h2, "lerp", function() {
      return Lo;
    }), r3.d(h2, "random", function() {
      return wo;
    }), r3.d(h2, "transformMat2", function() {
      return So;
    }), r3.d(h2, "transformMat2d", function() {
      return Ro;
    }), r3.d(h2, "transformMat3", function() {
      return Io;
    }), r3.d(h2, "transformMat4", function() {
      return Mo;
    }), r3.d(h2, "rotate", function() {
      return Co;
    }), r3.d(h2, "angle", function() {
      return No;
    }), r3.d(h2, "zero", function() {
      return Do;
    }), r3.d(h2, "str", function() {
      return Bo;
    }), r3.d(h2, "exactEquals", function() {
      return Fo;
    }), r3.d(h2, "equals", function() {
      return zo;
    }), r3.d(h2, "len", function() {
      return jo;
    }), r3.d(h2, "sub", function() {
      return Uo;
    }), r3.d(h2, "mul", function() {
      return Go;
    }), r3.d(h2, "div", function() {
      return ko;
    }), r3.d(h2, "dist", function() {
      return Vo;
    }), r3.d(h2, "sqrDist", function() {
      return Ho;
    }), r3.d(h2, "sqrLen", function() {
      return Wo;
    }), r3.d(h2, "forEach", function() {
      return Xo;
    });
    var d2 = 1e-6, p2 = typeof Float32Array != "undefined" ? Float32Array : Array, _2 = Math.random;
    function g2(e4) {
      p2 = e4;
    }
    var m2 = Math.PI / 180;
    function v2(e4) {
      return e4 * m2;
    }
    function b2(e4, t4) {
      return Math.abs(e4 - t4) <= d2 * Math.max(1, Math.abs(e4), Math.abs(t4));
    }
    function y2() {
      var e4 = new p2(4);
      return p2 != Float32Array && (e4[1] = 0, e4[2] = 0), e4[0] = 1, e4[3] = 1, e4;
    }
    function E2(e4) {
      var t4 = new p2(4);
      return t4[0] = e4[0], t4[1] = e4[1], t4[2] = e4[2], t4[3] = e4[3], t4;
    }
    function x2(e4, t4) {
      return e4[0] = t4[0], e4[1] = t4[1], e4[2] = t4[2], e4[3] = t4[3], e4;
    }
    function T2(e4) {
      return e4[0] = 1, e4[1] = 0, e4[2] = 0, e4[3] = 1, e4;
    }
    function A2(e4, t4, r4, i3) {
      var n3 = new p2(4);
      return n3[0] = e4, n3[1] = t4, n3[2] = r4, n3[3] = i3, n3;
    }
    function O2(e4, t4, r4, i3, n3) {
      return e4[0] = t4, e4[1] = r4, e4[2] = i3, e4[3] = n3, e4;
    }
    function P2(e4, t4) {
      if (e4 === t4) {
        var r4 = t4[1];
        e4[1] = t4[2], e4[2] = r4;
      } else
        e4[0] = t4[0], e4[1] = t4[2], e4[2] = t4[1], e4[3] = t4[3];
      return e4;
    }
    function L2(e4, t4) {
      var r4 = t4[0], i3 = t4[1], n3 = t4[2], o2 = t4[3], a2 = r4 * o2 - n3 * i3;
      return a2 ? (a2 = 1 / a2, e4[0] = o2 * a2, e4[1] = -i3 * a2, e4[2] = -n3 * a2, e4[3] = r4 * a2, e4) : null;
    }
    function w2(e4, t4) {
      var r4 = t4[0];
      return e4[0] = t4[3], e4[1] = -t4[1], e4[2] = -t4[2], e4[3] = r4, e4;
    }
    function S2(e4) {
      return e4[0] * e4[3] - e4[2] * e4[1];
    }
    function R2(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3], s2 = r4[0], u3 = r4[1], c3 = r4[2], l3 = r4[3];
      return e4[0] = i3 * s2 + o2 * u3, e4[1] = n3 * s2 + a2 * u3, e4[2] = i3 * c3 + o2 * l3, e4[3] = n3 * c3 + a2 * l3, e4;
    }
    function I2(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3], s2 = Math.sin(r4), u3 = Math.cos(r4);
      return e4[0] = i3 * u3 + o2 * s2, e4[1] = n3 * u3 + a2 * s2, e4[2] = i3 * -s2 + o2 * u3, e4[3] = n3 * -s2 + a2 * u3, e4;
    }
    function M2(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3], s2 = r4[0], u3 = r4[1];
      return e4[0] = i3 * s2, e4[1] = n3 * s2, e4[2] = o2 * u3, e4[3] = a2 * u3, e4;
    }
    function C2(e4, t4) {
      var r4 = Math.sin(t4), i3 = Math.cos(t4);
      return e4[0] = i3, e4[1] = r4, e4[2] = -r4, e4[3] = i3, e4;
    }
    function N2(e4, t4) {
      return e4[0] = t4[0], e4[1] = 0, e4[2] = 0, e4[3] = t4[1], e4;
    }
    function D2(e4) {
      return "mat2(" + e4[0] + ", " + e4[1] + ", " + e4[2] + ", " + e4[3] + ")";
    }
    function B2(e4) {
      return Math.hypot(e4[0], e4[1], e4[2], e4[3]);
    }
    function F2(e4, t4, r4, i3) {
      return e4[2] = i3[2] / i3[0], r4[0] = i3[0], r4[1] = i3[1], r4[3] = i3[3] - e4[2] * r4[1], [e4, t4, r4];
    }
    function z2(e4, t4, r4) {
      return e4[0] = t4[0] + r4[0], e4[1] = t4[1] + r4[1], e4[2] = t4[2] + r4[2], e4[3] = t4[3] + r4[3], e4;
    }
    function j(e4, t4, r4) {
      return e4[0] = t4[0] - r4[0], e4[1] = t4[1] - r4[1], e4[2] = t4[2] - r4[2], e4[3] = t4[3] - r4[3], e4;
    }
    function U2(e4, t4) {
      return e4[0] === t4[0] && e4[1] === t4[1] && e4[2] === t4[2] && e4[3] === t4[3];
    }
    function G2(e4, t4) {
      var r4 = e4[0], i3 = e4[1], n3 = e4[2], o2 = e4[3], a2 = t4[0], s2 = t4[1], u3 = t4[2], c3 = t4[3];
      return Math.abs(r4 - a2) <= d2 * Math.max(1, Math.abs(r4), Math.abs(a2)) && Math.abs(i3 - s2) <= d2 * Math.max(1, Math.abs(i3), Math.abs(s2)) && Math.abs(n3 - u3) <= d2 * Math.max(1, Math.abs(n3), Math.abs(u3)) && Math.abs(o2 - c3) <= d2 * Math.max(1, Math.abs(o2), Math.abs(c3));
    }
    function k2(e4, t4, r4) {
      return e4[0] = t4[0] * r4, e4[1] = t4[1] * r4, e4[2] = t4[2] * r4, e4[3] = t4[3] * r4, e4;
    }
    function V2(e4, t4, r4, i3) {
      return e4[0] = t4[0] + r4[0] * i3, e4[1] = t4[1] + r4[1] * i3, e4[2] = t4[2] + r4[2] * i3, e4[3] = t4[3] + r4[3] * i3, e4;
    }
    Math.hypot || (Math.hypot = function() {
      for (var e4 = 0, t4 = arguments.length; t4--; )
        e4 += arguments[t4] * arguments[t4];
      return Math.sqrt(e4);
    });
    var H2 = R2, W2 = j;
    function X2() {
      var e4 = new p2(6);
      return p2 != Float32Array && (e4[1] = 0, e4[2] = 0, e4[4] = 0, e4[5] = 0), e4[0] = 1, e4[3] = 1, e4;
    }
    function q2(e4) {
      var t4 = new p2(6);
      return t4[0] = e4[0], t4[1] = e4[1], t4[2] = e4[2], t4[3] = e4[3], t4[4] = e4[4], t4[5] = e4[5], t4;
    }
    function Y2(e4, t4) {
      return e4[0] = t4[0], e4[1] = t4[1], e4[2] = t4[2], e4[3] = t4[3], e4[4] = t4[4], e4[5] = t4[5], e4;
    }
    function K2(e4) {
      return e4[0] = 1, e4[1] = 0, e4[2] = 0, e4[3] = 1, e4[4] = 0, e4[5] = 0, e4;
    }
    function Z(e4, t4, r4, i3, n3, o2) {
      var a2 = new p2(6);
      return a2[0] = e4, a2[1] = t4, a2[2] = r4, a2[3] = i3, a2[4] = n3, a2[5] = o2, a2;
    }
    function $(e4, t4, r4, i3, n3, o2, a2) {
      return e4[0] = t4, e4[1] = r4, e4[2] = i3, e4[3] = n3, e4[4] = o2, e4[5] = a2, e4;
    }
    function Q2(e4, t4) {
      var r4 = t4[0], i3 = t4[1], n3 = t4[2], o2 = t4[3], a2 = t4[4], s2 = t4[5], u3 = r4 * o2 - i3 * n3;
      return u3 ? (u3 = 1 / u3, e4[0] = o2 * u3, e4[1] = -i3 * u3, e4[2] = -n3 * u3, e4[3] = r4 * u3, e4[4] = (n3 * s2 - o2 * a2) * u3, e4[5] = (i3 * a2 - r4 * s2) * u3, e4) : null;
    }
    function J2(e4) {
      return e4[0] * e4[3] - e4[1] * e4[2];
    }
    function ee2(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3], s2 = t4[4], u3 = t4[5], c3 = r4[0], l3 = r4[1], f3 = r4[2], h3 = r4[3], d3 = r4[4], p3 = r4[5];
      return e4[0] = i3 * c3 + o2 * l3, e4[1] = n3 * c3 + a2 * l3, e4[2] = i3 * f3 + o2 * h3, e4[3] = n3 * f3 + a2 * h3, e4[4] = i3 * d3 + o2 * p3 + s2, e4[5] = n3 * d3 + a2 * p3 + u3, e4;
    }
    function te2(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3], s2 = t4[4], u3 = t4[5], c3 = Math.sin(r4), l3 = Math.cos(r4);
      return e4[0] = i3 * l3 + o2 * c3, e4[1] = n3 * l3 + a2 * c3, e4[2] = i3 * -c3 + o2 * l3, e4[3] = n3 * -c3 + a2 * l3, e4[4] = s2, e4[5] = u3, e4;
    }
    function re2(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3], s2 = t4[4], u3 = t4[5], c3 = r4[0], l3 = r4[1];
      return e4[0] = i3 * c3, e4[1] = n3 * c3, e4[2] = o2 * l3, e4[3] = a2 * l3, e4[4] = s2, e4[5] = u3, e4;
    }
    function ie2(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3], s2 = t4[4], u3 = t4[5], c3 = r4[0], l3 = r4[1];
      return e4[0] = i3, e4[1] = n3, e4[2] = o2, e4[3] = a2, e4[4] = i3 * c3 + o2 * l3 + s2, e4[5] = n3 * c3 + a2 * l3 + u3, e4;
    }
    function ne2(e4, t4) {
      var r4 = Math.sin(t4), i3 = Math.cos(t4);
      return e4[0] = i3, e4[1] = r4, e4[2] = -r4, e4[3] = i3, e4[4] = 0, e4[5] = 0, e4;
    }
    function oe2(e4, t4) {
      return e4[0] = t4[0], e4[1] = 0, e4[2] = 0, e4[3] = t4[1], e4[4] = 0, e4[5] = 0, e4;
    }
    function ae2(e4, t4) {
      return e4[0] = 1, e4[1] = 0, e4[2] = 0, e4[3] = 1, e4[4] = t4[0], e4[5] = t4[1], e4;
    }
    function se2(e4) {
      return "mat2d(" + e4[0] + ", " + e4[1] + ", " + e4[2] + ", " + e4[3] + ", " + e4[4] + ", " + e4[5] + ")";
    }
    function ue2(e4) {
      return Math.hypot(e4[0], e4[1], e4[2], e4[3], e4[4], e4[5], 1);
    }
    function ce2(e4, t4, r4) {
      return e4[0] = t4[0] + r4[0], e4[1] = t4[1] + r4[1], e4[2] = t4[2] + r4[2], e4[3] = t4[3] + r4[3], e4[4] = t4[4] + r4[4], e4[5] = t4[5] + r4[5], e4;
    }
    function le2(e4, t4, r4) {
      return e4[0] = t4[0] - r4[0], e4[1] = t4[1] - r4[1], e4[2] = t4[2] - r4[2], e4[3] = t4[3] - r4[3], e4[4] = t4[4] - r4[4], e4[5] = t4[5] - r4[5], e4;
    }
    function fe2(e4, t4, r4) {
      return e4[0] = t4[0] * r4, e4[1] = t4[1] * r4, e4[2] = t4[2] * r4, e4[3] = t4[3] * r4, e4[4] = t4[4] * r4, e4[5] = t4[5] * r4, e4;
    }
    function he2(e4, t4, r4, i3) {
      return e4[0] = t4[0] + r4[0] * i3, e4[1] = t4[1] + r4[1] * i3, e4[2] = t4[2] + r4[2] * i3, e4[3] = t4[3] + r4[3] * i3, e4[4] = t4[4] + r4[4] * i3, e4[5] = t4[5] + r4[5] * i3, e4;
    }
    function de2(e4, t4) {
      return e4[0] === t4[0] && e4[1] === t4[1] && e4[2] === t4[2] && e4[3] === t4[3] && e4[4] === t4[4] && e4[5] === t4[5];
    }
    function pe2(e4, t4) {
      var r4 = e4[0], i3 = e4[1], n3 = e4[2], o2 = e4[3], a2 = e4[4], s2 = e4[5], u3 = t4[0], c3 = t4[1], l3 = t4[2], f3 = t4[3], h3 = t4[4], p3 = t4[5];
      return Math.abs(r4 - u3) <= d2 * Math.max(1, Math.abs(r4), Math.abs(u3)) && Math.abs(i3 - c3) <= d2 * Math.max(1, Math.abs(i3), Math.abs(c3)) && Math.abs(n3 - l3) <= d2 * Math.max(1, Math.abs(n3), Math.abs(l3)) && Math.abs(o2 - f3) <= d2 * Math.max(1, Math.abs(o2), Math.abs(f3)) && Math.abs(a2 - h3) <= d2 * Math.max(1, Math.abs(a2), Math.abs(h3)) && Math.abs(s2 - p3) <= d2 * Math.max(1, Math.abs(s2), Math.abs(p3));
    }
    var _e = ee2, ge2 = le2;
    function me2() {
      var e4 = new p2(9);
      return p2 != Float32Array && (e4[1] = 0, e4[2] = 0, e4[3] = 0, e4[5] = 0, e4[6] = 0, e4[7] = 0), e4[0] = 1, e4[4] = 1, e4[8] = 1, e4;
    }
    function ve2(e4, t4) {
      return e4[0] = t4[0], e4[1] = t4[1], e4[2] = t4[2], e4[3] = t4[4], e4[4] = t4[5], e4[5] = t4[6], e4[6] = t4[8], e4[7] = t4[9], e4[8] = t4[10], e4;
    }
    function be2(e4) {
      var t4 = new p2(9);
      return t4[0] = e4[0], t4[1] = e4[1], t4[2] = e4[2], t4[3] = e4[3], t4[4] = e4[4], t4[5] = e4[5], t4[6] = e4[6], t4[7] = e4[7], t4[8] = e4[8], t4;
    }
    function ye2(e4, t4) {
      return e4[0] = t4[0], e4[1] = t4[1], e4[2] = t4[2], e4[3] = t4[3], e4[4] = t4[4], e4[5] = t4[5], e4[6] = t4[6], e4[7] = t4[7], e4[8] = t4[8], e4;
    }
    function Ee2(e4, t4, r4, i3, n3, o2, a2, s2, u3) {
      var c3 = new p2(9);
      return c3[0] = e4, c3[1] = t4, c3[2] = r4, c3[3] = i3, c3[4] = n3, c3[5] = o2, c3[6] = a2, c3[7] = s2, c3[8] = u3, c3;
    }
    function xe2(e4, t4, r4, i3, n3, o2, a2, s2, u3, c3) {
      return e4[0] = t4, e4[1] = r4, e4[2] = i3, e4[3] = n3, e4[4] = o2, e4[5] = a2, e4[6] = s2, e4[7] = u3, e4[8] = c3, e4;
    }
    function Te2(e4) {
      return e4[0] = 1, e4[1] = 0, e4[2] = 0, e4[3] = 0, e4[4] = 1, e4[5] = 0, e4[6] = 0, e4[7] = 0, e4[8] = 1, e4;
    }
    function Ae2(e4, t4) {
      if (e4 === t4) {
        var r4 = t4[1], i3 = t4[2], n3 = t4[5];
        e4[1] = t4[3], e4[2] = t4[6], e4[3] = r4, e4[5] = t4[7], e4[6] = i3, e4[7] = n3;
      } else
        e4[0] = t4[0], e4[1] = t4[3], e4[2] = t4[6], e4[3] = t4[1], e4[4] = t4[4], e4[5] = t4[7], e4[6] = t4[2], e4[7] = t4[5], e4[8] = t4[8];
      return e4;
    }
    function Oe2(e4, t4) {
      var r4 = t4[0], i3 = t4[1], n3 = t4[2], o2 = t4[3], a2 = t4[4], s2 = t4[5], u3 = t4[6], c3 = t4[7], l3 = t4[8], f3 = l3 * a2 - s2 * c3, h3 = -l3 * o2 + s2 * u3, d3 = c3 * o2 - a2 * u3, p3 = r4 * f3 + i3 * h3 + n3 * d3;
      return p3 ? (p3 = 1 / p3, e4[0] = f3 * p3, e4[1] = (-l3 * i3 + n3 * c3) * p3, e4[2] = (s2 * i3 - n3 * a2) * p3, e4[3] = h3 * p3, e4[4] = (l3 * r4 - n3 * u3) * p3, e4[5] = (-s2 * r4 + n3 * o2) * p3, e4[6] = d3 * p3, e4[7] = (-c3 * r4 + i3 * u3) * p3, e4[8] = (a2 * r4 - i3 * o2) * p3, e4) : null;
    }
    function Pe2(e4, t4) {
      var r4 = t4[0], i3 = t4[1], n3 = t4[2], o2 = t4[3], a2 = t4[4], s2 = t4[5], u3 = t4[6], c3 = t4[7], l3 = t4[8];
      return e4[0] = a2 * l3 - s2 * c3, e4[1] = n3 * c3 - i3 * l3, e4[2] = i3 * s2 - n3 * a2, e4[3] = s2 * u3 - o2 * l3, e4[4] = r4 * l3 - n3 * u3, e4[5] = n3 * o2 - r4 * s2, e4[6] = o2 * c3 - a2 * u3, e4[7] = i3 * u3 - r4 * c3, e4[8] = r4 * a2 - i3 * o2, e4;
    }
    function Le2(e4) {
      var t4 = e4[0], r4 = e4[1], i3 = e4[2], n3 = e4[3], o2 = e4[4], a2 = e4[5], s2 = e4[6], u3 = e4[7], c3 = e4[8];
      return t4 * (c3 * o2 - a2 * u3) + r4 * (-c3 * n3 + a2 * s2) + i3 * (u3 * n3 - o2 * s2);
    }
    function we2(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3], s2 = t4[4], u3 = t4[5], c3 = t4[6], l3 = t4[7], f3 = t4[8], h3 = r4[0], d3 = r4[1], p3 = r4[2], _3 = r4[3], g3 = r4[4], m3 = r4[5], v3 = r4[6], b3 = r4[7], y3 = r4[8];
      return e4[0] = h3 * i3 + d3 * a2 + p3 * c3, e4[1] = h3 * n3 + d3 * s2 + p3 * l3, e4[2] = h3 * o2 + d3 * u3 + p3 * f3, e4[3] = _3 * i3 + g3 * a2 + m3 * c3, e4[4] = _3 * n3 + g3 * s2 + m3 * l3, e4[5] = _3 * o2 + g3 * u3 + m3 * f3, e4[6] = v3 * i3 + b3 * a2 + y3 * c3, e4[7] = v3 * n3 + b3 * s2 + y3 * l3, e4[8] = v3 * o2 + b3 * u3 + y3 * f3, e4;
    }
    function Se2(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3], s2 = t4[4], u3 = t4[5], c3 = t4[6], l3 = t4[7], f3 = t4[8], h3 = r4[0], d3 = r4[1];
      return e4[0] = i3, e4[1] = n3, e4[2] = o2, e4[3] = a2, e4[4] = s2, e4[5] = u3, e4[6] = h3 * i3 + d3 * a2 + c3, e4[7] = h3 * n3 + d3 * s2 + l3, e4[8] = h3 * o2 + d3 * u3 + f3, e4;
    }
    function Re2(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3], s2 = t4[4], u3 = t4[5], c3 = t4[6], l3 = t4[7], f3 = t4[8], h3 = Math.sin(r4), d3 = Math.cos(r4);
      return e4[0] = d3 * i3 + h3 * a2, e4[1] = d3 * n3 + h3 * s2, e4[2] = d3 * o2 + h3 * u3, e4[3] = d3 * a2 - h3 * i3, e4[4] = d3 * s2 - h3 * n3, e4[5] = d3 * u3 - h3 * o2, e4[6] = c3, e4[7] = l3, e4[8] = f3, e4;
    }
    function Ie2(e4, t4, r4) {
      var i3 = r4[0], n3 = r4[1];
      return e4[0] = i3 * t4[0], e4[1] = i3 * t4[1], e4[2] = i3 * t4[2], e4[3] = n3 * t4[3], e4[4] = n3 * t4[4], e4[5] = n3 * t4[5], e4[6] = t4[6], e4[7] = t4[7], e4[8] = t4[8], e4;
    }
    function Me2(e4, t4) {
      return e4[0] = 1, e4[1] = 0, e4[2] = 0, e4[3] = 0, e4[4] = 1, e4[5] = 0, e4[6] = t4[0], e4[7] = t4[1], e4[8] = 1, e4;
    }
    function Ce2(e4, t4) {
      var r4 = Math.sin(t4), i3 = Math.cos(t4);
      return e4[0] = i3, e4[1] = r4, e4[2] = 0, e4[3] = -r4, e4[4] = i3, e4[5] = 0, e4[6] = 0, e4[7] = 0, e4[8] = 1, e4;
    }
    function Ne2(e4, t4) {
      return e4[0] = t4[0], e4[1] = 0, e4[2] = 0, e4[3] = 0, e4[4] = t4[1], e4[5] = 0, e4[6] = 0, e4[7] = 0, e4[8] = 1, e4;
    }
    function De2(e4, t4) {
      return e4[0] = t4[0], e4[1] = t4[1], e4[2] = 0, e4[3] = t4[2], e4[4] = t4[3], e4[5] = 0, e4[6] = t4[4], e4[7] = t4[5], e4[8] = 1, e4;
    }
    function Be2(e4, t4) {
      var r4 = t4[0], i3 = t4[1], n3 = t4[2], o2 = t4[3], a2 = r4 + r4, s2 = i3 + i3, u3 = n3 + n3, c3 = r4 * a2, l3 = i3 * a2, f3 = i3 * s2, h3 = n3 * a2, d3 = n3 * s2, p3 = n3 * u3, _3 = o2 * a2, g3 = o2 * s2, m3 = o2 * u3;
      return e4[0] = 1 - f3 - p3, e4[3] = l3 - m3, e4[6] = h3 + g3, e4[1] = l3 + m3, e4[4] = 1 - c3 - p3, e4[7] = d3 - _3, e4[2] = h3 - g3, e4[5] = d3 + _3, e4[8] = 1 - c3 - f3, e4;
    }
    function Fe2(e4, t4) {
      var r4 = t4[0], i3 = t4[1], n3 = t4[2], o2 = t4[3], a2 = t4[4], s2 = t4[5], u3 = t4[6], c3 = t4[7], l3 = t4[8], f3 = t4[9], h3 = t4[10], d3 = t4[11], p3 = t4[12], _3 = t4[13], g3 = t4[14], m3 = t4[15], v3 = r4 * s2 - i3 * a2, b3 = r4 * u3 - n3 * a2, y3 = r4 * c3 - o2 * a2, E3 = i3 * u3 - n3 * s2, x3 = i3 * c3 - o2 * s2, T3 = n3 * c3 - o2 * u3, A3 = l3 * _3 - f3 * p3, O3 = l3 * g3 - h3 * p3, P3 = l3 * m3 - d3 * p3, L3 = f3 * g3 - h3 * _3, w3 = f3 * m3 - d3 * _3, S3 = h3 * m3 - d3 * g3, R3 = v3 * S3 - b3 * w3 + y3 * L3 + E3 * P3 - x3 * O3 + T3 * A3;
      return R3 ? (R3 = 1 / R3, e4[0] = (s2 * S3 - u3 * w3 + c3 * L3) * R3, e4[1] = (u3 * P3 - a2 * S3 - c3 * O3) * R3, e4[2] = (a2 * w3 - s2 * P3 + c3 * A3) * R3, e4[3] = (n3 * w3 - i3 * S3 - o2 * L3) * R3, e4[4] = (r4 * S3 - n3 * P3 + o2 * O3) * R3, e4[5] = (i3 * P3 - r4 * w3 - o2 * A3) * R3, e4[6] = (_3 * T3 - g3 * x3 + m3 * E3) * R3, e4[7] = (g3 * y3 - p3 * T3 - m3 * b3) * R3, e4[8] = (p3 * x3 - _3 * y3 + m3 * v3) * R3, e4) : null;
    }
    function ze2(e4, t4, r4) {
      return e4[0] = 2 / t4, e4[1] = 0, e4[2] = 0, e4[3] = 0, e4[4] = -2 / r4, e4[5] = 0, e4[6] = -1, e4[7] = 1, e4[8] = 1, e4;
    }
    function je2(e4) {
      return "mat3(" + e4[0] + ", " + e4[1] + ", " + e4[2] + ", " + e4[3] + ", " + e4[4] + ", " + e4[5] + ", " + e4[6] + ", " + e4[7] + ", " + e4[8] + ")";
    }
    function Ue2(e4) {
      return Math.hypot(e4[0], e4[1], e4[2], e4[3], e4[4], e4[5], e4[6], e4[7], e4[8]);
    }
    function Ge2(e4, t4, r4) {
      return e4[0] = t4[0] + r4[0], e4[1] = t4[1] + r4[1], e4[2] = t4[2] + r4[2], e4[3] = t4[3] + r4[3], e4[4] = t4[4] + r4[4], e4[5] = t4[5] + r4[5], e4[6] = t4[6] + r4[6], e4[7] = t4[7] + r4[7], e4[8] = t4[8] + r4[8], e4;
    }
    function ke2(e4, t4, r4) {
      return e4[0] = t4[0] - r4[0], e4[1] = t4[1] - r4[1], e4[2] = t4[2] - r4[2], e4[3] = t4[3] - r4[3], e4[4] = t4[4] - r4[4], e4[5] = t4[5] - r4[5], e4[6] = t4[6] - r4[6], e4[7] = t4[7] - r4[7], e4[8] = t4[8] - r4[8], e4;
    }
    function Ve2(e4, t4, r4) {
      return e4[0] = t4[0] * r4, e4[1] = t4[1] * r4, e4[2] = t4[2] * r4, e4[3] = t4[3] * r4, e4[4] = t4[4] * r4, e4[5] = t4[5] * r4, e4[6] = t4[6] * r4, e4[7] = t4[7] * r4, e4[8] = t4[8] * r4, e4;
    }
    function He2(e4, t4, r4, i3) {
      return e4[0] = t4[0] + r4[0] * i3, e4[1] = t4[1] + r4[1] * i3, e4[2] = t4[2] + r4[2] * i3, e4[3] = t4[3] + r4[3] * i3, e4[4] = t4[4] + r4[4] * i3, e4[5] = t4[5] + r4[5] * i3, e4[6] = t4[6] + r4[6] * i3, e4[7] = t4[7] + r4[7] * i3, e4[8] = t4[8] + r4[8] * i3, e4;
    }
    function We2(e4, t4) {
      return e4[0] === t4[0] && e4[1] === t4[1] && e4[2] === t4[2] && e4[3] === t4[3] && e4[4] === t4[4] && e4[5] === t4[5] && e4[6] === t4[6] && e4[7] === t4[7] && e4[8] === t4[8];
    }
    function Xe2(e4, t4) {
      var r4 = e4[0], i3 = e4[1], n3 = e4[2], o2 = e4[3], a2 = e4[4], s2 = e4[5], u3 = e4[6], c3 = e4[7], l3 = e4[8], f3 = t4[0], h3 = t4[1], p3 = t4[2], _3 = t4[3], g3 = t4[4], m3 = t4[5], v3 = t4[6], b3 = t4[7], y3 = t4[8];
      return Math.abs(r4 - f3) <= d2 * Math.max(1, Math.abs(r4), Math.abs(f3)) && Math.abs(i3 - h3) <= d2 * Math.max(1, Math.abs(i3), Math.abs(h3)) && Math.abs(n3 - p3) <= d2 * Math.max(1, Math.abs(n3), Math.abs(p3)) && Math.abs(o2 - _3) <= d2 * Math.max(1, Math.abs(o2), Math.abs(_3)) && Math.abs(a2 - g3) <= d2 * Math.max(1, Math.abs(a2), Math.abs(g3)) && Math.abs(s2 - m3) <= d2 * Math.max(1, Math.abs(s2), Math.abs(m3)) && Math.abs(u3 - v3) <= d2 * Math.max(1, Math.abs(u3), Math.abs(v3)) && Math.abs(c3 - b3) <= d2 * Math.max(1, Math.abs(c3), Math.abs(b3)) && Math.abs(l3 - y3) <= d2 * Math.max(1, Math.abs(l3), Math.abs(y3));
    }
    var qe2 = we2, Ye2 = ke2;
    function Ke2() {
      var e4 = new p2(16);
      return p2 != Float32Array && (e4[1] = 0, e4[2] = 0, e4[3] = 0, e4[4] = 0, e4[6] = 0, e4[7] = 0, e4[8] = 0, e4[9] = 0, e4[11] = 0, e4[12] = 0, e4[13] = 0, e4[14] = 0), e4[0] = 1, e4[5] = 1, e4[10] = 1, e4[15] = 1, e4;
    }
    function Ze2(e4) {
      var t4 = new p2(16);
      return t4[0] = e4[0], t4[1] = e4[1], t4[2] = e4[2], t4[3] = e4[3], t4[4] = e4[4], t4[5] = e4[5], t4[6] = e4[6], t4[7] = e4[7], t4[8] = e4[8], t4[9] = e4[9], t4[10] = e4[10], t4[11] = e4[11], t4[12] = e4[12], t4[13] = e4[13], t4[14] = e4[14], t4[15] = e4[15], t4;
    }
    function $e2(e4, t4) {
      return e4[0] = t4[0], e4[1] = t4[1], e4[2] = t4[2], e4[3] = t4[3], e4[4] = t4[4], e4[5] = t4[5], e4[6] = t4[6], e4[7] = t4[7], e4[8] = t4[8], e4[9] = t4[9], e4[10] = t4[10], e4[11] = t4[11], e4[12] = t4[12], e4[13] = t4[13], e4[14] = t4[14], e4[15] = t4[15], e4;
    }
    function Qe2(e4, t4, r4, i3, n3, o2, a2, s2, u3, c3, l3, f3, h3, d3, _3, g3) {
      var m3 = new p2(16);
      return m3[0] = e4, m3[1] = t4, m3[2] = r4, m3[3] = i3, m3[4] = n3, m3[5] = o2, m3[6] = a2, m3[7] = s2, m3[8] = u3, m3[9] = c3, m3[10] = l3, m3[11] = f3, m3[12] = h3, m3[13] = d3, m3[14] = _3, m3[15] = g3, m3;
    }
    function Je2(e4, t4, r4, i3, n3, o2, a2, s2, u3, c3, l3, f3, h3, d3, p3, _3, g3) {
      return e4[0] = t4, e4[1] = r4, e4[2] = i3, e4[3] = n3, e4[4] = o2, e4[5] = a2, e4[6] = s2, e4[7] = u3, e4[8] = c3, e4[9] = l3, e4[10] = f3, e4[11] = h3, e4[12] = d3, e4[13] = p3, e4[14] = _3, e4[15] = g3, e4;
    }
    function et(e4) {
      return e4[0] = 1, e4[1] = 0, e4[2] = 0, e4[3] = 0, e4[4] = 0, e4[5] = 1, e4[6] = 0, e4[7] = 0, e4[8] = 0, e4[9] = 0, e4[10] = 1, e4[11] = 0, e4[12] = 0, e4[13] = 0, e4[14] = 0, e4[15] = 1, e4;
    }
    function tt(e4, t4) {
      if (e4 === t4) {
        var r4 = t4[1], i3 = t4[2], n3 = t4[3], o2 = t4[6], a2 = t4[7], s2 = t4[11];
        e4[1] = t4[4], e4[2] = t4[8], e4[3] = t4[12], e4[4] = r4, e4[6] = t4[9], e4[7] = t4[13], e4[8] = i3, e4[9] = o2, e4[11] = t4[14], e4[12] = n3, e4[13] = a2, e4[14] = s2;
      } else
        e4[0] = t4[0], e4[1] = t4[4], e4[2] = t4[8], e4[3] = t4[12], e4[4] = t4[1], e4[5] = t4[5], e4[6] = t4[9], e4[7] = t4[13], e4[8] = t4[2], e4[9] = t4[6], e4[10] = t4[10], e4[11] = t4[14], e4[12] = t4[3], e4[13] = t4[7], e4[14] = t4[11], e4[15] = t4[15];
      return e4;
    }
    function rt(e4, t4) {
      var r4 = t4[0], i3 = t4[1], n3 = t4[2], o2 = t4[3], a2 = t4[4], s2 = t4[5], u3 = t4[6], c3 = t4[7], l3 = t4[8], f3 = t4[9], h3 = t4[10], d3 = t4[11], p3 = t4[12], _3 = t4[13], g3 = t4[14], m3 = t4[15], v3 = r4 * s2 - i3 * a2, b3 = r4 * u3 - n3 * a2, y3 = r4 * c3 - o2 * a2, E3 = i3 * u3 - n3 * s2, x3 = i3 * c3 - o2 * s2, T3 = n3 * c3 - o2 * u3, A3 = l3 * _3 - f3 * p3, O3 = l3 * g3 - h3 * p3, P3 = l3 * m3 - d3 * p3, L3 = f3 * g3 - h3 * _3, w3 = f3 * m3 - d3 * _3, S3 = h3 * m3 - d3 * g3, R3 = v3 * S3 - b3 * w3 + y3 * L3 + E3 * P3 - x3 * O3 + T3 * A3;
      return R3 ? (R3 = 1 / R3, e4[0] = (s2 * S3 - u3 * w3 + c3 * L3) * R3, e4[1] = (n3 * w3 - i3 * S3 - o2 * L3) * R3, e4[2] = (_3 * T3 - g3 * x3 + m3 * E3) * R3, e4[3] = (h3 * x3 - f3 * T3 - d3 * E3) * R3, e4[4] = (u3 * P3 - a2 * S3 - c3 * O3) * R3, e4[5] = (r4 * S3 - n3 * P3 + o2 * O3) * R3, e4[6] = (g3 * y3 - p3 * T3 - m3 * b3) * R3, e4[7] = (l3 * T3 - h3 * y3 + d3 * b3) * R3, e4[8] = (a2 * w3 - s2 * P3 + c3 * A3) * R3, e4[9] = (i3 * P3 - r4 * w3 - o2 * A3) * R3, e4[10] = (p3 * x3 - _3 * y3 + m3 * v3) * R3, e4[11] = (f3 * y3 - l3 * x3 - d3 * v3) * R3, e4[12] = (s2 * O3 - a2 * L3 - u3 * A3) * R3, e4[13] = (r4 * L3 - i3 * O3 + n3 * A3) * R3, e4[14] = (_3 * b3 - p3 * E3 - g3 * v3) * R3, e4[15] = (l3 * E3 - f3 * b3 + h3 * v3) * R3, e4) : null;
    }
    function it(e4, t4) {
      var r4 = t4[0], i3 = t4[1], n3 = t4[2], o2 = t4[3], a2 = t4[4], s2 = t4[5], u3 = t4[6], c3 = t4[7], l3 = t4[8], f3 = t4[9], h3 = t4[10], d3 = t4[11], p3 = t4[12], _3 = t4[13], g3 = t4[14], m3 = t4[15];
      return e4[0] = s2 * (h3 * m3 - d3 * g3) - f3 * (u3 * m3 - c3 * g3) + _3 * (u3 * d3 - c3 * h3), e4[1] = -(i3 * (h3 * m3 - d3 * g3) - f3 * (n3 * m3 - o2 * g3) + _3 * (n3 * d3 - o2 * h3)), e4[2] = i3 * (u3 * m3 - c3 * g3) - s2 * (n3 * m3 - o2 * g3) + _3 * (n3 * c3 - o2 * u3), e4[3] = -(i3 * (u3 * d3 - c3 * h3) - s2 * (n3 * d3 - o2 * h3) + f3 * (n3 * c3 - o2 * u3)), e4[4] = -(a2 * (h3 * m3 - d3 * g3) - l3 * (u3 * m3 - c3 * g3) + p3 * (u3 * d3 - c3 * h3)), e4[5] = r4 * (h3 * m3 - d3 * g3) - l3 * (n3 * m3 - o2 * g3) + p3 * (n3 * d3 - o2 * h3), e4[6] = -(r4 * (u3 * m3 - c3 * g3) - a2 * (n3 * m3 - o2 * g3) + p3 * (n3 * c3 - o2 * u3)), e4[7] = r4 * (u3 * d3 - c3 * h3) - a2 * (n3 * d3 - o2 * h3) + l3 * (n3 * c3 - o2 * u3), e4[8] = a2 * (f3 * m3 - d3 * _3) - l3 * (s2 * m3 - c3 * _3) + p3 * (s2 * d3 - c3 * f3), e4[9] = -(r4 * (f3 * m3 - d3 * _3) - l3 * (i3 * m3 - o2 * _3) + p3 * (i3 * d3 - o2 * f3)), e4[10] = r4 * (s2 * m3 - c3 * _3) - a2 * (i3 * m3 - o2 * _3) + p3 * (i3 * c3 - o2 * s2), e4[11] = -(r4 * (s2 * d3 - c3 * f3) - a2 * (i3 * d3 - o2 * f3) + l3 * (i3 * c3 - o2 * s2)), e4[12] = -(a2 * (f3 * g3 - h3 * _3) - l3 * (s2 * g3 - u3 * _3) + p3 * (s2 * h3 - u3 * f3)), e4[13] = r4 * (f3 * g3 - h3 * _3) - l3 * (i3 * g3 - n3 * _3) + p3 * (i3 * h3 - n3 * f3), e4[14] = -(r4 * (s2 * g3 - u3 * _3) - a2 * (i3 * g3 - n3 * _3) + p3 * (i3 * u3 - n3 * s2)), e4[15] = r4 * (s2 * h3 - u3 * f3) - a2 * (i3 * h3 - n3 * f3) + l3 * (i3 * u3 - n3 * s2), e4;
    }
    function nt(e4) {
      var t4 = e4[0], r4 = e4[1], i3 = e4[2], n3 = e4[3], o2 = e4[4], a2 = e4[5], s2 = e4[6], u3 = e4[7], c3 = e4[8], l3 = e4[9], f3 = e4[10], h3 = e4[11], d3 = e4[12], p3 = e4[13], _3 = e4[14], g3 = e4[15];
      return (t4 * a2 - r4 * o2) * (f3 * g3 - h3 * _3) - (t4 * s2 - i3 * o2) * (l3 * g3 - h3 * p3) + (t4 * u3 - n3 * o2) * (l3 * _3 - f3 * p3) + (r4 * s2 - i3 * a2) * (c3 * g3 - h3 * d3) - (r4 * u3 - n3 * a2) * (c3 * _3 - f3 * d3) + (i3 * u3 - n3 * s2) * (c3 * p3 - l3 * d3);
    }
    function ot(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3], s2 = t4[4], u3 = t4[5], c3 = t4[6], l3 = t4[7], f3 = t4[8], h3 = t4[9], d3 = t4[10], p3 = t4[11], _3 = t4[12], g3 = t4[13], m3 = t4[14], v3 = t4[15], b3 = r4[0], y3 = r4[1], E3 = r4[2], x3 = r4[3];
      return e4[0] = b3 * i3 + y3 * s2 + E3 * f3 + x3 * _3, e4[1] = b3 * n3 + y3 * u3 + E3 * h3 + x3 * g3, e4[2] = b3 * o2 + y3 * c3 + E3 * d3 + x3 * m3, e4[3] = b3 * a2 + y3 * l3 + E3 * p3 + x3 * v3, b3 = r4[4], y3 = r4[5], E3 = r4[6], x3 = r4[7], e4[4] = b3 * i3 + y3 * s2 + E3 * f3 + x3 * _3, e4[5] = b3 * n3 + y3 * u3 + E3 * h3 + x3 * g3, e4[6] = b3 * o2 + y3 * c3 + E3 * d3 + x3 * m3, e4[7] = b3 * a2 + y3 * l3 + E3 * p3 + x3 * v3, b3 = r4[8], y3 = r4[9], E3 = r4[10], x3 = r4[11], e4[8] = b3 * i3 + y3 * s2 + E3 * f3 + x3 * _3, e4[9] = b3 * n3 + y3 * u3 + E3 * h3 + x3 * g3, e4[10] = b3 * o2 + y3 * c3 + E3 * d3 + x3 * m3, e4[11] = b3 * a2 + y3 * l3 + E3 * p3 + x3 * v3, b3 = r4[12], y3 = r4[13], E3 = r4[14], x3 = r4[15], e4[12] = b3 * i3 + y3 * s2 + E3 * f3 + x3 * _3, e4[13] = b3 * n3 + y3 * u3 + E3 * h3 + x3 * g3, e4[14] = b3 * o2 + y3 * c3 + E3 * d3 + x3 * m3, e4[15] = b3 * a2 + y3 * l3 + E3 * p3 + x3 * v3, e4;
    }
    function at(e4, t4, r4) {
      var i3, n3, o2, a2, s2, u3, c3, l3, f3, h3, d3, p3, _3 = r4[0], g3 = r4[1], m3 = r4[2];
      return t4 === e4 ? (e4[12] = t4[0] * _3 + t4[4] * g3 + t4[8] * m3 + t4[12], e4[13] = t4[1] * _3 + t4[5] * g3 + t4[9] * m3 + t4[13], e4[14] = t4[2] * _3 + t4[6] * g3 + t4[10] * m3 + t4[14], e4[15] = t4[3] * _3 + t4[7] * g3 + t4[11] * m3 + t4[15]) : (i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3], s2 = t4[4], u3 = t4[5], c3 = t4[6], l3 = t4[7], f3 = t4[8], h3 = t4[9], d3 = t4[10], p3 = t4[11], e4[0] = i3, e4[1] = n3, e4[2] = o2, e4[3] = a2, e4[4] = s2, e4[5] = u3, e4[6] = c3, e4[7] = l3, e4[8] = f3, e4[9] = h3, e4[10] = d3, e4[11] = p3, e4[12] = i3 * _3 + s2 * g3 + f3 * m3 + t4[12], e4[13] = n3 * _3 + u3 * g3 + h3 * m3 + t4[13], e4[14] = o2 * _3 + c3 * g3 + d3 * m3 + t4[14], e4[15] = a2 * _3 + l3 * g3 + p3 * m3 + t4[15]), e4;
    }
    function st(e4, t4, r4) {
      var i3 = r4[0], n3 = r4[1], o2 = r4[2];
      return e4[0] = t4[0] * i3, e4[1] = t4[1] * i3, e4[2] = t4[2] * i3, e4[3] = t4[3] * i3, e4[4] = t4[4] * n3, e4[5] = t4[5] * n3, e4[6] = t4[6] * n3, e4[7] = t4[7] * n3, e4[8] = t4[8] * o2, e4[9] = t4[9] * o2, e4[10] = t4[10] * o2, e4[11] = t4[11] * o2, e4[12] = t4[12], e4[13] = t4[13], e4[14] = t4[14], e4[15] = t4[15], e4;
    }
    function ut(e4, t4, r4, i3) {
      var n3, o2, a2, s2, u3, c3, l3, f3, h3, p3, _3, g3, m3, v3, b3, y3, E3, x3, T3, A3, O3, P3, L3, w3, S3 = i3[0], R3 = i3[1], I3 = i3[2], M3 = Math.hypot(S3, R3, I3);
      return M3 < d2 ? null : (S3 *= M3 = 1 / M3, R3 *= M3, I3 *= M3, n3 = Math.sin(r4), a2 = 1 - (o2 = Math.cos(r4)), s2 = t4[0], u3 = t4[1], c3 = t4[2], l3 = t4[3], f3 = t4[4], h3 = t4[5], p3 = t4[6], _3 = t4[7], g3 = t4[8], m3 = t4[9], v3 = t4[10], b3 = t4[11], y3 = S3 * S3 * a2 + o2, E3 = R3 * S3 * a2 + I3 * n3, x3 = I3 * S3 * a2 - R3 * n3, T3 = S3 * R3 * a2 - I3 * n3, A3 = R3 * R3 * a2 + o2, O3 = I3 * R3 * a2 + S3 * n3, P3 = S3 * I3 * a2 + R3 * n3, L3 = R3 * I3 * a2 - S3 * n3, w3 = I3 * I3 * a2 + o2, e4[0] = s2 * y3 + f3 * E3 + g3 * x3, e4[1] = u3 * y3 + h3 * E3 + m3 * x3, e4[2] = c3 * y3 + p3 * E3 + v3 * x3, e4[3] = l3 * y3 + _3 * E3 + b3 * x3, e4[4] = s2 * T3 + f3 * A3 + g3 * O3, e4[5] = u3 * T3 + h3 * A3 + m3 * O3, e4[6] = c3 * T3 + p3 * A3 + v3 * O3, e4[7] = l3 * T3 + _3 * A3 + b3 * O3, e4[8] = s2 * P3 + f3 * L3 + g3 * w3, e4[9] = u3 * P3 + h3 * L3 + m3 * w3, e4[10] = c3 * P3 + p3 * L3 + v3 * w3, e4[11] = l3 * P3 + _3 * L3 + b3 * w3, t4 !== e4 && (e4[12] = t4[12], e4[13] = t4[13], e4[14] = t4[14], e4[15] = t4[15]), e4);
    }
    function ct(e4, t4, r4) {
      var i3 = Math.sin(r4), n3 = Math.cos(r4), o2 = t4[4], a2 = t4[5], s2 = t4[6], u3 = t4[7], c3 = t4[8], l3 = t4[9], f3 = t4[10], h3 = t4[11];
      return t4 !== e4 && (e4[0] = t4[0], e4[1] = t4[1], e4[2] = t4[2], e4[3] = t4[3], e4[12] = t4[12], e4[13] = t4[13], e4[14] = t4[14], e4[15] = t4[15]), e4[4] = o2 * n3 + c3 * i3, e4[5] = a2 * n3 + l3 * i3, e4[6] = s2 * n3 + f3 * i3, e4[7] = u3 * n3 + h3 * i3, e4[8] = c3 * n3 - o2 * i3, e4[9] = l3 * n3 - a2 * i3, e4[10] = f3 * n3 - s2 * i3, e4[11] = h3 * n3 - u3 * i3, e4;
    }
    function lt(e4, t4, r4) {
      var i3 = Math.sin(r4), n3 = Math.cos(r4), o2 = t4[0], a2 = t4[1], s2 = t4[2], u3 = t4[3], c3 = t4[8], l3 = t4[9], f3 = t4[10], h3 = t4[11];
      return t4 !== e4 && (e4[4] = t4[4], e4[5] = t4[5], e4[6] = t4[6], e4[7] = t4[7], e4[12] = t4[12], e4[13] = t4[13], e4[14] = t4[14], e4[15] = t4[15]), e4[0] = o2 * n3 - c3 * i3, e4[1] = a2 * n3 - l3 * i3, e4[2] = s2 * n3 - f3 * i3, e4[3] = u3 * n3 - h3 * i3, e4[8] = o2 * i3 + c3 * n3, e4[9] = a2 * i3 + l3 * n3, e4[10] = s2 * i3 + f3 * n3, e4[11] = u3 * i3 + h3 * n3, e4;
    }
    function ft(e4, t4, r4) {
      var i3 = Math.sin(r4), n3 = Math.cos(r4), o2 = t4[0], a2 = t4[1], s2 = t4[2], u3 = t4[3], c3 = t4[4], l3 = t4[5], f3 = t4[6], h3 = t4[7];
      return t4 !== e4 && (e4[8] = t4[8], e4[9] = t4[9], e4[10] = t4[10], e4[11] = t4[11], e4[12] = t4[12], e4[13] = t4[13], e4[14] = t4[14], e4[15] = t4[15]), e4[0] = o2 * n3 + c3 * i3, e4[1] = a2 * n3 + l3 * i3, e4[2] = s2 * n3 + f3 * i3, e4[3] = u3 * n3 + h3 * i3, e4[4] = c3 * n3 - o2 * i3, e4[5] = l3 * n3 - a2 * i3, e4[6] = f3 * n3 - s2 * i3, e4[7] = h3 * n3 - u3 * i3, e4;
    }
    function ht(e4, t4) {
      return e4[0] = 1, e4[1] = 0, e4[2] = 0, e4[3] = 0, e4[4] = 0, e4[5] = 1, e4[6] = 0, e4[7] = 0, e4[8] = 0, e4[9] = 0, e4[10] = 1, e4[11] = 0, e4[12] = t4[0], e4[13] = t4[1], e4[14] = t4[2], e4[15] = 1, e4;
    }
    function dt(e4, t4) {
      return e4[0] = t4[0], e4[1] = 0, e4[2] = 0, e4[3] = 0, e4[4] = 0, e4[5] = t4[1], e4[6] = 0, e4[7] = 0, e4[8] = 0, e4[9] = 0, e4[10] = t4[2], e4[11] = 0, e4[12] = 0, e4[13] = 0, e4[14] = 0, e4[15] = 1, e4;
    }
    function pt(e4, t4, r4) {
      var i3, n3, o2, a2 = r4[0], s2 = r4[1], u3 = r4[2], c3 = Math.hypot(a2, s2, u3);
      return c3 < d2 ? null : (a2 *= c3 = 1 / c3, s2 *= c3, u3 *= c3, i3 = Math.sin(t4), o2 = 1 - (n3 = Math.cos(t4)), e4[0] = a2 * a2 * o2 + n3, e4[1] = s2 * a2 * o2 + u3 * i3, e4[2] = u3 * a2 * o2 - s2 * i3, e4[3] = 0, e4[4] = a2 * s2 * o2 - u3 * i3, e4[5] = s2 * s2 * o2 + n3, e4[6] = u3 * s2 * o2 + a2 * i3, e4[7] = 0, e4[8] = a2 * u3 * o2 + s2 * i3, e4[9] = s2 * u3 * o2 - a2 * i3, e4[10] = u3 * u3 * o2 + n3, e4[11] = 0, e4[12] = 0, e4[13] = 0, e4[14] = 0, e4[15] = 1, e4);
    }
    function _t7(e4, t4) {
      var r4 = Math.sin(t4), i3 = Math.cos(t4);
      return e4[0] = 1, e4[1] = 0, e4[2] = 0, e4[3] = 0, e4[4] = 0, e4[5] = i3, e4[6] = r4, e4[7] = 0, e4[8] = 0, e4[9] = -r4, e4[10] = i3, e4[11] = 0, e4[12] = 0, e4[13] = 0, e4[14] = 0, e4[15] = 1, e4;
    }
    function gt(e4, t4) {
      var r4 = Math.sin(t4), i3 = Math.cos(t4);
      return e4[0] = i3, e4[1] = 0, e4[2] = -r4, e4[3] = 0, e4[4] = 0, e4[5] = 1, e4[6] = 0, e4[7] = 0, e4[8] = r4, e4[9] = 0, e4[10] = i3, e4[11] = 0, e4[12] = 0, e4[13] = 0, e4[14] = 0, e4[15] = 1, e4;
    }
    function mt(e4, t4) {
      var r4 = Math.sin(t4), i3 = Math.cos(t4);
      return e4[0] = i3, e4[1] = r4, e4[2] = 0, e4[3] = 0, e4[4] = -r4, e4[5] = i3, e4[6] = 0, e4[7] = 0, e4[8] = 0, e4[9] = 0, e4[10] = 1, e4[11] = 0, e4[12] = 0, e4[13] = 0, e4[14] = 0, e4[15] = 1, e4;
    }
    function vt(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3], s2 = i3 + i3, u3 = n3 + n3, c3 = o2 + o2, l3 = i3 * s2, f3 = i3 * u3, h3 = i3 * c3, d3 = n3 * u3, p3 = n3 * c3, _3 = o2 * c3, g3 = a2 * s2, m3 = a2 * u3, v3 = a2 * c3;
      return e4[0] = 1 - (d3 + _3), e4[1] = f3 + v3, e4[2] = h3 - m3, e4[3] = 0, e4[4] = f3 - v3, e4[5] = 1 - (l3 + _3), e4[6] = p3 + g3, e4[7] = 0, e4[8] = h3 + m3, e4[9] = p3 - g3, e4[10] = 1 - (l3 + d3), e4[11] = 0, e4[12] = r4[0], e4[13] = r4[1], e4[14] = r4[2], e4[15] = 1, e4;
    }
    function bt(e4, t4) {
      var r4 = new p2(3), i3 = -t4[0], n3 = -t4[1], o2 = -t4[2], a2 = t4[3], s2 = t4[4], u3 = t4[5], c3 = t4[6], l3 = t4[7], f3 = i3 * i3 + n3 * n3 + o2 * o2 + a2 * a2;
      return f3 > 0 ? (r4[0] = 2 * (s2 * a2 + l3 * i3 + u3 * o2 - c3 * n3) / f3, r4[1] = 2 * (u3 * a2 + l3 * n3 + c3 * i3 - s2 * o2) / f3, r4[2] = 2 * (c3 * a2 + l3 * o2 + s2 * n3 - u3 * i3) / f3) : (r4[0] = 2 * (s2 * a2 + l3 * i3 + u3 * o2 - c3 * n3), r4[1] = 2 * (u3 * a2 + l3 * n3 + c3 * i3 - s2 * o2), r4[2] = 2 * (c3 * a2 + l3 * o2 + s2 * n3 - u3 * i3)), vt(e4, t4, r4), e4;
    }
    function yt(e4, t4) {
      return e4[0] = t4[12], e4[1] = t4[13], e4[2] = t4[14], e4;
    }
    function Et(e4, t4) {
      var r4 = t4[0], i3 = t4[1], n3 = t4[2], o2 = t4[4], a2 = t4[5], s2 = t4[6], u3 = t4[8], c3 = t4[9], l3 = t4[10];
      return e4[0] = Math.hypot(r4, i3, n3), e4[1] = Math.hypot(o2, a2, s2), e4[2] = Math.hypot(u3, c3, l3), e4;
    }
    function xt(e4, t4) {
      var r4 = new p2(3);
      Et(r4, t4);
      var i3 = 1 / r4[0], n3 = 1 / r4[1], o2 = 1 / r4[2], a2 = t4[0] * i3, s2 = t4[1] * n3, u3 = t4[2] * o2, c3 = t4[4] * i3, l3 = t4[5] * n3, f3 = t4[6] * o2, h3 = t4[8] * i3, d3 = t4[9] * n3, _3 = t4[10] * o2, g3 = a2 + l3 + _3, m3 = 0;
      return g3 > 0 ? (m3 = 2 * Math.sqrt(g3 + 1), e4[3] = 0.25 * m3, e4[0] = (f3 - d3) / m3, e4[1] = (h3 - u3) / m3, e4[2] = (s2 - c3) / m3) : a2 > l3 && a2 > _3 ? (m3 = 2 * Math.sqrt(1 + a2 - l3 - _3), e4[3] = (f3 - d3) / m3, e4[0] = 0.25 * m3, e4[1] = (s2 + c3) / m3, e4[2] = (h3 + u3) / m3) : l3 > _3 ? (m3 = 2 * Math.sqrt(1 + l3 - a2 - _3), e4[3] = (h3 - u3) / m3, e4[0] = (s2 + c3) / m3, e4[1] = 0.25 * m3, e4[2] = (f3 + d3) / m3) : (m3 = 2 * Math.sqrt(1 + _3 - a2 - l3), e4[3] = (s2 - c3) / m3, e4[0] = (h3 + u3) / m3, e4[1] = (f3 + d3) / m3, e4[2] = 0.25 * m3), e4;
    }
    function Tt(e4, t4, r4, i3) {
      var n3 = t4[0], o2 = t4[1], a2 = t4[2], s2 = t4[3], u3 = n3 + n3, c3 = o2 + o2, l3 = a2 + a2, f3 = n3 * u3, h3 = n3 * c3, d3 = n3 * l3, p3 = o2 * c3, _3 = o2 * l3, g3 = a2 * l3, m3 = s2 * u3, v3 = s2 * c3, b3 = s2 * l3, y3 = i3[0], E3 = i3[1], x3 = i3[2];
      return e4[0] = (1 - (p3 + g3)) * y3, e4[1] = (h3 + b3) * y3, e4[2] = (d3 - v3) * y3, e4[3] = 0, e4[4] = (h3 - b3) * E3, e4[5] = (1 - (f3 + g3)) * E3, e4[6] = (_3 + m3) * E3, e4[7] = 0, e4[8] = (d3 + v3) * x3, e4[9] = (_3 - m3) * x3, e4[10] = (1 - (f3 + p3)) * x3, e4[11] = 0, e4[12] = r4[0], e4[13] = r4[1], e4[14] = r4[2], e4[15] = 1, e4;
    }
    function At(e4, t4, r4, i3, n3) {
      var o2 = t4[0], a2 = t4[1], s2 = t4[2], u3 = t4[3], c3 = o2 + o2, l3 = a2 + a2, f3 = s2 + s2, h3 = o2 * c3, d3 = o2 * l3, p3 = o2 * f3, _3 = a2 * l3, g3 = a2 * f3, m3 = s2 * f3, v3 = u3 * c3, b3 = u3 * l3, y3 = u3 * f3, E3 = i3[0], x3 = i3[1], T3 = i3[2], A3 = n3[0], O3 = n3[1], P3 = n3[2], L3 = (1 - (_3 + m3)) * E3, w3 = (d3 + y3) * E3, S3 = (p3 - b3) * E3, R3 = (d3 - y3) * x3, I3 = (1 - (h3 + m3)) * x3, M3 = (g3 + v3) * x3, C3 = (p3 + b3) * T3, N3 = (g3 - v3) * T3, D3 = (1 - (h3 + _3)) * T3;
      return e4[0] = L3, e4[1] = w3, e4[2] = S3, e4[3] = 0, e4[4] = R3, e4[5] = I3, e4[6] = M3, e4[7] = 0, e4[8] = C3, e4[9] = N3, e4[10] = D3, e4[11] = 0, e4[12] = r4[0] + A3 - (L3 * A3 + R3 * O3 + C3 * P3), e4[13] = r4[1] + O3 - (w3 * A3 + I3 * O3 + N3 * P3), e4[14] = r4[2] + P3 - (S3 * A3 + M3 * O3 + D3 * P3), e4[15] = 1, e4;
    }
    function Ot(e4, t4) {
      var r4 = t4[0], i3 = t4[1], n3 = t4[2], o2 = t4[3], a2 = r4 + r4, s2 = i3 + i3, u3 = n3 + n3, c3 = r4 * a2, l3 = i3 * a2, f3 = i3 * s2, h3 = n3 * a2, d3 = n3 * s2, p3 = n3 * u3, _3 = o2 * a2, g3 = o2 * s2, m3 = o2 * u3;
      return e4[0] = 1 - f3 - p3, e4[1] = l3 + m3, e4[2] = h3 - g3, e4[3] = 0, e4[4] = l3 - m3, e4[5] = 1 - c3 - p3, e4[6] = d3 + _3, e4[7] = 0, e4[8] = h3 + g3, e4[9] = d3 - _3, e4[10] = 1 - c3 - f3, e4[11] = 0, e4[12] = 0, e4[13] = 0, e4[14] = 0, e4[15] = 1, e4;
    }
    function Pt(e4, t4, r4, i3, n3, o2, a2) {
      var s2 = 1 / (r4 - t4), u3 = 1 / (n3 - i3), c3 = 1 / (o2 - a2);
      return e4[0] = 2 * o2 * s2, e4[1] = 0, e4[2] = 0, e4[3] = 0, e4[4] = 0, e4[5] = 2 * o2 * u3, e4[6] = 0, e4[7] = 0, e4[8] = (r4 + t4) * s2, e4[9] = (n3 + i3) * u3, e4[10] = (a2 + o2) * c3, e4[11] = -1, e4[12] = 0, e4[13] = 0, e4[14] = a2 * o2 * 2 * c3, e4[15] = 0, e4;
    }
    function Lt(e4, t4, r4, i3, n3) {
      var o2, a2 = 1 / Math.tan(t4 / 2);
      return e4[0] = a2 / r4, e4[1] = 0, e4[2] = 0, e4[3] = 0, e4[4] = 0, e4[5] = a2, e4[6] = 0, e4[7] = 0, e4[8] = 0, e4[9] = 0, e4[11] = -1, e4[12] = 0, e4[13] = 0, e4[15] = 0, n3 != null && n3 !== 1 / 0 ? (o2 = 1 / (i3 - n3), e4[10] = (n3 + i3) * o2, e4[14] = 2 * n3 * i3 * o2) : (e4[10] = -1, e4[14] = -2 * i3), e4;
    }
    function wt(e4, t4, r4, i3) {
      var n3 = Math.tan(t4.upDegrees * Math.PI / 180), o2 = Math.tan(t4.downDegrees * Math.PI / 180), a2 = Math.tan(t4.leftDegrees * Math.PI / 180), s2 = Math.tan(t4.rightDegrees * Math.PI / 180), u3 = 2 / (a2 + s2), c3 = 2 / (n3 + o2);
      return e4[0] = u3, e4[1] = 0, e4[2] = 0, e4[3] = 0, e4[4] = 0, e4[5] = c3, e4[6] = 0, e4[7] = 0, e4[8] = -(a2 - s2) * u3 * 0.5, e4[9] = (n3 - o2) * c3 * 0.5, e4[10] = i3 / (r4 - i3), e4[11] = -1, e4[12] = 0, e4[13] = 0, e4[14] = i3 * r4 / (r4 - i3), e4[15] = 0, e4;
    }
    function St(e4, t4, r4, i3, n3, o2, a2) {
      var s2 = 1 / (t4 - r4), u3 = 1 / (i3 - n3), c3 = 1 / (o2 - a2);
      return e4[0] = -2 * s2, e4[1] = 0, e4[2] = 0, e4[3] = 0, e4[4] = 0, e4[5] = -2 * u3, e4[6] = 0, e4[7] = 0, e4[8] = 0, e4[9] = 0, e4[10] = 2 * c3, e4[11] = 0, e4[12] = (t4 + r4) * s2, e4[13] = (n3 + i3) * u3, e4[14] = (a2 + o2) * c3, e4[15] = 1, e4;
    }
    function Rt(e4, t4, r4, i3) {
      var n3, o2, a2, s2, u3, c3, l3, f3, h3, p3, _3 = t4[0], g3 = t4[1], m3 = t4[2], v3 = i3[0], b3 = i3[1], y3 = i3[2], E3 = r4[0], x3 = r4[1], T3 = r4[2];
      return Math.abs(_3 - E3) < d2 && Math.abs(g3 - x3) < d2 && Math.abs(m3 - T3) < d2 ? et(e4) : (l3 = _3 - E3, f3 = g3 - x3, h3 = m3 - T3, n3 = b3 * (h3 *= p3 = 1 / Math.hypot(l3, f3, h3)) - y3 * (f3 *= p3), o2 = y3 * (l3 *= p3) - v3 * h3, a2 = v3 * f3 - b3 * l3, (p3 = Math.hypot(n3, o2, a2)) ? (n3 *= p3 = 1 / p3, o2 *= p3, a2 *= p3) : (n3 = 0, o2 = 0, a2 = 0), s2 = f3 * a2 - h3 * o2, u3 = h3 * n3 - l3 * a2, c3 = l3 * o2 - f3 * n3, (p3 = Math.hypot(s2, u3, c3)) ? (s2 *= p3 = 1 / p3, u3 *= p3, c3 *= p3) : (s2 = 0, u3 = 0, c3 = 0), e4[0] = n3, e4[1] = s2, e4[2] = l3, e4[3] = 0, e4[4] = o2, e4[5] = u3, e4[6] = f3, e4[7] = 0, e4[8] = a2, e4[9] = c3, e4[10] = h3, e4[11] = 0, e4[12] = -(n3 * _3 + o2 * g3 + a2 * m3), e4[13] = -(s2 * _3 + u3 * g3 + c3 * m3), e4[14] = -(l3 * _3 + f3 * g3 + h3 * m3), e4[15] = 1, e4);
    }
    function It(e4, t4, r4, i3) {
      var n3 = t4[0], o2 = t4[1], a2 = t4[2], s2 = i3[0], u3 = i3[1], c3 = i3[2], l3 = n3 - r4[0], f3 = o2 - r4[1], h3 = a2 - r4[2], d3 = l3 * l3 + f3 * f3 + h3 * h3;
      d3 > 0 && (l3 *= d3 = 1 / Math.sqrt(d3), f3 *= d3, h3 *= d3);
      var p3 = u3 * h3 - c3 * f3, _3 = c3 * l3 - s2 * h3, g3 = s2 * f3 - u3 * l3;
      return (d3 = p3 * p3 + _3 * _3 + g3 * g3) > 0 && (p3 *= d3 = 1 / Math.sqrt(d3), _3 *= d3, g3 *= d3), e4[0] = p3, e4[1] = _3, e4[2] = g3, e4[3] = 0, e4[4] = f3 * g3 - h3 * _3, e4[5] = h3 * p3 - l3 * g3, e4[6] = l3 * _3 - f3 * p3, e4[7] = 0, e4[8] = l3, e4[9] = f3, e4[10] = h3, e4[11] = 0, e4[12] = n3, e4[13] = o2, e4[14] = a2, e4[15] = 1, e4;
    }
    function Mt(e4) {
      return "mat4(" + e4[0] + ", " + e4[1] + ", " + e4[2] + ", " + e4[3] + ", " + e4[4] + ", " + e4[5] + ", " + e4[6] + ", " + e4[7] + ", " + e4[8] + ", " + e4[9] + ", " + e4[10] + ", " + e4[11] + ", " + e4[12] + ", " + e4[13] + ", " + e4[14] + ", " + e4[15] + ")";
    }
    function Ct(e4) {
      return Math.hypot(e4[0], e4[1], e4[2], e4[3], e4[4], e4[5], e4[6], e4[7], e4[8], e4[9], e4[10], e4[11], e4[12], e4[13], e4[14], e4[15]);
    }
    function Nt(e4, t4, r4) {
      return e4[0] = t4[0] + r4[0], e4[1] = t4[1] + r4[1], e4[2] = t4[2] + r4[2], e4[3] = t4[3] + r4[3], e4[4] = t4[4] + r4[4], e4[5] = t4[5] + r4[5], e4[6] = t4[6] + r4[6], e4[7] = t4[7] + r4[7], e4[8] = t4[8] + r4[8], e4[9] = t4[9] + r4[9], e4[10] = t4[10] + r4[10], e4[11] = t4[11] + r4[11], e4[12] = t4[12] + r4[12], e4[13] = t4[13] + r4[13], e4[14] = t4[14] + r4[14], e4[15] = t4[15] + r4[15], e4;
    }
    function Dt(e4, t4, r4) {
      return e4[0] = t4[0] - r4[0], e4[1] = t4[1] - r4[1], e4[2] = t4[2] - r4[2], e4[3] = t4[3] - r4[3], e4[4] = t4[4] - r4[4], e4[5] = t4[5] - r4[5], e4[6] = t4[6] - r4[6], e4[7] = t4[7] - r4[7], e4[8] = t4[8] - r4[8], e4[9] = t4[9] - r4[9], e4[10] = t4[10] - r4[10], e4[11] = t4[11] - r4[11], e4[12] = t4[12] - r4[12], e4[13] = t4[13] - r4[13], e4[14] = t4[14] - r4[14], e4[15] = t4[15] - r4[15], e4;
    }
    function Bt(e4, t4, r4) {
      return e4[0] = t4[0] * r4, e4[1] = t4[1] * r4, e4[2] = t4[2] * r4, e4[3] = t4[3] * r4, e4[4] = t4[4] * r4, e4[5] = t4[5] * r4, e4[6] = t4[6] * r4, e4[7] = t4[7] * r4, e4[8] = t4[8] * r4, e4[9] = t4[9] * r4, e4[10] = t4[10] * r4, e4[11] = t4[11] * r4, e4[12] = t4[12] * r4, e4[13] = t4[13] * r4, e4[14] = t4[14] * r4, e4[15] = t4[15] * r4, e4;
    }
    function Ft(e4, t4, r4, i3) {
      return e4[0] = t4[0] + r4[0] * i3, e4[1] = t4[1] + r4[1] * i3, e4[2] = t4[2] + r4[2] * i3, e4[3] = t4[3] + r4[3] * i3, e4[4] = t4[4] + r4[4] * i3, e4[5] = t4[5] + r4[5] * i3, e4[6] = t4[6] + r4[6] * i3, e4[7] = t4[7] + r4[7] * i3, e4[8] = t4[8] + r4[8] * i3, e4[9] = t4[9] + r4[9] * i3, e4[10] = t4[10] + r4[10] * i3, e4[11] = t4[11] + r4[11] * i3, e4[12] = t4[12] + r4[12] * i3, e4[13] = t4[13] + r4[13] * i3, e4[14] = t4[14] + r4[14] * i3, e4[15] = t4[15] + r4[15] * i3, e4;
    }
    function zt(e4, t4) {
      return e4[0] === t4[0] && e4[1] === t4[1] && e4[2] === t4[2] && e4[3] === t4[3] && e4[4] === t4[4] && e4[5] === t4[5] && e4[6] === t4[6] && e4[7] === t4[7] && e4[8] === t4[8] && e4[9] === t4[9] && e4[10] === t4[10] && e4[11] === t4[11] && e4[12] === t4[12] && e4[13] === t4[13] && e4[14] === t4[14] && e4[15] === t4[15];
    }
    function jt(e4, t4) {
      var r4 = e4[0], i3 = e4[1], n3 = e4[2], o2 = e4[3], a2 = e4[4], s2 = e4[5], u3 = e4[6], c3 = e4[7], l3 = e4[8], f3 = e4[9], h3 = e4[10], p3 = e4[11], _3 = e4[12], g3 = e4[13], m3 = e4[14], v3 = e4[15], b3 = t4[0], y3 = t4[1], E3 = t4[2], x3 = t4[3], T3 = t4[4], A3 = t4[5], O3 = t4[6], P3 = t4[7], L3 = t4[8], w3 = t4[9], S3 = t4[10], R3 = t4[11], I3 = t4[12], M3 = t4[13], C3 = t4[14], N3 = t4[15];
      return Math.abs(r4 - b3) <= d2 * Math.max(1, Math.abs(r4), Math.abs(b3)) && Math.abs(i3 - y3) <= d2 * Math.max(1, Math.abs(i3), Math.abs(y3)) && Math.abs(n3 - E3) <= d2 * Math.max(1, Math.abs(n3), Math.abs(E3)) && Math.abs(o2 - x3) <= d2 * Math.max(1, Math.abs(o2), Math.abs(x3)) && Math.abs(a2 - T3) <= d2 * Math.max(1, Math.abs(a2), Math.abs(T3)) && Math.abs(s2 - A3) <= d2 * Math.max(1, Math.abs(s2), Math.abs(A3)) && Math.abs(u3 - O3) <= d2 * Math.max(1, Math.abs(u3), Math.abs(O3)) && Math.abs(c3 - P3) <= d2 * Math.max(1, Math.abs(c3), Math.abs(P3)) && Math.abs(l3 - L3) <= d2 * Math.max(1, Math.abs(l3), Math.abs(L3)) && Math.abs(f3 - w3) <= d2 * Math.max(1, Math.abs(f3), Math.abs(w3)) && Math.abs(h3 - S3) <= d2 * Math.max(1, Math.abs(h3), Math.abs(S3)) && Math.abs(p3 - R3) <= d2 * Math.max(1, Math.abs(p3), Math.abs(R3)) && Math.abs(_3 - I3) <= d2 * Math.max(1, Math.abs(_3), Math.abs(I3)) && Math.abs(g3 - M3) <= d2 * Math.max(1, Math.abs(g3), Math.abs(M3)) && Math.abs(m3 - C3) <= d2 * Math.max(1, Math.abs(m3), Math.abs(C3)) && Math.abs(v3 - N3) <= d2 * Math.max(1, Math.abs(v3), Math.abs(N3));
    }
    var Ut = ot, Gt = Dt;
    function kt() {
      var e4 = new p2(3);
      return p2 != Float32Array && (e4[0] = 0, e4[1] = 0, e4[2] = 0), e4;
    }
    function Vt(e4) {
      var t4 = new p2(3);
      return t4[0] = e4[0], t4[1] = e4[1], t4[2] = e4[2], t4;
    }
    function Ht(e4) {
      var t4 = e4[0], r4 = e4[1], i3 = e4[2];
      return Math.hypot(t4, r4, i3);
    }
    function Wt(e4, t4, r4) {
      var i3 = new p2(3);
      return i3[0] = e4, i3[1] = t4, i3[2] = r4, i3;
    }
    function Xt(e4, t4) {
      return e4[0] = t4[0], e4[1] = t4[1], e4[2] = t4[2], e4;
    }
    function qt(e4, t4, r4, i3) {
      return e4[0] = t4, e4[1] = r4, e4[2] = i3, e4;
    }
    function Yt(e4, t4, r4) {
      return e4[0] = t4[0] + r4[0], e4[1] = t4[1] + r4[1], e4[2] = t4[2] + r4[2], e4;
    }
    function Kt(e4, t4, r4) {
      return e4[0] = t4[0] - r4[0], e4[1] = t4[1] - r4[1], e4[2] = t4[2] - r4[2], e4;
    }
    function Zt(e4, t4, r4) {
      return e4[0] = t4[0] * r4[0], e4[1] = t4[1] * r4[1], e4[2] = t4[2] * r4[2], e4;
    }
    function $t(e4, t4, r4) {
      return e4[0] = t4[0] / r4[0], e4[1] = t4[1] / r4[1], e4[2] = t4[2] / r4[2], e4;
    }
    function Qt(e4, t4) {
      return e4[0] = Math.ceil(t4[0]), e4[1] = Math.ceil(t4[1]), e4[2] = Math.ceil(t4[2]), e4;
    }
    function Jt(e4, t4) {
      return e4[0] = Math.floor(t4[0]), e4[1] = Math.floor(t4[1]), e4[2] = Math.floor(t4[2]), e4;
    }
    function er(e4, t4, r4) {
      return e4[0] = Math.min(t4[0], r4[0]), e4[1] = Math.min(t4[1], r4[1]), e4[2] = Math.min(t4[2], r4[2]), e4;
    }
    function tr(e4, t4, r4) {
      return e4[0] = Math.max(t4[0], r4[0]), e4[1] = Math.max(t4[1], r4[1]), e4[2] = Math.max(t4[2], r4[2]), e4;
    }
    function rr(e4, t4) {
      return e4[0] = Math.round(t4[0]), e4[1] = Math.round(t4[1]), e4[2] = Math.round(t4[2]), e4;
    }
    function ir(e4, t4, r4) {
      return e4[0] = t4[0] * r4, e4[1] = t4[1] * r4, e4[2] = t4[2] * r4, e4;
    }
    function nr(e4, t4, r4, i3) {
      return e4[0] = t4[0] + r4[0] * i3, e4[1] = t4[1] + r4[1] * i3, e4[2] = t4[2] + r4[2] * i3, e4;
    }
    function or(e4, t4) {
      var r4 = t4[0] - e4[0], i3 = t4[1] - e4[1], n3 = t4[2] - e4[2];
      return Math.hypot(r4, i3, n3);
    }
    function ar(e4, t4) {
      var r4 = t4[0] - e4[0], i3 = t4[1] - e4[1], n3 = t4[2] - e4[2];
      return r4 * r4 + i3 * i3 + n3 * n3;
    }
    function sr(e4) {
      var t4 = e4[0], r4 = e4[1], i3 = e4[2];
      return t4 * t4 + r4 * r4 + i3 * i3;
    }
    function ur(e4, t4) {
      return e4[0] = -t4[0], e4[1] = -t4[1], e4[2] = -t4[2], e4;
    }
    function cr(e4, t4) {
      return e4[0] = 1 / t4[0], e4[1] = 1 / t4[1], e4[2] = 1 / t4[2], e4;
    }
    function lr(e4, t4) {
      var r4 = t4[0], i3 = t4[1], n3 = t4[2], o2 = r4 * r4 + i3 * i3 + n3 * n3;
      return o2 > 0 && (o2 = 1 / Math.sqrt(o2)), e4[0] = t4[0] * o2, e4[1] = t4[1] * o2, e4[2] = t4[2] * o2, e4;
    }
    function fr(e4, t4) {
      return e4[0] * t4[0] + e4[1] * t4[1] + e4[2] * t4[2];
    }
    function hr(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = r4[0], s2 = r4[1], u3 = r4[2];
      return e4[0] = n3 * u3 - o2 * s2, e4[1] = o2 * a2 - i3 * u3, e4[2] = i3 * s2 - n3 * a2, e4;
    }
    function dr(e4, t4, r4, i3) {
      var n3 = t4[0], o2 = t4[1], a2 = t4[2];
      return e4[0] = n3 + i3 * (r4[0] - n3), e4[1] = o2 + i3 * (r4[1] - o2), e4[2] = a2 + i3 * (r4[2] - a2), e4;
    }
    function pr(e4, t4, r4, i3, n3, o2) {
      var a2 = o2 * o2, s2 = a2 * (2 * o2 - 3) + 1, u3 = a2 * (o2 - 2) + o2, c3 = a2 * (o2 - 1), l3 = a2 * (3 - 2 * o2);
      return e4[0] = t4[0] * s2 + r4[0] * u3 + i3[0] * c3 + n3[0] * l3, e4[1] = t4[1] * s2 + r4[1] * u3 + i3[1] * c3 + n3[1] * l3, e4[2] = t4[2] * s2 + r4[2] * u3 + i3[2] * c3 + n3[2] * l3, e4;
    }
    function _r(e4, t4, r4, i3, n3, o2) {
      var a2 = 1 - o2, s2 = a2 * a2, u3 = o2 * o2, c3 = s2 * a2, l3 = 3 * o2 * s2, f3 = 3 * u3 * a2, h3 = u3 * o2;
      return e4[0] = t4[0] * c3 + r4[0] * l3 + i3[0] * f3 + n3[0] * h3, e4[1] = t4[1] * c3 + r4[1] * l3 + i3[1] * f3 + n3[1] * h3, e4[2] = t4[2] * c3 + r4[2] * l3 + i3[2] * f3 + n3[2] * h3, e4;
    }
    function gr(e4, t4) {
      t4 = t4 || 1;
      var r4 = 2 * _2() * Math.PI, i3 = 2 * _2() - 1, n3 = Math.sqrt(1 - i3 * i3) * t4;
      return e4[0] = Math.cos(r4) * n3, e4[1] = Math.sin(r4) * n3, e4[2] = i3 * t4, e4;
    }
    function mr(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = r4[3] * i3 + r4[7] * n3 + r4[11] * o2 + r4[15];
      return a2 = a2 || 1, e4[0] = (r4[0] * i3 + r4[4] * n3 + r4[8] * o2 + r4[12]) / a2, e4[1] = (r4[1] * i3 + r4[5] * n3 + r4[9] * o2 + r4[13]) / a2, e4[2] = (r4[2] * i3 + r4[6] * n3 + r4[10] * o2 + r4[14]) / a2, e4;
    }
    function vr(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2];
      return e4[0] = i3 * r4[0] + n3 * r4[3] + o2 * r4[6], e4[1] = i3 * r4[1] + n3 * r4[4] + o2 * r4[7], e4[2] = i3 * r4[2] + n3 * r4[5] + o2 * r4[8], e4;
    }
    function br(e4, t4, r4) {
      var i3 = r4[0], n3 = r4[1], o2 = r4[2], a2 = r4[3], s2 = t4[0], u3 = t4[1], c3 = t4[2], l3 = n3 * c3 - o2 * u3, f3 = o2 * s2 - i3 * c3, h3 = i3 * u3 - n3 * s2, d3 = n3 * h3 - o2 * f3, p3 = o2 * l3 - i3 * h3, _3 = i3 * f3 - n3 * l3, g3 = 2 * a2;
      return l3 *= g3, f3 *= g3, h3 *= g3, d3 *= 2, p3 *= 2, _3 *= 2, e4[0] = s2 + l3 + d3, e4[1] = u3 + f3 + p3, e4[2] = c3 + h3 + _3, e4;
    }
    function yr(e4, t4, r4, i3) {
      var n3 = [], o2 = [];
      return n3[0] = t4[0] - r4[0], n3[1] = t4[1] - r4[1], n3[2] = t4[2] - r4[2], o2[0] = n3[0], o2[1] = n3[1] * Math.cos(i3) - n3[2] * Math.sin(i3), o2[2] = n3[1] * Math.sin(i3) + n3[2] * Math.cos(i3), e4[0] = o2[0] + r4[0], e4[1] = o2[1] + r4[1], e4[2] = o2[2] + r4[2], e4;
    }
    function Er(e4, t4, r4, i3) {
      var n3 = [], o2 = [];
      return n3[0] = t4[0] - r4[0], n3[1] = t4[1] - r4[1], n3[2] = t4[2] - r4[2], o2[0] = n3[2] * Math.sin(i3) + n3[0] * Math.cos(i3), o2[1] = n3[1], o2[2] = n3[2] * Math.cos(i3) - n3[0] * Math.sin(i3), e4[0] = o2[0] + r4[0], e4[1] = o2[1] + r4[1], e4[2] = o2[2] + r4[2], e4;
    }
    function xr(e4, t4, r4, i3) {
      var n3 = [], o2 = [];
      return n3[0] = t4[0] - r4[0], n3[1] = t4[1] - r4[1], n3[2] = t4[2] - r4[2], o2[0] = n3[0] * Math.cos(i3) - n3[1] * Math.sin(i3), o2[1] = n3[0] * Math.sin(i3) + n3[1] * Math.cos(i3), o2[2] = n3[2], e4[0] = o2[0] + r4[0], e4[1] = o2[1] + r4[1], e4[2] = o2[2] + r4[2], e4;
    }
    function Tr(e4, t4) {
      var r4 = e4[0], i3 = e4[1], n3 = e4[2], o2 = t4[0], a2 = t4[1], s2 = t4[2], u3 = Math.sqrt(r4 * r4 + i3 * i3 + n3 * n3) * Math.sqrt(o2 * o2 + a2 * a2 + s2 * s2), c3 = u3 && fr(e4, t4) / u3;
      return Math.acos(Math.min(Math.max(c3, -1), 1));
    }
    function Ar(e4) {
      return e4[0] = 0, e4[1] = 0, e4[2] = 0, e4;
    }
    function Or(e4) {
      return "vec3(" + e4[0] + ", " + e4[1] + ", " + e4[2] + ")";
    }
    function Pr(e4, t4) {
      return e4[0] === t4[0] && e4[1] === t4[1] && e4[2] === t4[2];
    }
    function Lr(e4, t4) {
      var r4 = e4[0], i3 = e4[1], n3 = e4[2], o2 = t4[0], a2 = t4[1], s2 = t4[2];
      return Math.abs(r4 - o2) <= d2 * Math.max(1, Math.abs(r4), Math.abs(o2)) && Math.abs(i3 - a2) <= d2 * Math.max(1, Math.abs(i3), Math.abs(a2)) && Math.abs(n3 - s2) <= d2 * Math.max(1, Math.abs(n3), Math.abs(s2));
    }
    var wr, Sr = Kt, Rr = Zt, Ir = $t, Mr = or, Cr = ar, Nr = Ht, Dr = sr, Br = (wr = kt(), function(e4, t4, r4, i3, n3, o2) {
      var a2, s2;
      for (t4 || (t4 = 3), r4 || (r4 = 0), s2 = i3 ? Math.min(i3 * t4 + r4, e4.length) : e4.length, a2 = r4; a2 < s2; a2 += t4)
        wr[0] = e4[a2], wr[1] = e4[a2 + 1], wr[2] = e4[a2 + 2], n3(wr, wr, o2), e4[a2] = wr[0], e4[a2 + 1] = wr[1], e4[a2 + 2] = wr[2];
      return e4;
    });
    function Fr() {
      var e4 = new p2(4);
      return p2 != Float32Array && (e4[0] = 0, e4[1] = 0, e4[2] = 0, e4[3] = 0), e4;
    }
    function zr(e4) {
      var t4 = new p2(4);
      return t4[0] = e4[0], t4[1] = e4[1], t4[2] = e4[2], t4[3] = e4[3], t4;
    }
    function jr(e4, t4, r4, i3) {
      var n3 = new p2(4);
      return n3[0] = e4, n3[1] = t4, n3[2] = r4, n3[3] = i3, n3;
    }
    function Ur(e4, t4) {
      return e4[0] = t4[0], e4[1] = t4[1], e4[2] = t4[2], e4[3] = t4[3], e4;
    }
    function Gr(e4, t4, r4, i3, n3) {
      return e4[0] = t4, e4[1] = r4, e4[2] = i3, e4[3] = n3, e4;
    }
    function kr(e4, t4, r4) {
      return e4[0] = t4[0] + r4[0], e4[1] = t4[1] + r4[1], e4[2] = t4[2] + r4[2], e4[3] = t4[3] + r4[3], e4;
    }
    function Vr(e4, t4, r4) {
      return e4[0] = t4[0] - r4[0], e4[1] = t4[1] - r4[1], e4[2] = t4[2] - r4[2], e4[3] = t4[3] - r4[3], e4;
    }
    function Hr(e4, t4, r4) {
      return e4[0] = t4[0] * r4[0], e4[1] = t4[1] * r4[1], e4[2] = t4[2] * r4[2], e4[3] = t4[3] * r4[3], e4;
    }
    function Wr(e4, t4, r4) {
      return e4[0] = t4[0] / r4[0], e4[1] = t4[1] / r4[1], e4[2] = t4[2] / r4[2], e4[3] = t4[3] / r4[3], e4;
    }
    function Xr(e4, t4) {
      return e4[0] = Math.ceil(t4[0]), e4[1] = Math.ceil(t4[1]), e4[2] = Math.ceil(t4[2]), e4[3] = Math.ceil(t4[3]), e4;
    }
    function qr(e4, t4) {
      return e4[0] = Math.floor(t4[0]), e4[1] = Math.floor(t4[1]), e4[2] = Math.floor(t4[2]), e4[3] = Math.floor(t4[3]), e4;
    }
    function Yr(e4, t4, r4) {
      return e4[0] = Math.min(t4[0], r4[0]), e4[1] = Math.min(t4[1], r4[1]), e4[2] = Math.min(t4[2], r4[2]), e4[3] = Math.min(t4[3], r4[3]), e4;
    }
    function Kr(e4, t4, r4) {
      return e4[0] = Math.max(t4[0], r4[0]), e4[1] = Math.max(t4[1], r4[1]), e4[2] = Math.max(t4[2], r4[2]), e4[3] = Math.max(t4[3], r4[3]), e4;
    }
    function Zr(e4, t4) {
      return e4[0] = Math.round(t4[0]), e4[1] = Math.round(t4[1]), e4[2] = Math.round(t4[2]), e4[3] = Math.round(t4[3]), e4;
    }
    function $r(e4, t4, r4) {
      return e4[0] = t4[0] * r4, e4[1] = t4[1] * r4, e4[2] = t4[2] * r4, e4[3] = t4[3] * r4, e4;
    }
    function Qr(e4, t4, r4, i3) {
      return e4[0] = t4[0] + r4[0] * i3, e4[1] = t4[1] + r4[1] * i3, e4[2] = t4[2] + r4[2] * i3, e4[3] = t4[3] + r4[3] * i3, e4;
    }
    function Jr(e4, t4) {
      var r4 = t4[0] - e4[0], i3 = t4[1] - e4[1], n3 = t4[2] - e4[2], o2 = t4[3] - e4[3];
      return Math.hypot(r4, i3, n3, o2);
    }
    function ei2(e4, t4) {
      var r4 = t4[0] - e4[0], i3 = t4[1] - e4[1], n3 = t4[2] - e4[2], o2 = t4[3] - e4[3];
      return r4 * r4 + i3 * i3 + n3 * n3 + o2 * o2;
    }
    function ti2(e4) {
      var t4 = e4[0], r4 = e4[1], i3 = e4[2], n3 = e4[3];
      return Math.hypot(t4, r4, i3, n3);
    }
    function ri2(e4) {
      var t4 = e4[0], r4 = e4[1], i3 = e4[2], n3 = e4[3];
      return t4 * t4 + r4 * r4 + i3 * i3 + n3 * n3;
    }
    function ii2(e4, t4) {
      return e4[0] = -t4[0], e4[1] = -t4[1], e4[2] = -t4[2], e4[3] = -t4[3], e4;
    }
    function ni2(e4, t4) {
      return e4[0] = 1 / t4[0], e4[1] = 1 / t4[1], e4[2] = 1 / t4[2], e4[3] = 1 / t4[3], e4;
    }
    function oi2(e4, t4) {
      var r4 = t4[0], i3 = t4[1], n3 = t4[2], o2 = t4[3], a2 = r4 * r4 + i3 * i3 + n3 * n3 + o2 * o2;
      return a2 > 0 && (a2 = 1 / Math.sqrt(a2)), e4[0] = r4 * a2, e4[1] = i3 * a2, e4[2] = n3 * a2, e4[3] = o2 * a2, e4;
    }
    function ai2(e4, t4) {
      return e4[0] * t4[0] + e4[1] * t4[1] + e4[2] * t4[2] + e4[3] * t4[3];
    }
    function si2(e4, t4, r4, i3) {
      var n3 = r4[0] * i3[1] - r4[1] * i3[0], o2 = r4[0] * i3[2] - r4[2] * i3[0], a2 = r4[0] * i3[3] - r4[3] * i3[0], s2 = r4[1] * i3[2] - r4[2] * i3[1], u3 = r4[1] * i3[3] - r4[3] * i3[1], c3 = r4[2] * i3[3] - r4[3] * i3[2], l3 = t4[0], f3 = t4[1], h3 = t4[2], d3 = t4[3];
      return e4[0] = f3 * c3 - h3 * u3 + d3 * s2, e4[1] = -l3 * c3 + h3 * a2 - d3 * o2, e4[2] = l3 * u3 - f3 * a2 + d3 * n3, e4[3] = -l3 * s2 + f3 * o2 - h3 * n3, e4;
    }
    function ui2(e4, t4, r4, i3) {
      var n3 = t4[0], o2 = t4[1], a2 = t4[2], s2 = t4[3];
      return e4[0] = n3 + i3 * (r4[0] - n3), e4[1] = o2 + i3 * (r4[1] - o2), e4[2] = a2 + i3 * (r4[2] - a2), e4[3] = s2 + i3 * (r4[3] - s2), e4;
    }
    function ci2(e4, t4) {
      var r4, i3, n3, o2, a2, s2;
      t4 = t4 || 1;
      do {
        a2 = (r4 = 2 * _2() - 1) * r4 + (i3 = 2 * _2() - 1) * i3;
      } while (a2 >= 1);
      do {
        s2 = (n3 = 2 * _2() - 1) * n3 + (o2 = 2 * _2() - 1) * o2;
      } while (s2 >= 1);
      var u3 = Math.sqrt((1 - a2) / s2);
      return e4[0] = t4 * r4, e4[1] = t4 * i3, e4[2] = t4 * n3 * u3, e4[3] = t4 * o2 * u3, e4;
    }
    function li2(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3];
      return e4[0] = r4[0] * i3 + r4[4] * n3 + r4[8] * o2 + r4[12] * a2, e4[1] = r4[1] * i3 + r4[5] * n3 + r4[9] * o2 + r4[13] * a2, e4[2] = r4[2] * i3 + r4[6] * n3 + r4[10] * o2 + r4[14] * a2, e4[3] = r4[3] * i3 + r4[7] * n3 + r4[11] * o2 + r4[15] * a2, e4;
    }
    function fi2(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = r4[0], s2 = r4[1], u3 = r4[2], c3 = r4[3], l3 = c3 * i3 + s2 * o2 - u3 * n3, f3 = c3 * n3 + u3 * i3 - a2 * o2, h3 = c3 * o2 + a2 * n3 - s2 * i3, d3 = -a2 * i3 - s2 * n3 - u3 * o2;
      return e4[0] = l3 * c3 + d3 * -a2 + f3 * -u3 - h3 * -s2, e4[1] = f3 * c3 + d3 * -s2 + h3 * -a2 - l3 * -u3, e4[2] = h3 * c3 + d3 * -u3 + l3 * -s2 - f3 * -a2, e4[3] = t4[3], e4;
    }
    function hi2(e4) {
      return e4[0] = 0, e4[1] = 0, e4[2] = 0, e4[3] = 0, e4;
    }
    function di2(e4) {
      return "vec4(" + e4[0] + ", " + e4[1] + ", " + e4[2] + ", " + e4[3] + ")";
    }
    function pi2(e4, t4) {
      return e4[0] === t4[0] && e4[1] === t4[1] && e4[2] === t4[2] && e4[3] === t4[3];
    }
    function _i(e4, t4) {
      var r4 = e4[0], i3 = e4[1], n3 = e4[2], o2 = e4[3], a2 = t4[0], s2 = t4[1], u3 = t4[2], c3 = t4[3];
      return Math.abs(r4 - a2) <= d2 * Math.max(1, Math.abs(r4), Math.abs(a2)) && Math.abs(i3 - s2) <= d2 * Math.max(1, Math.abs(i3), Math.abs(s2)) && Math.abs(n3 - u3) <= d2 * Math.max(1, Math.abs(n3), Math.abs(u3)) && Math.abs(o2 - c3) <= d2 * Math.max(1, Math.abs(o2), Math.abs(c3));
    }
    var gi2 = Vr, mi2 = Hr, vi2 = Wr, bi2 = Jr, yi2 = ei2, Ei2 = ti2, xi2 = ri2, Ti2 = function() {
      var e4 = Fr();
      return function(t4, r4, i3, n3, o2, a2) {
        var s2, u3;
        for (r4 || (r4 = 4), i3 || (i3 = 0), u3 = n3 ? Math.min(n3 * r4 + i3, t4.length) : t4.length, s2 = i3; s2 < u3; s2 += r4)
          e4[0] = t4[s2], e4[1] = t4[s2 + 1], e4[2] = t4[s2 + 2], e4[3] = t4[s2 + 3], o2(e4, e4, a2), t4[s2] = e4[0], t4[s2 + 1] = e4[1], t4[s2 + 2] = e4[2], t4[s2 + 3] = e4[3];
        return t4;
      };
    }();
    function Ai2() {
      var e4 = new p2(4);
      return p2 != Float32Array && (e4[0] = 0, e4[1] = 0, e4[2] = 0), e4[3] = 1, e4;
    }
    function Oi2(e4) {
      return e4[0] = 0, e4[1] = 0, e4[2] = 0, e4[3] = 1, e4;
    }
    function Pi2(e4, t4, r4) {
      r4 *= 0.5;
      var i3 = Math.sin(r4);
      return e4[0] = i3 * t4[0], e4[1] = i3 * t4[1], e4[2] = i3 * t4[2], e4[3] = Math.cos(r4), e4;
    }
    function Li2(e4, t4) {
      var r4 = 2 * Math.acos(t4[3]), i3 = Math.sin(r4 / 2);
      return i3 > d2 ? (e4[0] = t4[0] / i3, e4[1] = t4[1] / i3, e4[2] = t4[2] / i3) : (e4[0] = 1, e4[1] = 0, e4[2] = 0), r4;
    }
    function wi2(e4, t4) {
      var r4 = nn(e4, t4);
      return Math.acos(2 * r4 * r4 - 1);
    }
    function Si2(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3], s2 = r4[0], u3 = r4[1], c3 = r4[2], l3 = r4[3];
      return e4[0] = i3 * l3 + a2 * s2 + n3 * c3 - o2 * u3, e4[1] = n3 * l3 + a2 * u3 + o2 * s2 - i3 * c3, e4[2] = o2 * l3 + a2 * c3 + i3 * u3 - n3 * s2, e4[3] = a2 * l3 - i3 * s2 - n3 * u3 - o2 * c3, e4;
    }
    function Ri2(e4, t4, r4) {
      r4 *= 0.5;
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3], s2 = Math.sin(r4), u3 = Math.cos(r4);
      return e4[0] = i3 * u3 + a2 * s2, e4[1] = n3 * u3 + o2 * s2, e4[2] = o2 * u3 - n3 * s2, e4[3] = a2 * u3 - i3 * s2, e4;
    }
    function Ii2(e4, t4, r4) {
      r4 *= 0.5;
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3], s2 = Math.sin(r4), u3 = Math.cos(r4);
      return e4[0] = i3 * u3 - o2 * s2, e4[1] = n3 * u3 + a2 * s2, e4[2] = o2 * u3 + i3 * s2, e4[3] = a2 * u3 - n3 * s2, e4;
    }
    function Mi2(e4, t4, r4) {
      r4 *= 0.5;
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3], s2 = Math.sin(r4), u3 = Math.cos(r4);
      return e4[0] = i3 * u3 + n3 * s2, e4[1] = n3 * u3 - i3 * s2, e4[2] = o2 * u3 + a2 * s2, e4[3] = a2 * u3 - o2 * s2, e4;
    }
    function Ci2(e4, t4) {
      var r4 = t4[0], i3 = t4[1], n3 = t4[2];
      return e4[0] = r4, e4[1] = i3, e4[2] = n3, e4[3] = Math.sqrt(Math.abs(1 - r4 * r4 - i3 * i3 - n3 * n3)), e4;
    }
    function Ni2(e4, t4) {
      var r4 = t4[0], i3 = t4[1], n3 = t4[2], o2 = t4[3], a2 = Math.sqrt(r4 * r4 + i3 * i3 + n3 * n3), s2 = Math.exp(o2), u3 = a2 > 0 ? s2 * Math.sin(a2) / a2 : 0;
      return e4[0] = r4 * u3, e4[1] = i3 * u3, e4[2] = n3 * u3, e4[3] = s2 * Math.cos(a2), e4;
    }
    function Di2(e4, t4) {
      var r4 = t4[0], i3 = t4[1], n3 = t4[2], o2 = t4[3], a2 = Math.sqrt(r4 * r4 + i3 * i3 + n3 * n3), s2 = a2 > 0 ? Math.atan2(a2, o2) / a2 : 0;
      return e4[0] = r4 * s2, e4[1] = i3 * s2, e4[2] = n3 * s2, e4[3] = 0.5 * Math.log(r4 * r4 + i3 * i3 + n3 * n3 + o2 * o2), e4;
    }
    function Bi2(e4, t4, r4) {
      return Di2(e4, t4), rn(e4, e4, r4), Ni2(e4, e4), e4;
    }
    function Fi2(e4, t4, r4, i3) {
      var n3, o2, a2, s2, u3, c3 = t4[0], l3 = t4[1], f3 = t4[2], h3 = t4[3], p3 = r4[0], _3 = r4[1], g3 = r4[2], m3 = r4[3];
      return (o2 = c3 * p3 + l3 * _3 + f3 * g3 + h3 * m3) < 0 && (o2 = -o2, p3 = -p3, _3 = -_3, g3 = -g3, m3 = -m3), 1 - o2 > d2 ? (n3 = Math.acos(o2), a2 = Math.sin(n3), s2 = Math.sin((1 - i3) * n3) / a2, u3 = Math.sin(i3 * n3) / a2) : (s2 = 1 - i3, u3 = i3), e4[0] = s2 * c3 + u3 * p3, e4[1] = s2 * l3 + u3 * _3, e4[2] = s2 * f3 + u3 * g3, e4[3] = s2 * h3 + u3 * m3, e4;
    }
    function zi2(e4) {
      var t4 = _2(), r4 = _2(), i3 = _2(), n3 = Math.sqrt(1 - t4), o2 = Math.sqrt(t4);
      return e4[0] = n3 * Math.sin(2 * Math.PI * r4), e4[1] = n3 * Math.cos(2 * Math.PI * r4), e4[2] = o2 * Math.sin(2 * Math.PI * i3), e4[3] = o2 * Math.cos(2 * Math.PI * i3), e4;
    }
    function ji2(e4, t4) {
      var r4 = t4[0], i3 = t4[1], n3 = t4[2], o2 = t4[3], a2 = r4 * r4 + i3 * i3 + n3 * n3 + o2 * o2, s2 = a2 ? 1 / a2 : 0;
      return e4[0] = -r4 * s2, e4[1] = -i3 * s2, e4[2] = -n3 * s2, e4[3] = o2 * s2, e4;
    }
    function Ui2(e4, t4) {
      return e4[0] = -t4[0], e4[1] = -t4[1], e4[2] = -t4[2], e4[3] = t4[3], e4;
    }
    function Gi2(e4, t4) {
      var r4, i3 = t4[0] + t4[4] + t4[8];
      if (i3 > 0)
        r4 = Math.sqrt(i3 + 1), e4[3] = 0.5 * r4, r4 = 0.5 / r4, e4[0] = (t4[5] - t4[7]) * r4, e4[1] = (t4[6] - t4[2]) * r4, e4[2] = (t4[1] - t4[3]) * r4;
      else {
        var n3 = 0;
        t4[4] > t4[0] && (n3 = 1), t4[8] > t4[3 * n3 + n3] && (n3 = 2);
        var o2 = (n3 + 1) % 3, a2 = (n3 + 2) % 3;
        r4 = Math.sqrt(t4[3 * n3 + n3] - t4[3 * o2 + o2] - t4[3 * a2 + a2] + 1), e4[n3] = 0.5 * r4, r4 = 0.5 / r4, e4[3] = (t4[3 * o2 + a2] - t4[3 * a2 + o2]) * r4, e4[o2] = (t4[3 * o2 + n3] + t4[3 * n3 + o2]) * r4, e4[a2] = (t4[3 * a2 + n3] + t4[3 * n3 + a2]) * r4;
      }
      return e4;
    }
    function ki2(e4, t4, r4, i3) {
      var n3 = 0.5 * Math.PI / 180;
      t4 *= n3, r4 *= n3, i3 *= n3;
      var o2 = Math.sin(t4), a2 = Math.cos(t4), s2 = Math.sin(r4), u3 = Math.cos(r4), c3 = Math.sin(i3), l3 = Math.cos(i3);
      return e4[0] = o2 * u3 * l3 - a2 * s2 * c3, e4[1] = a2 * s2 * l3 + o2 * u3 * c3, e4[2] = a2 * u3 * c3 - o2 * s2 * l3, e4[3] = a2 * u3 * l3 + o2 * s2 * c3, e4;
    }
    function Vi2(e4) {
      return "quat(" + e4[0] + ", " + e4[1] + ", " + e4[2] + ", " + e4[3] + ")";
    }
    var Hi2, Wi2, Xi2, qi2, Yi2, Ki2, Zi2 = zr, $i2 = jr, Qi2 = Ur, Ji2 = Gr, en = kr, tn = Si2, rn = $r, nn = ai2, on = ui2, an = ti2, sn = an, un = ri2, cn = un, ln = oi2, fn = pi2, hn = _i, dn = (Hi2 = kt(), Wi2 = Wt(1, 0, 0), Xi2 = Wt(0, 1, 0), function(e4, t4, r4) {
      var i3 = fr(t4, r4);
      return i3 < -0.999999 ? (hr(Hi2, Wi2, t4), Nr(Hi2) < 1e-6 && hr(Hi2, Xi2, t4), lr(Hi2, Hi2), Pi2(e4, Hi2, Math.PI), e4) : i3 > 0.999999 ? (e4[0] = 0, e4[1] = 0, e4[2] = 0, e4[3] = 1, e4) : (hr(Hi2, t4, r4), e4[0] = Hi2[0], e4[1] = Hi2[1], e4[2] = Hi2[2], e4[3] = 1 + i3, ln(e4, e4));
    }), pn = (qi2 = Ai2(), Yi2 = Ai2(), function(e4, t4, r4, i3, n3, o2) {
      return Fi2(qi2, t4, n3, o2), Fi2(Yi2, r4, i3, o2), Fi2(e4, qi2, Yi2, 2 * o2 * (1 - o2)), e4;
    }), _n = (Ki2 = me2(), function(e4, t4, r4, i3) {
      return Ki2[0] = r4[0], Ki2[3] = r4[1], Ki2[6] = r4[2], Ki2[1] = i3[0], Ki2[4] = i3[1], Ki2[7] = i3[2], Ki2[2] = -t4[0], Ki2[5] = -t4[1], Ki2[8] = -t4[2], ln(e4, Gi2(e4, Ki2));
    });
    function gn() {
      var e4 = new p2(8);
      return p2 != Float32Array && (e4[0] = 0, e4[1] = 0, e4[2] = 0, e4[4] = 0, e4[5] = 0, e4[6] = 0, e4[7] = 0), e4[3] = 1, e4;
    }
    function mn(e4) {
      var t4 = new p2(8);
      return t4[0] = e4[0], t4[1] = e4[1], t4[2] = e4[2], t4[3] = e4[3], t4[4] = e4[4], t4[5] = e4[5], t4[6] = e4[6], t4[7] = e4[7], t4;
    }
    function vn(e4, t4, r4, i3, n3, o2, a2, s2) {
      var u3 = new p2(8);
      return u3[0] = e4, u3[1] = t4, u3[2] = r4, u3[3] = i3, u3[4] = n3, u3[5] = o2, u3[6] = a2, u3[7] = s2, u3;
    }
    function bn(e4, t4, r4, i3, n3, o2, a2) {
      var s2 = new p2(8);
      s2[0] = e4, s2[1] = t4, s2[2] = r4, s2[3] = i3;
      var u3 = 0.5 * n3, c3 = 0.5 * o2, l3 = 0.5 * a2;
      return s2[4] = u3 * i3 + c3 * r4 - l3 * t4, s2[5] = c3 * i3 + l3 * e4 - u3 * r4, s2[6] = l3 * i3 + u3 * t4 - c3 * e4, s2[7] = -u3 * e4 - c3 * t4 - l3 * r4, s2;
    }
    function yn(e4, t4, r4) {
      var i3 = 0.5 * r4[0], n3 = 0.5 * r4[1], o2 = 0.5 * r4[2], a2 = t4[0], s2 = t4[1], u3 = t4[2], c3 = t4[3];
      return e4[0] = a2, e4[1] = s2, e4[2] = u3, e4[3] = c3, e4[4] = i3 * c3 + n3 * u3 - o2 * s2, e4[5] = n3 * c3 + o2 * a2 - i3 * u3, e4[6] = o2 * c3 + i3 * s2 - n3 * a2, e4[7] = -i3 * a2 - n3 * s2 - o2 * u3, e4;
    }
    function En(e4, t4) {
      return e4[0] = 0, e4[1] = 0, e4[2] = 0, e4[3] = 1, e4[4] = 0.5 * t4[0], e4[5] = 0.5 * t4[1], e4[6] = 0.5 * t4[2], e4[7] = 0, e4;
    }
    function xn(e4, t4) {
      return e4[0] = t4[0], e4[1] = t4[1], e4[2] = t4[2], e4[3] = t4[3], e4[4] = 0, e4[5] = 0, e4[6] = 0, e4[7] = 0, e4;
    }
    function Tn(e4, t4) {
      var r4 = Ai2();
      xt(r4, t4);
      var i3 = new p2(3);
      return yt(i3, t4), yn(e4, r4, i3), e4;
    }
    function An(e4, t4) {
      return e4[0] = t4[0], e4[1] = t4[1], e4[2] = t4[2], e4[3] = t4[3], e4[4] = t4[4], e4[5] = t4[5], e4[6] = t4[6], e4[7] = t4[7], e4;
    }
    function On(e4) {
      return e4[0] = 0, e4[1] = 0, e4[2] = 0, e4[3] = 1, e4[4] = 0, e4[5] = 0, e4[6] = 0, e4[7] = 0, e4;
    }
    function Pn(e4, t4, r4, i3, n3, o2, a2, s2, u3) {
      return e4[0] = t4, e4[1] = r4, e4[2] = i3, e4[3] = n3, e4[4] = o2, e4[5] = a2, e4[6] = s2, e4[7] = u3, e4;
    }
    var Ln = Qi2;
    function wn(e4, t4) {
      return e4[0] = t4[4], e4[1] = t4[5], e4[2] = t4[6], e4[3] = t4[7], e4;
    }
    var Sn = Qi2;
    function Rn(e4, t4) {
      return e4[4] = t4[0], e4[5] = t4[1], e4[6] = t4[2], e4[7] = t4[3], e4;
    }
    function In(e4, t4) {
      var r4 = t4[4], i3 = t4[5], n3 = t4[6], o2 = t4[7], a2 = -t4[0], s2 = -t4[1], u3 = -t4[2], c3 = t4[3];
      return e4[0] = 2 * (r4 * c3 + o2 * a2 + i3 * u3 - n3 * s2), e4[1] = 2 * (i3 * c3 + o2 * s2 + n3 * a2 - r4 * u3), e4[2] = 2 * (n3 * c3 + o2 * u3 + r4 * s2 - i3 * a2), e4;
    }
    function Mn(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3], s2 = 0.5 * r4[0], u3 = 0.5 * r4[1], c3 = 0.5 * r4[2], l3 = t4[4], f3 = t4[5], h3 = t4[6], d3 = t4[7];
      return e4[0] = i3, e4[1] = n3, e4[2] = o2, e4[3] = a2, e4[4] = a2 * s2 + n3 * c3 - o2 * u3 + l3, e4[5] = a2 * u3 + o2 * s2 - i3 * c3 + f3, e4[6] = a2 * c3 + i3 * u3 - n3 * s2 + h3, e4[7] = -i3 * s2 - n3 * u3 - o2 * c3 + d3, e4;
    }
    function Cn(e4, t4, r4) {
      var i3 = -t4[0], n3 = -t4[1], o2 = -t4[2], a2 = t4[3], s2 = t4[4], u3 = t4[5], c3 = t4[6], l3 = t4[7], f3 = s2 * a2 + l3 * i3 + u3 * o2 - c3 * n3, h3 = u3 * a2 + l3 * n3 + c3 * i3 - s2 * o2, d3 = c3 * a2 + l3 * o2 + s2 * n3 - u3 * i3, p3 = l3 * a2 - s2 * i3 - u3 * n3 - c3 * o2;
      return Ri2(e4, t4, r4), i3 = e4[0], n3 = e4[1], o2 = e4[2], a2 = e4[3], e4[4] = f3 * a2 + p3 * i3 + h3 * o2 - d3 * n3, e4[5] = h3 * a2 + p3 * n3 + d3 * i3 - f3 * o2, e4[6] = d3 * a2 + p3 * o2 + f3 * n3 - h3 * i3, e4[7] = p3 * a2 - f3 * i3 - h3 * n3 - d3 * o2, e4;
    }
    function Nn(e4, t4, r4) {
      var i3 = -t4[0], n3 = -t4[1], o2 = -t4[2], a2 = t4[3], s2 = t4[4], u3 = t4[5], c3 = t4[6], l3 = t4[7], f3 = s2 * a2 + l3 * i3 + u3 * o2 - c3 * n3, h3 = u3 * a2 + l3 * n3 + c3 * i3 - s2 * o2, d3 = c3 * a2 + l3 * o2 + s2 * n3 - u3 * i3, p3 = l3 * a2 - s2 * i3 - u3 * n3 - c3 * o2;
      return Ii2(e4, t4, r4), i3 = e4[0], n3 = e4[1], o2 = e4[2], a2 = e4[3], e4[4] = f3 * a2 + p3 * i3 + h3 * o2 - d3 * n3, e4[5] = h3 * a2 + p3 * n3 + d3 * i3 - f3 * o2, e4[6] = d3 * a2 + p3 * o2 + f3 * n3 - h3 * i3, e4[7] = p3 * a2 - f3 * i3 - h3 * n3 - d3 * o2, e4;
    }
    function Dn(e4, t4, r4) {
      var i3 = -t4[0], n3 = -t4[1], o2 = -t4[2], a2 = t4[3], s2 = t4[4], u3 = t4[5], c3 = t4[6], l3 = t4[7], f3 = s2 * a2 + l3 * i3 + u3 * o2 - c3 * n3, h3 = u3 * a2 + l3 * n3 + c3 * i3 - s2 * o2, d3 = c3 * a2 + l3 * o2 + s2 * n3 - u3 * i3, p3 = l3 * a2 - s2 * i3 - u3 * n3 - c3 * o2;
      return Mi2(e4, t4, r4), i3 = e4[0], n3 = e4[1], o2 = e4[2], a2 = e4[3], e4[4] = f3 * a2 + p3 * i3 + h3 * o2 - d3 * n3, e4[5] = h3 * a2 + p3 * n3 + d3 * i3 - f3 * o2, e4[6] = d3 * a2 + p3 * o2 + f3 * n3 - h3 * i3, e4[7] = p3 * a2 - f3 * i3 - h3 * n3 - d3 * o2, e4;
    }
    function Bn(e4, t4, r4) {
      var i3 = r4[0], n3 = r4[1], o2 = r4[2], a2 = r4[3], s2 = t4[0], u3 = t4[1], c3 = t4[2], l3 = t4[3];
      return e4[0] = s2 * a2 + l3 * i3 + u3 * o2 - c3 * n3, e4[1] = u3 * a2 + l3 * n3 + c3 * i3 - s2 * o2, e4[2] = c3 * a2 + l3 * o2 + s2 * n3 - u3 * i3, e4[3] = l3 * a2 - s2 * i3 - u3 * n3 - c3 * o2, s2 = t4[4], u3 = t4[5], c3 = t4[6], l3 = t4[7], e4[4] = s2 * a2 + l3 * i3 + u3 * o2 - c3 * n3, e4[5] = u3 * a2 + l3 * n3 + c3 * i3 - s2 * o2, e4[6] = c3 * a2 + l3 * o2 + s2 * n3 - u3 * i3, e4[7] = l3 * a2 - s2 * i3 - u3 * n3 - c3 * o2, e4;
    }
    function Fn(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3], s2 = r4[0], u3 = r4[1], c3 = r4[2], l3 = r4[3];
      return e4[0] = i3 * l3 + a2 * s2 + n3 * c3 - o2 * u3, e4[1] = n3 * l3 + a2 * u3 + o2 * s2 - i3 * c3, e4[2] = o2 * l3 + a2 * c3 + i3 * u3 - n3 * s2, e4[3] = a2 * l3 - i3 * s2 - n3 * u3 - o2 * c3, s2 = r4[4], u3 = r4[5], c3 = r4[6], l3 = r4[7], e4[4] = i3 * l3 + a2 * s2 + n3 * c3 - o2 * u3, e4[5] = n3 * l3 + a2 * u3 + o2 * s2 - i3 * c3, e4[6] = o2 * l3 + a2 * c3 + i3 * u3 - n3 * s2, e4[7] = a2 * l3 - i3 * s2 - n3 * u3 - o2 * c3, e4;
    }
    function zn(e4, t4, r4, i3) {
      if (Math.abs(i3) < d2)
        return An(e4, t4);
      var n3 = Math.hypot(r4[0], r4[1], r4[2]);
      i3 *= 0.5;
      var o2 = Math.sin(i3), a2 = o2 * r4[0] / n3, s2 = o2 * r4[1] / n3, u3 = o2 * r4[2] / n3, c3 = Math.cos(i3), l3 = t4[0], f3 = t4[1], h3 = t4[2], p3 = t4[3];
      e4[0] = l3 * c3 + p3 * a2 + f3 * u3 - h3 * s2, e4[1] = f3 * c3 + p3 * s2 + h3 * a2 - l3 * u3, e4[2] = h3 * c3 + p3 * u3 + l3 * s2 - f3 * a2, e4[3] = p3 * c3 - l3 * a2 - f3 * s2 - h3 * u3;
      var _3 = t4[4], g3 = t4[5], m3 = t4[6], v3 = t4[7];
      return e4[4] = _3 * c3 + v3 * a2 + g3 * u3 - m3 * s2, e4[5] = g3 * c3 + v3 * s2 + m3 * a2 - _3 * u3, e4[6] = m3 * c3 + v3 * u3 + _3 * s2 - g3 * a2, e4[7] = v3 * c3 - _3 * a2 - g3 * s2 - m3 * u3, e4;
    }
    function jn(e4, t4, r4) {
      return e4[0] = t4[0] + r4[0], e4[1] = t4[1] + r4[1], e4[2] = t4[2] + r4[2], e4[3] = t4[3] + r4[3], e4[4] = t4[4] + r4[4], e4[5] = t4[5] + r4[5], e4[6] = t4[6] + r4[6], e4[7] = t4[7] + r4[7], e4;
    }
    function Un(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1], o2 = t4[2], a2 = t4[3], s2 = r4[4], u3 = r4[5], c3 = r4[6], l3 = r4[7], f3 = t4[4], h3 = t4[5], d3 = t4[6], p3 = t4[7], _3 = r4[0], g3 = r4[1], m3 = r4[2], v3 = r4[3];
      return e4[0] = i3 * v3 + a2 * _3 + n3 * m3 - o2 * g3, e4[1] = n3 * v3 + a2 * g3 + o2 * _3 - i3 * m3, e4[2] = o2 * v3 + a2 * m3 + i3 * g3 - n3 * _3, e4[3] = a2 * v3 - i3 * _3 - n3 * g3 - o2 * m3, e4[4] = i3 * l3 + a2 * s2 + n3 * c3 - o2 * u3 + f3 * v3 + p3 * _3 + h3 * m3 - d3 * g3, e4[5] = n3 * l3 + a2 * u3 + o2 * s2 - i3 * c3 + h3 * v3 + p3 * g3 + d3 * _3 - f3 * m3, e4[6] = o2 * l3 + a2 * c3 + i3 * u3 - n3 * s2 + d3 * v3 + p3 * m3 + f3 * g3 - h3 * _3, e4[7] = a2 * l3 - i3 * s2 - n3 * u3 - o2 * c3 + p3 * v3 - f3 * _3 - h3 * g3 - d3 * m3, e4;
    }
    var Gn = Un;
    function kn(e4, t4, r4) {
      return e4[0] = t4[0] * r4, e4[1] = t4[1] * r4, e4[2] = t4[2] * r4, e4[3] = t4[3] * r4, e4[4] = t4[4] * r4, e4[5] = t4[5] * r4, e4[6] = t4[6] * r4, e4[7] = t4[7] * r4, e4;
    }
    var Vn = nn;
    function Hn(e4, t4, r4, i3) {
      var n3 = 1 - i3;
      return Vn(t4, r4) < 0 && (i3 = -i3), e4[0] = t4[0] * n3 + r4[0] * i3, e4[1] = t4[1] * n3 + r4[1] * i3, e4[2] = t4[2] * n3 + r4[2] * i3, e4[3] = t4[3] * n3 + r4[3] * i3, e4[4] = t4[4] * n3 + r4[4] * i3, e4[5] = t4[5] * n3 + r4[5] * i3, e4[6] = t4[6] * n3 + r4[6] * i3, e4[7] = t4[7] * n3 + r4[7] * i3, e4;
    }
    function Wn(e4, t4) {
      var r4 = Kn(t4);
      return e4[0] = -t4[0] / r4, e4[1] = -t4[1] / r4, e4[2] = -t4[2] / r4, e4[3] = t4[3] / r4, e4[4] = -t4[4] / r4, e4[5] = -t4[5] / r4, e4[6] = -t4[6] / r4, e4[7] = t4[7] / r4, e4;
    }
    function Xn(e4, t4) {
      return e4[0] = -t4[0], e4[1] = -t4[1], e4[2] = -t4[2], e4[3] = t4[3], e4[4] = -t4[4], e4[5] = -t4[5], e4[6] = -t4[6], e4[7] = t4[7], e4;
    }
    var qn = an, Yn = qn, Kn = un, Zn = Kn;
    function $n(e4, t4) {
      var r4 = Kn(t4);
      if (r4 > 0) {
        r4 = Math.sqrt(r4);
        var i3 = t4[0] / r4, n3 = t4[1] / r4, o2 = t4[2] / r4, a2 = t4[3] / r4, s2 = t4[4], u3 = t4[5], c3 = t4[6], l3 = t4[7], f3 = i3 * s2 + n3 * u3 + o2 * c3 + a2 * l3;
        e4[0] = i3, e4[1] = n3, e4[2] = o2, e4[3] = a2, e4[4] = (s2 - i3 * f3) / r4, e4[5] = (u3 - n3 * f3) / r4, e4[6] = (c3 - o2 * f3) / r4, e4[7] = (l3 - a2 * f3) / r4;
      }
      return e4;
    }
    function Qn(e4) {
      return "quat2(" + e4[0] + ", " + e4[1] + ", " + e4[2] + ", " + e4[3] + ", " + e4[4] + ", " + e4[5] + ", " + e4[6] + ", " + e4[7] + ")";
    }
    function Jn(e4, t4) {
      return e4[0] === t4[0] && e4[1] === t4[1] && e4[2] === t4[2] && e4[3] === t4[3] && e4[4] === t4[4] && e4[5] === t4[5] && e4[6] === t4[6] && e4[7] === t4[7];
    }
    function eo(e4, t4) {
      var r4 = e4[0], i3 = e4[1], n3 = e4[2], o2 = e4[3], a2 = e4[4], s2 = e4[5], u3 = e4[6], c3 = e4[7], l3 = t4[0], f3 = t4[1], h3 = t4[2], p3 = t4[3], _3 = t4[4], g3 = t4[5], m3 = t4[6], v3 = t4[7];
      return Math.abs(r4 - l3) <= d2 * Math.max(1, Math.abs(r4), Math.abs(l3)) && Math.abs(i3 - f3) <= d2 * Math.max(1, Math.abs(i3), Math.abs(f3)) && Math.abs(n3 - h3) <= d2 * Math.max(1, Math.abs(n3), Math.abs(h3)) && Math.abs(o2 - p3) <= d2 * Math.max(1, Math.abs(o2), Math.abs(p3)) && Math.abs(a2 - _3) <= d2 * Math.max(1, Math.abs(a2), Math.abs(_3)) && Math.abs(s2 - g3) <= d2 * Math.max(1, Math.abs(s2), Math.abs(g3)) && Math.abs(u3 - m3) <= d2 * Math.max(1, Math.abs(u3), Math.abs(m3)) && Math.abs(c3 - v3) <= d2 * Math.max(1, Math.abs(c3), Math.abs(v3));
    }
    function to() {
      var e4 = new p2(2);
      return p2 != Float32Array && (e4[0] = 0, e4[1] = 0), e4;
    }
    function ro(e4) {
      var t4 = new p2(2);
      return t4[0] = e4[0], t4[1] = e4[1], t4;
    }
    function io(e4, t4) {
      var r4 = new p2(2);
      return r4[0] = e4, r4[1] = t4, r4;
    }
    function no(e4, t4) {
      return e4[0] = t4[0], e4[1] = t4[1], e4;
    }
    function oo(e4, t4, r4) {
      return e4[0] = t4, e4[1] = r4, e4;
    }
    function ao(e4, t4, r4) {
      return e4[0] = t4[0] + r4[0], e4[1] = t4[1] + r4[1], e4;
    }
    function so(e4, t4, r4) {
      return e4[0] = t4[0] - r4[0], e4[1] = t4[1] - r4[1], e4;
    }
    function uo(e4, t4, r4) {
      return e4[0] = t4[0] * r4[0], e4[1] = t4[1] * r4[1], e4;
    }
    function co(e4, t4, r4) {
      return e4[0] = t4[0] / r4[0], e4[1] = t4[1] / r4[1], e4;
    }
    function lo(e4, t4) {
      return e4[0] = Math.ceil(t4[0]), e4[1] = Math.ceil(t4[1]), e4;
    }
    function fo(e4, t4) {
      return e4[0] = Math.floor(t4[0]), e4[1] = Math.floor(t4[1]), e4;
    }
    function ho(e4, t4, r4) {
      return e4[0] = Math.min(t4[0], r4[0]), e4[1] = Math.min(t4[1], r4[1]), e4;
    }
    function po(e4, t4, r4) {
      return e4[0] = Math.max(t4[0], r4[0]), e4[1] = Math.max(t4[1], r4[1]), e4;
    }
    function _o(e4, t4) {
      return e4[0] = Math.round(t4[0]), e4[1] = Math.round(t4[1]), e4;
    }
    function go(e4, t4, r4) {
      return e4[0] = t4[0] * r4, e4[1] = t4[1] * r4, e4;
    }
    function mo(e4, t4, r4, i3) {
      return e4[0] = t4[0] + r4[0] * i3, e4[1] = t4[1] + r4[1] * i3, e4;
    }
    function vo(e4, t4) {
      var r4 = t4[0] - e4[0], i3 = t4[1] - e4[1];
      return Math.hypot(r4, i3);
    }
    function bo(e4, t4) {
      var r4 = t4[0] - e4[0], i3 = t4[1] - e4[1];
      return r4 * r4 + i3 * i3;
    }
    function yo(e4) {
      var t4 = e4[0], r4 = e4[1];
      return Math.hypot(t4, r4);
    }
    function Eo(e4) {
      var t4 = e4[0], r4 = e4[1];
      return t4 * t4 + r4 * r4;
    }
    function xo(e4, t4) {
      return e4[0] = -t4[0], e4[1] = -t4[1], e4;
    }
    function To(e4, t4) {
      return e4[0] = 1 / t4[0], e4[1] = 1 / t4[1], e4;
    }
    function Ao(e4, t4) {
      var r4 = t4[0], i3 = t4[1], n3 = r4 * r4 + i3 * i3;
      return n3 > 0 && (n3 = 1 / Math.sqrt(n3)), e4[0] = t4[0] * n3, e4[1] = t4[1] * n3, e4;
    }
    function Oo(e4, t4) {
      return e4[0] * t4[0] + e4[1] * t4[1];
    }
    function Po(e4, t4, r4) {
      var i3 = t4[0] * r4[1] - t4[1] * r4[0];
      return e4[0] = e4[1] = 0, e4[2] = i3, e4;
    }
    function Lo(e4, t4, r4, i3) {
      var n3 = t4[0], o2 = t4[1];
      return e4[0] = n3 + i3 * (r4[0] - n3), e4[1] = o2 + i3 * (r4[1] - o2), e4;
    }
    function wo(e4, t4) {
      t4 = t4 || 1;
      var r4 = 2 * _2() * Math.PI;
      return e4[0] = Math.cos(r4) * t4, e4[1] = Math.sin(r4) * t4, e4;
    }
    function So(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1];
      return e4[0] = r4[0] * i3 + r4[2] * n3, e4[1] = r4[1] * i3 + r4[3] * n3, e4;
    }
    function Ro(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1];
      return e4[0] = r4[0] * i3 + r4[2] * n3 + r4[4], e4[1] = r4[1] * i3 + r4[3] * n3 + r4[5], e4;
    }
    function Io(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1];
      return e4[0] = r4[0] * i3 + r4[3] * n3 + r4[6], e4[1] = r4[1] * i3 + r4[4] * n3 + r4[7], e4;
    }
    function Mo(e4, t4, r4) {
      var i3 = t4[0], n3 = t4[1];
      return e4[0] = r4[0] * i3 + r4[4] * n3 + r4[12], e4[1] = r4[1] * i3 + r4[5] * n3 + r4[13], e4;
    }
    function Co(e4, t4, r4, i3) {
      var n3 = t4[0] - r4[0], o2 = t4[1] - r4[1], a2 = Math.sin(i3), s2 = Math.cos(i3);
      return e4[0] = n3 * s2 - o2 * a2 + r4[0], e4[1] = n3 * a2 + o2 * s2 + r4[1], e4;
    }
    function No(e4, t4) {
      var r4 = e4[0], i3 = e4[1], n3 = t4[0], o2 = t4[1], a2 = Math.sqrt(r4 * r4 + i3 * i3) * Math.sqrt(n3 * n3 + o2 * o2), s2 = a2 && (r4 * n3 + i3 * o2) / a2;
      return Math.acos(Math.min(Math.max(s2, -1), 1));
    }
    function Do(e4) {
      return e4[0] = 0, e4[1] = 0, e4;
    }
    function Bo(e4) {
      return "vec2(" + e4[0] + ", " + e4[1] + ")";
    }
    function Fo(e4, t4) {
      return e4[0] === t4[0] && e4[1] === t4[1];
    }
    function zo(e4, t4) {
      var r4 = e4[0], i3 = e4[1], n3 = t4[0], o2 = t4[1];
      return Math.abs(r4 - n3) <= d2 * Math.max(1, Math.abs(r4), Math.abs(n3)) && Math.abs(i3 - o2) <= d2 * Math.max(1, Math.abs(i3), Math.abs(o2));
    }
    var jo = yo, Uo = so, Go = uo, ko = co, Vo = vo, Ho = bo, Wo = Eo, Xo = function() {
      var e4 = to();
      return function(t4, r4, i3, n3, o2, a2) {
        var s2, u3;
        for (r4 || (r4 = 2), i3 || (i3 = 0), u3 = n3 ? Math.min(n3 * r4 + i3, t4.length) : t4.length, s2 = i3; s2 < u3; s2 += r4)
          e4[0] = t4[s2], e4[1] = t4[s2 + 1], o2(e4, e4, a2), t4[s2] = e4[0], t4[s2 + 1] = e4[1];
        return t4;
      };
    }();
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(0), n2 = function() {
      function e4() {
        var t4 = this;
        this._initialized = false, this.assertInitialized = function() {
          return e4.assertInitializedFalse(t4);
        }, this.assertUninitialized = function() {
        };
      }
      return e4.initialize = function() {
        return function(t4, r4, n3) {
          var o = n3.value;
          return n3.value = function() {
            var t5 = this;
            return i2.assert(this._initialized === false, "re-initialization of initialized object not anticipated"), this._initialized = o.apply(this, arguments), this._initialized ? (this.assertInitialized = function() {
            }, this.assertUninitialized = function() {
              return e4.assertUninitializedFalse(t5);
            }) : (this.assertUninitialized = function() {
            }, this.assertInitialized = function() {
              return e4.assertInitializedFalse(t5);
            }), this._initialized;
          }, n3;
        };
      }, e4.uninitialize = function() {
        return function(t4, r4, n3) {
          var o = n3.value;
          return n3.value = function() {
            var t5 = this;
            i2.assert(this._initialized === true, "expected object to be initialized in order to uninitialize"), o.apply(this), this._initialized = false, this.assertUninitialized = function() {
            }, this.assertInitialized = function() {
              return e4.assertInitializedFalse(t5);
            };
          }, n3;
        };
      }, e4.discard = function() {
        return function(t4, r4, n3) {
          var o = n3.value;
          return n3.value = function() {
            var t5 = this;
            i2.assert(this._initialized === true, "expected object to be initialized in order to uninitialize"), o.apply(this), this._initialized = false, this.assertUninitialized = function() {
            }, this.assertInitialized = function() {
              return e4.assertInitializedFalse(t5);
            };
          }, n3;
        };
      }, e4.assert_initialized = function() {
        return function(e5, t4, r4) {
          var i3 = r4.value;
          return r4.value = function() {
            return this.assertInitialized(), i3.apply(this, arguments);
          }, r4;
        };
      }, e4.assert_uninitialized = function() {
        return function(e5, t4, r4) {
          var i3 = r4.value;
          return r4.value = function() {
            this.assertUninitialized(), i3.apply(this, arguments);
          }, r4;
        };
      }, Object.defineProperty(e4.prototype, "initialized", { get: function() {
        return this._initialized;
      }, enumerable: true, configurable: true }), e4.assertInitializedFalse = function(e5) {
        return i2.assert(false, "instance of " + e5.constructor.name + " expected to be initialized");
      }, e4.assertUninitializedFalse = function(e5) {
        return i2.assert(false, "instance of " + e5.constructor.name + " not expected to be initialized");
      }, e4;
    }();
    t3.Initializable = n2;
  }, function(e3, t3, r3) {
    var i2, n2 = r3(1);
    !function(e4) {
      function t4(e5) {
        return e5 > 0 ? e5 - Math.floor(e5) : e5 - Math.ceil(e5);
      }
      e4.sign = function(e5) {
        return e5 > 0 ? 1 : e5 < 0 ? -1 : 0;
      }, e4.clamp = function(e5, t5, r4) {
        return Math.max(t5, Math.min(r4, e5));
      }, e4.fract = t4, e4.v2 = function() {
        return n2.vec2.create();
      }, e4.clamp2 = function(e5, t5, r4, i3) {
        return e5[0] = Math.max(r4[0], Math.min(i3[0], t5[0])), e5[1] = Math.max(r4[1], Math.min(i3[1], t5[1])), e5;
      }, e4.abs2 = function(e5, t5) {
        return e5[0] = Math.abs(t5[0]), e5[1] = Math.abs(t5[1]), e5;
      }, e4.v3 = function() {
        return n2.vec3.create();
      }, e4.clamp3 = function(e5, t5, r4, i3) {
        return e5[0] = Math.max(r4[0], Math.min(i3[0], t5[0])), e5[1] = Math.max(r4[1], Math.min(i3[1], t5[1])), e5[2] = Math.max(r4[2], Math.min(i3[2], t5[2])), e5;
      }, e4.abs3 = function(e5, t5) {
        return e5[0] = Math.abs(t5[0]), e5[1] = Math.abs(t5[1]), e5[2] = Math.abs(t5[2]), e5;
      }, e4.encode_float24x1_to_uint8x3 = function(e5, r4) {
        return e5[0] = Math.floor(256 * r4), e5[1] = Math.floor(256 * t4(256 * r4)), e5[2] = Math.floor(256 * t4(65536 * r4)), e5;
      }, e4.decode_float24x1_from_uint8x3 = function(e5) {
        return (e5[0] + (e5[1] + e5[2] * (1 / 256)) * (1 / 256)) * (1 / 256);
      }, e4.encode_uint24_to_rgb8 = function(e5, t5) {
        return e5[0] = t5 >> 0 & 255, e5[1] = t5 >> 8 & 255, e5[2] = t5 >> 16 & 255, e5;
      }, e4.encode_uint32_to_rgba8 = function(e5, t5) {
        return e5[0] = t5 >> 0 & 255, e5[1] = t5 >> 8 & 255, e5[2] = t5 >> 16 & 255, e5[3] = t5 >> 24 & 255, e5;
      }, e4.decode_uint24_from_rgb8 = function(e5) {
        return e5[0] + (e5[1] << 8) + (e5[2] << 16);
      }, e4.decode_uint32_from_rgba8 = function(e5) {
        return e5[0] + (e5[1] << 8) + (e5[2] << 16) + (e5[3] << 24);
      }, e4.fromVec4 = function(e5) {
        return e5[3] === 0 ? n2.vec3.fromValues(e5[0], e5[1], e5[2]) : n2.vec3.fromValues(e5[0] / e5[3], e5[1] / e5[3], e5[2] / e5[3]);
      }, e4.v4 = function() {
        return n2.vec4.create();
      }, e4.clamp4 = function(e5, t5, r4, i3) {
        return e5[0] = Math.max(r4[0], Math.min(i3[0], t5[0])), e5[1] = Math.max(r4[1], Math.min(i3[1], t5[1])), e5[2] = Math.max(r4[2], Math.min(i3[2], t5[2])), e5[3] = Math.max(r4[3], Math.min(i3[3], t5[3])), e5;
      }, e4.abs4 = function(e5, t5) {
        return e5[0] = Math.abs(t5[0]), e5[1] = Math.abs(t5[1]), e5[2] = Math.abs(t5[2]), e5[3] = Math.abs(t5[3]), e5;
      }, e4.fromVec3 = function(e5) {
        return n2.vec4.fromValues(e5[0], e5[1], e5[2], 1);
      }, e4.parseVec2 = function(e5) {
        if (e5 !== void 0 && e5 !== "") {
          var t5 = [];
          try {
            t5 = JSON.parse("[" + e5 + "]");
          } catch (e6) {
            return;
          }
          return t5.length !== 2 || isNaN(t5[0]) || isNaN(t5[1]) ? void 0 : n2.vec2.clone(t5);
        }
      }, e4.parseVec3 = function(e5) {
        if (e5 !== void 0 && e5 !== "") {
          var t5 = [];
          try {
            t5 = JSON.parse("[" + e5 + "]");
          } catch (e6) {
            return;
          }
          return t5.length !== 3 || isNaN(t5[0]) || isNaN(t5[1]) || isNaN(t5[2]) ? void 0 : n2.vec3.clone(t5);
        }
      }, e4.parseVec4 = function(e5) {
        if (e5 !== void 0 && e5 !== "") {
          var t5 = [];
          try {
            t5 = JSON.parse("[" + e5 + "]");
          } catch (e6) {
            return;
          }
          return t5.length !== 4 || isNaN(t5[0]) || isNaN(t5[1]) || isNaN(t5[2]) || isNaN(t5[3]) ? void 0 : n2.vec4.clone(t5);
        }
      }, e4.mix = function(e5, t5, r4) {
        return e5 * (1 - r4) + t5 * r4;
      }, e4.m2 = function() {
        return n2.mat2.create();
      }, e4.m3 = function() {
        return n2.mat3.create();
      }, e4.m4 = function() {
        return n2.mat4.create();
      };
    }(i2 || (i2 = {})), e3.exports = i2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(0), s = r3(20), u2 = r3(2), c2 = function(e4) {
      function t4() {
        var t5 = e4 !== null && e4.apply(this, arguments) || this;
        return t5._width = 0, t5._height = 0, t5._internalFormat = 0, t5._format = 0, t5._type = 0, t5._mipmap = false, t5._anisotropy = void 0, t5;
      }
      return n2(t4, e4), t4.prototype.create = function(e5, r4, i3, n3, o2) {
        a.assert(e5 > 0 && r4 > 0, "texture requires valid width and height of greater than zero");
        var s2 = this._context.gl, u3 = this._context.gl2facade;
        if (this._object = s2.createTexture(), this._width = e5, this._height = r4, this._internalFormat = i3, this._format = n3, this._type = o2, s2.bindTexture(s2.TEXTURE_2D, this._object), s2.texParameteri(s2.TEXTURE_2D, s2.TEXTURE_MAG_FILTER, s2.NEAREST), s2.texParameteri(s2.TEXTURE_2D, s2.TEXTURE_MIN_FILTER, s2.NEAREST), s2.texParameteri(s2.TEXTURE_2D, s2.TEXTURE_WRAP_S, s2.CLAMP_TO_EDGE), s2.texParameteri(s2.TEXTURE_2D, s2.TEXTURE_WRAP_T, s2.CLAMP_TO_EDGE), t4.MAX_ANISOTROPY === void 0)
          if (this._context.supportsTextureFilterAnisotropic) {
            var c3 = this._context.textureFilterAnisotropic;
            t4.MAX_ANISOTROPY = s2.getParameter(c3.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
          } else
            t4.MAX_ANISOTROPY = 0;
        return u3.texImage2D(s2.TEXTURE_2D, 0, this._internalFormat, this._width, this._height, 0, this._format, this._type), s2.bindTexture(s2.TEXTURE_2D, t4.DEFAULT_TEXTURE), this._valid = s2.isTexture(this._object), this.reallocate(), this._object;
      }, t4.prototype.delete = function() {
        a.assert(this._object instanceof WebGLTexture, "expected WebGLTexture object"), this._context.gl.deleteTexture(this._object), this._object = void 0, this._valid = false, this._internalFormat = 0, this._format = 0, this._type = 0, this._width = 0, this._height = 0;
      }, t4.prototype.reallocate = function() {
        var e5 = this.context.gl, t5 = this._context.gl2facade, r4 = this._width * this._height * s.byteSizeOfFormat(this.context, this._internalFormat);
        this._type === t5.HALF_FLOAT && this._internalFormat !== e5.RGBA16F ? r4 *= 2 : this._type === e5.FLOAT && this._internalFormat !== e5.RGBA16F && (r4 *= 4), this.context.allocationRegister.reallocate(this._identifier, r4);
      }, t4.prototype.bind = function(e5) {
        var t5 = this.context.gl;
        e5 && t5.activeTexture(e5), t5.bindTexture(t5.TEXTURE_2D, this._object);
      }, t4.prototype.unbind = function(e5) {
        var r4 = this.context.gl;
        e5 && r4.activeTexture(e5), r4.bindTexture(r4.TEXTURE_2D, t4.DEFAULT_TEXTURE);
      }, t4.prototype.fetch = function(e5, t5, r4) {
        var i3 = this;
        t5 === void 0 && (t5 = false), r4 === void 0 && (r4 = false);
        var n3 = this.context.gl;
        return new Promise(function(o2, s2) {
          var u3 = new Image();
          u3.onerror = function() {
            a.log(a.LogLevel.Error, "loading image from '" + u3.src + "' failed"), s2();
          }, u3.onload = function() {
            i3.resize(u3.width, u3.height), r4 || n3.pixelStorei(n3.UNPACK_FLIP_Y_WEBGL, true), i3.data(u3), n3.pixelStorei(n3.UNPACK_FLIP_Y_WEBGL, false), o2();
          }, t5 && (u3.crossOrigin = "anonymous"), u3.src = e5;
        });
      }, t4.prototype.data = function(e5, t5, r4) {
        t5 === void 0 && (t5 = true), r4 === void 0 && (r4 = true);
        var i3 = this.context.gl, n3 = this._context.gl2facade;
        t5 && this.bind(), n3.texImage2D(i3.TEXTURE_2D, 0, this._internalFormat, this._width, this._height, 0, this._format, this._type, e5), this._anisotropy !== void 0 && this._anisotropy > 0 ? this.maxAnisotropy(this._anisotropy, false, false) : this._mipmap && this.generateMipMap(false, false), r4 && this.unbind(), this.reallocate();
      }, t4.prototype.filter = function(e5, t5, r4, i3) {
        r4 === void 0 && (r4 = true), i3 === void 0 && (i3 = true);
        var n3 = this.context.gl;
        r4 && this.bind(), a.logIf(e5 === n3.LINEAR_MIPMAP_LINEAR || e5 === n3.LINEAR_MIPMAP_NEAREST, a.LogLevel.Debug, "magnification does not utilize a MipMap (refer to LINEAR and NEAREST only)"), n3.texParameteri(n3.TEXTURE_2D, n3.TEXTURE_MAG_FILTER, e5), n3.texParameteri(n3.TEXTURE_2D, n3.TEXTURE_MIN_FILTER, t5), this._mipmap = t5 === n3.LINEAR_MIPMAP_LINEAR || t5 === n3.LINEAR_MIPMAP_NEAREST, this._mipmap && n3.generateMipmap(n3.TEXTURE_2D), i3 && this.unbind();
      }, t4.prototype.wrap = function(e5, t5, r4, i3) {
        r4 === void 0 && (r4 = true), i3 === void 0 && (i3 = true);
        var n3 = this.context.gl;
        r4 && this.bind(), n3.texParameteri(n3.TEXTURE_2D, n3.TEXTURE_WRAP_S, e5), n3.texParameteri(n3.TEXTURE_2D, n3.TEXTURE_WRAP_T, t5), i3 && this.unbind();
      }, t4.prototype.reformat = function(e5, t5, r4, i3, n3) {
        i3 === void 0 && (i3 = true), n3 === void 0 && (n3 = true), (e5 !== this._internalFormat || t5 !== void 0 && t5 !== this._format || r4 !== void 0 && r4 !== this._type) && (a.assert(e5 !== void 0, "valid internal format expected"), this._internalFormat = e5, t5 && (this._format = t5), r4 && (this._type = r4), this.data(void 0, i3, n3));
      }, t4.prototype.resize = function(e5, t5, r4, i3) {
        r4 === void 0 && (r4 = true), i3 === void 0 && (i3 = true), e5 === this._width && t5 === this._height || (this._width = e5, this._height = t5, this.data(void 0, r4, i3));
      }, t4.prototype.generateMipMap = function(e5, t5) {
        e5 === void 0 && (e5 = true), t5 === void 0 && (t5 = true);
        var r4 = this.context.gl;
        e5 && this.bind(), r4.generateMipmap(r4.TEXTURE_2D), t5 && this.unbind(), this._mipmap = true;
      }, t4.prototype.maxAnisotropy = function(e5, r4, i3) {
        if (r4 === void 0 && (r4 = true), i3 === void 0 && (i3 = true), this._context.supportsTextureFilterAnisotropic !== false) {
          var n3 = this.context.gl, o2 = this._context.textureFilterAnisotropic;
          return this._anisotropy = e5 === void 0 ? void 0 : Math.max(0, Math.min(t4.MAX_ANISOTROPY, e5)), a.logIf(e5 !== this._anisotropy, a.LogLevel.Debug, "value clamped to max supported anisotropy of " + t4.MAX_ANISOTROPY + ", given " + e5), r4 && this.bind(), n3.texParameterf(n3.TEXTURE_2D, o2.TEXTURE_MAX_ANISOTROPY_EXT, this._anisotropy === void 0 ? 0 : this._anisotropy), this.generateMipMap(false, i3), this._anisotropy;
        }
        a.log(a.LogLevel.Debug, "setting anisotropy not supported (EXT_texture_filter_anisotropic missing)");
      }, Object.defineProperty(t4.prototype, "bytes", { get: function() {
        return this.assertInitialized(), this.context.allocationRegister.allocated(this._identifier);
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "internalFormat", { get: function() {
        return this.assertInitialized(), this._internalFormat;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "format", { get: function() {
        return this.assertInitialized(), this._format;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "type", { get: function() {
        return this.assertInitialized(), this._type;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "width", { get: function() {
        return this.assertInitialized(), this._width;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "height", { get: function() {
        return this.assertInitialized(), this._height;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "size", { get: function() {
        return this.assertInitialized(), [this._width, this._height];
      }, enumerable: true, configurable: true }), t4.DEFAULT_TEXTURE = void 0, t4.MAX_ANISOTROPY = void 0, o([u2.Initializable.assert_initialized()], t4.prototype, "bind", null), o([u2.Initializable.assert_initialized()], t4.prototype, "unbind", null), o([u2.Initializable.assert_initialized()], t4.prototype, "fetch", null), o([u2.Initializable.assert_initialized()], t4.prototype, "data", null), o([u2.Initializable.assert_initialized()], t4.prototype, "filter", null), o([u2.Initializable.assert_initialized()], t4.prototype, "wrap", null), o([u2.Initializable.assert_initialized()], t4.prototype, "reformat", null), o([u2.Initializable.assert_initialized()], t4.prototype, "resize", null), t4;
    }(r3(8).AbstractObject);
    t3.Texture2D = c2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(0), s = r3(2), u2 = function(e4) {
      function t4() {
        var r4 = e4 !== null && e4.apply(this, arguments) || this;
        return r4._target = t4.DEFAULT_BUFFER, r4;
      }
      return n2(t4, e4), t4.prototype.create = function(e5) {
        var t5 = this._context.gl;
        return this._object = t5.createBuffer(), this._valid = this._object instanceof WebGLBuffer, this._valid && (a.assert(e5 === t5.ARRAY_BUFFER || e5 === t5.ELEMENT_ARRAY_BUFFER, "either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER expected as buffer target"), this._target = e5), this._object;
      }, t4.prototype.delete = function() {
        a.assert(this._object instanceof WebGLBuffer, "expected WebGLBuffer object"), this._context.gl.deleteBuffer(this._object), this._object = void 0, this._valid = false, this._target = t4.DEFAULT_BUFFER;
      }, t4.prototype.bind = function() {
        a.assert(this._target === this._context.gl.ARRAY_BUFFER || this._target === this._context.gl.ELEMENT_ARRAY_BUFFER, "expected either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER as buffer target"), this._context.gl.bindBuffer(this._target, this._object);
      }, t4.prototype.unbind = function() {
        this.context.gl.bindBuffer(this._target, t4.DEFAULT_BUFFER);
      }, t4.prototype.data = function(e5, t5, r4, i3) {
        r4 === void 0 && (r4 = true), i3 === void 0 && (i3 = true);
        var n3 = this.context.gl;
        r4 && this.bind(), n3.bufferData(this._target, e5, t5), i3 && this.unbind(), this._valid = n3.isBuffer(this._object) && n3.getError() === n3.NO_ERROR;
        var o2 = typeof e5 == "number" ? e5 : e5.byteLength, a2 = this._valid ? o2 : 0;
        this.context.allocationRegister.reallocate(this._identifier, a2);
      }, t4.prototype.subData = function(e5, t5, r4, i3, n3, o2) {
        r4 === void 0 && (r4 = 0), i3 === void 0 && (i3 = 0), n3 === void 0 && (n3 = true), o2 === void 0 && (o2 = true);
        var a2 = this.context.gl;
        n3 && this.bind(), this.context.gl2facade.bufferSubData(this._target, e5, t5, r4, i3), o2 && this.unbind(), this._valid = a2.getError() === a2.NO_ERROR;
      }, t4.prototype.attribEnable = function(e5, t5, r4, i3, n3, o2, a2, s2) {
        i3 === void 0 && (i3 = false), n3 === void 0 && (n3 = 0), o2 === void 0 && (o2 = 0), a2 === void 0 && (a2 = true), s2 === void 0 && (s2 = true);
        var u3 = this.context.gl;
        a2 && this.bind(), u3.vertexAttribPointer(e5, t5, r4, i3, n3, o2), u3.enableVertexAttribArray(e5), s2 && this.unbind();
      }, t4.prototype.attribDisable = function(e5, t5, r4) {
        t5 === void 0 && (t5 = true), r4 === void 0 && (r4 = true);
        var i3 = this.context.gl;
        t5 && this.bind(), i3.disableVertexAttribArray(e5), r4 && this.unbind();
      }, Object.defineProperty(t4.prototype, "bytes", { get: function() {
        return this.assertInitialized(), this.context.allocationRegister.allocated(this._identifier);
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "target", { get: function() {
        return this.assertInitialized(), this._target;
      }, enumerable: true, configurable: true }), t4.DEFAULT_BUFFER = void 0, o([s.Initializable.assert_initialized()], t4.prototype, "bind", null), o([s.Initializable.assert_initialized()], t4.prototype, "unbind", null), o([s.Initializable.assert_initialized()], t4.prototype, "data", null), o([s.Initializable.assert_initialized()], t4.prototype, "attribEnable", null), o([s.Initializable.assert_initialized()], t4.prototype, "attribDisable", null), t4;
    }(r3(8).AbstractObject);
    t3.Buffer = u2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(0), s = r3(2), u2 = function(e4) {
      function t4() {
        var t5 = e4 !== null && e4.apply(this, arguments) || this;
        return t5._shaders = new Array(), t5._linked = false, t5;
      }
      return n2(t4, e4), t4.prototype.create = function(e5, t5) {
        e5 === void 0 && (e5 = new Array()), t5 === void 0 && (t5 = true);
        for (var r4 = this._context.gl, i3 = 0, n3 = 0, o2 = 0, s2 = e5; o2 < s2.length; o2++)
          switch (s2[o2].type) {
            case r4.VERTEX_SHADER:
              ++i3;
              break;
            case r4.FRAGMENT_SHADER:
              ++n3;
              break;
            default:
              a.assert(false, "Unknown shader type detected.");
          }
        if (a.logIf(i3 < 1, a.LogLevel.Error, "at least one vertex shader is expected"), a.logIf(n3 < 1, a.LogLevel.Error, "at least one fragment shader is expected"), !(i3 < 1 || n3 < 1))
          return this._object = r4.createProgram(), this._valid = r4.isProgram(this._object), a.assert(this._object instanceof WebGLProgram, "expected WebGLProgram object to be created"), e5.length > 0 && this.attach(e5, t5), this._object;
      }, t4.prototype.delete = function() {
        a.assert(this._object !== void 0, "expected WebGLProgram object"), this._context.gl.deleteProgram(this._object), this._object = void 0, this._valid = false;
      }, t4.prototype.attach = function(e5, t5) {
        t5 === void 0 && (t5 = false), a.assert(this._object !== void 0, "expected a WebGLProgram object");
        for (var r4 = this._context.gl, i3 = 0, n3 = e5 instanceof Array ? e5 : [e5]; i3 < n3.length; i3++) {
          var o2 = n3[i3];
          this._shaders.indexOf(o2) > -1 || (this._shaders.push(o2), o2.initialized ? (r4.attachShader(this._object, o2.object), o2.ref()) : a.log(a.LogLevel.Error, "shader '" + o2.identifier + "' not initialized."));
        }
        return t5 && this.link(), true;
      }, t4.prototype.detach = function(e5) {
        a.assert(this._object !== void 0, "expected WebGLProgram object");
        for (var t5 = this._context.gl, r4 = 0, i3 = e5 instanceof Array ? e5 : [e5]; r4 < i3.length; r4++) {
          var n3 = i3[r4], o2 = this._shaders.indexOf(n3);
          o2 > -1 && this._shaders.splice(o2), a.assert(n3.initialized, "expected shader '" + n3.identifier + "' to be initialized"), t5.detachShader(this._object, n3.object), n3.unref();
        }
      }, t4.prototype.link = function() {
        a.assert(this._object !== void 0, "expected WebGLProgram object");
        var e5 = this._context.gl;
        if (e5.linkProgram(this._object), e5.getProgramParameter(this._object, e5.LINK_STATUS))
          this._linked = true;
        else {
          var t5 = e5.getProgramInfoLog(this._object);
          a.log(a.LogLevel.Error, "linking of program '" + this._identifier + "' failed: '" + t5 + "'"), this._linked = false;
        }
        return this._linked;
      }, t4.prototype.bind = function() {
        this._context.gl.useProgram(this._object);
      }, t4.prototype.unbind = function() {
        this._context.gl.useProgram(t4.DEFAULT_PROGRAM);
      }, t4.prototype.uniform = function(e5) {
        return this._context.gl.getUniformLocation(this._object, e5);
      }, t4.prototype.attribute = function(e5, t5) {
        return t5 !== void 0 ? (a.logIf(this._linked, a.LogLevel.Debug, "name-to-generic attribute index mapping does go into effect on next linking, given " + e5 + " -> " + t5 + " (" + this.identifier + ")"), this._context.gl.bindAttribLocation(this._object, t5, e5), t5) : this._context.gl.getAttribLocation(this._object, e5);
      }, Object.defineProperty(t4.prototype, "shaders", { get: function() {
        return this._shaders;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "linked", { get: function() {
        return this._linked;
      }, enumerable: true, configurable: true }), t4.DEFAULT_PROGRAM = void 0, o([s.Initializable.assert_initialized()], t4.prototype, "bind", null), o([s.Initializable.assert_initialized()], t4.prototype, "unbind", null), o([s.Initializable.assert_initialized()], t4.prototype, "uniform", null), o([s.Initializable.assert_initialized()], t4.prototype, "attribute", null), t4;
    }(r3(8).AbstractObject);
    t3.Program = u2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = r3(0), a = function(e4) {
      function t4(t5, r4, i3) {
        var n3 = e4.call(this, t5, i3) || this;
        n3._compiled = false;
        var a2 = t5.gl;
        if (i3 === void 0)
          switch (r4) {
            case t5.gl.FRAGMENT_SHADER:
              i3 = "FragmentShader";
              break;
            case t5.gl.VERTEX_SHADER:
              i3 = "VertexShader";
              break;
            default:
              o.assert(false, "expected either a FRAGMENT_SHADER (" + a2.FRAGMENT_SHADER + ") or a VERTEX_SHADER (" + a2.VERTEX_SHADER + "), given " + r4);
          }
        return n3._type = r4, n3;
      }
      return n2(t4, e4), t4.prototype.create = function(e5, t5) {
        t5 === void 0 && (t5 = true);
        var r4 = this._context.gl;
        return this._object = r4.createShader(this._type), this._valid = r4.isShader(this._object), this._compiled = false, o.assert(this._object instanceof WebGLShader, "expected WebGLShader object to be created"), e5 && (this.source = e5), e5 && t5 && this.compile(), this._object;
      }, t4.prototype.delete = function() {
        o.assert(this._object !== void 0, "expected WebGLShader object"), this._context.gl.deleteShader(this._object), this._object = void 0, this._valid = false, this._compiled = false;
      }, t4.prototype.compile = function() {
        var e5 = this._context.gl, t5 = this.sourceWithReplacements;
        if (this._context.isWebGL2 && (t5 = "#version 300 es\n" + t5), e5.shaderSource(this._object, t5), e5.compileShader(this._object), this._compiled = e5.getShaderParameter(this._object, e5.COMPILE_STATUS), !this._compiled) {
          var r4 = e5.getShaderInfoLog(this._object);
          o.log(o.LogLevel.Error, "compilation of shader '" + this._identifier + "' failed: " + r4);
        }
      }, t4.prototype.replace = function(e5, t5) {
        this._replacements === void 0 && (this._replacements = /* @__PURE__ */ new Map()), this._replacements.set(e5, t5);
      }, Object.defineProperty(t4.prototype, "type", { get: function() {
        return this.assertInitialized(), this._type;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "source", { get: function() {
        return this.assertInitialized(), this._source;
      }, set: function(e5) {
        this._source !== e5 && (this._source = e5);
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "sourceWithReplacements", { get: function() {
        if (this._replacements === void 0)
          return this._source;
        var e5 = this._source;
        return this._replacements.forEach(function(t5, r4) {
          var i3 = r4.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
          e5 = e5.replace(new RegExp(i3, "g"), t5);
        }), e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "compiled", { get: function() {
        return this.assertInitialized(), this._compiled;
      }, enumerable: true, configurable: true }), t4;
    }(r3(8).AbstractObject);
    t3.Shader = a;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(0), s = r3(2), u2 = function(e4) {
      function t4(t5, r4) {
        var i3 = e4.call(this) || this;
        return i3._valid = false, i3._referenceCount = 0, i3._context = t5, i3._identifier = r4 !== void 0 && r4 !== "" ? r4 : "Object", i3;
      }
      return n2(t4, e4), t4.prototype.initialize = function() {
        for (var e5 = [], t5 = 0; t5 < arguments.length; t5++)
          e5[t5] = arguments[t5];
        return this._identifier = this._context.allocationRegister.createUniqueIdentifier(this._identifier), this.create.apply(this, e5), this._valid || (this._context.allocationRegister.deleteUniqueIdentifier(this._identifier), a.log(a.LogLevel.Error, "initialization of '" + this._identifier + "' failed")), this._valid;
      }, t4.prototype.uninitialize = function() {
        this._context.allocationRegister.reallocate(this._identifier, 0), this._context.allocationRegister.deleteUniqueIdentifier(this._identifier), this.delete(), a.assert(this._object === void 0, "expected object '" + this._identifier + "' to be undefined after delete"), a.assert(this._valid === false, "expected object '" + this._identifier + "' to be invalid after delete");
      }, Object.defineProperty(t4.prototype, "context", { get: function() {
        return this._context;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "identifier", { get: function() {
        return this._identifier;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "object", { get: function() {
        return a.assert(this._object !== void 0, "access to undefined object"), this._object;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "valid", { get: function() {
        return this._valid;
      }, enumerable: true, configurable: true }), t4.prototype.ref = function() {
        a.assert(this.initialized, "expected object to be initialized in order to be referenced"), ++this._referenceCount;
      }, t4.prototype.unref = function() {
        a.assert(this._referenceCount > 0, "expected object to be referenced in order to decrease its reference count"), --this._referenceCount;
      }, o([s.Initializable.initialize()], t4.prototype, "initialize", null), o([s.Initializable.uninitialize()], t4.prototype, "uninitialize", null), t4;
    }(s.Initializable);
    t3.AbstractObject = u2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(2), s = r3(49), u2 = function(e4) {
      function t4(t5, r4) {
        var i3 = e4.call(this) || this;
        return i3._buffers = new Array(), r4 = r4 !== void 0 && r4 !== "" ? r4 : i3.constructor.name, i3._vertexArray = new s.VertexArray(t5, r4 + "VAO"), i3;
      }
      return n2(t4, e4), t4.prototype.initialize = function() {
        for (var e5 = this, t5 = [], r4 = 0; r4 < arguments.length; r4++)
          t5[r4] = arguments[r4];
        for (var i3 = t5[0], n3 = t5[1], o2 = true, a2 = 0; a2 < this._buffers.length; ++a2)
          o2 = this._buffers[a2].initialize(i3[a2]) && o2;
        return this._vertexArray.initialize(function() {
          return e5.bindBuffers(n3);
        }, function() {
          return e5.unbindBuffers(n3);
        }), this._vertexArray.valid && o2;
      }, t4.prototype.uninitialize = function() {
        this._vertexArray.uninitialize(), this._buffers.forEach(function(e5) {
          return e5.uninitialize();
        });
      }, t4.prototype.bind = function() {
        this._vertexArray.bind();
      }, t4.prototype.unbind = function() {
        this._vertexArray.unbind();
      }, Object.defineProperty(t4.prototype, "buffers", { get: function() {
        return this._buffers;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "context", { get: function() {
        return this._vertexArray.context;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "vertexArray", { get: function() {
        return this._vertexArray;
      }, enumerable: true, configurable: true }), o([a.Initializable.initialize()], t4.prototype, "initialize", null), o([a.Initializable.uninitialize()], t4.prototype, "uninitialize", null), o([a.Initializable.assert_initialized()], t4.prototype, "bind", null), o([a.Initializable.assert_initialized()], t4.prototype, "unbind", null), t4;
    }(a.Initializable);
    t3.Geometry = u2;
  }, function(e3, t3) {
    e3.exports = r2(15);
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(52), n2 = function() {
      function e4() {
        this._camera = void 0, this._reference = new i2.Camera();
      }
      return Object.defineProperty(e4.prototype, "camera", { set: function(e5) {
        this._camera !== e5 && (this._camera = e5, e5 !== void 0 && (Object.assign(this._reference, e5), this.update()));
      }, enumerable: true, configurable: true }), e4;
    }();
    t3.CameraModifier = n2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(5), s = r3(9), u2 = r3(2), c2 = function(e4) {
      function t4(t5, r4) {
        var i3 = e4.call(this, t5, r4) || this;
        r4 = r4 !== void 0 && r4 !== "" ? r4 : i3.constructor.name;
        var n3 = new a.Buffer(t5, r4 + "VBO");
        return i3._buffers.push(n3), i3;
      }
      return n2(t4, e4), t4.prototype.bindBuffers = function() {
        this._buffers[0].attribEnable(this._vertexLocation, 2, this.context.gl.FLOAT, false, 0, 0, true, false);
      }, t4.prototype.unbindBuffers = function() {
        this._buffers[0].attribDisable(this._vertexLocation, true, true);
      }, t4.prototype.initialize = function(r4) {
        r4 === void 0 && (r4 = 0), this._vertexLocation = r4;
        var i3 = this.context.gl, n3 = e4.prototype.initialize.call(this, [i3.ARRAY_BUFFER]);
        return this._buffers[0].data(t4.VERTICES, i3.STATIC_DRAW), n3;
      }, t4.prototype.draw = function() {
        var e5 = this.context.gl;
        e5.drawArrays(e5.TRIANGLES, 0, 3);
      }, Object.defineProperty(t4.prototype, "vertexLocation", { get: function() {
        return this._vertexLocation;
      }, enumerable: true, configurable: true }), t4.VERTICES = new Float32Array([-1, -3, 3, 1, -1, 1]), o([u2.Initializable.assert_initialized()], t4.prototype, "draw", null), t4;
    }(s.Geometry);
    t3.NdcFillingTriangle = c2;
  }, function(e3, t3, r3) {
    var i2, n2 = r3(1), o = r3(3), a = r3(0);
    !function(e4) {
      function t4(e5) {
        return a.assert(e5.length === 2, "expected length of buffer to be 2, given " + e5.length), [e5[0], e5[1]];
      }
      function r4(e5) {
        return a.assert(e5.length === 3, "expected length of buffer to be 3, given " + e5.length), [e5[0], e5[1], e5[2]];
      }
      function i3(e5) {
        return a.assert(e5.length === 4, "expected length of buffer to be 4, given " + e5.length), [e5[0], e5[1], e5[2], e5[3]];
      }
      e4.tuple2 = t4, e4.tuple3 = r4, e4.tuple4 = i3, e4.clampf = function(e5, t5) {
        var r5 = o.clamp(e5, 0, 1);
        return a.logIf(t5 !== void 0 && e5 < 0 || e5 > 1, a.LogLevel.Info, t5 + " clamped to [" + r5 + "], given [" + e5 + "]"), r5;
      }, e4.clampf2 = function(e5, r5) {
        var i4 = n2.vec2.fromValues(e5[0], e5[1]);
        return (e5[0] < 0 || e5[0] > 1 || e5[1] < 0 || e5[1] > 1) && (o.clamp2(i4, i4, n2.vec2.fromValues(0, 0), n2.vec2.fromValues(1, 1)), a.logIf(r5 !== void 0, a.LogLevel.Info, r5 + " clamped to [" + i4 + "], given [" + e5 + "]")), t4(i4);
      }, e4.clampf3 = function(e5, t5) {
        var i4 = n2.vec3.fromValues(e5[0], e5[1], e5[2]);
        return (e5[0] < 0 || e5[0] > 1 || e5[1] < 0 || e5[1] > 1 || e5[2] < 0 || e5[2] > 1) && (o.clamp3(i4, i4, n2.vec3.fromValues(0, 0, 0), n2.vec3.fromValues(1, 1, 1)), a.logIf(t5 !== void 0, a.LogLevel.Info, t5 + " clamped to [" + i4 + "], given [" + e5 + "]")), r4(i4);
      }, e4.clampf4 = function(e5, t5) {
        var r5 = n2.vec4.fromValues(e5[0], e5[1], e5[2], e5[3]);
        return (e5[0] < 0 || e5[0] > 1 || e5[1] < 0 || e5[1] > 1 || e5[2] < 0 || e5[2] > 1 || e5[3] < 0 || e5[3] > 1) && (o.clamp4(r5, r5, n2.vec4.fromValues(0, 0, 0, 0), n2.vec4.fromValues(1, 1, 1, 1)), a.logIf(t5 !== void 0, a.LogLevel.Info, t5 + " clamped to [" + r5 + "], given [" + e5 + "]")), i3(r5);
      }, e4.duplicate2 = function(e5) {
        return [e5[0], e5[1]];
      }, e4.duplicate3 = function(e5) {
        return [e5[0], e5[1], e5[2]];
      }, e4.duplicate4 = function(e5) {
        return [e5[0], e5[1], e5[2], e5[3]];
      }, e4.equals2 = function(e5, t5) {
        return e5[0] === t5[0] && e5[1] === t5[1];
      }, e4.equals3 = function(e5, t5) {
        return e5[0] === t5[0] && e5[1] === t5[1] && e5[2] === t5[2];
      }, e4.equals4 = function(e5, t5) {
        return e5[0] === t5[0] && e5[1] === t5[1] && e5[2] === t5[2] && e5[3] === t5[3];
      };
    }(i2 || (i2 = {})), e3.exports = i2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(0), n2 = function() {
      function e4() {
      }
      return e4.queryInternalTextureFormat = function(t4, r4, n3) {
        var o = t4.gl, a = t4.gl2facade, s = t4.isWebGL1 && t4.supportsTextureFloat || t4.isWebGL2 && t4.supportsColorBufferFloat, u2 = t4.isWebGL1 && t4.supportsTextureHalfFloat || t4.isWebGL2 && t4.supportsColorBufferFloat;
        n3 === void 0 && (n3 = e4.Precision.auto);
        var c2, l2, f2 = n3 === void 0 ? e4.Precision.auto : n3;
        if (n3 in e4.Precision || (i2.log(i2.LogLevel.Warning, "unknown precision '" + f2 + "' changed to '" + e4.Precision.auto + "'"), n3 = e4.Precision.auto), n3 === e4.Precision.auto && (f2 = s ? e4.Precision.float : u2 ? e4.Precision.half : e4.Precision.byte), f2 === e4.Precision.half && u2 ? (t4.isWebGL2 ? t4.colorBufferFloat : t4.textureHalfFloat, c2 = a.HALF_FLOAT, l2 = 1) : f2 !== e4.Precision.float && f2 !== e4.Precision.half || !s ? (c2 = o.UNSIGNED_BYTE, l2 = 2) : (t4.isWebGL2 ? t4.colorBufferFloat : t4.textureFloat, c2 = o.FLOAT, l2 = 0), t4.isWebGL1)
          return i2.assert([o.RGB, o.RGBA].includes(r4), "target must be gl.RGB or gl.RGBA in WebGL 1"), [r4, c2, f2];
        switch (r4) {
          case o.RGBA:
            return [[o.RGBA32F, o.RGBA16F, o.RGBA8][l2], c2, f2];
          case o.RGB:
            return [[o.RGB32F, o.RGB16F, o.RGB8][l2], c2, f2];
          case o.RG:
            return [[o.RG32F, o.RG16F, o.RG8][l2], c2, f2];
          case o.RED:
            return [[o.R32F, o.R16F, o.R8][l2], c2, f2];
          default:
            i2.assert(false, "internal format querying is not yet supported for formats other than RGBA, RGB");
        }
        return [o.NONE, o.NONE, f2];
      }, e4;
    }();
    t3.Wizard = n2, function(e4) {
      !function(e5) {
        e5.float = "float", e5.half = "half", e5.byte = "byte", e5.auto = "auto";
      }(e4.Precision || (e4.Precision = {}));
    }(n2 = t3.Wizard || (t3.Wizard = {})), t3.Wizard = n2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(0), n2 = function() {
      function e4() {
      }
      return e4.alter = function(t4, r4) {
        i2.assert(r4.hasOwnProperty("any"), "expected alterable object to provide 'any' key"), r4.any = true;
        var n3 = t4.split("."), o = n3.shift();
        if (i2.assert(o === "" || r4.hasOwnProperty(o), "expected object to have key '" + o + "' in order to capture alterations"), o === "" || typeof r4[o] == "object")
          if (o !== "" && n3.length > 0)
            e4.alter(n3.join("."), r4[o]);
          else
            for (var a = o !== "" ? r4[o] : r4, s = 0, u2 = Object.getOwnPropertyNames(a); s < u2.length; s++) {
              var c2 = u2[s];
              c2 !== "any" && e4.alter(c2, a);
            }
        else
          r4[o] = true;
      }, e4.reset = function(t4) {
        for (var r4 = 0, i3 = Object.getOwnPropertyNames(t4); r4 < i3.length; r4++) {
          var n3 = i3[r4];
          typeof t4[n3] != "object" ? t4[n3] = false : e4.reset(t4[n3]);
        }
      }, e4.prototype.alter = function(t4) {
        return e4.alter(t4, this);
      }, e4.prototype.reset = function() {
        return e4.reset(this);
      }, e4;
    }();
    t3.ChangeLookup = n2;
  }, function(e3, t3, r3) {
    var i2 = r3(35), n2 = t3.ValidationError = function(e4, t4, r4, i3, n3, o2) {
      i3 && (this.property = i3), e4 && (this.message = e4), r4 && (r4.id ? this.schema = r4.id : this.schema = r4), t4 && (this.instance = t4), this.name = n3, this.argument = o2, this.stack = this.toString();
    };
    n2.prototype.toString = function() {
      return this.property + " " + this.message;
    };
    var o = t3.ValidatorResult = function(e4, t4, r4, i3) {
      this.instance = e4, this.schema = t4, this.propertyPath = i3.propertyPath, this.errors = [], this.throwError = r4 && r4.throwError, this.disableFormat = r4 && r4.disableFormat === true;
    };
    function a(e4, t4) {
      return t4 + ": " + e4.toString() + "\n";
    }
    o.prototype.addError = function(e4) {
      var t4;
      if (typeof e4 == "string")
        t4 = new n2(e4, this.instance, this.schema, this.propertyPath);
      else {
        if (!e4)
          throw new Error("Missing error detail");
        if (!e4.message)
          throw new Error("Missing error message");
        if (!e4.name)
          throw new Error("Missing validator type");
        t4 = new n2(e4.message, this.instance, this.schema, this.propertyPath, e4.name, e4.argument);
      }
      if (this.throwError)
        throw t4;
      return this.errors.push(t4), t4;
    }, o.prototype.importErrors = function(e4) {
      typeof e4 == "string" || e4 && e4.validatorType ? this.addError(e4) : e4 && e4.errors && Array.prototype.push.apply(this.errors, e4.errors);
    }, o.prototype.toString = function(e4) {
      return this.errors.map(a).join("");
    }, Object.defineProperty(o.prototype, "valid", { get: function() {
      return !this.errors.length;
    } });
    var s = t3.SchemaError = function e4(t4, r4) {
      this.message = t4, this.schema = r4, Error.call(this, t4), Error.captureStackTrace(this, e4);
    };
    s.prototype = Object.create(Error.prototype, { constructor: { value: s, enumerable: false }, name: { value: "SchemaError", enumerable: false } });
    var u2 = t3.SchemaContext = function(e4, t4, r4, i3, n3) {
      this.schema = e4, this.options = t4, this.propertyPath = r4, this.base = i3, this.schemas = n3;
    };
    u2.prototype.resolve = function(e4) {
      return i2.resolve(this.base, e4);
    }, u2.prototype.makeChild = function(e4, t4) {
      var r4 = t4 === void 0 ? this.propertyPath : this.propertyPath + l2(t4), n3 = i2.resolve(this.base, e4.id || ""), o2 = new u2(e4, this.options, r4, n3, Object.create(this.schemas));
      return e4.id && !o2.schemas[n3] && (o2.schemas[n3] = e4), o2;
    };
    var c2 = t3.FORMAT_REGEXPS = { "date-time": /^\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\.\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/, date: /^\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/, time: /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/, email: /^(?:[\w\!\#\$\%\&\'\*\+\-\/\=\?\^\`\{\|\}\~]+\.)*[\w\!\#\$\%\&\'\*\+\-\/\=\?\^\`\{\|\}\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\-](?!\.)){0,61}[a-zA-Z0-9]?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\[(?:(?:[01]?\d{1,2}|2[0-4]\d|25[0-5])\.){3}(?:[01]?\d{1,2}|2[0-4]\d|25[0-5])\]))$/, "ip-address": /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/, ipv6: /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/, uri: /^[a-zA-Z][a-zA-Z0-9+-.]*:[^\s]*$/, color: /^(#?([0-9A-Fa-f]{3}){1,2}\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\(\s*\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\b\s*,\s*\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\b\s*,\s*\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\b\s*\))|(rgb\(\s*(\d?\d%|100%)+\s*,\s*(\d?\d%|100%)+\s*,\s*(\d?\d%|100%)+\s*\)))$/, hostname: /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\.?$/, "host-name": /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\.?$/, alpha: /^[a-zA-Z]+$/, alphanumeric: /^[a-zA-Z0-9]+$/, "utc-millisec": function(e4) {
      return typeof e4 == "string" && parseFloat(e4) === parseInt(e4, 10) && !isNaN(e4);
    }, regex: function(e4) {
      var t4 = true;
      try {
        new RegExp(e4);
      } catch (e5) {
        t4 = false;
      }
      return t4;
    }, style: /\s*(.+?):\s*([^;]+);?/, phone: /^\+(?:[0-9] ?){6,14}[0-9]$/ };
    c2.regexp = c2.regex, c2.pattern = c2.regex, c2.ipv4 = c2["ip-address"], t3.isFormat = function(e4, t4, r4) {
      if (typeof e4 == "string" && c2[t4] !== void 0) {
        if (c2[t4] instanceof RegExp)
          return c2[t4].test(e4);
        if (typeof c2[t4] == "function")
          return c2[t4](e4);
      } else if (r4 && r4.customFormats && typeof r4.customFormats[t4] == "function")
        return r4.customFormats[t4](e4);
      return true;
    };
    var l2 = t3.makeSuffix = function(e4) {
      return (e4 = e4.toString()).match(/[.\s\[\]]/) || e4.match(/^[\d]/) ? e4.match(/^\d+$/) ? "[" + e4 + "]" : "[" + JSON.stringify(e4) + "]" : "." + e4;
    };
    function f2(e4, t4, r4, i3) {
      typeof r4 == "object" ? t4[i3] = p2(e4[i3], r4) : e4.indexOf(r4) === -1 && t4.push(r4);
    }
    function h2(e4, t4, r4) {
      t4[r4] = e4[r4];
    }
    function d2(e4, t4, r4, i3) {
      typeof t4[i3] == "object" && t4[i3] && e4[i3] ? r4[i3] = p2(e4[i3], t4[i3]) : r4[i3] = t4[i3];
    }
    function p2(e4, t4) {
      var r4 = Array.isArray(t4), i3 = r4 && [] || {};
      return r4 ? (e4 = e4 || [], i3 = i3.concat(e4), t4.forEach(f2.bind(null, e4, i3))) : (e4 && typeof e4 == "object" && Object.keys(e4).forEach(h2.bind(null, e4, i3)), Object.keys(t4).forEach(d2.bind(null, e4, t4, i3))), i3;
    }
    function _2(e4) {
      return "/" + encodeURIComponent(e4).replace(/~/g, "%7E");
    }
    t3.deepCompareStrict = function e4(t4, r4) {
      if (typeof t4 != typeof r4)
        return false;
      if (Array.isArray(t4))
        return !!Array.isArray(r4) && t4.length === r4.length && t4.every(function(i4, n4) {
          return e4(t4[n4], r4[n4]);
        });
      if (typeof t4 == "object") {
        if (!t4 || !r4)
          return t4 === r4;
        var i3 = Object.keys(t4), n3 = Object.keys(r4);
        return i3.length === n3.length && i3.every(function(i4) {
          return e4(t4[i4], r4[i4]);
        });
      }
      return t4 === r4;
    }, e3.exports.deepMerge = p2, t3.objectGetPath = function(e4, t4) {
      for (var r4, i3 = t4.split("/").slice(1); typeof (r4 = i3.shift()) == "string"; ) {
        var n3 = decodeURIComponent(r4.replace(/~0/, "~").replace(/~1/g, "/"));
        if (!(n3 in e4))
          return;
        e4 = e4[n3];
      }
      return e4;
    }, t3.encodePath = function(e4) {
      return e4.map(_2).join("");
    }, t3.getDecimalPlaces = function(e4) {
      var t4 = 0;
      if (isNaN(e4))
        return t4;
      typeof e4 != "number" && (e4 = Number(e4));
      var r4 = e4.toString().split("e");
      if (r4.length === 2) {
        if (r4[1][0] !== "-")
          return t4;
        t4 = Number(r4[1].slice(1));
      }
      var i3 = r4[0].split(".");
      return i3.length === 2 && (t4 += i3[1].length), t4;
    };
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(0), s = r3(2), u2 = r3(8), c2 = r3(23), l2 = r3(4), f2 = function(e4) {
      function t4() {
        var t5 = e4 !== null && e4.apply(this, arguments) || this;
        return t5._buffersByAttachment = /* @__PURE__ */ new Map(), t5._texturesByAttachment = /* @__PURE__ */ new Map(), t5._colorClearQueue = new Array(), t5._drawBuffers = new Array(), t5._drawBuffersChanged = false, t5;
      }
      return n2(t4, e4), t4.statusString = function(e5, t5) {
        var r4 = e5.gl;
        switch (t5) {
          case r4.FRAMEBUFFER_COMPLETE:
            return "the framebuffer is ready to display (COMPLETE)";
          case r4.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:
            return "the attachment types are mismatched or not all framebuffer attachment points are framebuffer attachment complete (INCOMPLETE_ATTACHMENT)";
          case r4.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:
            return "there is no attachment (INCOMPLETE_MISSING_ATTACHMENT)";
          case r4.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:
            return "height and width of the attachment are not the same (INCOMPLETE_DIMENSIONS)";
          case r4.FRAMEBUFFER_UNSUPPORTED:
            return "the format of the attachment is not supported or if depth and stencil attachments are not the same renderbuffer (UNSUPPORTED)";
          case r4.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:
            return "the values of gl.RENDERBUFFER_SAMPLES are different among attached renderbuffers, or are non-zero if the attached images are a mix of renderbuffers and textures (INCOMPLETE_MULTISAMPLE)";
          default:
            return a.assert(false, "expected known framebuffer status, given " + t5), "";
        }
      }, t4.prototype.create = function(e5) {
        var r4 = this._context.gl, i3 = this.context.gl2facade;
        this._object = r4.createFramebuffer(), this._clearColors = new Array(i3.COLOR_ATTACHMENT_MAX - i3.COLOR_ATTACHMENT0), this._clearDepth = 1, this._clearStencil = 0, this.clear = this.context.isWebGL1 ? this.es2Clear : this.es3Clear;
        for (var n3 = 0, o2 = e5; n3 < o2.length; n3++) {
          var s2 = o2[n3], u3 = s2[0], f3 = s2[1];
          if (f3 instanceof c2.Renderbuffer ? this._buffersByAttachment.set(u3, f3) : f3 instanceof l2.Texture2D && this._texturesByAttachment.set(u3, f3), !(u3 < i3.COLOR_ATTACHMENT_MIN || u3 > i3.COLOR_ATTACHMENT_MAX)) {
            this._drawBuffers.push(u3);
            var h2 = u3 - r4.COLOR_ATTACHMENT0;
            this._colorClearQueue.push(h2), this._clearColors[h2] = [0, 0, 0, 0];
          }
        }
        this._drawBuffersChanged = true, r4.bindFramebuffer(r4.FRAMEBUFFER, this._object), this._buffersByAttachment.forEach(function(e6, t5) {
          r4.framebufferRenderbuffer(r4.FRAMEBUFFER, t5, r4.RENDERBUFFER, e6.object);
        }), this._texturesByAttachment.forEach(function(e6, t5) {
          r4.framebufferTexture2D(r4.FRAMEBUFFER, t5, r4.TEXTURE_2D, e6.object, 0);
        }), i3.drawBuffers && i3.drawBuffers(this._drawBuffers);
        var d2 = r4.checkFramebufferStatus(r4.FRAMEBUFFER);
        return this._valid = r4.isFramebuffer(this._object) && d2 === r4.FRAMEBUFFER_COMPLETE, a.logIf(!this._valid, a.LogLevel.Warning, t4.statusString(this.context, d2)), r4.bindFramebuffer(r4.FRAMEBUFFER, t4.DEFAULT_FRAMEBUFFER), this._object;
      }, t4.prototype.delete = function() {
        a.assert(this._object instanceof WebGLFramebuffer, "expected WebGLFramebuffer object"), this.context.gl.deleteFramebuffer(this._object), this._object = void 0, this._valid = false;
      }, t4.prototype.es2Clear = function(e5, t5, r4) {
        t5 === void 0 && (t5 = true), r4 === void 0 && (r4 = true);
        var i3 = this.context.gl, n3 = a.bitInBitfield(e5, i3.DEPTH_BUFFER_BIT), o2 = a.bitInBitfield(e5, i3.STENCIL_BUFFER_BIT), s2 = a.bitInBitfield(e5, i3.COLOR_BUFFER_BIT);
        if (s2 || n3 || o2) {
          if (t5 && this.bind(), s2 && this._clearColors[0] !== void 0) {
            var u3 = this._clearColors[0];
            i3.clearColor(u3[0], u3[1], u3[2], u3[3]);
          }
          n3 && this._clearDepth !== void 0 && i3.clearDepth(this._clearDepth), o2 && this._clearStencil !== void 0 && i3.clearStencil(this._clearStencil), i3.clear(e5), r4 && this.unbind();
        }
      }, t4.prototype.es3Clear = function(e5, t5, r4, i3) {
        t5 === void 0 && (t5 = true), r4 === void 0 && (r4 = true);
        var n3 = this.context.gl, o2 = a.bitInBitfield(e5, n3.DEPTH_BUFFER_BIT), s2 = a.bitInBitfield(e5, n3.STENCIL_BUFFER_BIT), u3 = a.bitInBitfield(e5, n3.COLOR_BUFFER_BIT);
        if (u3 || o2 || s2) {
          if (t5 && this.bind(), u3) {
            if (window.chrome && (window.chrome.webstore || window.chrome.runtime)) {
              var c3 = this._clearColors[0] ? this._clearColors[0] : [0, 0, 0, 1];
              n3.clearColor(c3[0], c3[1], c3[2], c3[3]), n3.clear(n3.COLOR_BUFFER_BIT);
            }
            for (var l3 = 0, f3 = i3 || this._colorClearQueue; l3 < f3.length; l3++) {
              var h2 = f3[l3];
              n3.clearBufferfv(n3.COLOR, h2, this._clearColors[h2]);
            }
          }
          o2 && s2 ? (n3.clearStencil(this._clearStencil), n3.clearDepth(this._clearDepth), n3.clear(n3.STENCIL_BUFFER_BIT | n3.DEPTH_BUFFER_BIT)) : o2 ? n3.clearBufferfv(n3.DEPTH, 0, [this._clearDepth]) : s2 && (n3.clearStencil(this._clearStencil), n3.clear(n3.STENCIL_BUFFER_BIT)), r4 && this.unbind();
        }
      }, t4.prototype.hasAttachment = function(e5) {
        return this._texturesByAttachment.has(e5) || this._buffersByAttachment.has(e5);
      }, t4.prototype.bind = function(e5) {
        e5 === void 0 && (e5 = this.context.gl.FRAMEBUFFER), this.context.gl.bindFramebuffer(e5, this._object), this._drawBuffersChanged && this.context.gl2facade.drawBuffers && (this.context.gl2facade.drawBuffers(this._drawBuffers), this._drawBuffersChanged = false);
      }, t4.prototype.unbind = function(e5) {
        e5 === void 0 && (e5 = this.context.gl.FRAMEBUFFER), this.context.gl.bindFramebuffer(e5, t4.DEFAULT_FRAMEBUFFER);
      }, t4.prototype.clearColor = function(e5, t5) {
        a.assert(t5 === void 0 || t5 === 0 || this.context.isWebGL2 || this.context.supportsDrawBuffers, "WebGL2 context expected for clearing multiple color attachments.");
        var r4 = e5[3] < 1 && !this.context.alpha;
        a.logIf(r4, a.LogLevel.Warning, "context has alpha disabled, clear color alpha is ignored");
        var i3 = [e5[0], e5[1], e5[2], r4 ? 1 : e5[3]];
        if (this.context.premultipliedAlpha && !r4 && (i3[0] *= i3[3], i3[1] *= i3[3], i3[2] *= i3[3]), t5 !== void 0)
          this._clearColors[t5] = i3;
        else
          for (var n3 = 0; n3 < this._clearColors.length; ++n3)
            this._clearColors[n3] = i3;
      }, t4.prototype.clearDepth = function(e5) {
        this._clearDepth = e5;
      }, t4.prototype.clearStencil = function(e5) {
        this._clearStencil = e5;
      }, t4.prototype.texture = function(e5) {
        return this._texturesByAttachment.get(e5);
      }, t4.prototype.resize = function(e5, t5, r4, i3) {
        r4 === void 0 && (r4 = true), i3 === void 0 && (i3 = true), this._buffersByAttachment.forEach(function(n3) {
          n3.resize(e5, t5, r4, i3);
        }), this._texturesByAttachment.forEach(function(n3) {
          n3.resize(e5, t5, r4, i3);
        });
      }, Object.defineProperty(t4.prototype, "width", { get: function() {
        this.assertInitialized();
        var e5 = NaN;
        return this._buffersByAttachment.forEach(function(t5) {
          (isNaN(e5) || t5.width < e5) && (e5 = t5.width);
        }), this._texturesByAttachment.forEach(function(t5) {
          (isNaN(e5) || t5.width < e5) && (e5 = t5.width);
        }), e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "height", { get: function() {
        this.assertInitialized();
        var e5 = NaN;
        return this._buffersByAttachment.forEach(function(t5) {
          (isNaN(e5) || t5.height < e5) && (e5 = t5.height);
        }), this._texturesByAttachment.forEach(function(t5) {
          (isNaN(e5) || t5.height < e5) && (e5 = t5.height);
        }), e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "size", { get: function() {
        return [this.width, this.height];
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "drawBuffers", { get: function() {
        return this.assertInitialized(), this._drawBuffers;
      }, set: function(e5) {
        this.assertInitialized();
        for (var t5 = this.context.gl2facade, r4 = 0, i3 = e5; r4 < i3.length; r4++) {
          var n3 = i3[r4];
          a.assert(this.hasAttachment(n3), "valid attachment expected for draw buffer, given " + n3), a.assert(n3 >= t5.COLOR_ATTACHMENT_MIN && n3 <= t5.COLOR_ATTACHMENT_MAX, "color attachment expected for draw buffer, given " + n3), this._drawBuffersChanged = this._drawBuffersChanged || this._drawBuffers.indexOf(n3) === -1;
        }
        this._drawBuffersChanged = this._drawBuffersChanged || e5.length !== this._drawBuffers.length, this._drawBuffersChanged && (this._drawBuffers = e5);
      }, enumerable: true, configurable: true }), t4.DEFAULT_FRAMEBUFFER = void 0, o([s.Initializable.assert_initialized()], t4.prototype, "es2Clear", null), o([s.Initializable.assert_initialized()], t4.prototype, "es3Clear", null), o([s.Initializable.assert_initialized()], t4.prototype, "bind", null), o([s.Initializable.assert_initialized()], t4.prototype, "unbind", null), o([s.Initializable.assert_initialized()], t4.prototype, "clearColor", null), o([s.Initializable.assert_initialized()], t4.prototype, "clearDepth", null), o([s.Initializable.assert_initialized()], t4.prototype, "clearStencil", null), o([s.Initializable.assert_initialized()], t4.prototype, "texture", null), o([s.Initializable.assert_initialized()], t4.prototype, "resize", null), t4;
    }(u2.AbstractObject);
    t3.Framebuffer = f2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = function() {
      function e4(t4) {
        var r4 = Math.max(0, t4);
        this._texCoords = new Float32Array(r4 * e4.FLOATS_PER_TEXCOORD), this._origins = new Float32Array(r4 * e4.FLOATS_PER_ORIGIN), this._tangents = new Float32Array(r4 * e4.FLOATS_PER_TANGENT), this._ups = new Float32Array(r4 * e4.FLOATS_PER_UP);
      }
      return e4.concat = function(t4) {
        var r4 = 0;
        t4.forEach(function(e5) {
          return r4 += e5 ? e5.length : 0;
        });
        for (var i3 = new e4(r4), n2 = 0, o = 0; o < t4.length; ++o) {
          var a = t4[o];
          a !== void 0 && a.length !== 0 && (i3._texCoords.set(a._texCoords, n2 * e4.FLOATS_PER_TEXCOORD), i3._origins.set(a._origins, n2 * e4.FLOATS_PER_ORIGIN), i3._tangents.set(a._tangents, n2 * e4.FLOATS_PER_TANGENT), i3._ups.set(a._ups, n2 * e4.FLOATS_PER_UP), n2 += a.length);
        }
        return i3;
      }, e4.prototype.shrink = function(t4) {
        var r4 = Math.max(0, t4);
        if (this.length !== r4) {
          var i3 = function(e5, t5, r5) {
            return new Float32Array(e5.buffer.slice(0, t5 * e5.BYTES_PER_ELEMENT * r5), 0, t5 * r5);
          };
          i3(this._texCoords, r4, e4.FLOATS_PER_TEXCOORD), i3(this._origins, r4, e4.FLOATS_PER_ORIGIN), i3(this._ups, r4, e4.FLOATS_PER_TANGENT), i3(this._tangents, r4, e4.FLOATS_PER_UP);
        }
      }, e4.prototype.uvLowerLeft = function(t4) {
        var r4 = t4 * e4.FLOATS_PER_TEXCOORD + 0;
        return this._texCoords.subarray(r4, r4 + 2);
      }, e4.prototype.uvUpperRight = function(t4) {
        var r4 = t4 * e4.FLOATS_PER_TEXCOORD + 2;
        return this._texCoords.subarray(r4, r4 + 2);
      }, e4.prototype.origin = function(t4) {
        var r4 = t4 * e4.FLOATS_PER_ORIGIN;
        return this._origins.subarray(r4, r4 + e4.FLOATS_PER_ORIGIN);
      }, e4.prototype.tangent = function(t4) {
        var r4 = t4 * e4.FLOATS_PER_TANGENT;
        return this._tangents.subarray(r4, r4 + e4.FLOATS_PER_TANGENT);
      }, e4.prototype.up = function(t4) {
        var r4 = t4 * e4.FLOATS_PER_UP;
        return this._ups.subarray(r4, r4 + e4.FLOATS_PER_UP);
      }, Object.defineProperty(e4.prototype, "length", { get: function() {
        return this._origins.length / e4.FLOATS_PER_ORIGIN;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "origins", { get: function() {
        return this._origins;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "tangents", { get: function() {
        return this._tangents;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "ups", { get: function() {
        return this._ups;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "texCoords", { get: function() {
        return this._texCoords;
      }, enumerable: true, configurable: true }), e4.FLOATS_PER_TEXCOORD = 4, e4.FLOATS_PER_ORIGIN = 3, e4.FLOATS_PER_TANGENT = 3, e4.FLOATS_PER_UP = 3, e4;
    }();
    t3.GlyphVertices = i2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(1), n2 = r3(15), o = r3(21), a = r3(18), s = r3(70), u2 = function() {
      function e4(t4, r4, a2) {
        this._alignment = e4.Alignment.Left, this._lineAnchor = e4.LineAnchor.Baseline, this._lineWidth = NaN, this._fontSizeUnit = e4.Unit.World, this._color = new o.Color(e4.DEFAULT_COLOR), this._altered = Object.assign(new n2.ChangeLookup(), { any: false, color: false, resources: false, text: false, typesetting: false, static: false, dynamic: false }), this._wrap = false, this._elide = e4.Elide.None, this._ellipsis = e4.DEFAULT_ELLIPSIS, this._text = t4, this._type = r4, this._staticTransform = i2.mat4.create(), this._dynamicTransform = i2.mat4.create(), this._extent = [0, 0], a2 && (this._fontFace = a2);
      }
      return e4.devicePixelRatio = function() {
        return window === void 0 || typeof window.devicePixelRatio != "number" ? 1 : window.devicePixelRatio;
      }, e4.prototype.vertices = function() {
        return new a.GlyphVertices(this.length + this.ellipsis.length);
      }, e4.prototype.charAt = function(e5) {
        return this._text.charAt(e5);
      }, e4.prototype.charCodeAt = function(e5) {
        return this._text.charCodeAt(e5);
      }, e4.prototype.lineFeedAt = function(e5) {
        return this.charAt(e5) === this.lineFeed;
      }, e4.prototype.kerningBefore = function(e5) {
        return e5 < 1 || e5 > this.length ? NaN : this._fontFace.kerning(this.charCodeAt(e5 - 1), this.charCodeAt(e5));
      }, e4.prototype.kerningAfter = function(e5) {
        return e5 < 0 || e5 > this.length - 1 ? NaN : this._fontFace.kerning(this.charCodeAt(e5), this.charCodeAt(e5 + 1));
      }, e4.prototype.advance = function(e5) {
        return e5 < 0 || e5 > this.length ? NaN : this._fontFace.glyph(this.charCodeAt(e5)).advance;
      }, e4.prototype.toString = function() {
        return this._text instanceof s.Text ? this._text.text : this._text;
      }, e4.prototype.reset = function() {
        this._altered.reset();
      }, Object.defineProperty(e4.prototype, "text", { get: function() {
        return this._text;
      }, set: function(e5) {
        this._altered.alter("text"), this._text = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "type", { get: function() {
        return this._type;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "length", { get: function() {
        return this._text.length;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "lineFeed", { get: function() {
        return this._text instanceof s.Text ? this._text.lineFeed : s.Text.DEFAULT_LINE_FEED;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "wrap", { get: function() {
        return this._wrap;
      }, set: function(e5) {
        this._wrap = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "elide", { get: function() {
        return this._elide;
      }, set: function(e5) {
        this._elide = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "ellipsis", { get: function() {
        return this._ellipsis;
      }, set: function(t4) {
        this._ellipsis !== t4 && (this._ellipsis = t4, this._elide !== e4.Elide.None && this._altered.alter("typesetting"));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "lineWidth", { get: function() {
        return this._lineWidth * this._fontFace.size / this.fontSize;
      }, set: function(e5) {
        this._lineWidth !== e5 && (this._lineWidth = e5, this._altered.alter("typesetting"));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "alignment", { get: function() {
        return this._alignment;
      }, set: function(e5) {
        this._alignment !== e5 && (this._alignment = e5, this._altered.alter("typesetting"));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "lineAnchor", { get: function() {
        return this._lineAnchor;
      }, set: function(e5) {
        this._lineAnchor !== e5 && (this._lineAnchor = e5, this._altered.alter("typesetting"));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "fontSize", { get: function() {
        return this._fontSize;
      }, set: function(e5) {
        this._fontSize !== e5 && (this._fontSize = e5, this._altered.alter("typesetting"));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "fontSizeUnit", { get: function() {
        return this._fontSizeUnit;
      }, set: function(e5) {
        this._fontSizeUnit !== e5 && (this._fontSizeUnit = e5, this._altered.alter("typesetting"));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "fontFace", { get: function() {
        return this._fontFace;
      }, set: function(e5) {
        this._fontFace !== e5 && (this._fontFace = e5, this._altered.alter("typesetting"), this._altered.alter("resources"));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "color", { get: function() {
        return this._color;
      }, set: function(e5) {
        this._color.equals(e5) || (this._color = e5, this._altered.alter("color"));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "backgroundColor", { get: function() {
        return this._backgroundColor;
      }, set: function(e5) {
        this._backgroundColor.equals(e5) || (this._backgroundColor = e5, this._altered.alter("color"));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "staticTransform", { get: function() {
        var e5 = this.fontSize / this._fontFace.size, t4 = i2.mat4.create();
        return i2.mat4.scale(t4, this._staticTransform, i2.vec3.fromValues(e5, e5, e5)), t4;
      }, set: function(e5) {
        i2.mat4.equals(this._staticTransform, e5) || (this._staticTransform = e5, this._altered.alter("static"));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "dynamicTransform", { get: function() {
        return this._dynamicTransform;
      }, set: function(e5) {
        this._altered.alter("dynamic"), this._dynamicTransform = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "extent", { get: function() {
        return this._extent;
      }, set: function(e5) {
        this._extent = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "altered", { get: function() {
        return this._altered.any || this._text.altered || this._color.altered;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "valid", { get: function() {
        return this._fontFace !== void 0 && this._fontFace.glyphTexture.valid && this._text.length > 0;
      }, enumerable: true, configurable: true }), e4.DEFAULT_COLOR = [0.1098, 0.4588, 0.7373, 1], e4.DEFAULT_ELLIPSIS = "...", e4;
    }();
    t3.Label = u2, function(e4) {
      !function(e5) {
        e5.Static = "static", e5.Dynamic = "dynamic";
      }(e4.Type || (e4.Type = {})), function(e5) {
        e5.None = "none", e5.Left = "left", e5.Middle = "middle", e5.Right = "right";
      }(e4.Elide || (e4.Elide = {})), function(e5) {
        e5.Left = "left", e5.Center = "center", e5.Right = "right";
      }(e4.Alignment || (e4.Alignment = {})), function(e5) {
        e5.Top = "top", e5.Ascent = "ascent", e5.Center = "center", e5.Baseline = "baseline", e5.Descent = "descent", e5.Bottom = "bottom";
      }(e4.LineAnchor || (e4.LineAnchor = {})), function(e5) {
        e5.World = "world", e5.Pixel = "pixel", e5.Mixed = "mixed";
      }(e4.Unit || (e4.Unit = {}));
    }(u2 = t3.Label || (t3.Label = {})), t3.Label = u2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(0);
    t3.byteSizeOfFormat = function(e4, t4) {
      var r4 = e4.gl, n2 = e4.gl2facade, o = e4.supportsDepthTexture ? e4.depthTexture.UNSIGNED_INT_24_8_WEBGL : void 0;
      switch (t4) {
        case void 0:
        default:
          break;
        case r4.UNSIGNED_BYTE:
        case r4.UNSIGNED_SHORT_5_6_5:
        case r4.UNSIGNED_SHORT_4_4_4_4:
        case r4.UNSIGNED_SHORT_5_5_5_1:
        case r4.UNSIGNED_SHORT:
        case r4.UNSIGNED_INT:
        case o:
        case r4.FLOAT:
        case n2.HALF_FLOAT:
        case r4.BYTE:
        case r4.UNSIGNED_SHORT:
        case r4.SHORT:
        case r4.UNSIGNED_INT:
        case r4.INT:
        case r4.HALF_FLOAT:
        case r4.FLOAT:
        case r4.UNSIGNED_INT_2_10_10_10_REV:
        case r4.UNSIGNED_INT_10F_11F_11F_REV:
        case r4.UNSIGNED_INT_5_9_9_9_REV:
        case r4.UNSIGNED_INT_24_8:
        case r4.FLOAT_32_UNSIGNED_INT_24_8_REV:
          return i2.assert(false, "expected format instead of type " + t4), 0;
      }
      var a = e4.supportsSRGB ? e4.sRGB.SRGB8_ALPHA8_EXT : void 0, s = e4.supportsSRGB ? e4.sRGB.SRGB_EXT : void 0, u2 = e4.supportsSRGB ? e4.sRGB.SRGB_ALPHA_EXT : void 0, c2 = e4.supportsColorBufferFloat ? e4.colorBufferFloat.RGB32F_EXT : void 0, l2 = e4.supportsColorBufferFloat ? e4.colorBufferFloat.RGBA32F_EXT : void 0;
      switch (t4) {
        case void 0:
        default:
          return i2.assert(false, "size of format " + t4 + " is unknown"), 0;
        case r4.ALPHA:
        case r4.LUMINANCE:
        case r4.R8:
        case r4.R8I:
        case r4.R8UI:
        case r4.STENCIL_INDEX8:
          return 1;
        case r4.DEPTH_COMPONENT16:
        case r4.LUMINANCE_ALPHA:
        case r4.R16F:
        case r4.R16I:
        case r4.R16UI:
        case r4.RG8:
        case r4.RG8I:
        case r4.RG8UI:
        case r4.RGB565:
        case r4.RGB5_A1:
        case r4.RGBA4:
          return 2;
        case r4.DEPTH_COMPONENT24:
        case r4.RGB:
        case r4.RGB8:
        case r4.RGB8UI:
        case r4.SRGB:
        case s:
        case r4.SRGB8:
          return 3;
        case r4.DEPTH_STENCIL:
        case r4.DEPTH24_STENCIL8:
        case r4.DEPTH_COMPONENT32F:
        case r4.R11F_G11F_B10F:
        case r4.R32F:
        case r4.R32I:
        case r4.R32UI:
        case r4.RG16F:
        case r4.RG16I:
        case r4.RG16UI:
        case r4.RGB10_A2:
        case r4.RGB10_A2UI:
        case r4.RGB9_E5:
        case r4.RGBA:
        case r4.RGBA8:
        case r4.RGBA8I:
        case r4.RGBA8UI:
        case r4.SRGB8_ALPHA8:
        case a:
        case r4.SRGB_ALPHA:
        case u2:
        case r4.SRGB_ALPHA8:
        case r4.SRGB_APLHA8:
          return 4;
        case r4.DEPTH32F_STENCIL8:
          return 5;
        case r4.RGB16F:
          return 6;
        case r4.RG32F:
        case r4.RG32I:
        case r4.RG32UI:
        case r4.RGBA16F:
        case r4.RGBA16I:
        case r4.RGBA16UI:
          return 8;
        case r4.RGB32F:
        case r4.RGB32F:
        case c2:
          return 12;
        case r4.RGBA32F:
        case l2:
        case r4.RGBA32I:
        case r4.RGBA32UI:
          return 16;
        case r4.DEPTH_COMPONENT:
        case r4.DEPTH_STENCIL:
          return i2.assert(false, "byte size of DEPTH_COMPONENT or DEPTH_STENCIL formats depends on active render buffer"), 0;
      }
    };
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(1), n2 = r3(3), o = r3(0), a = r3(13), s = function() {
      function e4(t4, r4) {
        this._rgba = [0, 0, 0, e4.DEFAULT_ALPHA], this._altered = false, t4 !== void 0 && (t4.length === 3 && r4 !== void 0 ? this.fromF32(t4[0], t4[1], t4[2], r4) : t4.length === 4 ? (this.fromF32(t4[0], t4[1], t4[2], t4[3]), o.assert(r4 === void 0, "expected alpha to be undefined when given an 4-tuple in RGBA")) : this.fromF32(t4[0], t4[1], t4[2]));
      }
      return e4.hue2rgb = function(e5, t4, r4) {
        return o.assert(r4 >= -1 && r4 <= 2, "t is expected to be between -1 and 2"), r4 < 0 ? r4 += 1 : r4 > 1 && (r4 -= 1), 6 * r4 < 1 ? e5 + 6 * (t4 - e5) * r4 : 2 * r4 < 1 ? t4 : 3 * r4 < 2 ? e5 + 6 * (t4 - e5) * (2 / 3 - r4) : e5;
      }, e4.to2CharHexCode = function(e5) {
        return (e5 < 15.5 / 255 ? "0" : "") + Math.round(255 * e5).toString(16);
      }, e4.hsl2rgb = function(t4) {
        var r4 = a.clampf3(t4, "HSL input");
        if (r4[1] === 0)
          return [r4[2], r4[2], r4[2]];
        var i3 = r4[2] < 0.5 ? r4[2] * (1 + r4[1]) : r4[2] + r4[1] - r4[1] * r4[2], n3 = 2 * r4[2] - i3;
        return [e4.hue2rgb(n3, i3, r4[0] + 1 / 3), e4.hue2rgb(n3, i3, r4[0]), e4.hue2rgb(n3, i3, r4[0] - 1 / 3)];
      }, e4.rgb2hsl = function(e5) {
        var t4 = a.clampf3(e5, "RGB input"), r4 = [0, 0, 0], i3 = Math.min(t4[0], t4[1], t4[2]), n3 = Math.max(t4[0], t4[1], t4[2]), o2 = n3 - i3;
        if (r4[2] = 0.5 * (n3 + i3), o2 === 0)
          return r4;
        r4[1] = r4[2] < 0.5 ? o2 / (n3 + i3) : o2 / (2 - n3 - i3);
        var s2 = ((n3 - t4[0]) / 6 + o2 / 2) / o2, u2 = ((n3 - t4[1]) / 6 + o2 / 2) / o2, c2 = ((n3 - t4[2]) / 6 + o2 / 2) / o2;
        return t4[0] === n3 ? r4[0] = c2 - u2 : t4[1] === n3 ? r4[0] = s2 - c2 + 1 / 3 : r4[0] = u2 - s2 + 2 / 3, r4;
      }, e4.lab2xyz = function(e5) {
        var t4 = a.clampf3(e5, "LAB input"), r4 = (100 * t4[0] + 16) / 116, i3 = (256 * t4[1] - 128) / 500 + r4, n3 = r4 - (256 * t4[2] - 128) / 200, o2 = Math.pow(i3, 3), s2 = Math.pow(r4, 3), u2 = Math.pow(n3, 3);
        return [0.95047 * (o2 > 8856e-6 ? o2 : (i3 - 16 / 116) / 7.787), 1 * (s2 > 8856e-6 ? s2 : (r4 - 16 / 116) / 7.787), 1.08883 * (u2 > 8856e-6 ? u2 : (n3 - 16 / 116) / 7.787)];
      }, e4.xyz2lab = function(e5) {
        var t4 = [e5[0] / 0.95047, e5[1] / 1, e5[2] / 1.08883], r4 = t4[0] > 8856e-6 ? Math.cbrt(t4[0]) : 7.787 * t4[0] + 16 / 116, i3 = t4[1] > 8856e-6 ? Math.cbrt(t4[1]) : 7.787 * t4[1] + 16 / 116, n3 = t4[2] > 8856e-6 ? Math.cbrt(t4[2]) : 7.787 * t4[2] + 16 / 116;
        return a.clampf3([(116 * i3 - 16) / 100, (500 * (r4 - i3) + 128) / 256, (200 * (i3 - n3) + 128) / 256]);
      }, e4.xyz2rgb = function(e5) {
        var t4 = 2.04137 * e5[0] + -0.56495 * e5[1] + -0.34469 * e5[2], r4 = -0.96927 * e5[0] + 1.87601 * e5[1] + 0.04156 * e5[2], i3 = 0.01345 * e5[0] + -0.11839 * e5[1] + 1.01541 * e5[2];
        return a.clampf3([t4 > 0 ? Math.pow(t4, 1 / 2.19921875) : 0, r4 > 0 ? Math.pow(r4, 1 / 2.19921875) : 0, i3 > 0 ? Math.pow(i3, 1 / 2.19921875) : 0]);
      }, e4.rgb2xyz = function(e5) {
        var t4 = a.clampf3(e5, "RGB input"), r4 = Math.pow(t4[0], 2.19921875), i3 = Math.pow(t4[1], 2.19921875), n3 = Math.pow(t4[2], 2.19921875);
        return [0.57667 * r4 + 0.18555 * i3 + 0.18819 * n3, 0.29738 * r4 + 0.62735 * i3 + 0.07527 * n3, 0.02703 * r4 + 0.07069 * i3 + 0.9911 * n3];
      }, e4.lab2rgb = function(t4) {
        return e4.xyz2rgb(e4.lab2xyz(t4));
      }, e4.rgb2lab = function(t4) {
        return e4.xyz2lab(e4.rgb2xyz(t4));
      }, e4.cmyk2rgb = function(e5) {
        var t4 = a.clampf4(e5, "CMYK input"), r4 = 1 - t4[3];
        return [(1 - t4[0]) * r4, (1 - t4[1]) * r4, (1 - t4[2]) * r4];
      }, e4.rgb2cmyk = function(e5) {
        var t4 = a.clampf3(e5, "RGB input"), r4 = 1 - Math.max(t4[0], t4[1], t4[2]), i3 = 1 - r4, n3 = i3 === 0 ? 0 : 1 / i3;
        return [(i3 - t4[0]) * n3, (i3 - t4[1]) * n3, (i3 - t4[2]) * n3, r4];
      }, e4.hex2rgba = function(t4) {
        var r4 = [0, 0, 0, e4.DEFAULT_ALPHA];
        if (!e4.HEX_FORMAT_REGEX.test(t4))
          return o.log(o.LogLevel.Warning, "hexadecimal RGBA color string must conform to either '0x0000', '#0000', '0000', '0x00000000', '#00000000', or '00000000', given '" + t4 + "'"), r4;
        var i3 = t4.startsWith("0x") ? 2 : t4.startsWith("#") ? 1 : 0, n3 = Math.floor((t4.length - i3) / 3), a2 = n3 - 1;
        return r4[0] = parseInt(t4[i3 + 0 * n3] + t4[i3 + 0 * n3 + a2], 16) / 255, r4[1] = parseInt(t4[i3 + 1 * n3] + t4[i3 + 1 * n3 + a2], 16) / 255, r4[2] = parseInt(t4[i3 + 2 * n3] + t4[i3 + 2 * n3 + a2], 16) / 255, t4.length - i3 != 4 && t4.length - i3 != 8 || (r4[3] = parseInt(t4[i3 + 3 * n3] + t4[i3 + 3 * n3 + a2], 16) / 255), o.assert(!(isNaN(r4[0]) || isNaN(r4[1]) || isNaN(r4[2]) || isNaN(r4[3])), "expected well formated hexadecimal RGBA string, given '" + t4 + "'"), r4;
      }, e4.rgb2hex = function(t4) {
        var r4 = a.clampf3(t4, "RGB input");
        return "#" + e4.to2CharHexCode(r4[0]) + e4.to2CharHexCode(r4[1]) + e4.to2CharHexCode(r4[2]);
      }, e4.rgba2hex = function(t4) {
        var r4 = a.clampf4(t4, "RGBA input");
        return "#" + e4.to2CharHexCode(r4[0]) + e4.to2CharHexCode(r4[1]) + e4.to2CharHexCode(r4[2]) + e4.to2CharHexCode(r4[3]);
      }, e4.lerp = function(t4, r4, o2, a2) {
        if (a2 === void 0 && (a2 = e4.Space.LAB), o2 <= 0)
          return new e4(t4.rgba);
        if (o2 >= 1)
          return new e4(r4.rgba);
        var s2 = i2.vec4.create();
        switch (a2) {
          case e4.Space.CMYK:
            i2.vec4.lerp(s2, t4.cmyk, r4.cmyk, o2);
            var u2 = n2.mix(t4.a, r4.a, o2);
            return new e4().fromCMYK(s2[0], s2[1], s2[2], s2[3], u2);
          case e4.Space.LAB:
            return i2.vec4.lerp(s2, t4.laba, r4.laba, o2), new e4().fromLAB(s2[0], s2[1], s2[2], s2[3]);
          case e4.Space.HSL:
            return i2.vec4.lerp(s2, t4.hsla, r4.hsla, o2), new e4().fromHSL(s2[0], s2[1], s2[2], s2[3]);
          case e4.Space.RGB:
            return i2.vec4.lerp(s2, t4.rgba, r4.rgba, o2), new e4().fromRGB(s2[0], s2[1], s2[2], s2[3]);
        }
      }, e4.prototype.equals = function(e5) {
        return a.equals4(this._rgba, e5._rgba);
      }, e4.prototype.fromF32 = function(t4, r4, i3, n3) {
        n3 === void 0 && (n3 = e4.DEFAULT_ALPHA);
        var o2 = a.duplicate4(this._rgba);
        return this._rgba[0] = a.clampf(t4, "red value"), this._rgba[1] = a.clampf(r4, "green value"), this._rgba[2] = a.clampf(i3, "blue value"), this._rgba[3] = a.clampf(n3, "alpha value"), this._altered = !a.equals4(this._rgba, o2), this;
      }, e4.prototype.fromUI8 = function(t4, r4, i3, o2) {
        o2 === void 0 && (o2 = Math.floor(255 * e4.DEFAULT_ALPHA));
        var s2 = a.duplicate4(this._rgba);
        return this._rgba[0] = n2.clamp(t4, 0, 255) / 255, this._rgba[1] = n2.clamp(r4, 0, 255) / 255, this._rgba[2] = n2.clamp(i3, 0, 255) / 255, this._rgba[3] = n2.clamp(o2, 0, 255) / 255, this._altered = !a.equals4(this._rgba, s2), this;
      }, e4.prototype.fromRGB = function(t4, r4, i3, n3) {
        n3 === void 0 && (n3 = e4.DEFAULT_ALPHA);
        var o2 = a.duplicate4(this._rgba);
        return this._rgba = a.clampf4([t4, r4, i3, n3], "RGBA input"), this._altered = !a.equals4(this._rgba, o2), this;
      }, e4.prototype.fromHSL = function(t4, r4, i3, n3) {
        n3 === void 0 && (n3 = e4.DEFAULT_ALPHA);
        var o2 = a.duplicate4(this._rgba), s2 = e4.hsl2rgb([t4, r4, i3]), u2 = a.clampf(n3, "ALPHA input");
        return this._rgba = [s2[0], s2[1], s2[2], u2], this._altered = !a.equals4(this._rgba, o2), this;
      }, e4.prototype.fromLAB = function(t4, r4, i3, n3) {
        n3 === void 0 && (n3 = e4.DEFAULT_ALPHA);
        var o2 = a.duplicate4(this._rgba), s2 = e4.lab2rgb([t4, r4, i3]), u2 = a.clampf(n3, "ALPHA input");
        return this._rgba = [s2[0], s2[1], s2[2], u2], this._altered = !a.equals4(this._rgba, o2), this;
      }, e4.prototype.fromCMYK = function(t4, r4, i3, n3, o2) {
        o2 === void 0 && (o2 = e4.DEFAULT_ALPHA);
        var s2 = a.duplicate4(this._rgba), u2 = e4.cmyk2rgb([t4, r4, i3, n3]), c2 = a.clampf(o2, "ALPHA input");
        return this._rgba = [u2[0], u2[1], u2[2], c2], this._altered = !a.equals4(this._rgba, s2), this;
      }, e4.prototype.fromHex = function(t4) {
        var r4 = a.duplicate4(this._rgba);
        return this._rgba = e4.hex2rgba(t4), this._altered = !a.equals4(this._rgba, r4), this;
      }, e4.prototype.gray = function(t4) {
        switch (t4 === void 0 && (t4 = e4.GrayscaleAlgorithm.LinearLuminance), t4) {
          case e4.GrayscaleAlgorithm.Average:
            return (this._rgba[0] + this._rgba[1] + this._rgba[2]) / 3;
          case e4.GrayscaleAlgorithm.LeastSaturatedVariant:
            return 0.5 * (Math.max(this._rgba[0], this._rgba[1], this._rgba[2]) - Math.min(this._rgba[0], this._rgba[1], this._rgba[2]));
          case e4.GrayscaleAlgorithm.MinimumDecomposition:
            return Math.min(this._rgba[0], this._rgba[1], this._rgba[2]);
          case e4.GrayscaleAlgorithm.MaximumDecomposition:
            return Math.max(this._rgba[0], this._rgba[1], this._rgba[2]);
          case e4.GrayscaleAlgorithm.LinearLuminance:
            return 0.2126 * this._rgba[0] + 0.7152 * this._rgba[1] + 0.0722 * this._rgba[2];
        }
      }, e4.prototype.tuple = function(t4, r4) {
        switch (r4 === void 0 && (r4 = true), t4) {
          case e4.Space.RGB:
            return r4 ? this.rgba : this.rgb;
          case e4.Space.LAB:
            return r4 ? this.laba : this.lab;
          case e4.Space.CMYK:
            return r4 ? this.cmyka : this.cmyk;
          case e4.Space.HSL:
            return r4 ? this.hsla : this.hsl;
        }
      }, Object.defineProperty(e4.prototype, "rgb", { get: function() {
        return [this._rgba[0], this._rgba[1], this._rgba[2]];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "rgbUI8", { get: function() {
        var e5 = new Uint8Array(3);
        return e5[0] = Math.round(255 * this._rgba[0]), e5[1] = Math.round(255 * this._rgba[1]), e5[2] = Math.round(255 * this._rgba[2]), e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "rgbF32", { get: function() {
        var e5 = new Float32Array(3);
        return e5[0] = this._rgba[0], e5[1] = this._rgba[1], e5[2] = this._rgba[2], e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "rgba", { get: function() {
        return this._rgba;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "rgbaUI8", { get: function() {
        var e5 = new Uint8Array(4);
        return e5[0] = Math.round(255 * this._rgba[0]), e5[1] = Math.round(255 * this._rgba[1]), e5[2] = Math.round(255 * this._rgba[2]), e5[3] = Math.round(255 * this._rgba[3]), e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "rgbaF32", { get: function() {
        return new Float32Array(this._rgba);
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "r", { get: function() {
        return this._rgba[0];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "g", { get: function() {
        return this._rgba[1];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "b", { get: function() {
        return this._rgba[2];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "a", { get: function() {
        return this._rgba[3];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "hexRGB", { get: function() {
        return e4.rgb2hex(this.rgb);
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "hexRGBA", { get: function() {
        return e4.rgba2hex(this._rgba);
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "hsl", { get: function() {
        return e4.rgb2hsl(this.rgb);
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "hsla", { get: function() {
        var t4 = e4.rgb2hsl(this.rgb);
        return [t4[0], t4[1], t4[2], this._rgba[3]];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "lab", { get: function() {
        return e4.rgb2lab(this.rgb);
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "laba", { get: function() {
        var t4 = e4.rgb2lab(this.rgb);
        return [t4[0], t4[1], t4[2], this._rgba[3]];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "cmyk", { get: function() {
        return e4.rgb2cmyk(this.rgb);
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "cmyka", { get: function() {
        var t4 = e4.rgb2cmyk(this.rgb);
        return [t4[0], t4[1], t4[2], t4[3], this._rgba[3]];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "altered", { get: function() {
        return this._altered;
      }, set: function(e5) {
        this._altered = e5;
      }, enumerable: true, configurable: true }), e4.DEFAULT_ALPHA = 1, e4.HEX_FORMAT_REGEX = new RegExp(/^(#|0x)?(([0-9a-f]{3}){1,2}|([0-9a-f]{4}){1,2})$/i), e4;
    }();
    t3.Color = s, function(e4) {
      !function(e5) {
        e5.Average = "average", e5.LinearLuminance = "linear-luminance", e5.LeastSaturatedVariant = "least-saturated-variant", e5.MinimumDecomposition = "minimum-decomposition", e5.MaximumDecomposition = "maximum-decomposition";
      }(e4.GrayscaleAlgorithm || (e4.GrayscaleAlgorithm = {})), function(e5) {
        e5.RGB = "rgb", e5.HSL = "hsl", e5.LAB = "lab", e5.CMYK = "cmyk";
      }(e4.Space || (e4.Space = {}));
    }(s = t3.Color || (t3.Color = {})), t3.Color = s;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(0), n2 = function() {
      function e4() {
      }
      return e4.queryAndCacheAPI = function() {
        if (e4._exit === void 0) {
          for (var t4 = window.document, r4 = [t4.exitPointerLock, t4.mozExitPointerLock, t4.webkitExitPointerLock, void 0], n3 = 0; n3 < r4.length && r4[n3] === void 0; ++n3)
            ;
          switch (n3) {
            case 0:
              e4._exit = function() {
                return t4.exitPointerLock();
              }, e4._request = function(e5) {
                return e5.requestPointerLock();
              }, e4._element = function() {
                return t4.pointerLockElement;
              };
              break;
            case 1:
              e4._exit = function() {
                return t4.mozCancelPointerLock();
              }, e4._request = function(e5) {
                return e5.mozRequestPointerLock();
              }, e4._element = function() {
                return t4.mozPointerLockElement;
              };
              break;
            case 2:
              e4._exit = function() {
                return t4.webkitExitPointerLock();
              }, e4._request = function(e5) {
                return e5.webkitRequestPointerLock();
              }, e4._element = function() {
                return t4.webkitPointerLockElement;
              };
              break;
            default:
              i2.assert(false, "none of the following pointer lock apis was found: native, moz, or webkit");
          }
        }
      }, e4.active = function(t4) {
        return this._element !== void 0 && (t4 !== void 0 && e4._element() === t4 || t4 === void 0 && e4._element() !== void 0 && e4._element() !== null);
      }, e4.request = function(t4, r4) {
        t4 !== void 0 && (e4.queryAndCacheAPI(), e4.active() && e4._element() !== t4 && e4._exit(), e4.active() || e4._request(t4));
      }, e4.exit = function() {
        e4._exit && e4._exit();
      }, e4;
    }();
    t3.PointerLock = n2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(0), s = r3(20), u2 = r3(2), c2 = function(e4) {
      function t4() {
        var t5 = e4 !== null && e4.apply(this, arguments) || this;
        return t5._internalFormat = void 0, t5;
      }
      return n2(t4, e4), t4.prototype.create = function(e5, r4, i3) {
        a.assert(e5 > 0 && r4 > 0, "renderbuffer object requires valid width and height greater than zero");
        var n3 = this.context.gl;
        this._object = n3.createRenderbuffer(), this._width = e5, this._height = r4, this._internalFormat = i3, n3.bindRenderbuffer(n3.RENDERBUFFER, this._object), n3.renderbufferStorage(n3.RENDERBUFFER, i3, e5, r4), this._valid = n3.isRenderbuffer(this._object), n3.bindRenderbuffer(n3.RENDERBUFFER, t4.DEFAULT_RENDER_BUFFER);
        var o2 = e5 * r4 * s.byteSizeOfFormat(this.context, i3);
        return this.context.allocationRegister.reallocate(this._identifier, o2), this._object;
      }, t4.prototype.delete = function() {
        a.assert(this._object instanceof WebGLRenderbuffer, "expected WebGLRenderbuffer object"), this.context.gl.deleteRenderbuffer(this._object), this._object = void 0, this._valid = false, this._internalFormat = void 0, this._width = 0, this._height = 0;
      }, t4.prototype.bind = function() {
        this.context.gl.bindRenderbuffer(this.context.gl.RENDERBUFFER, this._object);
      }, t4.prototype.unbind = function() {
        this.context.gl.bindRenderbuffer(this.context.gl.RENDERBUFFER, t4.DEFAULT_RENDER_BUFFER);
      }, t4.prototype.resize = function(e5, t5, r4, i3) {
        if (r4 === void 0 && (r4 = false), i3 === void 0 && (i3 = false), e5 !== this._width || t5 !== this._height) {
          this._width = e5, this._height = t5;
          var n3 = this.context.gl;
          r4 && this.bind(), n3.renderbufferStorage(n3.RENDERBUFFER, this._internalFormat, e5, t5), i3 && this.unbind();
          var o2 = e5 * t5 * s.byteSizeOfFormat(this.context, this._internalFormat);
          this.context.allocationRegister.reallocate(this._identifier, o2);
        }
      }, Object.defineProperty(t4.prototype, "bytes", { get: function() {
        return this.assertInitialized(), this.context.allocationRegister.allocated(this._identifier);
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "internalFormat", { get: function() {
        return this.assertInitialized(), this._internalFormat;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "width", { get: function() {
        return this.assertInitialized(), this._width;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "height", { get: function() {
        return this.assertInitialized(), this._height;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "size", { get: function() {
        return [this.width, this.height];
      }, enumerable: true, configurable: true }), t4.DEFAULT_RENDER_BUFFER = void 0, o([u2.Initializable.assert_initialized()], t4.prototype, "bind", null), o([u2.Initializable.assert_initialized()], t4.prototype, "unbind", null), o([u2.Initializable.assert_initialized()], t4.prototype, "resize", null), t4;
    }(r3(8).AbstractObject);
    t3.Renderbuffer = c2;
  }, function(e3, t3) {
    e3.exports = "precision highp float;\r\nprecision highp int;\r\n\r\n/**\r\n  To be replaced via Shader.replace();\r\n */\r\n#define PROJECTION_TYPE\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define texture(sampler, coord) texture2D(sampler, coord)\r\n#else \r\n    #define varying in\r\n#endif\r\n\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define fragColor gl_FragColor\r\n#else\r\n    layout(location = 0) out vec4 fragColor;\r\n#endif\r\n\r\n\r\nuniform int u_mode;\r\nuniform bool u_skipLod;\r\n\r\n#if defined(CUBE_MAP)\r\n    uniform samplerCube u_cubemap;\r\n#elif defined(EQUI_MAP)\r\n    uniform sampler2D u_equirectmap;\r\n#elif defined(SPHERE_MAP)\r\n    uniform sampler2D u_spheremap;\r\n#elif defined(POLAR_MAP)\r\n    uniform sampler2D u_polarmap[2];\r\n#endif\r\n\r\nvarying vec2 v_uv;\r\nvarying vec4 v_ray;\r\n\r\n\r\nconst float PI = 3.141592653589793;\r\nconst float OneOver2PI = 0.1591549430918953357688837633725;\r\nconst float OneOverPI  = 0.3183098861837906715377675267450;\r\n\r\n\r\nvoid main(void)\r\n{\r\n    vec2 uv = v_uv;\r\n    vec3 ray = normalize(v_ray.xyz);\r\n\r\n    #if defined(CUBE_MAP)\r\n        #if __VERSION__ == 100\r\n            fragColor = u_skipLod ? textureCubeLod(u_cubemap, vec3(ray), 0.0) : textureCube(u_cubemap, vec3(ray));\r\n        #else\r\n            fragColor = u_skipLod ? textureLod(u_cubemap, vec3(ray), 0.0) : texture(u_cubemap, vec3(ray));\r\n        #endif\r\n    #endif\r\n\r\n    #if defined(EQUI_MAP)\r\n        float v = acos(-ray.y) * OneOverPI;\r\n        float m = atan(-ray.x, ray.z);\r\n        uv = vec2(m * OneOver2PI + 0.5, v);\r\n\r\n        fragColor = texture(u_equirectmap, uv);\r\n    #endif\r\n\r\n    #if defined(SPHERE_MAP)\r\n        ray = -ray.xzy;\r\n        ray.y *= -1.0;\r\n        ray.z += +1.0;\r\n        uv = 0.5 + 0.5 * ray.xy / length(ray);\r\n\r\n        fragColor = texture(u_spheremap, uv);\r\n    #endif\r\n\r\n    #if defined(POLAR_MAP)\r\n        ray.xz /= abs(ray.y) + 1.0;\r\n        ray.xz = ray.xz * 0.5 + 0.5;\r\n        ray.x *= -1.0;\r\n\r\n        fragColor = mix(texture(u_polarmap[1], ray.xz),\r\n                        texture(u_polarmap[0], vec2(1.0, -1.0) * ray.xz),\r\n                        step(0.0, ray.y));\r\n    #endif\r\n}\r\n";
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(123);
    t3.ForwardSceneRenderPass = i2.ForwardSceneRenderPass;
    var n2 = r3(68);
    t3.SceneNode = n2.SceneNode;
    var o = r3(39);
    t3.SceneNodeComponent = o.SceneNodeComponent;
    var a = r3(124);
    t3.TransformComponent = a.TransformComponent;
    var s = r3(125);
    t3.GeometryComponent = s.GeometryComponent;
    var u2 = r3(126);
    t3.Material = u2.Material;
    var c2 = r3(67);
    t3.SceneRenderPass = c2.SceneRenderPass;
  }, function(e3, t3, r3) {
    var i2 = this && this.__spreadArrays || function() {
      for (var e4 = 0, t4 = 0, r4 = arguments.length; t4 < r4; t4++)
        e4 += arguments[t4].length;
      var i3 = Array(e4), n3 = 0;
      for (t4 = 0; t4 < r4; t4++)
        for (var o2 = arguments[t4], a2 = 0, s2 = o2.length; a2 < s2; a2++, n3++)
          i3[n3] = o2[a2];
      return i3;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var n2 = r3(1), o = r3(0), a = r3(3), s = r3(19), u2 = function() {
      function e4() {
      }
      return e4.writeVertex = function(e5, t4, r4, i3, o2) {
        if (i3 !== void 0 && r4.depictable() !== false) {
          var a2 = e5.glyphTexturePadding, s2 = i3.origin(o2);
          n2.vec3.set(s2, t4[0], t4[1], 0), s2[0] += r4.bearing[0] - a2[3], s2[1] += r4.bearing[1] - r4.extent[1], n2.vec3.set(i3.tangent(o2), r4.extent[0], 0, 0), n2.vec3.set(i3.up(o2), 0, r4.extent[1], 0);
          var u3 = i3.uvLowerLeft(o2);
          n2.vec2.copy(u3, r4.subTextureOrigin);
          var c2 = i3.uvUpperRight(o2);
          n2.vec2.add(c2, r4.subTextureOrigin, r4.subTextureExtent);
        }
      }, e4.lineAnchorOffset = function(e5) {
        var t4 = 0, r4 = e5.fontFace.glyphTexturePadding, i3 = e5.fontFace;
        switch (e5.lineAnchor) {
          case s.Label.LineAnchor.Baseline:
          default:
            t4 = -r4[0];
            break;
          case s.Label.LineAnchor.Ascent:
            t4 = i3.ascent - r4[0];
            break;
          case s.Label.LineAnchor.Descent:
            t4 = i3.descent * (1 + r4[0] / i3.ascent);
            break;
          case s.Label.LineAnchor.Center:
            t4 = i3.ascent - r4[0] - 0.5 * i3.size;
            break;
          case s.Label.LineAnchor.Top:
            t4 = i3.ascent - r4[0] + 0.5 * i3.lineGap;
            break;
          case s.Label.LineAnchor.Bottom:
            t4 = i3.ascent - r4[0] + 0.5 * i3.lineGap - i3.lineHeight;
        }
        return t4;
      }, e4.advances = function(e5, t4) {
        o.assert(e5.fontFace !== void 0, "expected a font face for label in order to resolve advances"), t4 === void 0 && (t4 = e5.text.text);
        for (var r4 = new Float32Array(t4.length), i3 = 0; i3 < t4.length; ++i3) {
          var n3 = t4.charCodeAt(i3);
          r4[i3] = e5.fontFace.glyph(n3).advance;
        }
        return r4;
      }, e4.kernings = function(e5, t4) {
        if (o.assert(e5.fontFace !== void 0, "expected a font face for label in order to resolve kernings"), t4 === void 0) {
          for (var r4 = new Float32Array(e5.length), i3 = 0; i3 < e5.length; ++i3) {
            var n3 = e5.kerningAfter(i3);
            r4[i3] = isNaN(n3) ? 0 : n3;
          }
          return r4;
        }
        var a2, s2 = new Float32Array(t4.length);
        for (i3 = 0; i3 < t4.length; ++i3)
          n3 = (a2 = i3) < 0 || a2 > t4.length - 1 ? NaN : e5.fontFace.kerning(t4.charCodeAt(a2), t4.charCodeAt(a2 + 1)), s2[i3] = isNaN(n3) ? 0 : n3;
        return s2;
      }, e4.fragments = function(t4) {
        for (var r4, i3 = new Array(), n3 = 0, o2 = 0; o2 < t4.length; ++o2)
          if (r4 = e4.DELIMITERS.indexOf(t4.charAt(o2)) > -1) {
            n3 < o2 && i3.push([n3, o2, e4.FragmentType.Word]);
            var a2 = t4.lineFeedAt(o2) ? e4.FragmentType.LineFeed : e4.FragmentType.Delimiter;
            i3.push([o2, o2 + 1, a2]), n3 = o2 + 1;
          }
        return r4 || i3.push([n3, t4.length, e4.FragmentType.Word]), i3;
      }, e4.fragmentWidths = function(e5, t4, r4) {
        for (var i3 = new Float32Array(e5.length), n3 = function(n4) {
          var o3 = e5[n4];
          i3[n4] = t4.subarray(o3[0], o3[1]).reduce(function(e6, t5, i4) {
            return e6 + t5 + (i4 < o3[1] ? r4[i4 + o3[0]] : 0);
          }, 0);
        }, o2 = 0; o2 < e5.length; ++o2)
          n3(o2);
        return i3;
      }, e4.elideThresholds = function(e5, t4) {
        switch (e5.elide) {
          case s.Label.Elide.Right:
            return [e5.lineWidth - t4, 0];
          case s.Label.Elide.Middle:
            var r4 = e5.lineWidth / 2 - t4 / 2;
            return [r4, r4];
          case s.Label.Elide.Left:
            return [0, e5.lineWidth - t4];
          default:
            return [0, 0];
        }
      }, e4.elideFragments = function(t4, r4, i3, n3, o2, a2) {
        for (var s2 = new Array(), u3 = new Array(), c2 = 0, l2 = 0, f2 = a2 ? r4.length - 1 : 0; a2 ? f2 > -1 : f2 < r4.length; a2 ? --f2 : ++f2) {
          var h2 = r4[f2];
          if (h2[2] !== e4.FragmentType.LineFeed) {
            if (!(c2 + i3[f2] < t4)) {
              if (h2[2] === e4.FragmentType.Delimiter || c2 + n3[a2 ? h2[1] - 1 : h2[0]] > t4)
                break;
              for (var d2 = a2 ? h2[1] - 1 : h2[0]; a2 ? d2 >= h2[0] : d2 < h2[1]; a2 ? --d2 : ++d2) {
                if (!(c2 + l2 + n3[d2] + o2[d2] < t4)) {
                  s2.push([a2 ? d2 + 1 : h2[0], a2 ? h2[1] : d2, h2[2]]), u3.push(l2);
                  break;
                }
                l2 += n3[d2] + o2[d2];
              }
              break;
            }
            c2 += i3[f2], s2.push(h2), u3.push(i3[f2]);
          }
        }
        return [s2, u3, c2 + l2];
      }, e4.transformVertices = function(e5, t4, r4, i3) {
        if (t4 !== void 0 && !n2.mat4.equals(e5, n2.mat4.create()))
          for (var o2 = r4; o2 < i3; ++o2) {
            var s2 = t4.origin(o2), u3 = a.v3();
            n2.vec3.transformMat4(u3, s2, e5);
            var c2 = a.v3();
            n2.vec3.transformMat4(c2, n2.vec3.add(c2, s2, t4.tangent(o2)), e5);
            var l2 = a.v3();
            n2.vec3.transformMat4(l2, n2.vec3.add(l2, s2, t4.up(o2)), e5), n2.vec3.copy(t4.origin(o2), u3), n2.vec3.sub(t4.tangent(o2), c2, u3), n2.vec3.sub(t4.up(o2), l2, u3);
          }
      }, e4.updateRectangleMinMax = function(e5, t4) {
        o.assert(e5.length === 6 && t4.length === 6, "expected the rectangles to have 6 values!");
        for (var r4 = 0; r4 < 3; r4++)
          e5[r4] = Math.min(e5[r4], t4[r4]);
        for (; r4 < 6; r4++)
          e5[r4] = Math.max(e5[r4], t4[r4]);
      }, e4.minMax = function(e5, t4, r4) {
        var o2 = Math.min.apply(Math, i2([e5], r4)), a2 = Math.max.apply(Math, i2([t4], r4));
        return n2.vec2.fromValues(o2, a2);
      }, e4.getMinMaxVertices = function(t4, r4, i3) {
        for (var n3 = Number.POSITIVE_INFINITY, o2 = Number.NEGATIVE_INFINITY, a2 = Number.POSITIVE_INFINITY, s2 = Number.NEGATIVE_INFINITY, u3 = Number.POSITIVE_INFINITY, c2 = Number.NEGATIVE_INFINITY, l2 = r4; l2 < i3; ++l2) {
          var f2 = e4.minMax(n3, o2, [t4.origin(l2)[0], t4.origin(l2)[0] + t4.up(l2)[0], t4.origin(l2)[0] + t4.tangent(l2)[0]]);
          n3 = f2[0], o2 = f2[1];
          var h2 = e4.minMax(a2, s2, [t4.origin(l2)[1], t4.origin(l2)[1] + t4.up(l2)[1], t4.origin(l2)[1] + t4.tangent(l2)[1]]);
          a2 = h2[0], s2 = h2[1];
          var d2 = e4.minMax(u3, c2, [t4.origin(l2)[2], t4.origin(l2)[2] + t4.up(l2)[2], t4.origin(l2)[2] + t4.tangent(l2)[2]]);
          u3 = d2[0], c2 = d2[1];
        }
        return [n3, a2, u3, o2, s2, c2];
      }, e4.transformAlignment = function(e5, t4, r4, i3, n3) {
        if (r4 !== void 0 && t4 !== s.Label.Alignment.Left) {
          var o2 = -e5;
          t4 === s.Label.Alignment.Center && (o2 *= 0.5);
          for (var a2 = i3; a2 < n3; ++a2)
            r4.origin(a2)[0] += o2;
        }
      }, e4.transform = function(t4, r4, i3) {
        for (var o2 = [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY], a2 = 0, s2 = i3; a2 < s2.length; a2++) {
          var u3 = s2[a2];
          e4.transformAlignment(u3[2], t4.alignment, r4, u3[0], u3[1]), e4.updateRectangleMinMax(o2, e4.getMinMaxVertices(r4, u3[0], u3[1])), e4.transformVertices(t4.staticTransform, r4, u3[0], u3[1]);
        }
        var c2 = o2[3] - o2[0], l2 = o2[4] - o2[1], f2 = n2.vec4.transformMat4(n2.vec4.create(), n2.vec4.fromValues(0, 0, 0, 1), t4.staticTransform), h2 = n2.vec4.transformMat4(n2.vec4.create(), n2.vec4.fromValues(c2, 0, 0, 1), t4.staticTransform), d2 = n2.vec4.transformMat4(n2.vec4.create(), n2.vec4.fromValues(0, l2, 0, 1), t4.staticTransform), p2 = n2.vec2.fromValues(n2.vec4.distance(h2, f2), n2.vec4.distance(d2, f2));
        t4.extent = [p2[0], p2[1]];
      }, e4.typeset = function(t4, r4) {
        if (t4.length === 0)
          return 0;
        o.assert(t4.fontFace !== void 0, "expected a font face for label before typesetting");
        var i3 = t4.fontFace, a2 = function(e5) {
          return e5 < t4.length ? i3.glyph(t4.charCodeAt(e5)) : i3.glyph(t4.ellipsis.charCodeAt(e5 - t4.length));
        }, u3 = e4.advances(t4), c2 = e4.kernings(t4), l2 = e4.fragments(t4), f2 = e4.fragmentWidths(l2, u3, c2), h2 = n2.vec2.fromValues(0, -e4.lineAnchorOffset(t4)), d2 = new Array(), p2 = 0, _2 = t4.elide !== s.Label.Elide.None, g2 = function(n3, o2, s2, l3, f3, g3) {
          l3 === void 0 && (l3 = u3), f3 === void 0 && (f3 = c2), g3 === void 0 && (g3 = 0);
          for (var m3 = p2, v3 = 0; v3 < n3.length; ++v3) {
            var b3 = n3[v3];
            if (!(b3[0] >= b3[1])) {
              var y3 = !_2 && b3[2] === e4.FragmentType.LineFeed, E3 = false;
              if (!_2 && !y3 && t4.wrap) {
                var x3 = b3[2] !== e4.FragmentType.Delimiter || a2(b3[0]).depictable(), T3 = b3[2] === e4.FragmentType.Word && v3 < n3.length - 1 && n3[v3 + 1][2] === e4.FragmentType.Delimiter && a2(n3[v3 + 1][0]).depictable();
                E3 = h2[0] + (x3 ? o2[v3] : 0) + (T3 ? o2[v3 + 1] : 0) > t4.lineWidth;
              }
              if (!y3 && !E3 || (d2.push([m3, p2, h2[0]]), m3 = p2, h2[0] = 0, h2[1] -= i3.lineHeight, !y3))
                for (var A3 = b3[0]; A3 < b3[1]; ++A3)
                  a2(A3).depictable() && (e4.writeVertex(i3, h2, a2(A3), r4, p2), ++p2), h2[0] += l3[A3 - g3] + f3[A3 - g3];
            }
          }
          m3 < p2 && d2.push([m3, p2, h2[0]]);
        }, m2 = f2.reduce(function(e5, t5) {
          return e5 + t5;
        }, 0);
        if (_2 && m2 > t4.lineWidth) {
          var v2 = [[t4.length, t4.length + t4.ellipsis.length, e4.FragmentType.Word]], b2 = e4.advances(t4, t4.ellipsis), y2 = e4.kernings(t4, t4.ellipsis), E2 = e4.fragmentWidths([[0, t4.ellipsis.length, e4.FragmentType.Word]], b2, y2), x2 = E2[0];
          if (t4.lineWidth < x2)
            return 0;
          var T2 = e4.elideThresholds(t4, x2), A2 = e4.elideFragments(T2[0], l2, f2, u3, c2, false), O2 = A2[0], P2 = A2[1], L2 = A2[2];
          t4.elide === s.Label.Elide.Middle && (T2[1] += T2[0] - L2);
          var w2 = e4.elideFragments(T2[1], l2, f2, u3, c2, true), S2 = w2[0], R2 = w2[1];
          g2(O2, new Float32Array(P2)), g2(v2, E2, NaN, b2, y2, t4.length), g2(S2.reverse(), new Float32Array(R2.reverse())), o.assert(d2.length < 4, "expected at most 3-line-yield from advance, given " + d2), d2[0][1] = d2[d2.length - 1][1], d2[0][2] = h2[0], d2.length = 1;
        } else
          g2(l2, f2, t4.lineWidth);
        return e4.transform(t4, r4, d2), r4.shrink(p2), p2;
      }, e4.DELIMITERS = "\n ,.-/()[]<>", e4;
    }();
    t3.Typesetter = u2, function(e4) {
      !function(e5) {
        e5[e5.Word = 0] = "Word", e5[e5.Delimiter = 1] = "Delimiter", e5[e5.LineFeed = 2] = "LineFeed";
      }(e4.FragmentType || (e4.FragmentType = {}));
    }(u2 = t3.Typesetter || (t3.Typesetter = {})), t3.Typesetter = u2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(0), n2 = r3(20), o = r3(83), a = r3(41), s = r3(42), u2 = r3(28), c2 = r3(85), l2 = function() {
      function e4(t4, r4) {
        this._attributes = void 0, this._extensions = new Array(), this._allocationRegister = new o.AllocationRegister(), this._context = t4, this._mask = r4;
        var n3 = t4.toString(), a2 = /WebGLRenderingContext/.test(n3) || /CaptureContext/.test(n3), s2 = /WebGL2RenderingContext/.test(n3);
        if (this._backend = a2 ? e4.BackendType.WebGL1 : s2 ? e4.BackendType.WebGL2 : void 0, i2.assert(this._backend !== void 0 && this._backend.valueOf() !== e4.BackendType.Invalid.valueOf(), "context is neither webgl nor webgl2, given " + n3), this.queryAttributes(), this.queryExtensionSupport(), this._mask && this._mask.functionsUndefine)
          for (var u3 in this._mask.functionsUndefine)
            this._context[u3] = void 0;
        this._gl2 = new c2.GL2Facade(this);
      }
      return e4.createMasqueradeFromGETorDataAttribute = function(e5) {
        return a.ContextMasquerade.fromGET() || (e5.msqrdH ? a.ContextMasquerade.fromHash(e5.msqrdH) : e5.msqrdP ? a.ContextMasquerade.fromPreset(e5.msqrdP) : void 0);
      }, e4.request = function(t4, r4) {
        r4 === void 0 && (r4 = e4.DEFAULT_ATTRIBUTES);
        var n3, o2 = t4.dataset, a2 = e4.createMasqueradeFromGETorDataAttribute(o2), s2 = a2 ? a2.backend : o2.backend ? o2.backend.toLowerCase() : "auto";
        switch (s2 in e4.BackendRequestType || (i2.log(i2.LogLevel.Warning, "unknown backend '" + o2.backend + "' changed to '" + e4.BackendRequestType.auto + "'"), s2 = "auto"), s2) {
          case e4.BackendRequestType.webgl:
            break;
          case e4.BackendRequestType.experimental:
          case e4.BackendRequestType.webgl1:
          case e4.BackendRequestType.experimental1:
            s2 = e4.BackendRequestType.webgl;
            break;
          case e4.BackendRequestType.webgl2:
          case e4.BackendRequestType.experimental2:
            s2 = e4.BackendRequestType.webgl2;
            break;
          default:
            s2 = e4.BackendRequestType.auto;
        }
        return s2 !== e4.BackendRequestType.webgl && (n3 = this.requestWebGL2(t4, r4)), n3 || (n3 = this.requestWebGL1(t4, r4), i2.logIf(n3 !== void 0 && s2 === e4.BackendRequestType.webgl2, i2.LogLevel.Info, "backend changed to '" + e4.BackendRequestType.webgl + "', given '" + s2 + "'")), i2.assert(!!n3, "creating a context failed"), new e4(n3, a2);
      }, e4.requestWebGL1 = function(t4, r4) {
        r4 === void 0 && (r4 = e4.DEFAULT_ATTRIBUTES);
        var i3 = t4.getContext(e4.BackendRequestType.webgl, r4);
        return i3 || ((i3 = t4.getContext(e4.BackendRequestType.experimental, r4)) === null ? void 0 : i3);
      }, e4.requestWebGL2 = function(t4, r4) {
        r4 === void 0 && (r4 = e4.DEFAULT_ATTRIBUTES);
        var i3 = t4.getContext(e4.BackendRequestType.webgl2, r4);
        return i3 || ((i3 = t4.getContext(e4.BackendRequestType.experimental2, r4)) === null ? void 0 : i3);
      }, e4.prototype.queryAttributes = function() {
        var e5 = this._context.getContextAttributes();
        e5 !== null ? this._attributes = e5 : i2.log(i2.LogLevel.Error, "querying context attributes failed (probably blocked)");
      }, Object.defineProperty(e4.prototype, "alpha", { get: function() {
        return !!this._attributes && this._attributes.alpha;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "antialias", { get: function() {
        return !!this._attributes && this._attributes.antialias;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "depth", { get: function() {
        return !!this._attributes && this._attributes.depth;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "failIfMajorPerformanceCaveat", { get: function() {
        return !!this._attributes && this._attributes.failIfMajorPerformanceCaveat;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "premultipliedAlpha", { get: function() {
        return !!this._attributes && this._attributes.premultipliedAlpha;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "preserveDrawingBuffer", { get: function() {
        return !!this._attributes && this._attributes.preserveDrawingBuffer;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "stencil", { get: function() {
        return !!this._attributes && this._attributes.stencil;
      }, enumerable: true, configurable: true }), e4.prototype.supports = function(t4) {
        if (this._mask && this._mask.extensionsConceal.indexOf(t4) > -1)
          return false;
        switch (this._backend) {
          case e4.BackendType.WebGL1:
            i2.assert(s.WEBGL1_EXTENSIONS.indexOf(t4) > -1, "extension " + t4 + " not available to WebGL1");
            break;
          case e4.BackendType.WebGL2:
            i2.assert(s.WEBGL2_DEFAULT_EXTENSIONS.indexOf(t4) === -1, "extension " + t4 + " supported by default in WebGL2"), i2.assert(s.WEBGL2_EXTENSIONS.indexOf(t4) > -1, "extension " + t4 + " not available to WebGL2");
        }
        return this._extensions.indexOf(t4) > -1;
      }, e4.prototype.enable = function(e5) {
        for (var t4 = 0, r4 = e5; t4 < r4.length; t4++) {
          var i3 = r4[t4];
          this.isWebGL1 && s.WEBGL1_EXTENSIONS.indexOf(i3) === -1 || this.isWebGL2 && s.WEBGL2_EXTENSIONS.indexOf(i3) === -1 || this.supports(i3) !== false && this.extension(void 0, i3);
        }
      }, e4.prototype.queryExtensionSupport = function() {
        var t4 = this._context.getSupportedExtensions();
        if (t4 !== null) {
          for (var r4 = 0, n3 = t4; r4 < n3.length; r4++) {
            var o2 = n3[r4];
            this._mask && this._mask.extensionsConceal.indexOf(o2) > -1 || this._extensions.push(o2);
          }
          this._backend === e4.BackendType.WebGL1 && (this.ANGLE_instanced_arrays_supported = this.supports("ANGLE_instanced_arrays"), this.EXT_blend_minmax_supported = this.supports("EXT_blend_minmax"), this.EXT_color_buffer_half_float_supported = this.supports("EXT_color_buffer_half_float"), this.EXT_disjoint_timer_query_supported = this.supports("EXT_disjoint_timer_query"), this.EXT_frag_depth_supported = this.supports("EXT_frag_depth"), this.EXT_sRGB_supported = this.supports("EXT_sRGB"), this.EXT_shader_texture_lod_supported = this.supports("EXT_shader_texture_lod"), this.OES_element_index_uint_supported = this.supports("OES_element_index_uint"), this.OES_standard_derivatives_supported = this.supports("OES_standard_derivatives"), this.OES_texture_float_supported = this.supports("OES_texture_float"), this.OES_texture_half_float_supported = this.supports("OES_texture_half_float"), this.OES_vertex_array_object_supported = this.supports("OES_vertex_array_object"), this.WEBGL_color_buffer_float_supported = this.supports("WEBGL_color_buffer_float"), this.WEBGL_depth_texture_supported = this.supports("WEBGL_depth_texture"), this.WEBGL_draw_buffers_supported = this.supports("WEBGL_draw_buffers")), this._backend === e4.BackendType.WebGL2 && (this.EXT_color_buffer_float_supported = this.supports("EXT_color_buffer_float"), this.EXT_disjoint_timer_query_webgl2_supported = this.supports("EXT_disjoint_timer_query_webgl2")), this.EXT_texture_filter_anisotropic_supported = this.supports("EXT_texture_filter_anisotropic"), this.OES_texture_float_linear_supported = this.supports("OES_texture_float_linear"), this.OES_texture_half_float_linear_supported = this.supports("OES_texture_half_float_linear"), this.WEBGL_compressed_texture_astc_supported = this.supports("WEBGL_compressed_texture_astc"), this.WEBGL_compressed_texture_atc_supported = this.supports("WEBGL_compressed_texture_atc"), this.WEBGL_compressed_texture_etc_supported = this.supports("WEBGL_compressed_texture_etc"), this.WEBGL_compressed_texture_etc1_supported = this.supports("WEBGL_compressed_texture_etc1"), this.WEBGL_compressed_texture_pvrtc_supported = this.supports("WEBGL_compressed_texture_pvrtc"), this.WEBGL_compressed_texture_s3tc_supported = this.supports("WEBGL_compressed_texture_s3tc"), this.WEBGL_compressed_texture_s3tc_srgb_supported = this.supports("WEBGL_compressed_texture_s3tc_srgb"), this.WEBGL_debug_renderer_info_supported = this.supports("WEBGL_debug_renderer_info"), this.WEBGL_debug_shaders_supported = this.supports("WEBGL_debug_shaders"), this.WEBGL_lose_context_supported = this.supports("WEBGL_lose_context");
        } else
          i2.log(i2.LogLevel.Error, "querying supported extensions failed (probably blocked)");
      }, e4.prototype.extension = function(e5, t4) {
        return e5 === void 0 && (i2.assert(this.supports(t4), "extension " + t4 + " expected to be supported"), e5 = this._context.getExtension(t4)), e5;
      }, Object.defineProperty(e4.prototype, "allocationRegister", { get: function() {
        return this._allocationRegister;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "backend", { get: function() {
        return this._backend;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "backendString", { get: function() {
        switch (this._backend) {
          case e4.BackendType.WebGL1:
            return "WebGL";
          case e4.BackendType.WebGL2:
            return "WebGL2";
          default:
            return;
        }
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "extensions", { get: function() {
        return this._extensions;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "mask", { get: function() {
        return this._mask;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "gl", { get: function() {
        return this._context;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "gl2facade", { get: function() {
        return this._gl2;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "isWebGL1", { get: function() {
        return this._backend === e4.BackendType.WebGL1;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "isWebGL2", { get: function() {
        return this._backend === e4.BackendType.WebGL2;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsInstancedArrays", { get: function() {
        return this.ANGLE_instanced_arrays_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "instancedArrays", { get: function() {
        return this.extension(this.ANGLE_instanced_arrays, "ANGLE_instanced_arrays");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsBlendMinmax", { get: function() {
        return this.EXT_blend_minmax_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "blendMinmax", { get: function() {
        return this.extension(this.EXT_blend_minmax, "EXT_blend_minmax");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsColorBufferHalfFloat", { get: function() {
        return this.EXT_color_buffer_half_float_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "colorBufferHalfFloat", { get: function() {
        return this.extension(this.EXT_color_buffer_half_float, "EXT_color_buffer_half_float");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsDisjointTimerQuery", { get: function() {
        return this.EXT_disjoint_timer_query_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "disjointTimerQuery", { get: function() {
        return this.extension(this.EXT_disjoint_timer_query, "EXT_disjoint_timer_query");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsDisjointTimerQueryWebGL2", { get: function() {
        return this.EXT_disjoint_timer_query_webgl2_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "disjointTimerQueryWebGL2", { get: function() {
        return this.extension(this.EXT_disjoint_timer_query_webgl2, "EXT_disjoint_timer_query_webgl2");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsFragDepth", { get: function() {
        return this.EXT_frag_depth_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "fragDepth", { get: function() {
        return this.extension(this.EXT_frag_depth, "EXT_frag_depth");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsSRGB", { get: function() {
        return this.EXT_sRGB_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "sRGB", { get: function() {
        return this.extension(this.EXT_sRGB, "EXT_sRGB");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsShaderTextureLOD", { get: function() {
        return this.EXT_shader_texture_lod_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "shaderTextureLOD", { get: function() {
        return this.extension(this.EXT_shader_texture_lod, "EXT_shader_texture_lod");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsTextureFilterAnisotropic", { get: function() {
        return this.EXT_texture_filter_anisotropic_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "textureFilterAnisotropic", { get: function() {
        return this.extension(this.EXT_texture_filter_anisotropic, "EXT_texture_filter_anisotropic");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsElementIndexUint", { get: function() {
        return this.OES_element_index_uint_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "elementIndexUint", { get: function() {
        return this.extension(this.OES_element_index_uint, "OES_element_index_uint");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsStandardDerivatives", { get: function() {
        return this.OES_standard_derivatives_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "standardDerivatives", { get: function() {
        return this.extension(this.OES_standard_derivatives, "OES_standard_derivatives");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsTextureFloat", { get: function() {
        return this.OES_texture_float_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "textureFloat", { get: function() {
        return this.extension(this.OES_texture_float, "OES_texture_float");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsTextureFloatLinear", { get: function() {
        return this.OES_texture_float_linear_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "textureFloatLinear", { get: function() {
        return this.extension(this.OES_texture_float_linear, "OES_texture_float_linear");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsTextureHalfFloat", { get: function() {
        return this.OES_texture_half_float_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "textureHalfFloat", { get: function() {
        return this.extension(this.OES_texture_half_float, "OES_texture_half_float");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsTextureHalfFloatLinear", { get: function() {
        return this.OES_texture_half_float_linear_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "textureHalfFloatLinear", { get: function() {
        return this.extension(this.OES_texture_half_float_linear, "OES_texture_half_float_linear");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsVertexArrayObject", { get: function() {
        return this.OES_vertex_array_object_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "vertexArrayObject", { get: function() {
        return this.extension(this.OES_vertex_array_object, "OES_vertex_array_object");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsColorBufferFloat", { get: function() {
        switch (this._backend) {
          case e4.BackendType.WebGL1:
            return this.WEBGL_color_buffer_float_supported;
          case e4.BackendType.WebGL2:
            return this.EXT_color_buffer_float_supported;
          default:
            return;
        }
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "colorBufferFloat", { get: function() {
        switch (this._backend) {
          case e4.BackendType.WebGL1:
            return this.extension(this.WEBGL_color_buffer_float, "WEBGL_color_buffer_float");
          case e4.BackendType.WebGL2:
            return this.extension(this.EXT_color_buffer_float, "EXT_color_buffer_float");
          default:
            return;
        }
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsCompressedTextureASTC", { get: function() {
        return this.WEBGL_compressed_texture_astc_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "compressedTextureASTC", { get: function() {
        return this.extension(this.WEBGL_compressed_texture_astc, "WEBGL_compressed_texture_astc");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsCompressedTextureATC", { get: function() {
        return this.WEBGL_compressed_texture_atc_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "compressedTextureATC", { get: function() {
        return this.extension(this.WEBGL_compressed_texture_atc, "WEBGL_compressed_texture_atc");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsCompressedTextureETC", { get: function() {
        return this.WEBGL_compressed_texture_etc_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "compressedTextureETC", { get: function() {
        return this.extension(this.WEBGL_compressed_texture_etc, "WEBGL_compressed_texture_etc");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsCompressedTextureETC1", { get: function() {
        return this.WEBGL_compressed_texture_etc1_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "compressedTextureETC1", { get: function() {
        return this.extension(this.WEBGL_compressed_texture_etc1, "WEBGL_compressed_texture_etc1");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsCompressedTexturePVRTC", { get: function() {
        return this.WEBGL_compressed_texture_pvrtc_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "compressedTexturePVRTC", { get: function() {
        return this.extension(this.WEBGL_compressed_texture_pvrtc, "WEBGL_compressed_texture_pvrtc");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsCompressedTextureS3TC", { get: function() {
        return this.WEBGL_compressed_texture_s3tc_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "compressedTextureS3TC", { get: function() {
        return this.extension(this.WEBGL_compressed_texture_s3tc, "WEBGL_compressed_texture_s3tc");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsCompressedTextureS3TCSRGB", { get: function() {
        return this.WEBGL_compressed_texture_s3tc_srgb_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "compressedTextureS3TCSRGB", { get: function() {
        return this.extension(this.WEBGL_compressed_texture_s3tc_srgb, "WEBGL_compressed_texture_s3tc_srgb");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsDebugRendererInfo", { get: function() {
        return this.WEBGL_debug_renderer_info_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "debugRendererInfo", { get: function() {
        return this.extension(this.WEBGL_debug_renderer_info, "WEBGL_debug_renderer_info");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsDebugShaders", { get: function() {
        return this.WEBGL_debug_shaders_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "debugShaders", { get: function() {
        return this.extension(this.WEBGL_debug_shaders, "WEBGL_debug_shaders");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsDepthTexture", { get: function() {
        return this.WEBGL_depth_texture_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "depthTexture", { get: function() {
        return this.extension(this.WEBGL_depth_texture, "WEBGL_depth_texture");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsDrawBuffers", { get: function() {
        return this.WEBGL_draw_buffers_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "drawBuffers", { get: function() {
        return this.extension(this.WEBGL_draw_buffers, "WEBGL_draw_buffers");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsLoseContext", { get: function() {
        return this.WEBGL_lose_context_supported;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "loseContext", { get: function() {
        return this.extension(this.WEBGL_lose_context, "WEBGL_lose_context");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsBlitFramebuffer", { get: function() {
        return this._context.blitFramebuffer !== void 0;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsReadBuffer", { get: function() {
        return this._context.readBuffer !== void 0;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "supportsTexImage3D", { get: function() {
        return this._context.texImage3D !== void 0;
      }, enumerable: true, configurable: true }), e4.prototype.param = function(e5) {
        return i2.assert(!!this._context, "expected context to be valid"), this._context.getParameter(e5);
      }, e4.prototype.hash = function() {
        return u2.ExtensionsHash.encode(this._backend, this._extensions);
      }, e4.prototype.about = function() {
        if (this._backend === e4.BackendType.Invalid)
          return new Array();
        i2.assert(!!this._context, "expected context to be valid");
        var t4 = this._context, r4 = new Array();
        r4.push(["BACKEND (GLOPERATE)", this.backend]), r4.push(["CONTEXT_HASH (GLOPERATE)", this.hash()]), r4.push(["RENDERER", this.param(t4.RENDERER)]), r4.push(["VENDOR", this.param(t4.VENDOR)]), r4.push(["VERSION", this.param(t4.VERSION)]), r4.push(["SHADING_LANGUAGE_VERSION", this.param(t4.SHADING_LANGUAGE_VERSION)]), r4.push(["UNMASKED_VENDOR_WEBGL", this.supportsDebugRendererInfo ? this.param(this.debugRendererInfo.UNMASKED_VENDOR_WEBGL) : "na"]), r4.push(["UNMASKED_RENDERER_WEBGL", this.supportsDebugRendererInfo ? this.param(this.debugRendererInfo.UNMASKED_RENDERER_WEBGL) : "na"]), r4.push(["ALPHA (ATTRIBUTE)", String(this.alpha)]), r4.push(["ANTIALIAS (ATTRIBUTE)", String(this.antialias)]), r4.push(["DEPTH (ATTRIBUTE)", String(this.depth)]), r4.push(["FAIL_IF_MAJOR_PERFORMANCE_CAVEAT (ATTRIBUTE)", String(this.failIfMajorPerformanceCaveat)]), r4.push(["PREMULTIPLIED_ALPHA (ATTRIBUTE)", String(this.premultipliedAlpha)]), r4.push(["PRESERVE_DRAWING_BUFFER (ATTRIBUTE)", String(this.preserveDrawingBuffer)]), r4.push(["STENCIL (ATTRIBUTE)", String(this.stencil)]), r4.push(["DEVICE_PIXEL_RATIO (WINDOW)", window.devicePixelRatio]), r4.push(["APP_CODE_NAME (NAVIGATOR)", window.navigator.appCodeName]), r4.push(["APP_NAME (NAVIGATOR)", window.navigator.appName]), r4.push(["APP_VERSION (NAVIGATOR)", window.navigator.appVersion]), r4.push(["PLATFORM (NAVIGATOR)", window.navigator.platform]), r4.push(["HARDWARE_CONCURRENCY (NAVIGATOR)", window.navigator.appCodeName]), r4.push(["VENDOR (NAVIGATOR)", window.navigator.vendor]), r4.push(["VENDOR_SUB (NAVIGATOR)", window.navigator.vendorSub]), r4.push(["MAX_COMBINED_TEXTURE_IMAGE_UNITS", this.param(t4.MAX_COMBINED_TEXTURE_IMAGE_UNITS)]), r4.push(["MAX_CUBE_MAP_TEXTURE_SIZE", this.param(t4.MAX_CUBE_MAP_TEXTURE_SIZE)]), r4.push(["MAX_FRAGMENT_UNIFORM_VECTORS", this.param(t4.MAX_FRAGMENT_UNIFORM_VECTORS)]), r4.push(["MAX_RENDERBUFFER_SIZE", this.param(t4.MAX_RENDERBUFFER_SIZE)]), r4.push(["MAX_TEXTURE_IMAGE_UNITS", this.param(t4.MAX_TEXTURE_IMAGE_UNITS)]), r4.push(["MAX_TEXTURE_SIZE", this.param(t4.MAX_TEXTURE_SIZE)]), r4.push(["MAX_VARYING_VECTORS", this.param(t4.MAX_VARYING_VECTORS)]), r4.push(["MAX_VERTEX_ATTRIBS", this.param(t4.MAX_VERTEX_ATTRIBS)]), r4.push(["MAX_VERTEX_TEXTURE_IMAGE_UNITS", this.param(t4.MAX_VERTEX_TEXTURE_IMAGE_UNITS)]), r4.push(["MAX_VERTEX_UNIFORM_VECTORS", this.param(t4.MAX_VERTEX_UNIFORM_VECTORS)]);
        var n3 = this.param(t4.MAX_VIEWPORT_DIMS);
        if (r4.push(["MAX_VIEWPORT_DIMS (WIDTH)", n3 ? n3[0] : null]), r4.push(["MAX_VIEWPORT_DIMS (HEIGHT)", n3 ? n3[1] : null]), this.isWebGL2) {
          var o2 = this._context;
          r4.push(["MAX_3D_TEXTURE_SIZE", this.param(o2.MAX_3D_TEXTURE_SIZE)]), r4.push(["MAX_ARRAY_TEXTURE_LAYERS", this.param(o2.MAX_ARRAY_TEXTURE_LAYERS)]), r4.push(["MAX_CLIENT_WAIT_TIMEOUT_WEBGL", this.param(o2.MAX_CLIENT_WAIT_TIMEOUT_WEBGL)]), r4.push(["MAX_COLOR_ATTACHMENTS", this.param(o2.MAX_COLOR_ATTACHMENTS)]), r4.push(["MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS", this.param(o2.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS)]), r4.push(["MAX_COMBINED_UNIFORM_BLOCKS", this.param(o2.MAX_COMBINED_UNIFORM_BLOCKS)]), r4.push(["MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS", this.param(o2.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS)]), r4.push(["MAX_DRAW_BUFFERS", this.param(o2.MAX_DRAW_BUFFERS)]), r4.push(["MAX_ELEMENT_INDEX", this.param(o2.MAX_ELEMENT_INDEX)]), r4.push(["MAX_ELEMENTS_INDICES", this.param(o2.MAX_ELEMENTS_INDICES)]), r4.push(["MAX_ELEMENTS_VERTICES", this.param(o2.MAX_ELEMENTS_VERTICES)]), r4.push(["MAX_FRAGMENT_INPUT_COMPONENTS", this.param(o2.MAX_FRAGMENT_INPUT_COMPONENTS)]), r4.push(["MAX_FRAGMENT_UNIFORM_BLOCKS", this.param(o2.MAX_FRAGMENT_UNIFORM_BLOCKS)]), r4.push(["MAX_FRAGMENT_UNIFORM_COMPONENTS", this.param(o2.MAX_FRAGMENT_UNIFORM_COMPONENTS)]), r4.push(["MAX_PROGRAM_TEXEL_OFFSET", this.param(o2.MAX_PROGRAM_TEXEL_OFFSET)]), r4.push(["MAX_SAMPLES", this.param(o2.MAX_SAMPLES)]), r4.push(["MAX_SERVER_WAIT_TIMEOUT", this.param(o2.MAX_SERVER_WAIT_TIMEOUT)]), r4.push(["MAX_TEXTURE_LOD_BIAS", this.param(o2.MAX_TEXTURE_LOD_BIAS)]), r4.push(["MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS", this.param(o2.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS)]), r4.push(["MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS", this.param(o2.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS)]), r4.push(["MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS", this.param(o2.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS)]), r4.push(["MAX_UNIFORM_BLOCK_SIZE", this.param(o2.MAX_UNIFORM_BLOCK_SIZE)]), r4.push(["MAX_UNIFORM_BUFFER_BINDINGS", this.param(o2.MAX_UNIFORM_BUFFER_BINDINGS)]), r4.push(["MAX_VARYING_COMPONENTS", this.param(o2.MAX_VARYING_COMPONENTS)]), r4.push(["MAX_VERTEX_OUTPUT_COMPONENTS", this.param(o2.MAX_VERTEX_OUTPUT_COMPONENTS)]), r4.push(["MAX_VERTEX_UNIFORM_BLOCKS", this.param(o2.MAX_VERTEX_UNIFORM_BLOCKS)]), r4.push(["MAX_VERTEX_UNIFORM_COMPONENTS", this.param(o2.MAX_VERTEX_UNIFORM_COMPONENTS)]), r4.push(["MIN_PROGRAM_TEXEL_OFFSET", this.param(o2.MIN_PROGRAM_TEXEL_OFFSET)]);
        }
        if (this.isWebGL1)
          for (var a2 = 0, u3 = s.WEBGL1_EXTENSIONS; a2 < u3.length; a2++) {
            var c3 = u3[a2];
            r4.push([c3, this.supports(c3) ? "ok" : "na"]);
          }
        else if (this.isWebGL2) {
          for (var l3 = 0, f2 = s.WEBGL2_DEFAULT_EXTENSIONS; l3 < f2.length; l3++)
            c3 = f2[l3], r4.push([c3 + " (default)", "ok"]);
          for (var h2 = 0, d2 = s.WEBGL2_EXTENSIONS; h2 < d2.length; h2++)
            c3 = d2[h2], r4.push([c3, this.supports(c3) ? "ok" : "na"]);
        }
        return r4;
      }, e4.prototype.aboutString = function() {
        for (var e5 = this.about(), t4 = 0, r4 = 0, i3 = e5; r4 < i3.length; r4++) {
          var n3 = i3[r4];
          t4 = Math.max(n3[0].length, t4);
        }
        for (var o2 = 0, a2 = "", u3 = this.isWebGL2 ? 63 + s.WEBGL2_DEFAULT_EXTENSIONS.length : -1, c3 = 0, l3 = e5; c3 < l3.length; c3++) {
          switch (n3 = l3[c3], o2) {
            case 2:
            case 6:
            case 8:
            case 15:
            case 16:
            case 23:
            case 35:
            case 63:
            case u3:
              a2 += "\n";
          }
          a2 += "  " + n3[0] + " " + "-".repeat(t4 - n3[0].length) + "-- " + n3[1] + "\n", ++o2;
        }
        return a2 + "\n";
      }, e4.prototype.logAbout = function(e5) {
        e5 === void 0 && (e5 = i2.LogLevel.Info), i2.log(e5, "context.about\n\n" + this.aboutString());
      }, e4.prototype.logAboutIf = function(e5, t4) {
        t4 === void 0 && (t4 = i2.LogLevel.Info), i2.logIf(e5, t4, "context.about\n\n" + this.aboutString());
      }, e4.prototype.byteSizeOfFormat = function(e5) {
        return n2.byteSizeOfFormat(this, e5);
      }, e4.DEFAULT_ATTRIBUTES = { alpha: true, antialias: false, depth: true, failIfMajorPerformanceCaveat: false, premultipliedAlpha: true, preserveDrawingBuffer: false, stencil: false }, e4;
    }();
    t3.Context = l2, function(e4) {
      !function(e5) {
        e5.Invalid = "invalid", e5.WebGL1 = "webgl1", e5.WebGL2 = "webgl2";
      }(e4.BackendType || (e4.BackendType = {})), function(e5) {
        e5.auto = "auto", e5.webgl = "webgl", e5.experimental = "experimental-webgl", e5.webgl1 = "webgl1", e5.experimental1 = "experimental-webgl1", e5.webgl2 = "webgl2", e5.experimental2 = "experimental-webgl2";
      }(e4.BackendRequestType || (e4.BackendRequestType = {}));
    }(l2 = t3.Context || (t3.Context = {})), t3.Context = l2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(0), n2 = r3(42), o = function() {
      function e4() {
      }
      return e4.encode64 = function(t4) {
        return i2.assert(t4 >= 0 && t4 <= 63, "expected bitfield in range [ 0b000000, 0b111111 ], given " + t4), e4.BASE64_ALPHABET[t4];
      }, e4.decode64 = function(t4) {
        i2.assert(t4.length === 1, "expected single base64 character, given '" + t4 + "'");
        var r4 = e4.BASE64_ALPHABET.indexOf(t4);
        return i2.assert(r4 > -1, "unknown base64 character, given '" + t4 + "'"), r4;
      }, e4.encode = function(t4, r4) {
        var n3 = e4.LATEST_VERSION, o2 = e4.EXTENSIONS_BY_VERSION.get(n3), a = e4.WEBGL_BACKENDS.indexOf(t4);
        i2.assert(a > -1, "expected valid backend " + e4.WEBGL_BACKENDS + ", given " + t4 + " ");
        var s = e4.encode64(n3 << 3 | a + 1);
        if (r4.length === 0)
          return s;
        for (var u2 = 0, c2 = 0; c2 < o2.length; ++c2)
          u2 |= r4.indexOf(o2[c2]) > -1 ? 32 >> c2 % 6 : 0, c2 % 6 < 5 && c2 < o2.length - 1 || (s += e4.encode64(u2), u2 = 0);
        return s;
      }, e4.decode = function(t4) {
        var r4 = e4.decode64(t4[0]), n3 = r4 >> 3, o2 = (7 & r4) - 1;
        i2.assert(o2 < e4.WEBGL_BACKENDS.length, "expected valid backend index, given " + o2);
        var a = e4.WEBGL_BACKENDS[o2];
        i2.assert(e4.EXTENSIONS_BY_VERSION.has(n3), "expected valid hash version, given " + n3);
        var s = e4.EXTENSIONS_BY_VERSION.get(n3), u2 = Math.ceil(s.length / 6) + 1;
        i2.assert(t4.length === u2, "expected hash of version " + n3 + " to have a length of " + u2 + ", given " + t4);
        for (var c2 = new Array(), l2 = 1; l2 < t4.length; ++l2) {
          var f2 = e4.decode64(t4[l2]), h2 = 6 * (l2 - 1);
          32 & f2 && c2.push(s[h2 + 0]), 16 & f2 && c2.push(s[h2 + 1]), 8 & f2 && c2.push(s[h2 + 2]), 4 & f2 && c2.push(s[h2 + 3]), 2 & f2 && c2.push(s[h2 + 4]), 1 & f2 && c2.push(s[h2 + 5]);
        }
        return [a, c2];
      }, e4.complement = function(t4, r4) {
        var n3 = e4.WEBGL_BACKENDS.indexOf(t4);
        return i2.assert(n3 > -1, "expected valid backend " + e4.WEBGL_BACKENDS + ", given " + t4 + " "), e4.WEBGL_EXTENSIONS_BY_BACKEND.get(n3).filter(function(e5) {
          return r4.indexOf(e5) < 0;
        });
      }, e4.WEBGL_BACKENDS = ["webgl1", "webgl2"], e4.WEBGL_EXTENSIONS_BY_BACKEND = /* @__PURE__ */ new Map([[0, n2.WEBGL1_EXTENSIONS], [1, n2.WEBGL2_EXTENSIONS]]), e4.EXTENSIONS_BY_VERSION = /* @__PURE__ */ new Map([[0, ["ANGLE_instanced_arrays", "EXT_blend_minmax", "EXT_color_buffer_float", "EXT_color_buffer_half_float", "EXT_disjoint_timer_query", "EXT_disjoint_timer_query_webgl2", "EXT_frag_depth", "EXT_shader_texture_lod", "EXT_sRGB", "EXT_texture_filter_anisotropic", "OES_element_index_uint", "OES_standard_derivatives", "OES_texture_float", "OES_texture_float_linear", "OES_texture_half_float", "OES_texture_half_float_linear", "OES_vertex_array_object", "WEBGL_color_buffer_float", "WEBGL_compressed_texture_astc", "WEBGL_compressed_texture_atc", "WEBGL_compressed_texture_etc", "WEBGL_compressed_texture_etc1", "WEBGL_compressed_texture_pvrtc", "WEBGL_compressed_texture_s3tc", "WEBGL_compressed_texture_s3tc_srgb", "WEBGL_debug_renderer_info", "WEBGL_debug_shaders", "WEBGL_depth_texture", "WEBGL_draw_buffers", "WEBGL_lose_context"]]]), e4.LATEST_VERSION = 0, e4.BASE64_ALPHABET = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-+", e4;
    }();
    t3.ExtensionsHash = o;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(10), n2 = r3(0), o = r3(44), a = function() {
      function e4(e5, t4) {
        n2.assert(e5 !== void 0, "expected a valid eye gaze data streams object on initialization, given " + e5 + "."), this._eyeGazeDataStream = new o.EyeGazeDataStream(), this._eyeGazeDataStream.eyeGazeDataStreams = e5, this._eyeGazeDataStream.connect(t4);
      }
      return e4.prototype.preventDefaultOnEvent = function(e5, t4) {
        n2.bitInBitfield(this._preventDefaultMask, e5) && t4.preventDefault();
      }, e4.prototype.allowDefault = function() {
        for (var e5 = [], t4 = 0; t4 < arguments.length; t4++)
          e5[t4] = arguments[t4];
        for (var r4 = 0, i3 = e5; r4 < i3.length; r4++) {
          var o2 = i3[r4];
          n2.bitInBitfield(this._preventDefaultMask, o2) && (this._preventDefaultMask &= ~o2);
        }
      }, e4.prototype.preventDefault = function() {
        for (var e5 = [], t4 = 0; t4 < arguments.length; t4++)
          e5[t4] = arguments[t4];
        for (var r4 = 0, i3 = e5; r4 < i3.length; r4++) {
          var o2 = i3[r4];
          n2.bitInBitfield(this._preventDefaultMask, o2) || (this._preventDefaultMask |= o2);
        }
      }, e4.prototype.observable = function(t4) {
        switch (t4) {
          case e4.Type.EyeGazeData:
            return this.EyeGazeData$;
          case e4.Type.NewServerMessage:
            return this.NewServerMessage$;
          case e4.Type.ConnectionStatus:
            return this.ConnectionStatus$;
          case e4.Type.BinaryMessageParsingError:
            return this.BinaryMessageParsingError$;
          default:
            return;
        }
      }, Object.defineProperty(e4.prototype, "EyeGazeData$", { get: function() {
        var t4 = this;
        return this._eyeGazeDataSubject === void 0 && (this._eyeGazeDataSubject = new i2.ReplaySubject(void 0, this._timeframe), this._eyeGazeDataListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.EyeGazeData, r4), t4._eyeGazeDataSubject.next(r4);
        }, this._eyeGazeDataStream.addEventListener(o.EyeGazeDataStream.EYE_GAZE_DATA, this._eyeGazeDataListener)), this._eyeGazeDataSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "NewServerMessage$", { get: function() {
        var t4 = this;
        return this._newServerMessageSubject === void 0 && (this._newServerMessageSubject = new i2.ReplaySubject(void 0, this._timeframe), this._newServerMessageListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.NewServerMessage, r4), t4._newServerMessageSubject.next(r4);
        }, this._eyeGazeDataStream.addEventListener(o.EyeGazeDataStream.NEW_SERVER_MESSAGE, this._newServerMessageListener)), this._newServerMessageSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "ConnectionStatus$", { get: function() {
        var t4 = this;
        return this._connectionStatusSubject === void 0 && (this._connectionStatusSubject = new i2.ReplaySubject(void 0, this._timeframe), this._connectionStatusListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.ConnectionStatus, r4), t4._connectionStatusSubject.next(r4);
        }, this._eyeGazeDataStream.addEventListener(o.EyeGazeDataStream.CONNECTION_STATUS, this._connectionStatusListener)), this._connectionStatusSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "BinaryMessageParsingError$", { get: function() {
        var t4 = this;
        return this._binaryMessageParsingErrorSubject === void 0 && (this._binaryMessageParsingErrorSubject = new i2.ReplaySubject(void 0, this._timeframe), this._binaryMessageParsingErrorListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.BinaryMessageParsingError, r4), t4._binaryMessageParsingErrorSubject.next(r4);
        }, this._eyeGazeDataStream.addEventListener(o.EyeGazeDataStream.BINARY_MESSAGE_PARSING_ERROR, this._binaryMessageParsingErrorListener)), this._eyeGazeDataSubject.asObservable();
      }, enumerable: true, configurable: true }), e4;
    }();
    t3.EyeGazeEventProvider = a, function(e4) {
      !function(e5) {
        e5[e5.EyeGazeData = 1] = "EyeGazeData", e5[e5.NewServerMessage = 2] = "NewServerMessage", e5[e5.ConnectionStatus = 4] = "ConnectionStatus", e5[e5.BinaryMessageParsingError = 8] = "BinaryMessageParsingError";
      }(e4.Type || (e4.Type = {}));
    }(a = t3.EyeGazeEventProvider || (t3.EyeGazeEventProvider = {})), t3.EyeGazeEventProvider = a;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(10), n2 = r3(0), o = r3(46), a = r3(22), s = function() {
      function e4(e5, t4) {
        var r4 = this;
        this._pointerLockRequestPending = false, n2.assert(e5 !== void 0, "expected valid canvas element on initialization, given " + e5), this._element = e5, this._timeframe = t4, this._element.addEventListener("click", function() {
          return r4.processPointerLockRequests();
        }), (o.IS_EDGE || o.IS_IE11) && this._element.addEventListener("dragstart", function(e6) {
          return e6.preventDefault();
        });
      }
      return e4.prototype.processPointerLockRequests = function() {
        this._pointerLockRequestPending && a.PointerLock.request(this._element);
      }, e4.prototype.preventDefaultOnEvent = function(e5, t4) {
        n2.bitInBitfield(this._preventDefaultMask, e5) && t4.preventDefault();
      }, e4.prototype.preventDefault = function() {
        for (var e5 = [], t4 = 0; t4 < arguments.length; t4++)
          e5[t4] = arguments[t4];
        for (var r4 = 0, i3 = e5; r4 < i3.length; r4++) {
          var o2 = i3[r4];
          n2.bitInBitfield(this._preventDefaultMask, o2) || (this._preventDefaultMask |= o2);
        }
      }, e4.prototype.allowDefault = function() {
        for (var e5 = [], t4 = 0; t4 < arguments.length; t4++)
          e5[t4] = arguments[t4];
        for (var r4 = 0, i3 = e5; r4 < i3.length; r4++) {
          var o2 = i3[r4];
          n2.bitInBitfield(this._preventDefaultMask, o2) && (this._preventDefaultMask &= ~o2);
        }
      }, e4.prototype.observable = function(t4) {
        switch (t4) {
          case e4.Type.Click:
            return this.click$;
          case e4.Type.Enter:
            return this.enter$;
          case e4.Type.Leave:
            return this.leave$;
          case e4.Type.Down:
            return this.down$;
          case e4.Type.Up:
            return this.up$;
          case e4.Type.Move:
            return this.move$;
          case e4.Type.Wheel:
            return this.wheel$;
          case e4.Type.Drag:
            return this.drag$;
          default:
            return;
        }
      }, Object.defineProperty(e4.prototype, "pointerLock", { get: function() {
        return a.PointerLock.active(this._element);
      }, set: function(e5) {
        this._pointerLockRequestPending = e5, e5 === false && (this._pointerLockRequestPending = false, a.PointerLock.exit());
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "click$", { get: function() {
        var t4 = this;
        return this._clickSubject === void 0 && (this._clickSubject = new i2.ReplaySubject(void 0, this._timeframe), this._clickListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.Click, r4), t4._clickSubject.next(r4);
        }, this._element.addEventListener("click", this._clickListener)), this._clickSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "enter$", { get: function() {
        var t4 = this;
        return this._enterSubject === void 0 && (this._enterSubject = new i2.ReplaySubject(void 0, this._timeframe), this._enterListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.Enter, r4), t4._enterSubject.next(r4);
        }, this._element.addEventListener("mouseenter", this._enterListener)), this._enterSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "leave$", { get: function() {
        var t4 = this;
        return this._leaveSubject === void 0 && (this._leaveSubject = new i2.ReplaySubject(void 0, this._timeframe), this._leaveListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.Leave, r4), t4._leaveSubject.next(r4);
        }, this._element.addEventListener("mouseleave", this._leaveListener)), this._leaveSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "down$", { get: function() {
        var t4 = this;
        return this._downSubject === void 0 && (this._downSubject = new i2.ReplaySubject(void 0, this._timeframe), this._downListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.Down, r4), t4._downSubject.next(r4);
        }, this._element.addEventListener("mousedown", this._downListener)), this._downSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "up$", { get: function() {
        var t4 = this;
        return this._upSubject === void 0 && (this._upSubject = new i2.ReplaySubject(void 0, this._timeframe), this._upListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.Up, r4), t4._upSubject.next(r4);
        }, this._element.addEventListener("mouseup", this._upListener)), this._upSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "move$", { get: function() {
        var t4 = this;
        return this._moveSubject === void 0 && (this._moveSubject = new i2.ReplaySubject(void 0, this._timeframe), this._moveListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.Move, r4), t4._moveSubject.next(r4);
        }, this._element.addEventListener("mousemove", this._moveListener)), this._moveSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "wheel$", { get: function() {
        var t4 = this;
        return this._wheelSubject === void 0 && (this._wheelSubject = new i2.ReplaySubject(void 0, this._timeframe), this._wheelListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.Wheel, r4), t4._wheelSubject.next(r4);
        }, this._element.addEventListener("wheel", this._wheelListener)), this._wheelSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "drag$", { get: function() {
        var t4 = this;
        return this._dragSubject === void 0 && (this._dragSubject = new i2.ReplaySubject(void 0, this._timeframe), this._dragListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.Drag, r4), t4._dragSubject.next(r4);
        }, this._element.addEventListener("drag", this._dragListener)), this._dragSubject.asObservable();
      }, enumerable: true, configurable: true }), e4;
    }();
    t3.MouseEventProvider = s, function(e4) {
      !function(e5) {
        e5[e5.Click = 1] = "Click", e5[e5.Wheel = 2] = "Wheel", e5[e5.Enter = 4] = "Enter", e5[e5.Leave = 8] = "Leave", e5[e5.Move = 16] = "Move", e5[e5.Down = 32] = "Down", e5[e5.Up = 64] = "Up", e5[e5.Drag = 128] = "Drag";
      }(e4.Type || (e4.Type = {}));
    }(s = t3.MouseEventProvider || (t3.MouseEventProvider = {})), t3.MouseEventProvider = s;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(10), n2 = r3(0), o = r3(46), a = r3(22), s = function() {
      function e4(e5, t4) {
        var r4 = this;
        this._pointerLockRequestPending = false, n2.assert(e5 !== void 0, "expected valid canvas element on initialization, given " + e5), this._element = e5, this._timeframe = t4, this._element.addEventListener("click", function() {
          return r4.processPointerLockRequests();
        }), (o.IS_EDGE || o.IS_IE11) && this._element.addEventListener("dragstart", function(e6) {
          return e6.preventDefault();
        });
      }
      return e4.prototype.processPointerLockRequests = function() {
        this._pointerLockRequestPending && a.PointerLock.request(this._element);
      }, e4.prototype.preventDefaultOnEvent = function(e5, t4) {
        n2.bitInBitfield(this._preventDefaultMask, e5) && t4.preventDefault();
      }, e4.prototype.preventDefault = function() {
        for (var e5 = [], t4 = 0; t4 < arguments.length; t4++)
          e5[t4] = arguments[t4];
        for (var r4 = 0, i3 = e5; r4 < i3.length; r4++) {
          var o2 = i3[r4];
          n2.bitInBitfield(this._preventDefaultMask, o2) || (this._preventDefaultMask |= o2);
        }
      }, e4.prototype.allowDefault = function() {
        for (var e5 = [], t4 = 0; t4 < arguments.length; t4++)
          e5[t4] = arguments[t4];
        for (var r4 = 0, i3 = e5; r4 < i3.length; r4++) {
          var o2 = i3[r4];
          n2.bitInBitfield(this._preventDefaultMask, o2) && (this._preventDefaultMask &= ~o2);
        }
      }, e4.prototype.observable = function(t4) {
        switch (t4) {
          case e4.Type.Enter:
            return this.enter$;
          case e4.Type.Leave:
            return this.leave$;
          case e4.Type.Down:
            return this.down$;
          case e4.Type.Up:
            return this.up$;
          case e4.Type.Move:
            return this.move$;
          case e4.Type.Cancel:
            return this.cancel$;
          default:
            return;
        }
      }, Object.defineProperty(e4.prototype, "pointerLock", { get: function() {
        return a.PointerLock.active(this._element);
      }, set: function(e5) {
        this._pointerLockRequestPending = e5, e5 === false && (this._pointerLockRequestPending = false, a.PointerLock.exit());
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "enter$", { get: function() {
        var t4 = this;
        return this._enterSubject === void 0 && (this._enterSubject = new i2.ReplaySubject(void 0, this._timeframe), this._enterListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.Enter, r4), t4._enterSubject.next(r4);
        }, this._element.addEventListener("pointerenter", this._enterListener)), this._enterSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "leave$", { get: function() {
        var t4 = this;
        return this._leaveSubject === void 0 && (this._leaveSubject = new i2.ReplaySubject(void 0, this._timeframe), this._leaveListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.Leave, r4), t4._leaveSubject.next(r4);
        }, this._element.addEventListener("pointerleave", this._leaveListener)), this._leaveSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "down$", { get: function() {
        var t4 = this;
        return this._downSubject === void 0 && (this._downSubject = new i2.ReplaySubject(void 0, this._timeframe), this._downListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.Down, r4), t4._downSubject.next(r4);
        }, this._element.addEventListener("pointerdown", this._downListener)), this._downSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "up$", { get: function() {
        var t4 = this;
        return this._upSubject === void 0 && (this._upSubject = new i2.ReplaySubject(void 0, this._timeframe), this._upListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.Up, r4), t4._upSubject.next(r4);
        }, this._element.addEventListener("pointerup", this._upListener)), this._upSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "move$", { get: function() {
        var t4 = this;
        return this._moveSubject === void 0 && (this._moveSubject = new i2.ReplaySubject(void 0, this._timeframe), this._moveListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.Move, r4), t4._moveSubject.next(r4);
        }, this._element.addEventListener("pointermove", this._moveListener)), this._moveSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "cancel$", { get: function() {
        var t4 = this;
        return this._cancelSubject === void 0 && (this._cancelSubject = new i2.ReplaySubject(void 0, this._timeframe), this._cancelListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.Cancel, r4), t4._cancelSubject.next(r4);
        }, this._element.addEventListener("pointercancel", this._cancelListener)), this._cancelSubject.asObservable();
      }, enumerable: true, configurable: true }), e4;
    }();
    t3.PointerEventProvider = s, function(e4) {
      !function(e5) {
        e5[e5.Enter = 1] = "Enter", e5[e5.Leave = 2] = "Leave", e5[e5.Move = 4] = "Move", e5[e5.Down = 8] = "Down", e5[e5.Up = 16] = "Up", e5[e5.Cancel = 32] = "Cancel";
      }(e4.Type || (e4.Type = {}));
    }(s = t3.PointerEventProvider || (t3.PointerEventProvider = {})), t3.PointerEventProvider = s;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(10), n2 = r3(0), o = function() {
      function e4(e5, t4) {
        n2.assert(e5 !== void 0, "expected valid canvas element on initialization, given " + e5), this._element = e5, this._timeframe = t4;
      }
      return e4.prototype.preventDefaultOnEvent = function(e5, t4) {
        n2.bitInBitfield(this._preventDefaultMask, e5) && t4.preventDefault();
      }, e4.prototype.preventDefault = function() {
        for (var e5 = [], t4 = 0; t4 < arguments.length; t4++)
          e5[t4] = arguments[t4];
        for (var r4 = 0, i3 = e5; r4 < i3.length; r4++) {
          var o2 = i3[r4];
          n2.bitInBitfield(this._preventDefaultMask, o2) || (this._preventDefaultMask |= o2);
        }
      }, e4.prototype.allowDefault = function() {
        for (var e5 = [], t4 = 0; t4 < arguments.length; t4++)
          e5[t4] = arguments[t4];
        for (var r4 = 0, i3 = e5; r4 < i3.length; r4++) {
          var o2 = i3[r4];
          n2.bitInBitfield(this._preventDefaultMask, o2) && (this._preventDefaultMask &= ~o2);
        }
      }, e4.prototype.observable = function(t4) {
        switch (t4) {
          case e4.Type.Start:
            return this.start$;
          case e4.Type.End:
            return this.end$;
          case e4.Type.Move:
            return this.move$;
          case e4.Type.Cancel:
            return this.cancel$;
        }
        return n2.assert(false, "Encountered unknown touch event."), new i2.Observable();
      }, Object.defineProperty(e4.prototype, "start$", { get: function() {
        var t4 = this;
        return this._startSubject === void 0 && (this._startSubject = new i2.ReplaySubject(void 0, this._timeframe), this._startListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.Start, r4), t4._startSubject.next(r4);
        }, this._element.addEventListener("touchstart", this._startListener)), this._startSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "end$", { get: function() {
        var t4 = this;
        return this._endSubject === void 0 && (this._endSubject = new i2.ReplaySubject(void 0, this._timeframe), this._endListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.End, r4), t4._endSubject.next(r4);
        }, this._element.addEventListener("touchend", this._endListener)), this._endSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "move$", { get: function() {
        var t4 = this;
        return this._moveSubject === void 0 && (this._moveSubject = new i2.ReplaySubject(void 0, this._timeframe), this._moveListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.Move, r4), t4._moveSubject.next(r4);
        }, this._element.addEventListener("touchmove", this._moveListener)), this._moveSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "cancel$", { get: function() {
        var t4 = this;
        return this._cancelSubject === void 0 && (this._cancelSubject = new i2.ReplaySubject(void 0, this._timeframe), this._cancelListener = function(r4) {
          t4.preventDefaultOnEvent(e4.Type.Cancel, r4), t4._cancelSubject.next(r4);
        }, this._element.addEventListener("touchcancel", this._cancelListener)), this._cancelSubject.asObservable();
      }, enumerable: true, configurable: true }), e4;
    }();
    t3.TouchEventProvider = o, function(e4) {
      !function(e5) {
        e5[e5.Start = 1] = "Start", e5[e5.End = 2] = "End", e5[e5.Move = 4] = "Move", e5[e5.Cancel = 8] = "Cancel";
      }(e4.Type || (e4.Type = {}));
    }(o = t3.TouchEventProvider || (t3.TouchEventProvider = {})), t3.TouchEventProvider = o;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(1), n2 = r3(0), o = r3(29), a = r3(30), s = r3(31), u2 = r3(32), c2 = function() {
      function e4(e5, t4) {
        this._subscriptions = new Array(), this._latestMouseEventsByType = /* @__PURE__ */ new Map(), this._previousMouseEventsByType = /* @__PURE__ */ new Map(), this._mouseEventHandlerByType = /* @__PURE__ */ new Map(), this._latestTouchEventsByType = /* @__PURE__ */ new Map(), this._previousTouchEventsByType = /* @__PURE__ */ new Map(), this._touchEventHandlerByType = /* @__PURE__ */ new Map(), this._latestPointerEventsByType = /* @__PURE__ */ new Map(), this._previousPointerEventsByType = /* @__PURE__ */ new Map(), this._pointerEventHandlerByType = /* @__PURE__ */ new Map(), this._latestEyeGazeEventsByType = /* @__PURE__ */ new Map(), this._previousEyeGazeEventsByType = /* @__PURE__ */ new Map(), this._eyeGazeEventHandlerByType = /* @__PURE__ */ new Map(), this._invalidate = e5, this._mouseEventProvider = t4.mouseEventProvider, this._mouseEventProvider.preventDefault(a.MouseEventProvider.Type.Wheel), this._pointerEventProvider = t4.pointerEventProvider, this._eyeGazeEventProvider = t4.eyeGazeEventProvider;
      }
      return e4.prototype.invalidate = function(e5) {
        e5 === void 0 && (e5 = false), this._invalidate && this._invalidate(e5);
      }, e4.prototype.pushMouseEventHandler = function(e5, t4) {
        var r4 = this;
        if (this._mouseEventHandlerByType.has(e5))
          this._mouseEventHandlerByType.get(e5).push(t4);
        else {
          this._mouseEventHandlerByType.set(e5, new Array()), this._previousMouseEventsByType.set(e5, new Array());
          var i3 = new Array();
          this._latestMouseEventsByType.set(e5, i3), n2.assert(this._mouseEventProvider !== void 0, "expected valid mouse event provider");
          var o2 = this._mouseEventProvider.observable(e5);
          switch (e5) {
            case a.MouseEventProvider.Type.Wheel:
            default:
              this._subscriptions.push(o2.subscribe(function(e6) {
                i3.push(e6), r4.invalidate();
              }));
          }
          this._mouseEventHandlerByType.get(e5).push(t4);
        }
      }, e4.prototype.invokeMouseEventHandler = function(e5) {
        var t4 = this._mouseEventHandlerByType.get(e5);
        if (t4 !== void 0 && t4.length !== 0) {
          var r4 = this._latestMouseEventsByType.get(e5);
          if (r4.length !== 0) {
            var i3 = this._previousMouseEventsByType.get(e5);
            t4.forEach(function(e6) {
              return e6(r4, i3);
            }), Object.assign(i3, r4), r4.length = 0;
          }
        }
      }, e4.prototype.pushTouchEventHandler = function(e5, t4) {
        var r4 = this;
        if (this._touchEventHandlerByType.has(e5))
          this._touchEventHandlerByType.get(e5).push(t4);
        else {
          this._touchEventHandlerByType.set(e5, new Array()), this._previousTouchEventsByType.set(e5, new Array());
          var i3 = new Array();
          this._latestTouchEventsByType.set(e5, i3), n2.assert(this._touchEventProvider !== void 0, "expected valid touch event provider");
          var o2 = this._touchEventProvider.observable(e5);
          this._subscriptions.push(o2.subscribe(function(e6) {
            i3.push(e6), r4.invalidate();
          })), this._touchEventHandlerByType.get(e5).push(t4);
        }
      }, e4.prototype.invokeTouchEventHandler = function(e5) {
        var t4 = this._touchEventHandlerByType.get(e5);
        if (t4 !== void 0 && t4.length !== 0) {
          var r4 = this._latestTouchEventsByType.get(e5);
          if (r4.length !== 0) {
            var i3 = this._previousTouchEventsByType.get(e5);
            t4.forEach(function(e6) {
              return e6(r4, i3);
            }), Object.assign(i3, r4), r4.length = 0;
          }
        }
      }, e4.prototype.pushPointerEventHandler = function(e5, t4) {
        var r4 = this;
        if (this._pointerEventHandlerByType.has(e5))
          this._pointerEventHandlerByType.get(e5).push(t4);
        else {
          this._pointerEventHandlerByType.set(e5, new Array()), this._previousPointerEventsByType.set(e5, new Array());
          var i3 = new Array();
          this._latestPointerEventsByType.set(e5, i3), n2.assert(this._pointerEventProvider !== void 0, "expected valid pointer event provider");
          var o2 = this._pointerEventProvider.observable(e5);
          this._subscriptions.push(o2.subscribe(function(e6) {
            i3.push(e6), r4.invalidate();
          })), this._pointerEventHandlerByType.get(e5).push(t4);
        }
      }, e4.prototype.invokePointerEventHandler = function(e5) {
        var t4 = this._pointerEventHandlerByType.get(e5);
        if (t4 !== void 0 && t4.length !== 0) {
          var r4 = this._latestPointerEventsByType.get(e5);
          if (r4.length !== 0) {
            var i3 = this._previousPointerEventsByType.get(e5);
            t4.forEach(function(e6) {
              return e6(r4, i3);
            }), Object.assign(i3, r4), r4.length = 0;
          }
        }
      }, e4.prototype.pushEyeGazeEventHandler = function(e5, t4) {
        var r4 = this;
        if (this._eyeGazeEventHandlerByType.has(e5))
          this._eyeGazeEventHandlerByType.get(e5).push(t4);
        else {
          this._eyeGazeEventHandlerByType.set(e5, new Array()), this._previousEyeGazeEventsByType.set(e5, new Array());
          var i3 = new Array();
          this._latestEyeGazeEventsByType.set(e5, i3), n2.assert(this._eyeGazeEventProvider !== void 0, "expected valid eye gaze event provider");
          var o2 = this._eyeGazeEventProvider.observable(e5);
          this._subscriptions.push(o2.subscribe(function(e6) {
            i3.push(e6), r4.invalidate();
          })), this._eyeGazeEventHandlerByType.get(e5).push(t4);
        }
      }, e4.prototype.invokeEyeGazeEventHandler = function(e5) {
        var t4 = this._eyeGazeEventHandlerByType.get(e5);
        if (t4 !== void 0 && t4.length !== 0) {
          var r4 = this._latestEyeGazeEventsByType.get(e5);
          if (r4.length !== 0) {
            var i3 = this._previousEyeGazeEventsByType.get(e5);
            t4.forEach(function(e6) {
              return e6(r4, i3);
            }), Object.assign(i3, r4), r4.length = 0;
          }
        }
      }, e4.prototype.dispose = function() {
        this._latestMouseEventsByType.forEach(function(e6) {
          return e6.length = 0;
        }), this._previousMouseEventsByType.forEach(function(e6) {
          return e6.length = 0;
        }), this._latestTouchEventsByType.forEach(function(e6) {
          return e6.length = 0;
        }), this._previousTouchEventsByType.forEach(function(e6) {
          return e6.length = 0;
        }), this._latestPointerEventsByType.forEach(function(e6) {
          return e6.length = 0;
        }), this._previousPointerEventsByType.forEach(function(e6) {
          return e6.length = 0;
        }), this._previousEyeGazeEventsByType.forEach(function(e6) {
          return e6.length = 0;
        }), this._latestEyeGazeEventsByType.forEach(function(e6) {
          return e6.length = 0;
        });
        for (var e5 = 0, t4 = this._subscriptions; e5 < t4.length; e5++)
          t4[e5].unsubscribe();
      }, e4.prototype.update = function() {
        this.invokeMouseEventHandler(a.MouseEventProvider.Type.Click), this.invokeMouseEventHandler(a.MouseEventProvider.Type.Enter), this.invokeMouseEventHandler(a.MouseEventProvider.Type.Leave), this.invokeMouseEventHandler(a.MouseEventProvider.Type.Down), this.invokeMouseEventHandler(a.MouseEventProvider.Type.Up), this.invokeMouseEventHandler(a.MouseEventProvider.Type.Move), this.invokeMouseEventHandler(a.MouseEventProvider.Type.Wheel), this.invokeTouchEventHandler(u2.TouchEventProvider.Type.Start), this.invokeTouchEventHandler(u2.TouchEventProvider.Type.End), this.invokeTouchEventHandler(u2.TouchEventProvider.Type.Move), this.invokeTouchEventHandler(u2.TouchEventProvider.Type.Cancel), this.invokePointerEventHandler(s.PointerEventProvider.Type.Move), this.invokePointerEventHandler(s.PointerEventProvider.Type.Down), this.invokePointerEventHandler(s.PointerEventProvider.Type.Enter), this.invokePointerEventHandler(s.PointerEventProvider.Type.Up), this.invokePointerEventHandler(s.PointerEventProvider.Type.Leave), this.invokePointerEventHandler(s.PointerEventProvider.Type.Cancel), this.invokeEyeGazeEventHandler(o.EyeGazeEventProvider.Type.EyeGazeData), this.invokeEyeGazeEventHandler(o.EyeGazeEventProvider.Type.NewServerMessage), this.invokeEyeGazeEventHandler(o.EyeGazeEventProvider.Type.ConnectionStatus), this.invokeEyeGazeEventHandler(o.EyeGazeEventProvider.Type.BinaryMessageParsingError);
      }, e4.prototype.offsets = function(e5, t4) {
        t4 === void 0 && (t4 = true);
        var r4 = new Array(), n3 = false;
        if (e5 instanceof MouseEvent)
          n3 = (o2 = e5).offsetX !== 0 && o2.offsetY !== 0, r4.push(n3 ? i2.vec2.fromValues(o2.offsetX, o2.offsetY) : i2.vec2.fromValues(o2.clientX, o2.clientY));
        else if (e5 instanceof WheelEvent)
          n3 = (o2 = e5).offsetX !== 0 && o2.offsetY !== 0, r4.push(n3 ? i2.vec2.fromValues(o2.offsetX, o2.offsetY) : i2.vec2.fromValues(o2.clientX, o2.clientY));
        else if (e5 instanceof TouchEvent)
          for (var o2 = e5, a2 = 0; a2 < o2.touches.length; ++a2) {
            var s2 = o2.touches.item(a2);
            r4.push(i2.vec2.fromValues(s2.clientX, s2.clientY));
          }
        if (n3) {
          if (t4)
            for (var u3 = 0, c3 = r4; u3 < c3.length; u3++) {
              var l2 = c3[u3];
              i2.vec2.scale(l2, l2, window.devicePixelRatio);
            }
          return r4;
        }
        for (var f2 = (e5.target || e5.currentTarget || e5.srcElement).getBoundingClientRect(), h2 = 0, d2 = r4; h2 < d2.length; h2++)
          (l2 = d2[h2])[0] = Math.floor(l2[0] - f2.left), l2[1] = Math.floor(l2[1] - f2.top), t4 && i2.vec2.scale(l2, l2, window.devicePixelRatio);
        return r4;
      }, e4.prototype.pushClickHandler = function(e5) {
        this.pushMouseEventHandler(a.MouseEventProvider.Type.Click, e5);
      }, e4.prototype.pushMouseEnterHandler = function(e5) {
        this.pushMouseEventHandler(a.MouseEventProvider.Type.Enter, e5);
      }, e4.prototype.pushMouseLeaveHandler = function(e5) {
        this.pushMouseEventHandler(a.MouseEventProvider.Type.Leave, e5);
      }, e4.prototype.pushMouseDownHandler = function(e5) {
        this.pushMouseEventHandler(a.MouseEventProvider.Type.Down, e5);
      }, e4.prototype.pushMouseUpHandler = function(e5) {
        this.pushMouseEventHandler(a.MouseEventProvider.Type.Up, e5);
      }, e4.prototype.pushMouseMoveHandler = function(e5) {
        this.pushMouseEventHandler(a.MouseEventProvider.Type.Move, e5);
      }, e4.prototype.pushMouseWheelHandler = function(e5) {
        this.pushMouseEventHandler(a.MouseEventProvider.Type.Wheel, e5);
      }, e4.prototype.pushTouchStartHandler = function(e5) {
        this.pushTouchEventHandler(u2.TouchEventProvider.Type.Start, e5);
      }, e4.prototype.pushTouchEndHandler = function(e5) {
        this.pushTouchEventHandler(u2.TouchEventProvider.Type.End, e5);
      }, e4.prototype.pushTouchMoveHandler = function(e5) {
        this.pushTouchEventHandler(u2.TouchEventProvider.Type.Move, e5);
      }, e4.prototype.pushTouchCancelHandler = function(e5) {
        this.pushTouchEventHandler(u2.TouchEventProvider.Type.Cancel, e5);
      }, e4.prototype.pushPointerUpHandler = function(e5) {
        this.pushPointerEventHandler(s.PointerEventProvider.Type.Up, e5);
      }, e4.prototype.pushPointerDownHandler = function(e5) {
        this.pushPointerEventHandler(s.PointerEventProvider.Type.Down, e5);
      }, e4.prototype.pushPointerEnterHandler = function(e5) {
        this.pushPointerEventHandler(s.PointerEventProvider.Type.Enter, e5);
      }, e4.prototype.pushPointerLeaveHandler = function(e5) {
        this.pushPointerEventHandler(s.PointerEventProvider.Type.Leave, e5);
      }, e4.prototype.pushPointerMoveHandler = function(e5) {
        this.pushPointerEventHandler(s.PointerEventProvider.Type.Move, e5);
      }, e4.prototype.pushPointerCancelHandler = function(e5) {
        this.pushPointerEventHandler(s.PointerEventProvider.Type.Cancel, e5);
      }, e4.prototype.pushEyeGazeDataHandler = function(e5) {
        this.pushEyeGazeEventHandler(o.EyeGazeEventProvider.Type.EyeGazeData, e5);
      }, e4.prototype.pushEyeGazeServerMessageHandler = function(e5) {
        this.pushEyeGazeEventHandler(o.EyeGazeEventProvider.Type.NewServerMessage, e5);
      }, e4.prototype.pushEyeGazeConnectionStatusHandler = function(e5) {
        this.pushEyeGazeEventHandler(o.EyeGazeEventProvider.Type.ConnectionStatus, e5);
      }, e4.prototype.pushEyeGazeBinaryMessageParsingErrorHandler = function(e5) {
        this.pushEyeGazeEventHandler(o.EyeGazeEventProvider.Type.BinaryMessageParsingError, e5);
      }, e4.prototype.requestPointerLock = function() {
        this._mouseEventProvider && (this._mouseEventProvider.pointerLock = true);
      }, e4.prototype.exitPointerLock = function() {
        this._mouseEventProvider && (this._mouseEventProvider.pointerLock = false);
      }, e4;
    }();
    t3.EventHandler = c2;
  }, function(e3, t3, r3) {
    var i2, n2 = r3(47);
    !function(e4) {
      var t4 = function(e5, t5) {
        return "fetching '" + e5 + "' failed (" + t5.status + "): " + t5.statusText;
      };
      e4.fetchAsync = function(e5, r4) {
        return new Promise(function(i3, n3) {
          var o = new XMLHttpRequest();
          o.open("GET", e5, true), o.responseType = r4, o.onload = function() {
            o.status < 200 || o.status >= 300 ? n3(t4(e5, o)) : i3(o.response);
          }, o.onerror = function() {
            return n3(t4(e5, o));
          }, o.ontimeout = function() {
            return n3(t4(e5, o));
          }, o.send();
        });
      }, e4.fetchJsonAsync = function(e5, r4, i3) {
        return new Promise(function(o, a) {
          var s = new XMLHttpRequest();
          s.open("GET", e5, true), s.onload = function() {
            if (s.status < 200 || s.status >= 300)
              a(t4(e5, s));
            else {
              var u2 = s.responseText;
              if (i3 === void 0 || n2.validate(u2, i3)) {
                var c2;
                try {
                  c2 = JSON.parse(u2);
                } catch (t5) {
                  return void a("fetching '" + e5 + "' failed (" + t5.name + "): " + t5.message);
                }
                var l2 = r4(c2);
                l2 !== void 0 ? o(l2) : a("fetching '" + e5 + "' failed (TransformError): transforming the object failed.");
              }
            }
          }, s.onerror = function() {
            return a(t4(e5, s));
          }, s.ontimeout = function() {
            return a(t4(e5, s));
          }, s.send();
        });
      };
    }(i2 || (i2 = {})), e3.exports = i2;
  }, function(e3, t3, r3) {
    var i2 = r3(91), n2 = r3(94);
    function o() {
      this.protocol = null, this.slashes = null, this.auth = null, this.host = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.query = null, this.pathname = null, this.path = null, this.href = null;
    }
    t3.parse = b2, t3.resolve = function(e4, t4) {
      return b2(e4, false, true).resolve(t4);
    }, t3.resolveObject = function(e4, t4) {
      return e4 ? b2(e4, false, true).resolveObject(t4) : t4;
    }, t3.format = function(e4) {
      return n2.isString(e4) && (e4 = b2(e4)), e4 instanceof o ? e4.format() : o.prototype.format.call(e4);
    }, t3.Url = o;
    var a = /^([a-z0-9.+-]+:)/i, s = /:[0-9]*$/, u2 = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, c2 = ["{", "}", "|", "\\", "^", "`"].concat(["<", ">", '"', "`", " ", "\r", "\n", "	"]), l2 = ["'"].concat(c2), f2 = ["%", "/", "?", ";", "#"].concat(l2), h2 = ["/", "?", "#"], d2 = /^[+a-z0-9A-Z_-]{0,63}$/, p2 = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, _2 = { javascript: true, "javascript:": true }, g2 = { javascript: true, "javascript:": true }, m2 = { http: true, https: true, ftp: true, gopher: true, file: true, "http:": true, "https:": true, "ftp:": true, "gopher:": true, "file:": true }, v2 = r3(95);
    function b2(e4, t4, r4) {
      if (e4 && n2.isObject(e4) && e4 instanceof o)
        return e4;
      var i3 = new o();
      return i3.parse(e4, t4, r4), i3;
    }
    o.prototype.parse = function(e4, t4, r4) {
      if (!n2.isString(e4))
        throw new TypeError("Parameter 'url' must be a string, not " + typeof e4);
      var o2 = e4.indexOf("?"), s2 = o2 !== -1 && o2 < e4.indexOf("#") ? "?" : "#", c3 = e4.split(s2);
      c3[0] = c3[0].replace(/\\/g, "/");
      var b3 = e4 = c3.join(s2);
      if (b3 = b3.trim(), !r4 && e4.split("#").length === 1) {
        var y2 = u2.exec(b3);
        if (y2)
          return this.path = b3, this.href = b3, this.pathname = y2[1], y2[2] ? (this.search = y2[2], this.query = t4 ? v2.parse(this.search.substr(1)) : this.search.substr(1)) : t4 && (this.search = "", this.query = {}), this;
      }
      var E2 = a.exec(b3);
      if (E2) {
        var x2 = (E2 = E2[0]).toLowerCase();
        this.protocol = x2, b3 = b3.substr(E2.length);
      }
      if (r4 || E2 || b3.match(/^\/\/[^@\/]+@[^@\/]+/)) {
        var T2 = b3.substr(0, 2) === "//";
        !T2 || E2 && g2[E2] || (b3 = b3.substr(2), this.slashes = true);
      }
      if (!g2[E2] && (T2 || E2 && !m2[E2])) {
        for (var A2, O2, P2 = -1, L2 = 0; L2 < h2.length; L2++)
          (w2 = b3.indexOf(h2[L2])) !== -1 && (P2 === -1 || w2 < P2) && (P2 = w2);
        for ((O2 = P2 === -1 ? b3.lastIndexOf("@") : b3.lastIndexOf("@", P2)) !== -1 && (A2 = b3.slice(0, O2), b3 = b3.slice(O2 + 1), this.auth = decodeURIComponent(A2)), P2 = -1, L2 = 0; L2 < f2.length; L2++) {
          var w2;
          (w2 = b3.indexOf(f2[L2])) !== -1 && (P2 === -1 || w2 < P2) && (P2 = w2);
        }
        P2 === -1 && (P2 = b3.length), this.host = b3.slice(0, P2), b3 = b3.slice(P2), this.parseHost(), this.hostname = this.hostname || "";
        var S2 = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
        if (!S2)
          for (var R2 = this.hostname.split(/\./), I2 = (L2 = 0, R2.length); L2 < I2; L2++) {
            var M2 = R2[L2];
            if (M2 && !M2.match(d2)) {
              for (var C2 = "", N2 = 0, D2 = M2.length; N2 < D2; N2++)
                M2.charCodeAt(N2) > 127 ? C2 += "x" : C2 += M2[N2];
              if (!C2.match(d2)) {
                var B2 = R2.slice(0, L2), F2 = R2.slice(L2 + 1), z2 = M2.match(p2);
                z2 && (B2.push(z2[1]), F2.unshift(z2[2])), F2.length && (b3 = "/" + F2.join(".") + b3), this.hostname = B2.join(".");
                break;
              }
            }
          }
        this.hostname.length > 255 ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(), S2 || (this.hostname = i2.toASCII(this.hostname));
        var j = this.port ? ":" + this.port : "", U2 = this.hostname || "";
        this.host = U2 + j, this.href += this.host, S2 && (this.hostname = this.hostname.substr(1, this.hostname.length - 2), b3[0] !== "/" && (b3 = "/" + b3));
      }
      if (!_2[x2])
        for (L2 = 0, I2 = l2.length; L2 < I2; L2++) {
          var G2 = l2[L2];
          if (b3.indexOf(G2) !== -1) {
            var k2 = encodeURIComponent(G2);
            k2 === G2 && (k2 = escape(G2)), b3 = b3.split(G2).join(k2);
          }
        }
      var V2 = b3.indexOf("#");
      V2 !== -1 && (this.hash = b3.substr(V2), b3 = b3.slice(0, V2));
      var H2 = b3.indexOf("?");
      if (H2 !== -1 ? (this.search = b3.substr(H2), this.query = b3.substr(H2 + 1), t4 && (this.query = v2.parse(this.query)), b3 = b3.slice(0, H2)) : t4 && (this.search = "", this.query = {}), b3 && (this.pathname = b3), m2[x2] && this.hostname && !this.pathname && (this.pathname = "/"), this.pathname || this.search) {
        j = this.pathname || "";
        var W2 = this.search || "";
        this.path = j + W2;
      }
      return this.href = this.format(), this;
    }, o.prototype.format = function() {
      var e4 = this.auth || "";
      e4 && (e4 = (e4 = encodeURIComponent(e4)).replace(/%3A/i, ":"), e4 += "@");
      var t4 = this.protocol || "", r4 = this.pathname || "", i3 = this.hash || "", o2 = false, a2 = "";
      this.host ? o2 = e4 + this.host : this.hostname && (o2 = e4 + (this.hostname.indexOf(":") === -1 ? this.hostname : "[" + this.hostname + "]"), this.port && (o2 += ":" + this.port)), this.query && n2.isObject(this.query) && Object.keys(this.query).length && (a2 = v2.stringify(this.query));
      var s2 = this.search || a2 && "?" + a2 || "";
      return t4 && t4.substr(-1) !== ":" && (t4 += ":"), this.slashes || (!t4 || m2[t4]) && o2 !== false ? (o2 = "//" + (o2 || ""), r4 && r4.charAt(0) !== "/" && (r4 = "/" + r4)) : o2 || (o2 = ""), i3 && i3.charAt(0) !== "#" && (i3 = "#" + i3), s2 && s2.charAt(0) !== "?" && (s2 = "?" + s2), t4 + o2 + (r4 = r4.replace(/[?#]/g, function(e5) {
        return encodeURIComponent(e5);
      })) + (s2 = s2.replace("#", "%23")) + i3;
    }, o.prototype.resolve = function(e4) {
      return this.resolveObject(b2(e4, false, true)).format();
    }, o.prototype.resolveObject = function(e4) {
      if (n2.isString(e4)) {
        var t4 = new o();
        t4.parse(e4, false, true), e4 = t4;
      }
      for (var r4 = new o(), i3 = Object.keys(this), a2 = 0; a2 < i3.length; a2++) {
        var s2 = i3[a2];
        r4[s2] = this[s2];
      }
      if (r4.hash = e4.hash, e4.href === "")
        return r4.href = r4.format(), r4;
      if (e4.slashes && !e4.protocol) {
        for (var u3 = Object.keys(e4), c3 = 0; c3 < u3.length; c3++) {
          var l3 = u3[c3];
          l3 !== "protocol" && (r4[l3] = e4[l3]);
        }
        return m2[r4.protocol] && r4.hostname && !r4.pathname && (r4.path = r4.pathname = "/"), r4.href = r4.format(), r4;
      }
      if (e4.protocol && e4.protocol !== r4.protocol) {
        if (!m2[e4.protocol]) {
          for (var f3 = Object.keys(e4), h3 = 0; h3 < f3.length; h3++) {
            var d3 = f3[h3];
            r4[d3] = e4[d3];
          }
          return r4.href = r4.format(), r4;
        }
        if (r4.protocol = e4.protocol, e4.host || g2[e4.protocol])
          r4.pathname = e4.pathname;
        else {
          for (var p3 = (e4.pathname || "").split("/"); p3.length && !(e4.host = p3.shift()); )
            ;
          e4.host || (e4.host = ""), e4.hostname || (e4.hostname = ""), p3[0] !== "" && p3.unshift(""), p3.length < 2 && p3.unshift(""), r4.pathname = p3.join("/");
        }
        if (r4.search = e4.search, r4.query = e4.query, r4.host = e4.host || "", r4.auth = e4.auth, r4.hostname = e4.hostname || e4.host, r4.port = e4.port, r4.pathname || r4.search) {
          var _3 = r4.pathname || "", v3 = r4.search || "";
          r4.path = _3 + v3;
        }
        return r4.slashes = r4.slashes || e4.slashes, r4.href = r4.format(), r4;
      }
      var b3 = r4.pathname && r4.pathname.charAt(0) === "/", y2 = e4.host || e4.pathname && e4.pathname.charAt(0) === "/", E2 = y2 || b3 || r4.host && e4.pathname, x2 = E2, T2 = r4.pathname && r4.pathname.split("/") || [], A2 = (p3 = e4.pathname && e4.pathname.split("/") || [], r4.protocol && !m2[r4.protocol]);
      if (A2 && (r4.hostname = "", r4.port = null, r4.host && (T2[0] === "" ? T2[0] = r4.host : T2.unshift(r4.host)), r4.host = "", e4.protocol && (e4.hostname = null, e4.port = null, e4.host && (p3[0] === "" ? p3[0] = e4.host : p3.unshift(e4.host)), e4.host = null), E2 = E2 && (p3[0] === "" || T2[0] === "")), y2)
        r4.host = e4.host || e4.host === "" ? e4.host : r4.host, r4.hostname = e4.hostname || e4.hostname === "" ? e4.hostname : r4.hostname, r4.search = e4.search, r4.query = e4.query, T2 = p3;
      else if (p3.length)
        T2 || (T2 = []), T2.pop(), T2 = T2.concat(p3), r4.search = e4.search, r4.query = e4.query;
      else if (!n2.isNullOrUndefined(e4.search))
        return A2 && (r4.hostname = r4.host = T2.shift(), (S2 = !!(r4.host && r4.host.indexOf("@") > 0) && r4.host.split("@")) && (r4.auth = S2.shift(), r4.host = r4.hostname = S2.shift())), r4.search = e4.search, r4.query = e4.query, n2.isNull(r4.pathname) && n2.isNull(r4.search) || (r4.path = (r4.pathname ? r4.pathname : "") + (r4.search ? r4.search : "")), r4.href = r4.format(), r4;
      if (!T2.length)
        return r4.pathname = null, r4.search ? r4.path = "/" + r4.search : r4.path = null, r4.href = r4.format(), r4;
      for (var O2 = T2.slice(-1)[0], P2 = (r4.host || e4.host || T2.length > 1) && (O2 === "." || O2 === "..") || O2 === "", L2 = 0, w2 = T2.length; w2 >= 0; w2--)
        (O2 = T2[w2]) === "." ? T2.splice(w2, 1) : O2 === ".." ? (T2.splice(w2, 1), L2++) : L2 && (T2.splice(w2, 1), L2--);
      if (!E2 && !x2)
        for (; L2--; L2)
          T2.unshift("..");
      !E2 || T2[0] === "" || T2[0] && T2[0].charAt(0) === "/" || T2.unshift(""), P2 && T2.join("/").substr(-1) !== "/" && T2.push("");
      var S2, R2 = T2[0] === "" || T2[0] && T2[0].charAt(0) === "/";
      return A2 && (r4.hostname = r4.host = R2 ? "" : T2.length ? T2.shift() : "", (S2 = !!(r4.host && r4.host.indexOf("@") > 0) && r4.host.split("@")) && (r4.auth = S2.shift(), r4.host = r4.hostname = S2.shift())), (E2 = E2 || r4.host && T2.length) && !R2 && T2.unshift(""), T2.length ? r4.pathname = T2.join("/") : (r4.pathname = null, r4.path = null), n2.isNull(r4.pathname) && n2.isNull(r4.search) || (r4.path = (r4.pathname ? r4.pathname : "") + (r4.search ? r4.search : "")), r4.auth = e4.auth || r4.auth, r4.slashes = r4.slashes || e4.slashes, r4.href = r4.format(), r4;
    }, o.prototype.parseHost = function() {
      var e4 = this.host, t4 = s.exec(e4);
      t4 && ((t4 = t4[0]) !== ":" && (this.port = t4.substr(1)), e4 = e4.substr(0, e4.length - t4.length)), e4 && (this.hostname = e4);
    };
  }, function(e3, t3, r3) {
    var i2 = r3(35), n2 = r3(16);
    function o(e4, t4) {
      this.id = e4, this.ref = t4;
    }
    e3.exports.SchemaScanResult = o, e3.exports.scan = function(e4, t4) {
      function r4(e5, t5) {
        if (t5 && typeof t5 == "object")
          if (t5.$ref) {
            var o2 = i2.resolve(e5, t5.$ref);
            c2[o2] = c2[o2] ? c2[o2] + 1 : 0;
          } else {
            var l2 = t5.id ? i2.resolve(e5, t5.id) : e5;
            if (l2) {
              if (l2.indexOf("#") < 0 && (l2 += "#"), u2[l2]) {
                if (!n2.deepCompareStrict(u2[l2], t5))
                  throw new Error("Schema <" + t5 + "> already exists with different definition");
                return u2[l2];
              }
              u2[l2] = t5, l2[l2.length - 1] == "#" && (u2[l2.substring(0, l2.length - 1)] = t5);
            }
            a(l2 + "/items", Array.isArray(t5.items) ? t5.items : [t5.items]), a(l2 + "/extends", Array.isArray(t5.extends) ? t5.extends : [t5.extends]), r4(l2 + "/additionalItems", t5.additionalItems), s(l2 + "/properties", t5.properties), r4(l2 + "/additionalProperties", t5.additionalProperties), s(l2 + "/definitions", t5.definitions), s(l2 + "/patternProperties", t5.patternProperties), s(l2 + "/dependencies", t5.dependencies), a(l2 + "/disallow", t5.disallow), a(l2 + "/allOf", t5.allOf), a(l2 + "/anyOf", t5.anyOf), a(l2 + "/oneOf", t5.oneOf), r4(l2 + "/not", t5.not);
          }
      }
      function a(e5, t5) {
        if (Array.isArray(t5))
          for (var i3 = 0; i3 < t5.length; i3++)
            r4(e5 + "/" + i3, t5[i3]);
      }
      function s(e5, t5) {
        if (t5 && typeof t5 == "object")
          for (var i3 in t5)
            r4(e5 + "/" + i3, t5[i3]);
      }
      var u2 = {}, c2 = {};
      return r4(e4, t4), new o(u2, c2);
    };
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = r3(0), a = function() {
      function e4(e5, t4, r4, i3) {
        r4 === void 0 && (r4 = 1), i3 === void 0 && (i3 = 1), this._components = e5, this._width = isNaN(t4) ? 1 : Math.max(1, t4), this._height = Math.max(1, r4), this._depth = Math.max(1, i3), this.resize();
      }
      return e4.prototype.get = function(e5, t4, r4) {
        var i3;
        switch (i3 = t4 === void 0 && r4 === void 0 ? this._components * e5 : this.index(e5, t4, r4 || 0), o.assert(i3 < this.length, "index expected to be in range [0, " + (this.length - 1) + "], given " + i3), this._components) {
          case 1:
            return [this._samples[i3]];
          case 2:
            return [this._samples[i3], this._samples[i3 + 1]];
          case 3:
            return [this._samples[i3], this._samples[i3 + 1], this._samples[i3 + 2]];
          case 4:
            return [this._samples[i3], this._samples[i3 + 1], this._samples[i3 + 2], this._samples[i3 + 3]];
        }
      }, e4.prototype.set = function(e5, t4, r4, i3) {
        var n3;
        switch (o.assert(e5.length === this._components, "number of components expected to be " + this._components + ", given " + e5.length), n3 = r4 === void 0 && i3 === void 0 ? this._components * Math.min(this.elements, Math.max(0, t4)) : this._components * this.index(t4, r4, i3 || 0), o.assert(n3 < this.length, "index expected to be in range [0, " + (this.length - 1) + "], given " + n3), this._components) {
          case 4:
            this._samples[n3 + 3] = e5[3];
          case 3:
            this._samples[n3 + 2] = e5[2];
          case 2:
            this._samples[n3 + 1] = e5[1];
          case 1:
            this._samples[n3 + 0] = e5[0];
        }
      }, e4.prototype.fromJSON = function(e5) {
        o.assert(e5.size && e5.size.width !== void 0 && e5.size.height !== void 0 && e5.size.depth !== void 0, "expected kernel width, height, and depth to be set, given '" + e5.size + "'");
        var t4 = function(e6) {
          return e6.reduce(function(e7, r5) {
            return e7.concat(Array.isArray(r5) ? t4(r5) : r5);
          }, []);
        };
        this._width = Math.max(1, e5.size.width), this._height = Math.max(1, e5.size.height), this._depth = Math.max(1, e5.size.depth);
        var r4 = t4(e5.kernel);
        this._components = Math.floor(r4.length / this.elements), this.resize(), this.fromArray(r4);
      }, e4.prototype.index = function(e5, t4, r4) {
        return t4 === void 0 && (t4 = 0), r4 === void 0 && (r4 = 0), this._width * (this._height * Math.min(this._depth, Math.max(0, r4)) + Math.min(this._height, Math.max(0, t4))) + Math.min(this._width, Math.max(0, e5));
      }, e4.prototype.position = function(e5) {
        var t4 = Math.min(this.elements, Math.max(0, e5)), r4 = Math.floor(t4 / (this._width * this._height));
        t4 -= r4 * this._width * this._height;
        var i3 = Math.floor(t4 / this._width);
        return [t4 -= i3 * this._width, i3, r4];
      }, e4.prototype.sort = function(t4) {
        if (!(this.elements < 2)) {
          for (var r4 = Array(this.elements), i3 = 0; i3 < this.elements; ++i3) {
            var n3 = 0;
            switch (t4) {
              default:
              case e4.SortApproach.BySquaredLength:
                for (var o2 = 0; o2 < this._components; ++o2) {
                  var a2 = this._samples[i3 * this._components + o2];
                  n3 += a2 * a2;
                }
            }
            r4[i3] = [i3, n3];
          }
          switch (t4) {
            default:
            case e4.SortApproach.BySquaredLength:
              r4.sort(function(e5, t5) {
                return e5[1] - t5[1];
              });
          }
          var s2 = this._samples.slice();
          for (i3 = 0; i3 < r4.length; ++i3)
            for (o2 = 0; o2 < this._components; ++o2) {
              var u3 = r4[i3][0] * this._components + o2, c3 = i3 * this._components + o2;
              this._samples[c3] = s2[u3];
            }
        }
      }, Object.defineProperty(e4.prototype, "samples", { get: function() {
        return this._samples;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "length", { get: function() {
        return this._width * this._height * this._depth * this._components;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "elements", { get: function() {
        var e5 = this._width * this._height * this._depth;
        return isNaN(e5) ? 0 : e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "components", { get: function() {
        return this._components;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "width", { get: function() {
        return this._width;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "height", { get: function() {
        return this._height;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "depth", { get: function() {
        return this._depth;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "xStride", { get: function() {
        return this.bytesPerComponent * this._components;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "yStride", { get: function() {
        return this.bytesPerComponent * this._components * this._width;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "zStride", { get: function() {
        return this.bytesPerComponent * this._components * this._width * this._depth;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "bytesLength", { get: function() {
        return this.bytesPerComponent * this._components * this._width * this._height * this._depth;
      }, enumerable: true, configurable: true }), e4;
    }();
    t3.AbstractKernel = a, function(e4) {
      !function(e5) {
        e5[e5.BySquaredLength = 0] = "BySquaredLength";
      }(e4.SortApproach || (e4.SortApproach = {}));
    }(a = t3.AbstractKernel || (t3.AbstractKernel = {})), t3.AbstractKernel = a;
    var s = function(e4) {
      function t4() {
        return e4 !== null && e4.apply(this, arguments) || this;
      }
      return n2(t4, e4), t4.prototype.resize = function() {
        this._samples = new Float32Array(this.length);
      }, t4.prototype.fromArray = function(e5) {
        o.assert(e5.length === this.length, "expected samples length to match this kernel's length"), this._samples.set(new Float32Array(e5));
      }, Object.defineProperty(t4.prototype, "bytesPerComponent", { get: function() {
        return 4;
      }, enumerable: true, configurable: true }), t4;
    }(a);
    t3.KernelF32 = s;
    var u2 = function(e4) {
      function t4() {
        return e4 !== null && e4.apply(this, arguments) || this;
      }
      return n2(t4, e4), t4.prototype.resize = function() {
        this._samples = new Uint32Array(this.length);
      }, t4.prototype.fromArray = function(e5) {
        o.assert(e5.length === this.length, "expected samples length to match this kernel's length"), this._samples.set(new Uint32Array(e5));
      }, Object.defineProperty(t4.prototype, "bytesPerComponent", { get: function() {
        return 4;
      }, enumerable: true, configurable: true }), t4;
    }(a);
    t3.KernelUI32 = u2;
    var c2 = function(e4) {
      function t4() {
        return e4 !== null && e4.apply(this, arguments) || this;
      }
      return n2(t4, e4), t4.prototype.resize = function() {
        this._samples = new Int32Array(this.length);
      }, t4.prototype.fromArray = function(e5) {
        o.assert(e5.length === this.length, "expected samples length to match this kernel's length"), this._samples.set(new Int32Array(e5));
      }, Object.defineProperty(t4.prototype, "bytesPerComponent", { get: function() {
        return 4;
      }, enumerable: true, configurable: true }), t4;
    }(a);
    t3.KernelI32 = c2;
    var l2 = function(e4) {
      function t4() {
        return e4 !== null && e4.apply(this, arguments) || this;
      }
      return n2(t4, e4), t4.prototype.resize = function() {
        this._samples = new Uint8Array(this.length);
      }, t4.prototype.fromArray = function(e5) {
        o.assert(e5.length === this.length, "expected samples length to match this kernel's length"), this._samples.set(new Uint8Array(e5));
      }, Object.defineProperty(t4.prototype, "bytesPerComponent", { get: function() {
        return 4;
      }, enumerable: true, configurable: true }), t4;
    }(a);
    t3.KernelUI8 = l2;
    var f2 = function(e4) {
      function t4() {
        return e4 !== null && e4.apply(this, arguments) || this;
      }
      return n2(t4, e4), t4.prototype.resize = function() {
        this._samples = new Int8Array(this.length);
      }, t4.prototype.fromArray = function(e5) {
        o.assert(e5.length === this.length, "expected samples length to match this kernel's length"), this._samples.set(new Int8Array(e5));
      }, Object.defineProperty(t4.prototype, "bytesPerComponent", { get: function() {
        return 4;
      }, enumerable: true, configurable: true }), t4;
    }(a);
    t3.KernelI8 = f2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(1), s = r3(0), u2 = r3(3), c2 = r3(2), l2 = r3(12), f2 = r3(6), h2 = r3(7), d2 = function(e4) {
      function t4(t5) {
        var r4 = e4.call(this) || this;
        return r4._enforceProgramBlit = false, r4._ndcTriangleShared = false, r4._context = t5, r4;
      }
      return n2(t4, e4), t4.prototype.functionBlit = function() {
        var e5 = this._context.gl;
        this._target.bind(e5.DRAW_FRAMEBUFFER), this._framebuffer.bind(e5.READ_FRAMEBUFFER), e5.readBuffer(this._readBuffer), e5.drawBuffers([this._drawBuffer]), e5.enable(e5.SCISSOR_TEST), e5.scissor(0, 0, 0, 0), e5.clear(e5.COLOR_BUFFER_BIT), e5.disable(e5.SCISSOR_TEST);
        var t5 = this._srcBounds ? this._srcBounds : [0, 0, this._framebuffer.width, this._framebuffer.height], r4 = this._dstBounds ? this._dstBounds : [0, 0, this._target.width, this._target.height];
        e5.blitFramebuffer(t5[0], t5[1], t5[2], t5[3], r4[0], r4[1], r4[2], r4[3], e5.COLOR_BUFFER_BIT, this._filter), this._framebuffer.unbind(e5.READ_FRAMEBUFFER), this._target.unbind(e5.DRAW_FRAMEBUFFER);
      }, t4.prototype.programBlit = function() {
        this._program === void 0 && this.createProgram(), s.assert(this._ndcTriangle && this._ndcTriangle.initialized, "expected an initialized ndc triangle");
        var e5 = this._context.gl, t5 = this._srcBounds ? this._srcBounds : a.vec4.fromValues(0, 0, this._framebuffer.width, this._framebuffer.height), r4 = this._dstBounds ? this._dstBounds : a.vec4.fromValues(0, 0, this._target.width, this._target.height), i3 = a.vec4.div(u2.v4(), t5, [this._framebuffer.width, this._framebuffer.height, this._framebuffer.width, this._framebuffer.height]), n3 = a.vec4.div(u2.v4(), r4, [this._target.width, this._target.height, this._target.width, this._target.height]);
        e5.viewport(r4[0], r4[1], r4[2] - r4[0], r4[3] - r4[1]), e5.disable(e5.DEPTH_TEST), e5.depthMask(false), this._program.bind(), e5.uniform4fv(this._uSrcBounds, i3), e5.uniform4fv(this._uDstBounds, n3), e5.uniform1i(this._uNearest, this.filter === e5.nearest);
        var o2 = this._framebuffer.texture(this._readBuffer);
        o2.bind(e5.TEXTURE0);
        var c3 = this._context.isWebGL2 ? e5.DRAW_FRAMEBUFFER : e5.FRAMEBUFFER;
        this._target.bind(c3), this._ndcTriangle.bind(), this._ndcTriangle.draw(), this._ndcTriangle.unbind(), this._target.unbind(c3), o2.unbind(), e5.enable(e5.DEPTH_TEST), e5.depthMask(true);
      }, t4.prototype.createProgram = function() {
        s.assert(this._program === void 0, "expected blit program to be undefined before its creation");
        var e5 = this._context.gl, t5 = new h2.Shader(this._context, e5.VERTEX_SHADER, "blit.vert (blit)");
        t5.initialize(r3(63));
        var i3 = new h2.Shader(this._context, e5.FRAGMENT_SHADER, "blit.frag (blit)");
        return i3.initialize(r3(109)), this._program = new f2.Program(this._context, "BlitProgram"), this._program.initialize([t5, i3], false), this._ndcTriangle.initialized || this._ndcTriangle.initialize(), this._program.attribute("a_vertex", this._ndcTriangle.vertexLocation), this._program.link(), this._uSrcBounds = this._program.uniform("u_srcBounds"), this._uDstBounds = this._program.uniform("u_dstBounds"), this._uNearest = this._program.uniform("u_nearest"), this._program.bind(), e5.uniform1i(this._program.uniform("u_source"), 0), this._program.unbind(), this._program.valid;
      }, t4.prototype.initialize = function(e5) {
        var t5 = this._context.gl;
        return e5 === void 0 ? this._ndcTriangle = new l2.NdcFillingTriangle(this._context, "NdcFillingTriangle-Blit") : (this._ndcTriangle = e5, this._ndcTriangleShared = true), this._filter = t5.NEAREST, true;
      }, t4.prototype.uninitialize = function() {
        !this._ndcTriangleShared && this._ndcTriangle.initialized && this._ndcTriangle.uninitialize(), this._program.uninitialize();
      }, t4.prototype.frame = function() {
        s.logIf(!this._target || !this._target.valid, s.LogLevel.Warning, "valid target expected, given " + this._target), s.logIf(!this._framebuffer || !this._framebuffer.valid, s.LogLevel.Warning, "valid framebuffer for blitting from expected, given " + this._framebuffer);
        var e5 = this._context.gl;
        switch (this._readBuffer) {
          case e5.DEPTH_ATTACHMENT:
          case e5.STENCIL_ATTACHMENT:
          case e5.DEPTH_STENCIL_ATTACHMENT:
            return this.programBlit();
        }
        if (this._context.supportsBlitFramebuffer && this._enforceProgramBlit === false)
          return this.functionBlit();
        this.programBlit();
      }, Object.defineProperty(t4.prototype, "framebuffer", { set: function(e5) {
        this.assertInitialized(), this._framebuffer = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "readBuffer", { set: function(e5) {
        this.assertInitialized(), this._readBuffer = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "drawBuffer", { set: function(e5) {
        this.assertInitialized(), this._drawBuffer = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "target", { set: function(e5) {
        this.assertInitialized(), this._target = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "filter", { set: function(e5) {
        this._filter = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "srcBounds", { set: function(e5) {
        this._srcBounds = e5 ? a.vec4.clone(e5) : void 0;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "dstBounds", { set: function(e5) {
        this._dstBounds = e5 ? a.vec4.clone(e5) : void 0;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "enforceProgramBlit", { set: function(e5) {
        this._enforceProgramBlit = e5;
      }, enumerable: true, configurable: true }), o([c2.Initializable.initialize()], t4.prototype, "initialize", null), o([c2.Initializable.uninitialize()], t4.prototype, "uninitialize", null), o([c2.Initializable.assert_initialized()], t4.prototype, "frame", null), t4;
    }(c2.Initializable);
    t3.BlitPass = d2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = function() {
      function e4(e5) {
        this._type = e5;
      }
      return Object.defineProperty(e4.prototype, "type", { get: function() {
        return this._type;
      }, enumerable: true, configurable: true }), e4;
    }();
    t3.SceneNodeComponent = i2;
  }, function(e3, t3, r3) {
    function i2(e4) {
      for (var r4 in e4)
        t3.hasOwnProperty(r4) || (t3[r4] = e4[r4]);
    }
    Object.defineProperty(t3, "__esModule", { value: true });
    var n2 = r3(82);
    t3.branch = n2.branch, t3.commit = n2.commit, t3.version = n2.version;
    var o = r3(27);
    t3.Context = o.Context;
    var a = r3(86);
    t3.Canvas = a.Canvas;
    var s = r3(43);
    t3.Controller = s.Controller;
    var u2 = r3(2);
    t3.Initializable = u2.Initializable;
    var c2 = r3(41);
    t3.ContextMasquerade = c2.ContextMasquerade;
    var l2 = r3(28);
    t3.ExtensionsHash = l2.ExtensionsHash;
    var f2 = r3(15);
    t3.ChangeLookup = f2.ChangeLookup;
    var h2 = r3(30);
    t3.MouseEventProvider = h2.MouseEventProvider;
    var d2 = r3(32);
    t3.TouchEventProvider = d2.TouchEventProvider;
    var p2 = r3(31);
    t3.PointerEventProvider = p2.PointerEventProvider;
    var _2 = r3(33);
    t3.EventHandler = _2.EventHandler;
    var g2 = r3(5);
    t3.Buffer = g2.Buffer;
    var m2 = r3(21);
    t3.Color = m2.Color;
    var v2 = r3(88);
    t3.ColorScale = v2.ColorScale;
    var b2 = r3(48);
    t3.DefaultFramebuffer = b2.DefaultFramebuffer;
    var y2 = r3(17);
    t3.Framebuffer = y2.Framebuffer;
    var E2 = r3(9);
    t3.Geometry = E2.Geometry;
    var x2 = r3(6);
    t3.Program = x2.Program;
    var T2 = r3(23);
    t3.Renderbuffer = T2.Renderbuffer;
    var A2 = r3(50);
    t3.Renderer = A2.Renderer, t3.LoadingStatus = A2.LoadingStatus;
    var O2 = r3(7);
    t3.Shader = O2.Shader;
    var P2 = r3(4);
    t3.Texture2D = P2.Texture2D;
    var L2 = r3(100);
    t3.Texture3D = L2.Texture3D;
    var w2 = r3(51);
    t3.TextureCube = w2.TextureCube;
    var S2 = r3(101);
    t3.UnifiedBuffer = S2.UnifiedBuffer;
    var R2 = r3(49);
    t3.VertexArray = R2.VertexArray;
    var I2 = r3(14);
    t3.Wizard = I2.Wizard;
    var M2 = r3(52);
    t3.Camera = M2.Camera;
    var C2 = r3(102);
    t3.TileCameraGenerator = C2.TileCameraGenerator;
    var N2 = r3(11);
    t3.CameraModifier = N2.CameraModifier;
    var D2 = r3(103);
    t3.Navigation = D2.Navigation;
    var B2 = r3(53);
    t3.FirstPersonModifier = B2.FirstPersonModifier;
    var F2 = r3(54);
    t3.PanModifier = F2.PanModifier;
    var z2 = r3(22);
    t3.PointerLock = z2.PointerLock;
    var j = r3(56);
    t3.TrackballModifier = j.TrackballModifier;
    var U2 = r3(57);
    t3.TurntableModifier = U2.TurntableModifier;
    var G2 = r3(55);
    t3.PinchZoomModifier = G2.PinchZoomModifier;
    var k2 = r3(58);
    t3.WheelZoomModifier = k2.WheelZoomModifier;
    var V2 = r3(104);
    t3.NdcFillingRectangle = V2.NdcFillingRectangle;
    var H2 = r3(12);
    t3.NdcFillingTriangle = H2.NdcFillingTriangle;
    var W2 = r3(37);
    t3.AbstractKernel = W2.AbstractKernel;
    var X2 = r3(59);
    t3.AntiAliasingKernel = X2.AntiAliasingKernel;
    var q2 = r3(60);
    t3.RandomSquareKernel = q2.RandomSquareKernel;
    var Y2 = r3(37);
    t3.KernelF32 = Y2.KernelF32, t3.KernelI32 = Y2.KernelI32, t3.KernelI8 = Y2.KernelI8, t3.KernelUI32 = Y2.KernelUI32, t3.KernelUI8 = Y2.KernelUI8;
    var K2 = r3(61);
    t3.AccumulatePass = K2.AccumulatePass;
    var Z = r3(38);
    t3.BlitPass = Z.BlitPass;
    var $ = r3(110);
    t3.DebugPass = $.DebugPass;
    var Q2 = r3(112);
    t3.EnvironmentRenderingPass = Q2.EnvironmentRenderingPass, t3.EnvironmentTextureType = Q2.EnvironmentTextureType;
    var J2 = r3(114);
    t3.ReadbackPass = J2.ReadbackPass;
    var ee2 = r3(64);
    t3.GaussFilter = ee2.GaussFilter;
    var te2 = r3(118);
    t3.ShadowPass = te2.ShadowPass;
    var re2 = r3(44);
    t3.EyeGazeDataStream = re2.EyeGazeDataStream, t3.EyeGazeDataStreams = re2.EyeGazeDataStreams;
    var ie2 = r3(29);
    t3.EyeGazeEventProvider = ie2.EyeGazeEventProvider;
    var ne2 = r3(45);
    t3.EyeGazeData = ne2.EyeGazeData, i2(r3(65)), i2(r3(25)), i2(r3(127));
    var oe2 = r3(0);
    t3.auxiliaries = oe2;
    var ae2 = r3(1);
    t3.vec2 = ae2.vec2, t3.vec3 = ae2.vec3, t3.vec4 = ae2.vec4;
    var se2 = r3(1);
    t3.mat2 = se2.mat2, t3.mat2d = se2.mat2d, t3.mat3 = se2.mat3, t3.mat4 = se2.mat4;
    var ue2 = r3(1);
    t3.quat = ue2.quat;
    var ce2 = r3(3);
    t3.gl_matrix_extensions = ce2;
    var le2 = r3(13);
    t3.tuples = le2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(0), n2 = r3(28), o = function() {
      function e4() {
        this._extensionsStrive = new Array(), this._extensionsConceal = new Array(), this._functionsUndefine = new Array();
      }
      return e4.fromHash = function(t4) {
        var r4 = new e4(), i3 = n2.ExtensionsHash.decode(t4);
        return r4._backend = i3[0], r4._extensionsStrive = i3[1], r4._extensionsConceal = n2.ExtensionsHash.complement(r4._backend, r4._extensionsStrive), r4;
      }, e4.fromPreset = function(t4) {
        for (var r4, o2 = new e4(), a = new Array(), s = 0, u2 = e4.presets(); s < u2.length; s++) {
          var c2 = u2[s];
          if (a.push(c2.identifier), c2.identifier === t4) {
            r4 = c2;
            break;
          }
        }
        if (r4 === void 0 && i2.assert(false, "expected valid identifier, available ['" + a.join("', '") + "'], given '" + t4 + "'"), (r4 = r4).extensions_hash !== void 0) {
          var l2 = n2.ExtensionsHash.decode(r4.extensions_hash);
          o2._backend = l2[0], o2._extensionsStrive = l2[1];
        } else
          o2._backend = r4.backend;
        return i2.assert(o2._backend !== void 0, "expected backend to be included in preset"), r4.extensions_strive === void 0 ? (o2._extensionsStrive = [], o2._extensionsConceal = r4.extensions_conceal ? r4.extensions_conceal : []) : (o2._extensionsStrive = r4.extensions_strive, o2._extensionsConceal = n2.ExtensionsHash.complement(o2._backend, r4.extensions_strive)), o2._functionsUndefine = r4.functions_undefine ? r4.functions_undefine : [], o2;
      }, e4.fromGET = function() {
        var t4 = i2.GETparameter("msqrd_h");
        if (t4 !== void 0)
          return e4.fromHash(t4);
        var r4 = i2.GETparameter("msqrd_p");
        return r4 !== void 0 ? e4.fromPreset(r4) : void 0;
      }, e4.presets = function() {
        return this.MASQUERADE_JSON;
      }, Object.defineProperty(e4.prototype, "backend", { get: function() {
        return this._backend;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "extensionsStrive", { get: function() {
        return this._extensionsStrive;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "extensionsConceal", { get: function() {
        return this._extensionsConceal;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "functionsUndefine", { get: function() {
        return this._functionsUndefine;
      }, enumerable: true, configurable: true }), e4.MASQUERADE_JSON = r3(84), e4;
    }();
    t3.ContextMasquerade = o;
  }, function(e3, t3, r3) {
    var i2;
    !function(e4) {
      e4.WEBGL1_EXTENSIONS = ["ANGLE_instanced_arrays", "EXT_blend_minmax", "EXT_color_buffer_half_float", "EXT_disjoint_timer_query", "EXT_frag_depth", "EXT_sRGB", "EXT_shader_texture_lod", "EXT_texture_filter_anisotropic", "OES_element_index_uint", "OES_standard_derivatives", "OES_texture_float", "OES_texture_float_linear", "OES_texture_half_float", "OES_texture_half_float_linear", "OES_vertex_array_object", "WEBGL_color_buffer_float", "WEBGL_compressed_texture_astc", "WEBGL_compressed_texture_atc", "WEBGL_compressed_texture_etc", "WEBGL_compressed_texture_etc1", "WEBGL_compressed_texture_pvrtc", "WEBGL_compressed_texture_s3tc", "WEBGL_compressed_texture_s3tc_srgb", "WEBGL_debug_renderer_info", "WEBGL_debug_shaders", "WEBGL_depth_texture", "WEBGL_draw_buffers", "WEBGL_lose_context"], e4.WEBGL2_EXTENSIONS = ["EXT_color_buffer_float", "EXT_disjoint_timer_query_webgl2", "EXT_texture_filter_anisotropic", "OES_texture_float_linear", "OES_texture_half_float_linear", "WEBGL_compressed_texture_astc", "WEBGL_compressed_texture_atc", "WEBGL_compressed_texture_etc", "WEBGL_compressed_texture_etc1", "WEBGL_compressed_texture_pvrtc", "WEBGL_compressed_texture_s3tc", "WEBGL_compressed_texture_s3tc_srgb", "WEBGL_debug_renderer_info", "WEBGL_debug_shaders", "WEBGL_lose_context"], e4.WEBGL2_DEFAULT_EXTENSIONS = ["ANGLE_instanced_arrays", "EXT_blend_minmax", "EXT_frag_depth", "EXT_sRGB", "EXT_shader_texture_lod", "OES_element_index_uint", "OES_standard_derivatives", "OES_texture_float", "OES_texture_half_float", "OES_vertex_array_object", "WEBGL_depth_texture", "WEBGL_draw_buffers"];
    }(i2 || (i2 = {})), e3.exports = i2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(10), n2 = r3(0), o = r3(3), a = function() {
      function e4() {
        this._batchSize = 1, this._multiFrameNumber = 1, this._multiFrameNumberSubject = new i2.ReplaySubject(1), this._debugFrameNumber = 0, this._debugFrameNumberSubject = new i2.ReplaySubject(1), this._frameNumber = 0, this._frameNumberSubject = new i2.ReplaySubject(1), this._multiFrameDelay = 0, this._animationFrameID = 0, this._block = false, this._blockedUpdates = 0, this._intermediateFrameCount = 0, this._multiFrameCount = 0, this._intermediateFrameTimes = new Array(2), this._multiTime = [0, 0], this._invalidated = false, this._force = false;
      }
      return Object.defineProperty(e4.prototype, "debug", { set: function(t4) {
        t4 && n2.logVerbosity() < n2.LogLevel.Debug && (n2.logVerbosity(n2.LogLevel.Debug), n2.log(n2.LogLevel.Debug, "changed log verbosity to " + n2.LogLevel.Debug + " (debug)")), e4._debug = t4;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "batch", { set: function(e5) {
        n2.log(n2.LogLevel.Warning, "(adaptive) batch multi-frame rendering is experimental for now"), this._batchSize = Math.max(1, e5);
      }, enumerable: true, configurable: true }), e4.prototype.request = function(t4) {
        var r4 = this;
        t4 === void 0 && (t4 = e4.RequestType.Frame), this._animationFrameID = 0, this._block ? this._blockedUpdates++ : this._animationFrameID = window.requestAnimationFrame(function() {
          return r4.invoke(t4);
        });
      }, e4.prototype.invoke = function(t4) {
        if (this._animationFrameID !== 0) {
          if (n2.assert(this._controllable !== void 0, "frame sequence invoked without controllable set"), this._invalidated && (this._invalidated = false, (this.invokeUpdate() || this._force) && (this._force = false, this._frameNumber = 0, this.cancelWaitMultiFrame(), this.invokePrepare())), t4 === e4.RequestType.Frame && this._frameNumber === 1)
            return this._timeoutID === void 0 && this.startWaitMultiFrame(), void (this._animationFrameID = 0);
          this.isMultiFrameFinished() ? this._animationFrameID = 0 : (this.invokeFrameAndSwap(), this.request());
        }
      }, e4.prototype.invokeUpdate = function() {
        return n2.logIf(e4._debug, n2.LogLevel.Debug, "c invoke update     | pending: '" + this._animationFrameID + "', mfnum: " + this._multiFrameNumber), this._controllable.update(this._multiFrameNumber);
      }, e4.prototype.invokePrepare = function() {
        n2.logIf(e4._debug, n2.LogLevel.Debug, "c invoke prepare    |"), this._multiFrameTime = 0, this._intermediateFrameTimes[0] = Number.MAX_VALUE, this._intermediateFrameTimes[1] = Number.MIN_VALUE, this._multiTime[0] = performance.now(), this._controllable.prepare(), this._multiTime[1] = performance.now();
        var t4 = this._multiTime[1] - this._multiTime[0];
        this._multiFrameTime = t4, this._updateFrameTime = t4;
      }, e4.prototype.invokeFrameAndSwap = function() {
        n2.logIf(e4._debug, n2.LogLevel.Debug, "c invoke frame      | pending: '" + this._animationFrameID + "'");
        var t4 = this._debugFrameNumber > 0;
        n2.assert(!t4 || this._frameNumber < this._debugFrameNumber, "frame number about to exceed debug-frame number");
        var r4 = performance.now(), i3 = Math.min(this._multiFrameNumber, this._frameNumber + this._batchSize);
        for (this._debugFrameNumber > 0 && (i3 = Math.min(i3, this._debugFrameNumber)); this._frameNumber < i3; ++this._frameNumber)
          n2.logIf(e4._debug, n2.LogLevel.Debug, "c -> frame          | frame: " + this._frameNumber), this._controllable.frame(this._frameNumber), ++this._intermediateFrameCount;
        n2.logIf(e4._debug, n2.LogLevel.Debug, "c -> swap           |"), this._controllable.swap(), this._multiTime[1] = performance.now();
        var o2 = this._multiTime[1] - r4;
        this._multiFrameTime += o2, this._intermediateFrameTimes[0] = Math.min(this._intermediateFrameTimes[0], o2), this._intermediateFrameTimes[1] = Math.max(this._intermediateFrameTimes[1], o2), this.frameNumberNext();
      }, e4.prototype.startWaitMultiFrame = function() {
        var t4 = this;
        this._timeoutID = window.setTimeout(function() {
          t4.request(e4.RequestType.MultiFrame), t4._timeoutID = void 0;
        }, this._multiFrameDelay);
      }, e4.prototype.cancelWaitMultiFrame = function() {
        this._timeoutID !== void 0 && (window.clearTimeout(this._timeoutID), this._timeoutID = void 0);
      }, e4.prototype.isMultiFrameFinished = function() {
        return this._debugFrameNumber > 0 ? this._frameNumber === this._debugFrameNumber : this._frameNumber === this._multiFrameNumber;
      }, e4.prototype.multiFrameNumberNext = function() {
        this._multiFrameNumberSubject.next(this._multiFrameNumber);
      }, e4.prototype.debugFrameNumberNext = function() {
        this._debugFrameNumberSubject.next(this._debugFrameNumber);
      }, e4.prototype.frameNumberNext = function() {
        this._frameNumberSubject.next(this._frameNumber);
      }, e4.prototype.update = function(e5) {
        e5 === void 0 && (e5 = false), this._invalidated = true, this._force = this._force || e5, this._animationFrameID === 0 && this.request();
      }, e4.prototype.block = function() {
        n2.logIf(e4._debug, n2.LogLevel.Debug, "c block   " + (this._block ? "(ignored) " : "          ") + "|"), this._block = true;
      }, e4.prototype.unblock = function() {
        n2.logIf(e4._debug, n2.LogLevel.Debug, "c unblock " + (this._block ? "          " : "(ignored) ") + "| blocked: #" + this._blockedUpdates), this._block && (this._block = false, this._blockedUpdates > 0 && (this._blockedUpdates = 0, this.update()));
      }, e4.prototype.cancel = function() {
        this._animationFrameID !== 0 && (window.cancelAnimationFrame(this._animationFrameID), this._animationFrameID = 0);
      }, Object.defineProperty(e4.prototype, "blocked", { get: function() {
        return this._block;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "controllable", { set: function(e5) {
        e5 !== this._controllable && (this._controllable = e5, this.update(true));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "multiFrameNumber", { get: function() {
        return this._multiFrameNumber;
      }, set: function(e5) {
        var t4 = Math.max(1, isNaN(e5) ? 1 : e5);
        t4 !== this._multiFrameNumber && (this._multiFrameNumber = t4, this.multiFrameNumberNext(), n2.logIf(t4 !== e5, n2.LogLevel.Debug, "multi-frame number adjusted to " + t4 + ", given " + e5), this.debugFrameNumber > this.multiFrameNumber ? this.debugFrameNumber = this.multiFrameNumber : this.update());
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "multiFrameNumber$", { get: function() {
        return this._multiFrameNumberSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "debugFrameNumber", { get: function() {
        return this._debugFrameNumber;
      }, set: function(e5) {
        var t4 = o.clamp(isNaN(e5) ? 0 : e5, 0, this.multiFrameNumber);
        t4 !== this._debugFrameNumber && (this._debugFrameNumber = t4, this.debugFrameNumberNext(), n2.logIf(t4 !== e5, n2.LogLevel.Debug, "debug-frame number adjusted to " + t4 + ", given " + e5), this.update(this.debugFrameNumber < this._frameNumber));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "debugFrameNumber$", { get: function() {
        return this._debugFrameNumberSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "multiFrameDelay", { get: function() {
        return this._multiFrameDelay;
      }, set: function(e5) {
        var t4 = Math.max(0, e5);
        t4 !== this._multiFrameDelay && (this._multiFrameDelay = t4);
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "frameNumber", { get: function() {
        return this._frameNumber;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "frameNumber$", { get: function() {
        return this._frameNumberSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "intermediateFrameCount", { get: function() {
        return this._intermediateFrameCount;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "multiFrameCount", { get: function() {
        return this._multiFrameCount;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "averageFrameTime", { get: function() {
        return this._frameNumber === 0 ? 0 : this._multiFrameTime / this._frameNumber;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "updateFrameTime", { get: function() {
        return this._updateFrameTime;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "minimumFrameTime", { get: function() {
        return this._intermediateFrameTimes[0];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "maximumFrameTime", { get: function() {
        return this._intermediateFrameTimes[1];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "multiFrameTime", { get: function() {
        return this._frameNumber === 0 ? 0 : this._multiTime[1] - this._multiTime[0];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "framesPerSecond", { get: function() {
        return this._frameNumber === 0 ? 0 : 1e3 / (this.multiFrameTime / this._frameNumber);
      }, enumerable: true, configurable: true }), e4._debug = false, e4;
    }();
    t3.Controller = a, function(e4) {
      !function(e5) {
        e5[e5.Frame = 0] = "Frame", e5[e5.MultiFrame = 1] = "MultiFrame";
      }(e4.RequestType || (e4.RequestType = {}));
    }(a = t3.Controller || (t3.Controller = {})), t3.Controller = a;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__awaiter || function(e4, t4, r4, i3) {
      return new (r4 || (r4 = Promise))(function(n3, o2) {
        function a2(e5) {
          try {
            u3(i3.next(e5));
          } catch (e6) {
            o2(e6);
          }
        }
        function s2(e5) {
          try {
            u3(i3.throw(e5));
          } catch (e6) {
            o2(e6);
          }
        }
        function u3(e5) {
          var t5;
          e5.done ? n3(e5.value) : (t5 = e5.value, t5 instanceof r4 ? t5 : new r4(function(e6) {
            e6(t5);
          })).then(a2, s2);
        }
        u3((i3 = i3.apply(e4, t4 || [])).next());
      });
    }, a = this && this.__generator || function(e4, t4) {
      var r4, i3, n3, o2, a2 = { label: 0, sent: function() {
        if (1 & n3[0])
          throw n3[1];
        return n3[1];
      }, trys: [], ops: [] };
      return o2 = { next: s2(0), throw: s2(1), return: s2(2) }, typeof Symbol == "function" && (o2[Symbol.iterator] = function() {
        return this;
      }), o2;
      function s2(o3) {
        return function(s3) {
          return function(o4) {
            if (r4)
              throw new TypeError("Generator is already executing.");
            for (; a2; )
              try {
                if (r4 = 1, i3 && (n3 = 2 & o4[0] ? i3.return : o4[0] ? i3.throw || ((n3 = i3.return) && n3.call(i3), 0) : i3.next) && !(n3 = n3.call(i3, o4[1])).done)
                  return n3;
                switch (i3 = 0, n3 && (o4 = [2 & o4[0], n3.value]), o4[0]) {
                  case 0:
                  case 1:
                    n3 = o4;
                    break;
                  case 4:
                    return a2.label++, { value: o4[1], done: false };
                  case 5:
                    a2.label++, i3 = o4[1], o4 = [0];
                    continue;
                  case 7:
                    o4 = a2.ops.pop(), a2.trys.pop();
                    continue;
                  default:
                    if (!((n3 = (n3 = a2.trys).length > 0 && n3[n3.length - 1]) || o4[0] !== 6 && o4[0] !== 2)) {
                      a2 = 0;
                      continue;
                    }
                    if (o4[0] === 3 && (!n3 || o4[1] > n3[0] && o4[1] < n3[3])) {
                      a2.label = o4[1];
                      break;
                    }
                    if (o4[0] === 6 && a2.label < n3[1]) {
                      a2.label = n3[1], n3 = o4;
                      break;
                    }
                    if (n3 && a2.label < n3[2]) {
                      a2.label = n3[2], a2.ops.push(o4);
                      break;
                    }
                    n3[2] && a2.ops.pop(), a2.trys.pop();
                    continue;
                }
                o4 = t4.call(e4, a2);
              } catch (e5) {
                o4 = [6, e5], i3 = 0;
              } finally {
                r4 = n3 = 0;
              }
            if (5 & o4[0])
              throw o4[1];
            return { value: o4[0] ? o4[1] : void 0, done: true };
          }([o3, s3]);
        };
      }
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var s = r3(45), u2 = function(e4) {
      function t4() {
        return e4 !== null && e4.apply(this, arguments) || this;
      }
      return n2(t4, e4), t4;
    }(EventTarget);
    t3.EyeGazeEventTarget = u2;
    var c2 = function() {
      function e4() {
        this._eyeGazeDataStreams = new l2(), this._eyeGazeEventTarget = new EventTarget();
      }
      return e4.prototype.generateStreamConfigByte = function() {
        var e5 = Uint8Array.from([0]);
        return this._eyeGazeDataStreams.gazePosition && (e5[0] = 1 | e5[0]), this._eyeGazeDataStreams.gazeOrigin && (e5[0] = 2 | e5[0]), this._eyeGazeDataStreams.eyePositionNormalized && (e5[0] = 4 | e5[0]), this._eyeGazeDataStreams.headPositionAndRotation && (e5[0] = 8 | e5[0]), this._eyeGazeDataStreams.userPresence && (e5[0] = 16 | e5[0]), e5;
      }, e4.prototype.performHandshake = function() {
        this._eyeGazeDataStreams.recalculateNumberOfFloats();
        var e5 = this.generateStreamConfigByte();
        this._webSocket.send(e5);
      }, e4.prototype.parseEyeTrackingData = function(t4) {
        if (t4.length < this._eyeGazeDataStreams.expectedNumberOfFloats)
          return new CustomEvent(e4.BINARY_MESSAGE_PARSING_ERROR);
        var r4 = 0, i3 = new s.EyeGazeData();
        return this._eyeGazeDataStreams.gazePosition && (i3.gazePositionXY[0] = t4[r4++], i3.gazePositionXY[1] = t4[r4++]), this._eyeGazeDataStreams.gazeOrigin && (i3.gazeOriginRightXYZ[0] = t4[r4++], i3.gazeOriginRightXYZ[1] = t4[r4++], i3.gazeOriginRightXYZ[2] = t4[r4++], i3.gazeOriginLeftXYZ[0] = t4[r4++], i3.gazeOriginLeftXYZ[1] = t4[r4++], i3.gazeOriginLeftXYZ[2] = t4[r4++]), this._eyeGazeDataStreams.eyePositionNormalized && (i3.eyePositionRightNormalizedXYZ[0] = t4[r4++], i3.eyePositionRightNormalizedXYZ[1] = t4[r4++], i3.eyePositionRightNormalizedXYZ[2] = t4[r4++], i3.eyePositionLeftNormalizedXYZ[0] = t4[r4++], i3.eyePositionLeftNormalizedXYZ[1] = t4[r4++], i3.eyePositionLeftNormalizedXYZ[2] = t4[r4++]), this._eyeGazeDataStreams.headPositionAndRotation && (i3.headPositionXYZ[0] = t4[r4++], i3.headPositionXYZ[1] = t4[r4++], i3.headPositionXYZ[2] = t4[r4++], i3.headRotationXYZ[0] = t4[r4++], i3.headRotationXYZ[1] = t4[r4++], i3.headRotationXYZ[2] = t4[r4++]), this._eyeGazeDataStreams.userPresence && (i3.userPresence = t4[r4] !== 0), new CustomEvent(e4.EYE_GAZE_DATA, { detail: { eyeGazeData: i3 } });
      }, e4.prototype.onOpen = function(t4) {
        this.dispatchEvent(new CustomEvent(e4.CONNECTION_STATUS, { detail: { message: e4.SUCCESSFULLY_CONNECTED_TO_SERVER, event: t4 } })), this.performHandshake();
      }, e4.prototype.onClose = function(t4) {
        this.dispatchEvent(new CustomEvent(e4.CONNECTION_STATUS, { detail: { message: e4.DISCONNECTED_TO_SERVER, event: t4 } }));
      }, e4.prototype.onError = function(t4) {
        this.dispatchEvent(new CustomEvent(e4.CONNECTION_STATUS, { detail: { message: e4.CONNECTION_ERROR, event: t4 } }));
      }, e4.prototype.onMessage = function(t4) {
        return o(this, void 0, void 0, function() {
          var r4, i3;
          return a(this, function(n3) {
            switch (n3.label) {
              case 0:
                return typeof t4.data == "string" ? [3, 2] : [4, t4.data.arrayBuffer()];
              case 1:
                return r4 = n3.sent(), i3 = new Float32Array(r4), this.dispatchEvent(this.parseEyeTrackingData(i3)), [3, 3];
              case 2:
                this.dispatchEvent(new CustomEvent(e4.NEW_SERVER_MESSAGE, { detail: { message: t4.data } })), n3.label = 3;
              case 3:
                return [2];
            }
          });
        });
      }, e4.prototype.connect = function(e5) {
        var t4 = this;
        this._webSocket = new WebSocket(e5), this._webSocket.onopen = function(e6) {
          t4.onOpen(e6);
        }, this._webSocket.onclose = function(e6) {
          t4.onClose(e6);
        }, this._webSocket.onerror = function(e6) {
          t4.onError(e6);
        }, this._webSocket.onmessage = function(e6) {
          t4.onMessage(e6);
        };
      }, e4.prototype.addEventListener = function(e5, t4, r4) {
        this._eyeGazeEventTarget.addEventListener(e5, t4, r4);
      }, e4.prototype.dispatchEvent = function(e5) {
        return this._eyeGazeEventTarget.dispatchEvent(e5);
      }, e4.prototype.removeEventListener = function(e5, t4, r4) {
        this._eyeGazeEventTarget.removeEventListener(e5, t4, r4);
      }, Object.defineProperty(e4.prototype, "connectionState", { get: function() {
        return this._webSocket.readyState;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "eyeGazeDataStreams", { get: function() {
        return this._eyeGazeDataStreams;
      }, set: function(e5) {
        this._eyeGazeDataStreams !== e5 && (this._eyeGazeDataStreams = e5);
      }, enumerable: true, configurable: true }), e4.EYE_GAZE_DATA = "eyegazedata", e4.NEW_SERVER_MESSAGE = "newservermessage", e4.CONNECTION_STATUS = "connectionstatus", e4.BINARY_MESSAGE_PARSING_ERROR = "binarymessageparsingerror", e4.SUCCESSFULLY_CONNECTED_TO_SERVER = "successfully connected to server", e4.DISCONNECTED_TO_SERVER = "disconnected to server", e4.CONNECTION_ERROR = "connection error with server", e4;
    }();
    t3.EyeGazeDataStream = c2;
    var l2 = function() {
      function e4() {
        this.gazePosition = false, this.gazeOrigin = false, this.eyePositionNormalized = false, this.headPositionAndRotation = false, this.userPresence = false, this.expectedNumberOfFloats = 0;
      }
      return e4.prototype.recalculateNumberOfFloats = function() {
        var e5 = 0;
        this.gazePosition && (e5 += 2), this.gazeOrigin && (e5 += 6), this.eyePositionNormalized && (e5 += 6), this.headPositionAndRotation && (e5 += 6), this.userPresence && (e5 += 1), this.expectedNumberOfFloats = e5;
      }, e4;
    }();
    t3.EyeGazeDataStreams = l2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = function() {
      function e4() {
        this.gazePositionXY = [0, 0], this.gazeOriginRightXYZ = [0, 0, 0], this.gazeOriginLeftXYZ = [0, 0, 0], this.eyePositionRightNormalizedXYZ = [0, 0, 0], this.eyePositionLeftNormalizedXYZ = [0, 0, 0], this.headPositionXYZ = [0, 0, 0], this.headRotationXYZ = [0, 0, 0], this.userPresence = false;
      }
      return e4.prototype.toString = function() {
        var e5 = "";
        return e5 += "Gaze Position: " + this.gazePositionXY + "\n", e5 += "Gaze Origin Right: " + this.gazeOriginRightXYZ + "\n", e5 += "Gaze Origin Left: " + this.gazeOriginLeftXYZ + "\n", e5 += "Eye Position Normalized Right: " + this.eyePositionRightNormalizedXYZ + "\n", e5 += "Eye Position Normalized Left: " + this.eyePositionLeftNormalizedXYZ + "\n", e5 += "Head Position: " + this.headPositionXYZ + "\n", (e5 += "Head Rotation: " + this.headRotationXYZ + "\n") + "User Presence: " + this.userPresence + "\n";
      }, e4;
    }();
    t3.EyeGazeData = i2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true }), t3.IS_IE11 = typeof navigator == "undefined" ? void 0 : /MSIE 11|Windows/i.test(navigator.userAgent), t3.IS_EDGE = typeof navigator == "undefined" ? void 0 : /Edge\/\d./i.test(navigator.userAgent);
  }, function(e3, t3, r3) {
    var i2, n2, o = r3(89), a = r3(0);
    (n2 = i2 || (i2 = {})).validate = function(e4, t4, r4) {
      var i3 = new o.Validator();
      if (r4 !== void 0)
        for (var n3 = 0, s = r4; n3 < s.length; n3++) {
          var u2 = s[n3];
          i3.addSchema(u2[0], u2[1]);
        }
      var c2 = i3.validate(e4, t4);
      return a.logIf(!c2.valid, a.LogLevel.Warning, "schema expected to be valid:\n" + c2.toString()), c2.valid;
    }, n2.complement = function e4(t4, r4) {
      if (t4 !== void 0)
        switch (a.assert(r4.hasOwnProperty("properties") && r4.type === "object" || r4.hasOwnProperty("items") && r4.type === "array", "expected schema to have 'properties' or 'items', given " + r4), r4.type) {
          case "object":
            for (var i3 = r4.properties, n3 = 0, o2 = Object.getOwnPropertyNames(i3); n3 < o2.length; n3++) {
              var s = o2[n3], u2 = i3[s], c2 = u2.type === "object", l2 = t4.hasOwnProperty(s), f2 = u2.hasOwnProperty("properties"), h2 = u2.hasOwnProperty("default");
              a.assert(f2 && c2 || !f2 && !c2, "expected property '" + s + "' to be of type 'object', given '" + u2.type + "'"), l2 && f2 ? e4(t4[s], u2) : !l2 && h2 && Object.defineProperty(t4, s, { value: u2.default, writable: true });
            }
            break;
          case "array":
            var d2 = r4.items;
            if (d2.type !== "object")
              break;
            for (var p2 = 0, _2 = Object.getOwnPropertyNames(t4); p2 < _2.length; p2++) {
              var g2 = _2[p2];
              g2 !== "length" && e4(t4[g2], d2);
            }
        }
    }, n2.compare = function e4(t4, r4, i3, n3) {
      n3 === void 0 && (n3 = "");
      var o2 = i3 !== void 0;
      if (a.assert(!o2 || i3.hasOwnProperty("any"), "expected allocation lookup object to have 'any' key"), t4 === void 0 && r4 !== void 0 || t4 !== void 0 && r4 === void 0)
        return o2 && i3.alter(n3), true;
      var s = true, u2 = [typeof t4, typeof r4], c2 = [t4 instanceof Array, r4 instanceof Array];
      if (!(c2[0] && c2[1] || u2[0] === "object" && u2[1] === "object"))
        return !(s = t4 === r4) && o2 && i3.alter("" + n3), !s;
      for (var l2 = 0, f2 = Array.from(new Set(Array().concat(Object.getOwnPropertyNames(t4), Object.getOwnPropertyNames(r4))).values()); l2 < f2.length; l2++) {
        var h2 = f2[l2];
        if (h2 !== "length") {
          var d2 = [t4[h2], r4[h2]];
          u2 = [typeof d2[0], typeof d2[1]];
          var p2 = n3 + (n3.length > 0 && !c2[0] ? "." : "") + (c2[0] ? "" : h2);
          if (d2[0] instanceof Array && d2[1] instanceof Array || u2[0] === "object" && u2[1] === "object")
            s = s && !e4(d2[0], d2[1], i3, p2);
          else {
            if (u2[0] === u2[1] && d2[0] === d2[1])
              continue;
            s = false, o2 && i3.alter(p2);
          }
        }
      }
      return !s;
    }, e3.exports = i2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(0), s = r3(17), u2 = r3(2), c2 = function(e4) {
      function t4() {
        return e4 !== null && e4.apply(this, arguments) || this;
      }
      return n2(t4, e4), t4.prototype.create = function() {
        return this._object = s.Framebuffer.DEFAULT_FRAMEBUFFER, this._valid = true, this._clearColors = new Array(1), this._clearDepth = 1, this._clearStencil = 0, this.clear = this.es2Clear, this._object;
      }, t4.prototype.delete = function() {
        this._object = void 0, this._valid = false;
      }, t4.prototype.hasAttachment = function(e5) {
        return false;
      }, t4.prototype.bind = function(e5) {
        e5 === void 0 && (e5 = this.context.gl.FRAMEBUFFER), this.context.gl.bindFramebuffer(e5, this._object);
      }, t4.prototype.clearColor = function(t5) {
        e4.prototype.clearColor.call(this, t5);
      }, t4.prototype.resize = function() {
        a.assert(false, "the default framebuffer cannot be resized directly");
      }, Object.defineProperty(t4.prototype, "width", { get: function() {
        return this.context.gl.canvas.width;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "height", { get: function() {
        return this.context.gl.canvas.height;
      }, enumerable: true, configurable: true }), o([u2.Initializable.assert_initialized()], t4.prototype, "bind", null), t4;
    }(s.Framebuffer);
    t3.DefaultFramebuffer = c2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(0), s = r3(2), u2 = function(e4) {
      function t4() {
        var t5 = e4 !== null && e4.apply(this, arguments) || this;
        return t5._buffersBound = false, t5;
      }
      return n2(t4, e4), t4.prototype.create = function(e5, r4) {
        var i3 = this;
        if (this.context.isWebGL2 || this.context.supportsVertexArrayObject) {
          var n3 = this.context.gl2facade;
          this._object = n3.createVertexArray(), this._valid = this._object !== void 0, this._bind = function() {
            n3.bindVertexArray(i3.object), i3._buffersBound || (e5(), i3._buffersBound = true);
          }, this._unbind = function() {
            return n3.bindVertexArray(t4.DEFAULT_VERTEX_ARRAY);
          };
        } else
          this._bind = function() {
            return e5();
          }, this._unbind = function() {
            return r4();
          }, this._valid = true;
        return this._object;
      }, t4.prototype.delete = function() {
        this.context.isWebGL2 || this.context.supportsVertexArrayObject ? (a.assert(this._object !== void 0, "expected WebGLVertexArrayObject object"), this._context.gl2facade.deleteVertexArray(this._object), this._object = void 0, this._valid = false, this._buffersBound = false) : this._valid = false;
      }, t4.prototype.bind = function() {
        this._bind();
      }, t4.prototype.unbind = function() {
        this._unbind();
      }, t4.prototype.invalidate = function() {
        this._buffersBound = false;
      }, t4.DEFAULT_VERTEX_ARRAY = void 0, o([s.Initializable.assert_initialized()], t4.prototype, "bind", null), o([s.Initializable.assert_initialized()], t4.prototype, "unbind", null), t4;
    }(r3(8).AbstractObject);
    t3.VertexArray = u2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a, s = r3(10), u2 = r3(1), c2 = r3(0), l2 = r3(3), f2 = r3(15), h2 = r3(2), d2 = r3(13), p2 = r3(14);
    !function(e4) {
      e4[e4.Started = 0] = "Started", e4[e4.Finished = 1] = "Finished";
    }(a = t3.LoadingStatus || (t3.LoadingStatus = {}));
    var _2 = function(e4) {
      function t4() {
        var t5 = e4 !== null && e4.apply(this, arguments) || this;
        return t5._altered = Object.assign(new f2.ChangeLookup(), { any: false, multiFrameNumber: false, frameSize: false, canvasSize: false, framePrecision: false, clearColor: false, debugTexture: false }), t5._frameSize = [0, 0], t5._canvasSize = [0, 0], t5._framePrecision = p2.Wizard.Precision.half, t5._clearColor = [0, 0, 0, 1], t5._debugTextures = new Array(), t5._debugTextureSubject = new s.ReplaySubject(1), t5;
      }
      return n2(t4, e4), t4.prototype.invalidate = function(e5) {
        e5 === void 0 && (e5 = false), this._invalidate(e5);
      }, t4.prototype.debugTextureNext = function() {
        this._debugTextureSubject.next(this._debugTexture);
      }, Object.defineProperty(t4.prototype, "context", { get: function() {
        return this.assertInitialized(), this._context;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "canvasSize", { get: function() {
        return this.assertInitialized(), this._canvasSize;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "altered", { get: function() {
        return this._altered.any;
      }, enumerable: true, configurable: true }), t4.prototype.onSwap = function() {
      }, t4.prototype.startLoading = function() {
        this._isLoading = true, this._loadingStatusSubscription.next(a.Started);
      }, t4.prototype.finishLoading = function() {
        this._isLoading = false, this._loadingStatusSubscription.next(a.Finished);
      }, t4.prototype.initialize = function(e5, t5, r4) {
        return c2.assert(e5 !== void 0, "valid webgl context required"), this._context = e5, c2.assert(t5 !== void 0, "valid multi-frame update callback required"), this._invalidate = t5, this._isLoading = true, this._loadingStatusSubscription = new s.ReplaySubject(), this.onInitialize(e5, t5, r4);
      }, t4.prototype.uninitialize = function() {
        this.onUninitialize();
      }, t4.prototype.discard = function() {
        this.onDiscarded();
      }, t4.prototype.update = function(e5) {
        return this._canvasSize[0] === this._context.gl.canvas.width && this._canvasSize[1] === this._context.gl.canvas.height || (this._canvasSize[0] = this._context.gl.canvas.width, this._canvasSize[1] = this._context.gl.canvas.height, this._altered.alter("canvasSize")), this._multiFrameNumber !== e5 && (this._multiFrameNumber = e5, this._altered.alter("multiFrameNumber")), this.onUpdate() || this._altered.any;
      }, t4.prototype.prepare = function() {
        this.onPrepare();
      }, t4.prototype.frame = function(e5) {
        this.onFrame(e5);
      }, t4.prototype.swap = function() {
        this.onSwap();
      }, t4.prototype.frameCoords = function(e5, t5) {
        var r4 = u2.vec2.divide(l2.v2(), this._frameSize, this.canvasSize);
        return u2.vec2.floor(r4, u2.vec2.multiply(r4, [e5 + 0.5, t5 + 0.5], r4)), u2.vec2.add(r4, r4, [0.5, 0.5]), d2.tuple2(r4);
      }, Object.defineProperty(t4.prototype, "frameSize", { set: function(e5) {
        this.assertInitialized(), u2.vec2.equals(this._frameSize, e5) || (Object.assign(this._frameSize, e5), this._altered.alter("frameSize"), this.invalidate());
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "framePrecision", { set: function(e5) {
        this.assertInitialized(), this._framePrecision !== e5 && (this._framePrecision = e5, this._altered.alter("framePrecision"), this.invalidate());
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "clearColor", { set: function(e5) {
        this.assertInitialized(), u2.vec4.equals(this._clearColor, e5) || (Object.assign(this._clearColor, e5), this._altered.alter("clearColor"), this.invalidate());
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "debugTextures", { get: function() {
        return this.assertInitialized(), this._debugTextures;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "debugTexture", { get: function() {
        return this.assertInitialized(), this._debugTexture;
      }, set: function(e5) {
        this.assertInitialized(), this._debugTexture !== e5 && (c2.logIf(e5 >= this._debugTextures.length, c2.LogLevel.Error, "invalid texture index, debug texture disabled (index set to -1) | " + e5 + " not in [-1,+" + (this._debugTextures.length - 1) + "]"), this._debugTexture = e5 < this._debugTextures.length ? l2.clamp(e5, -1, this._debugTextures.length - 1) : -1, this._altered.alter("debugTexture"), this.invalidate());
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "debugTexture$", { get: function() {
        return this._debugTextureSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "isLoading", { get: function() {
        return this._isLoading;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "loadingStatus$", { get: function() {
        return this._loadingStatusSubscription.asObservable();
      }, enumerable: true, configurable: true }), o([h2.Initializable.assert_initialized()], t4.prototype, "invalidate", null), o([h2.Initializable.initialize()], t4.prototype, "initialize", null), o([h2.Initializable.uninitialize()], t4.prototype, "uninitialize", null), o([h2.Initializable.discard()], t4.prototype, "discard", null), o([h2.Initializable.assert_initialized()], t4.prototype, "update", null), o([h2.Initializable.assert_initialized()], t4.prototype, "prepare", null), o([h2.Initializable.assert_initialized()], t4.prototype, "frame", null), o([h2.Initializable.assert_initialized()], t4.prototype, "swap", null), t4;
    }(h2.Initializable);
    t3.Renderer = _2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(0), s = r3(20), u2 = r3(2), c2 = function(e4) {
      function t4() {
        var t5 = e4 !== null && e4.apply(this, arguments) || this;
        return t5._size = 0, t5._internalFormat = 0, t5._format = 0, t5._type = 0, t5._bytes = [0, 0, 0, 0, 0, 0], t5;
      }
      return n2(t4, e4), t4.prototype.faceID = function(e5) {
        var t5 = this._context.gl;
        switch (e5) {
          case t5.TEXTURE_CUBE_MAP_POSITIVE_X:
            return 0;
          case t5.TEXTURE_CUBE_MAP_NEGATIVE_X:
            return 1;
          case t5.TEXTURE_CUBE_MAP_POSITIVE_Y:
            return 2;
          case t5.TEXTURE_CUBE_MAP_NEGATIVE_Y:
            return 3;
          case t5.TEXTURE_CUBE_MAP_POSITIVE_Z:
            return 4;
          case t5.TEXTURE_CUBE_MAP_NEGATIVE_Z:
            return 5;
          default:
            return a.assert(false, "expected texture cube map identifier (" + t5.TEXTURE_CUBE_MAP_POSITIVE_X + ", " + t5.TEXTURE_CUBE_MAP_NEGATIVE_X + ", " + t5.TEXTURE_CUBE_MAP_POSITIVE_Y + ", " + t5.TEXTURE_CUBE_MAP_NEGATIVE_Y + ", " + t5.TEXTURE_CUBE_MAP_POSITIVE_Z + ", or" + t5.TEXTURE_CUBE_MAP_NEGATIVE_Z + "), given " + e5), -1;
        }
      }, t4.prototype.create = function(e5, r4, i3, n3) {
        a.assert(e5 > 0, "texture cube requires valid size (width/height) of greater than zero");
        var o2 = this._context.gl, s2 = this._context.gl2facade;
        return this._object = o2.createTexture(), this._size = e5, this._internalFormat = r4, this._format = i3, this._type = n3, o2.bindTexture(o2.TEXTURE_CUBE_MAP, this._object), o2.texParameteri(o2.TEXTURE_CUBE_MAP, o2.TEXTURE_MIN_FILTER, o2.LINEAR), o2.texParameteri(o2.TEXTURE_CUBE_MAP, o2.TEXTURE_MAG_FILTER, o2.LINEAR), o2.texParameteri(o2.TEXTURE_CUBE_MAP, o2.TEXTURE_WRAP_S, o2.CLAMP_TO_EDGE), o2.texParameteri(o2.TEXTURE_CUBE_MAP, o2.TEXTURE_WRAP_T, o2.CLAMP_TO_EDGE), s2.texImage2D(o2.TEXTURE_CUBE_MAP_POSITIVE_X, 0, this._internalFormat, this._size, this._size, 0, this._format, this._type), s2.texImage2D(o2.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, this._internalFormat, this._size, this._size, 0, this._format, this._type), s2.texImage2D(o2.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, this._internalFormat, this._size, this._size, 0, this._format, this._type), s2.texImage2D(o2.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, this._internalFormat, this._size, this._size, 0, this._format, this._type), s2.texImage2D(o2.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, this._internalFormat, this._size, this._size, 0, this._format, this._type), s2.texImage2D(o2.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, this._internalFormat, this._size, this._size, 0, this._format, this._type), o2.bindTexture(o2.TEXTURE_CUBE_MAP, t4.DEFAULT_TEXTURE), this._valid = o2.isTexture(this._object), this.context.allocationRegister.reallocate(this._identifier, 0), this._object;
      }, t4.prototype.delete = function() {
        a.assert(this._object instanceof WebGLTexture, "expected WebGLTexture object"), this._context.gl.deleteTexture(this._object), this._object = void 0, this._valid = false, this._internalFormat = 0, this._format = 0, this._type = 0, this._size = 0;
      }, t4.prototype.cropImage = function(e5, t5, r4, i3, n3) {
        var o2 = document.createElement("canvas");
        o2.width = i3, o2.height = n3;
        var s2 = o2.getContext("2d");
        return s2 ? (s2.drawImage(e5, t5, r4, i3, n3, 0, 0, i3, n3), s2.getImageData(0, 0, i3, n3)) : (console.log(a.LogLevel.Warning, "2D context creation failed when cropping image."), new ImageData(0, 0));
      }, t4.prototype.extractMipLevelFromAtlas = function(e5, t5) {
        for (var r4 = this.context.gl, i3 = e5.height / 2 * Math.pow(0.5, t5), n3 = [0, 0], o2 = [e5.width, e5.height], a2 = 0; a2 < t5; ++a2)
          o2[0] /= 2, o2[1] /= 2, n3[0] += o2[0], n3[1] += o2[1];
        r4.pixelStorei(r4.UNPACK_FLIP_Y_WEBGL, true);
        var s2 = this.cropImage(e5, n3[0], n3[1], i3, i3);
        this.data([r4.TEXTURE_CUBE_MAP_NEGATIVE_X, s2], t5);
        var u3 = this.cropImage(e5, n3[0] + i3, n3[1], i3, i3);
        this.data([r4.TEXTURE_CUBE_MAP_POSITIVE_Z, u3], t5);
        var c3 = this.cropImage(e5, n3[0] + 2 * i3, n3[1], i3, i3);
        this.data([r4.TEXTURE_CUBE_MAP_POSITIVE_X, c3], t5);
        var l2 = this.cropImage(e5, n3[0] + 3 * i3, n3[1], i3, i3);
        this.data([r4.TEXTURE_CUBE_MAP_NEGATIVE_Z, l2], t5);
        var f2 = this.cropImage(e5, n3[0], n3[1] + i3, i3, i3);
        this.data([r4.TEXTURE_CUBE_MAP_POSITIVE_Y, f2], t5);
        var h2 = this.cropImage(e5, n3[0] + i3, n3[1] + i3, i3, i3);
        this.data([r4.TEXTURE_CUBE_MAP_NEGATIVE_Y, h2], t5), r4.pixelStorei(r4.UNPACK_FLIP_Y_WEBGL, false);
      }, t4.prototype.bind = function(e5) {
        var t5 = this.context.gl;
        e5 && t5.activeTexture(e5), t5.bindTexture(t5.TEXTURE_CUBE_MAP, this._object);
      }, t4.prototype.unbind = function(e5) {
        var r4 = this.context.gl;
        e5 && r4.activeTexture(e5), r4.bindTexture(r4.TEXTURE_CUBE_MAP, t4.DEFAULT_TEXTURE);
      }, t4.prototype.fetch = function(e5, t5, r4) {
        var i3 = this;
        t5 === void 0 && (t5 = false), r4 === void 0 && (r4 = 0);
        var n3 = this.context.gl;
        return new Promise(function(o2, s2) {
          var u3 = new Array();
          e5.positiveX && u3.push([n3.TEXTURE_CUBE_MAP_POSITIVE_X, e5.positiveX]), e5.negativeX && u3.push([n3.TEXTURE_CUBE_MAP_NEGATIVE_X, e5.negativeX]), e5.positiveY && u3.push([n3.TEXTURE_CUBE_MAP_POSITIVE_Y, e5.positiveY]), e5.negativeY && u3.push([n3.TEXTURE_CUBE_MAP_NEGATIVE_Y, e5.negativeY]), e5.positiveZ && u3.push([n3.TEXTURE_CUBE_MAP_POSITIVE_Z, e5.positiveZ]), e5.negativeZ && u3.push([n3.TEXTURE_CUBE_MAP_NEGATIVE_Z, e5.negativeZ]);
          for (var c3 = u3.length, l2 = function(e6) {
            var u4 = new Image();
            u4.crossOrigin = "anonymous", u4.onerror = function() {
              return s2();
            }, u4.onload = function() {
              var t6 = i3.calculateMipLevelSize(r4);
              u4.width === u4.height ? u4.width === t6 ? (n3.pixelStorei(n3.UNPACK_FLIP_Y_WEBGL, true), i3.data([e6[0], u4], r4), n3.pixelStorei(n3.UNPACK_FLIP_Y_WEBGL, false), (c3 -= 1) == 0 && o2()) : a.log(a.LogLevel.Warning, "image ignored, width and height expected to match this texture's size " + t6 + ", given " + u4.width) : a.log(a.LogLevel.Warning, "image ignored, width and height expected to be equal (square image)");
            }, t5 && (u4.crossOrigin = "anonymous"), u4.src = e6[1];
          }, f2 = 0, h2 = u3; f2 < h2.length; f2++)
            l2(h2[f2]);
        });
      }, t4.prototype.fetchMipmapAtlas = function(e5, t5) {
        var r4 = this;
        return t5 === void 0 && (t5 = false), new Promise(function(i3, n3) {
          var o2 = new Image();
          o2.onerror = function() {
            return n3();
          }, o2.onload = function() {
            if (o2.width === 2 * o2.height) {
              for (var e6 = o2.height / 2, t6 = Math.log2(e6), n4 = 0; n4 < t6; ++n4)
                r4.extractMipLevelFromAtlas(o2, n4);
              i3();
            } else
              a.log(a.LogLevel.Warning, "Mipmap atlas expected to have dimensions of 2x1.");
          }, t5 && (o2.crossOrigin = "anonymous"), o2.src = e5;
        });
      }, t4.prototype.calculateMipLevelSize = function(e5) {
        return this._size * Math.pow(0.5, e5);
      }, t4.prototype.data = function(e5, t5, r4, i3) {
        t5 === void 0 && (t5 = 0), r4 === void 0 && (r4 = true), i3 === void 0 && (i3 = true);
        var n3 = this.context.gl, o2 = this.context.gl2facade, a2 = this.calculateMipLevelSize(t5), u3 = a2 * a2 * s.byteSizeOfFormat(this.context, this._internalFormat);
        if (this._type === this.context.gl2facade.HALF_FLOAT && this._internalFormat !== this.context.gl.RGBA16F ? u3 *= 2 : this._type === this.context.gl.FLOAT && this._internalFormat !== this.context.gl.RGBA16F && (u3 *= 4), r4 && this.bind(), e5 instanceof Array && e5.length === 2) {
          o2.texImage2D(e5[0], t5, this._internalFormat, a2, a2, 0, this._format, this._type, e5[1]);
          var c3 = this.faceID(e5[0]);
          this.context.allocationRegister.deallocate(this._identifier, this._bytes[c3]), this.context.allocationRegister.allocate(this._identifier, u3), this._bytes[c3] = u3;
        } else {
          var l2 = e5;
          l2.positiveX !== void 0 && (o2.texImage2D(n3.TEXTURE_CUBE_MAP_POSITIVE_X, t5, this._internalFormat, a2, a2, 0, this._format, this._type, l2.positiveX), this.context.allocationRegister.deallocate(this._identifier, this._bytes[0]), this.context.allocationRegister.allocate(this._identifier, u3), this._bytes[0] = u3), l2.negativeX !== void 0 && (o2.texImage2D(n3.TEXTURE_CUBE_MAP_NEGATIVE_X, t5, this._internalFormat, a2, a2, 0, this._format, this._type, l2.negativeX), this.context.allocationRegister.deallocate(this._identifier, this._bytes[1]), this.context.allocationRegister.allocate(this._identifier, u3), this._bytes[1] = u3), l2.positiveY !== void 0 && (o2.texImage2D(n3.TEXTURE_CUBE_MAP_POSITIVE_Y, t5, this._internalFormat, a2, a2, 0, this._format, this._type, l2.positiveY), this.context.allocationRegister.deallocate(this._identifier, this._bytes[2]), this.context.allocationRegister.allocate(this._identifier, u3), this._bytes[2] = u3), l2.negativeY !== void 0 && (o2.texImage2D(n3.TEXTURE_CUBE_MAP_NEGATIVE_Y, t5, this._internalFormat, a2, a2, 0, this._format, this._type, l2.negativeY), this.context.allocationRegister.deallocate(this._identifier, this._bytes[3]), this.context.allocationRegister.allocate(this._identifier, u3), this._bytes[3] = u3), l2.positiveZ !== void 0 && (o2.texImage2D(n3.TEXTURE_CUBE_MAP_POSITIVE_Z, t5, this._internalFormat, a2, a2, 0, this._format, this._type, l2.positiveZ), this.context.allocationRegister.deallocate(this._identifier, this._bytes[4]), this.context.allocationRegister.allocate(this._identifier, u3), this._bytes[4] = u3), l2.negativeZ !== void 0 && (o2.texImage2D(n3.TEXTURE_CUBE_MAP_NEGATIVE_Z, t5, this._internalFormat, a2, a2, 0, this._format, this._type, l2.negativeZ), this.context.allocationRegister.deallocate(this._identifier, this._bytes[5]), this.context.allocationRegister.allocate(this._identifier, u3), this._bytes[5] = u3);
        }
        i3 && this.unbind();
      }, t4.prototype.filter = function(e5, t5, r4, i3) {
        r4 === void 0 && (r4 = true), i3 === void 0 && (i3 = true);
        var n3 = this.context.gl;
        r4 && this.bind(), n3.texParameteri(n3.TEXTURE_CUBE_MAP, n3.TEXTURE_MAG_FILTER, e5), n3.texParameteri(n3.TEXTURE_CUBE_MAP, n3.TEXTURE_MIN_FILTER, t5), i3 && this.unbind();
      }, t4.prototype.wrap = function(e5, t5, r4, i3) {
        r4 === void 0 && (r4 = true), i3 === void 0 && (i3 = true);
        var n3 = this.context.gl;
        r4 && this.bind(), n3.texParameteri(n3.TEXTURE_CUBE_MAP, n3.TEXTURE_WRAP_S, e5), n3.texParameteri(n3.TEXTURE_CUBE_MAP, n3.TEXTURE_WRAP_T, t5), i3 && this.unbind();
      }, t4.prototype.levels = function(e5, t5, r4, i3) {
        r4 === void 0 && (r4 = true), i3 === void 0 && (i3 = true);
        var n3 = this.context.gl;
        r4 && this.bind(), n3.texParameteri(n3.TEXTURE_CUBE_MAP, n3.TEXTURE_BASE_LEVEL, e5), n3.texParameteri(n3.TEXTURE_CUBE_MAP, n3.TEXTURE_MAX_LEVEL, t5), i3 && this.unbind();
      }, t4.prototype.reformat = function(e5, t5, r4, i3, n3) {
        i3 === void 0 && (i3 = true), n3 === void 0 && (n3 = true), (e5 !== this._internalFormat || t5 !== void 0 && t5 !== this._format || r4 !== void 0 && r4 !== this._type) && (a.assert(e5 !== void 0, "valid internal format expected"), this._internalFormat = e5, t5 && (this._format = t5), r4 && (this._type = r4), this.data({ clearOnUndefined: true }, 0, i3, n3));
      }, t4.prototype.resize = function(e5, t5, r4) {
        t5 === void 0 && (t5 = true), r4 === void 0 && (r4 = true), e5 !== this._size && (this._size = e5, this.data({ clearOnUndefined: true }, 0, t5, r4));
      }, Object.defineProperty(t4.prototype, "bytes", { get: function() {
        return this.assertInitialized(), this.context.allocationRegister.allocated(this._identifier);
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "internalFormat", { get: function() {
        return this.assertInitialized(), this._internalFormat;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "format", { get: function() {
        return this.assertInitialized(), this._format;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "type", { get: function() {
        return this.assertInitialized(), this._type;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "size", { get: function() {
        return this.assertInitialized(), this._size;
      }, enumerable: true, configurable: true }), t4.DEFAULT_TEXTURE = void 0, o([u2.Initializable.assert_initialized()], t4.prototype, "bind", null), o([u2.Initializable.assert_initialized()], t4.prototype, "unbind", null), o([u2.Initializable.assert_initialized()], t4.prototype, "fetch", null), o([u2.Initializable.assert_initialized()], t4.prototype, "fetchMipmapAtlas", null), o([u2.Initializable.assert_initialized()], t4.prototype, "data", null), o([u2.Initializable.assert_initialized()], t4.prototype, "filter", null), o([u2.Initializable.assert_initialized()], t4.prototype, "wrap", null), o([u2.Initializable.assert_initialized()], t4.prototype, "levels", null), o([u2.Initializable.assert_initialized()], t4.prototype, "reformat", null), o([u2.Initializable.assert_initialized()], t4.prototype, "resize", null), t4;
    }(r3(8).AbstractObject);
    t3.TextureCube = c2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(1), n2 = r3(3), o = r3(0), a = r3(13), s = function() {
      function e4(t4, r4, n3) {
        this._fovy = e4.DEFAULT_FOVY, this._near = e4.DEFAULT_NEAR, this._far = e4.DEFAULT_FAR, this._viewport = [1, 1], this._aspect = 1, this._altered = false, this._eye = t4 ? i2.vec3.clone(t4) : i2.vec3.clone(e4.DEFAULT_EYE), this._center = r4 ? i2.vec3.clone(r4) : i2.vec3.clone(e4.DEFAULT_CENTER), this._up = n3 ? i2.vec3.clone(n3) : i2.vec3.clone(e4.DEFAULT_UP);
      }
      return e4.calculateFovY = function(e5, t4) {
        return 2 * Math.atan(0.5 * e5 / t4);
      }, e4.prototype.invalidate = function(e5, t4, r4) {
        r4 === void 0 && (r4 = false), e5 && (this._view = void 0, this._viewInverse = void 0), t4 && (this._projection = void 0, this._projectionInverse = void 0), (e5 || t4 || r4) && (this._viewProjection = void 0, this._viewProjectionInverse = void 0), this._altered = true;
      }, Object.defineProperty(e4.prototype, "eye", { get: function() {
        return this._eye;
      }, set: function(e5) {
        i2.vec3.equals(this._eye, e5) || (this._eye = i2.vec3.clone(e5), this.invalidate(true, false));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "center", { get: function() {
        return this._center;
      }, set: function(e5) {
        i2.vec3.equals(this._center, e5) || (this._center = i2.vec3.clone(e5), this.invalidate(true, false));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "up", { get: function() {
        return this._up;
      }, set: function(e5) {
        i2.vec3.equals(this._up, e5) || (this._up = i2.vec3.clone(e5), this.invalidate(true, false));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "fovy", { get: function() {
        return this._fovy;
      }, set: function(e5) {
        this._fovy !== e5 && (this._fovy = e5, this.invalidate(false, true));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "fovx", { set: function(e5) {
        var t4 = e5 * o.DEG2RAD, r4 = 2 * Math.atan(Math.tan(t4 / 2) * (1 / this.aspect)) * o.RAD2DEG;
        this._fovy !== r4 && (this._fovy = r4, this.invalidate(false, true));
      }, enumerable: true, configurable: true }), e4.prototype.fovFromLens = function(e5, t4) {
        var r4 = 2 * Math.atan(e5 / (2 * t4));
        this.fovx = r4 * o.RAD2DEG;
      }, Object.defineProperty(e4.prototype, "near", { get: function() {
        return this._near;
      }, set: function(e5) {
        this._near !== e5 && (e5 >= this._far && o.log(o.LogLevel.Warning, "near expected to be smaller than far (" + this._far + "), given " + e5), this._near = e5, this.invalidate(false, true));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "far", { get: function() {
        return this._far;
      }, set: function(e5) {
        this._far !== e5 && (this._near >= e5 && o.log(o.LogLevel.Warning, "far expected to be greater than near (" + this._near + "), given " + e5), this._far = e5, this.invalidate(false, true));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "viewport", { get: function() {
        return this._viewport;
      }, set: function(e5) {
        this._viewport[0] === e5[0] && this._viewport[1] === e5[1] || (this._viewport = a.duplicate2(e5), this.invalidate(false, true));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "width", { get: function() {
        return this._viewport[0];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "height", { get: function() {
        return this._viewport[1];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "aspect", { get: function() {
        return this._aspect;
      }, set: function(e5) {
        this._aspect !== e5 && (this._aspect = e5);
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "view", { get: function() {
        return this._view || (this._view = i2.mat4.lookAt(n2.m4(), this._eye, this._center, this._up)), this._view;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "viewInverse", { get: function() {
        return this._viewInverse !== void 0 || (this._viewInverse = i2.mat4.invert(n2.m4(), this.view)), this._viewInverse;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "projection", { get: function() {
        return this._projection || (this._projection = i2.mat4.perspective(n2.m4(), this.fovy * o.DEG2RAD, this.aspect, this.near, this.far)), this._projection;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "projectionInverse", { get: function() {
        return this._projectionInverse !== void 0 || (this._projectionInverse = i2.mat4.invert(n2.m4(), this.projection)), this._projectionInverse;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "viewProjection", { get: function() {
        return this._viewProjection || (this._viewProjection = i2.mat4.multiply(n2.m4(), this.projection, this.view), this._viewProjection = i2.mat4.multiply(n2.m4(), this.postViewProjection, this._viewProjection)), this._viewProjection;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "viewProjectionInverse", { get: function() {
        return this._viewProjectionInverse !== void 0 || (this._viewProjectionInverse = i2.mat4.invert(n2.m4(), this.viewProjection)), this._viewProjectionInverse;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "postViewProjection", { get: function() {
        return this._postViewProjection ? this._postViewProjection : i2.mat4.identity(n2.m4());
      }, set: function(e5) {
        this._postViewProjection = e5, this.invalidate(false, false, true);
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "altered", { get: function() {
        return this._altered;
      }, set: function(e5) {
        this._altered = e5;
      }, enumerable: true, configurable: true }), e4.DEFAULT_EYE = i2.vec3.fromValues(0, 0, 1), e4.DEFAULT_CENTER = i2.vec3.fromValues(0, 0, 0), e4.DEFAULT_UP = i2.vec3.fromValues(0, 1, 0), e4.DEFAULT_FOVY = 45, e4.DEFAULT_NEAR = 2, e4.DEFAULT_FAR = 8, e4;
    }();
    t3.Camera = s;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = r3(1), a = r3(3), s = function(e4) {
      function t4() {
        var r4 = e4 !== null && e4.apply(this, arguments) || this;
        return r4._rotation = o.mat4.create(), r4._sensitivity = t4.DEFAULT_SENSITIVITY, r4;
      }
      return n2(t4, e4), t4.prototype.initiate = function(e5) {
        Object.assign(this._reference, this._camera), this._initialPoint = e5;
      }, t4.prototype.process = function(e5, t5) {
        this._currentPoint = e5;
        var r4 = o.vec2.create();
        t5 === void 0 ? o.vec2.subtract(r4, this._initialPoint, this._currentPoint) : o.vec2.copy(r4, t5), o.vec2.scale(r4, r4, window.devicePixelRatio * this._sensitivity), o.vec2.copy(this._initialPoint, this._currentPoint);
        var i3 = o.vec3.sub(a.v3(), this._reference.eye, this._reference.center);
        o.vec3.normalize(i3, i3);
        var n3 = o.vec3.cross(a.v3(), i3, this._reference.up), s2 = o.mat4.fromRotation(a.m4(), -r4[0], this._reference.up), u2 = o.mat4.fromRotation(a.m4(), r4[1], n3);
        o.mat4.mul(this._rotation, u2, s2), this.update();
      }, t4.prototype.update = function() {
        if (this._camera !== void 0) {
          var e5 = o.mat4.fromTranslation(a.m4(), this._reference.eye);
          o.mat4.multiply(e5, e5, this._rotation), o.mat4.translate(e5, e5, o.vec3.negate(a.v3(), this._reference.eye));
          var t5 = o.vec3.transformMat4(a.v3(), this._reference.center, e5);
          this._camera.center = t5, Object.assign(this._reference, this._camera);
        }
      }, Object.defineProperty(t4.prototype, "sensitivity", { get: function() {
        return this._sensitivity;
      }, set: function(e5) {
        this._sensitivity = e5;
      }, enumerable: true, configurable: true }), t4.DEFAULT_SENSITIVITY = 8e-4, t4;
    }(r3(11).CameraModifier);
    t3.FirstPersonModifier = s;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = r3(1), a = r3(3), s = function(e4) {
      function t4() {
        var r4 = e4 !== null && e4.apply(this, arguments) || this;
        return r4._sensitivity = t4.DEFAULT_SENSITIVITY, r4._translation = a.v3(), r4;
      }
      return n2(t4, e4), t4.prototype.initiate = function(e5) {
        Object.assign(this._reference, this._camera), this._initialPoint = e5;
      }, t4.prototype.process = function(e5) {
        this._currentPoint = e5;
        var t5 = o.vec2.subtract(a.v2(), this._initialPoint, this._currentPoint);
        o.vec2.scale(t5, t5, window.devicePixelRatio * this._sensitivity);
        var r4 = o.vec3.sub(a.v3(), this._reference.eye, this._reference.center);
        o.vec3.normalize(r4, r4);
        var i3 = this._reference.up;
        o.vec3.normalize(i3, i3);
        var n3 = o.vec3.cross(a.v3(), i3, r4), s2 = o.vec3.scale(a.v3(), n3, t5[0]), u2 = o.vec3.scale(a.v3(), i3, t5[1]);
        o.vec3.negate(u2, u2), this._translation = o.vec3.add(a.v3(), u2, s2), this.update();
      }, t4.prototype.update = function() {
        if (this._camera !== void 0) {
          var e5 = o.mat4.fromTranslation(a.m4(), this._translation), t5 = o.vec3.transformMat4(a.v3(), this._reference.eye, e5), r4 = o.vec3.transformMat4(a.v3(), this._reference.center, e5);
          this._camera.eye = t5, this._camera.center = r4;
        }
      }, t4.DEFAULT_SENSITIVITY = 2e-3, t4;
    }(r3(11).CameraModifier);
    t3.PanModifier = s;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = r3(1), a = r3(3), s = function(e4) {
      function t4() {
        var r4 = e4 !== null && e4.apply(this, arguments) || this;
        return r4._sensitivity = t4.DEFAULT_SENSITIVITY, r4._translation = a.v3(), r4;
      }
      return n2(t4, e4), t4.prototype.initiate = function(e5, t5) {
        Object.assign(this._reference, this._camera);
        var r4 = o.vec2.subtract(a.v2(), e5, t5);
        this._initialDistance = o.vec2.length(r4);
      }, t4.prototype.process = function(e5, r4) {
        var i3 = o.vec2.subtract(a.v2(), e5, r4);
        this._currentDistance = o.vec2.length(i3);
        var n3 = (this._currentDistance / this._initialDistance - 1) * t4.DEFAULT_SENSITIVITY, s2 = o.vec3.sub(a.v3(), this._reference.center, this._reference.eye);
        o.vec3.normalize(s2, s2), this._translation = o.vec3.scale(a.v3(), s2, n3), this.update();
      }, t4.prototype.update = function() {
        if (this._camera !== void 0) {
          var e5 = o.mat4.fromTranslation(a.m4(), this._translation), t5 = o.vec3.transformMat4(a.v3(), this._reference.eye, e5);
          this._camera.eye = t5;
        }
      }, t4.DEFAULT_SENSITIVITY = 2, t4;
    }(r3(11).CameraModifier);
    t3.PinchZoomModifier = s;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = r3(1), a = r3(3), s = function(e4) {
      function t4() {
        var r4 = e4 !== null && e4.apply(this, arguments) || this;
        return r4._rotation = o.mat4.create(), r4._sensitivity = t4.DEFAULT_SENSITIVITY, r4;
      }
      return n2(t4, e4), t4.prototype.initiate = function(e5) {
        this._initialPoint = e5;
      }, t4.prototype.process = function(e5) {
        this._currentPoint = e5;
        var t5 = o.vec2.subtract(a.v2(), this._initialPoint, this._currentPoint);
        o.vec2.scale(t5, t5, window.devicePixelRatio * this._sensitivity), o.vec2.copy(this._initialPoint, this._currentPoint);
        var r4 = o.vec3.sub(a.v3(), this._reference.eye, this._reference.center);
        o.vec3.normalize(r4, r4);
        var i3 = o.vec3.normalize(a.v3(), this._reference.up), n3 = o.vec3.cross(a.v3(), r4, i3);
        o.vec3.scale(i3, i3, t5[1]), o.vec3.scale(n3, n3, t5[0]);
        var s2 = o.vec3.cross(a.v3(), o.vec3.add(a.v3(), i3, n3), r4);
        o.vec3.normalize(s2, s2);
        var u2 = o.quat.setAxisAngle(o.quat.create(), s2, o.vec2.len(t5));
        o.mat4.multiply(this._rotation, this._rotation, o.mat4.fromQuat(a.m4(), u2)), this.update();
      }, t4.prototype.update = function() {
        if (this._camera !== void 0) {
          var e5 = o.mat4.fromTranslation(a.m4(), this._reference.center);
          o.mat4.multiply(e5, e5, this._rotation), o.mat4.translate(e5, e5, o.vec3.negate(a.v3(), this._reference.center));
          var t5 = o.vec3.transformMat4(a.v3(), [0, 1, 0], this._rotation), r4 = o.vec3.transformMat4(a.v3(), this._reference.eye, e5);
          this._camera.up = t5, this._camera.eye = r4;
        }
      }, Object.defineProperty(t4.prototype, "sensitivity", { get: function() {
        return this._sensitivity;
      }, set: function(e5) {
        this._sensitivity = e5;
      }, enumerable: true, configurable: true }), t4.DEFAULT_SENSITIVITY = 2e-3, t4;
    }(r3(11).CameraModifier);
    t3.TrackballModifier = s;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = r3(1), a = r3(3), s = function(e4) {
      function t4() {
        var r4 = e4 !== null && e4.apply(this, arguments) || this;
        return r4._rotation = a.m4(), r4._maxAzimuth = 0.5 * +Math.PI - 1e-4, r4._minAzimuth = 0.5 * -Math.PI + 1e-4, r4._xAxisScreenSpace = a.v3(), r4._sensitivity = t4.DEFAULT_SENSITIVITY, r4;
      }
      return n2(t4, e4), t4.prototype.initiate = function(e5) {
        Object.assign(this._reference, this._camera), this._initialPoint = e5;
        var t5 = o.vec3.sub(a.v3(), this._reference.eye, this._reference.center);
        o.vec3.normalize(t5, t5), this._xAxisScreenSpace = o.vec3.cross(a.v3(), [0, 1, 0], t5), this._azimuth = Math.acos(o.vec3.dot(t5, [0, 1, 0])), this._azimuth = 0.5 * Math.PI - this._azimuth;
      }, t4.prototype.process = function(e5) {
        this._currentPoint = e5;
        var t5 = o.vec2.subtract(a.v2(), this._initialPoint, this._currentPoint);
        o.vec2.scale(t5, t5, window.devicePixelRatio * this._sensitivity), this._minAzimuth && (t5[1] = Math.min(this._azimuth - this._minAzimuth, t5[1])), this._maxAzimuth && (t5[1] = Math.max(this._azimuth - this._maxAzimuth, t5[1])), o.mat4.rotateY(this._rotation, a.m4(), t5[0]), o.mat4.rotate(this._rotation, this._rotation, t5[1], this._xAxisScreenSpace), this.update();
      }, t4.prototype.update = function() {
        if (this._camera !== void 0) {
          var e5 = o.mat4.fromTranslation(a.m4(), this._reference.center);
          o.mat4.multiply(e5, e5, this._rotation), o.mat4.translate(e5, e5, o.vec3.negate(a.v3(), this._reference.center));
          var t5 = o.vec3.transformMat4(a.v3(), [0, 1, 0], this._rotation), r4 = o.vec3.transformMat4(a.v3(), this._reference.eye, e5);
          this._camera.up = t5, this._camera.eye = r4;
        }
      }, Object.defineProperty(t4.prototype, "sensitivity", { get: function() {
        return this._sensitivity;
      }, set: function(e5) {
        this._sensitivity = e5;
      }, enumerable: true, configurable: true }), t4.DEFAULT_SENSITIVITY = 2e-3, t4;
    }(r3(11).CameraModifier);
    t3.TurntableModifier = s;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = r3(1), a = r3(3), s = function(e4) {
      function t4() {
        var r4 = e4 !== null && e4.apply(this, arguments) || this;
        return r4._sensitivity = t4.DEFAULT_SENSITIVITY, r4._translation = a.v3(), r4;
      }
      return n2(t4, e4), t4.prototype.process = function(e5) {
        Object.assign(this._reference, this._camera);
        var t5 = e5 * this._sensitivity, r4 = o.vec3.sub(a.v3(), this._reference.center, this._reference.eye);
        o.vec3.normalize(r4, r4), this._translation = o.vec3.scale(a.v3(), r4, t5), this.update();
      }, t4.prototype.update = function() {
        if (this._camera !== void 0) {
          var e5 = o.mat4.fromTranslation(a.m4(), this._translation), t5 = o.vec3.transformMat4(a.v3(), this._reference.eye, e5);
          this._camera.eye = t5;
        }
      }, t4.DEFAULT_SENSITIVITY = 0.2, t4;
    }(r3(11).CameraModifier);
    t3.WheelZoomModifier = s;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = function(e4) {
      function t4(t5) {
        return e4.call(this, t5) || this;
      }
      return n2(t4, e4), t4.prototype.generate = function() {
        switch (this._width) {
          case 8:
            this.fromJSON(r3(105));
            break;
          case 64:
            this.fromJSON(r3(106));
            break;
          case 128:
            this.fromJSON(r3(107));
            break;
          default:
            e4.prototype.generate.call(this);
        }
      }, t4;
    }(r3(60).RandomSquareKernel);
    t3.AntiAliasingKernel = o;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = r3(0), a = function(e4) {
      function t4(t5) {
        var r4 = e4.call(this, 2, t5) || this;
        return r4.generate(), r4;
      }
      return n2(t4, e4), t4.prototype.generate = function() {
        o.assert(this.width > 0, "expected every kernel to comprise at least one element"), this.set([0, 0], 0);
        for (var e5 = 1; e5 < this.width; ++e5)
          this.set([o.rand(-0.5, 0.5), o.rand(-0.5, 0.5)], e5);
      }, Object.defineProperty(t4.prototype, "width", { get: function() {
        return this._width;
      }, set: function(e5) {
        this._width !== e5 && (this._width = e5, this.resize(), this.generate());
      }, enumerable: true, configurable: true }), t4;
    }(r3(37).KernelF32);
    t3.RandomSquareKernel = a;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(0), s = r3(15), u2 = r3(17), c2 = r3(2), l2 = r3(12), f2 = r3(6), h2 = r3(7), d2 = r3(4), p2 = r3(14), _2 = function(e4) {
      function t4(t5) {
        var r4 = e4.call(this) || this;
        return r4._altered = Object.assign(new s.ChangeLookup(), { any: false, texture: false, precision: false, passThrough: false }), r4._precision = p2.Wizard.Precision.half, r4._write = 0, r4._ndcTriangleShared = false, r4._context = t5, r4;
      }
      return n2(t4, e4), t4.prototype.initialize = function(e5) {
        var t5 = this._context.gl;
        this._accumulationFBOs = [new u2.Framebuffer(this._context, "AccumPingFBO"), new u2.Framebuffer(this._context, "AccumPongFBO")], this._accumulationTextures = [new d2.Texture2D(this._context, "AccumPingTexture"), new d2.Texture2D(this._context, "AccumPongTexture")], e5 === void 0 ? this._ndcTriangle = new l2.NdcFillingTriangle(this._context, "NdcFillingTriangle-Accumulate") : (this._ndcTriangle = e5, this._ndcTriangleShared = true);
        var i3 = new h2.Shader(this._context, t5.VERTEX_SHADER, "ndcvertices.vert (accumulate)");
        i3.initialize(r3(62));
        var n3 = new h2.Shader(this._context, t5.FRAGMENT_SHADER, "accumulate.frag");
        return n3.initialize(r3(108)), this._program = new f2.Program(this._context, "AccumulateProgram"), this._program.initialize([i3, n3], false), this._ndcTriangle.initialized || this._ndcTriangle.initialize(), this._program.attribute("a_vertex", this._ndcTriangle.vertexLocation), this._program.link(), this._uWeight = this._program.uniform("u_weight"), this._program.bind(), t5.uniform1f(this._uWeight, 0), t5.uniform1i(this._program.uniform("u_accumulationTexture"), 0), t5.uniform1i(this._program.uniform("u_currentFrameTexture"), 1), this._program.unbind(), true;
      }, t4.prototype.uninitialize = function() {
        !this._ndcTriangleShared && this._ndcTriangle.initialized && this._ndcTriangle.uninitialize(), this._program.uninitialize(), this._accumulationFBOs[0].uninitialize(), this._accumulationFBOs[1].uninitialize(), this._accumulationTextures[0].uninitialize(), this._accumulationTextures[1].uninitialize(), this._write = 0;
      }, t4.prototype.update = function() {
        if (this._texture && this._texture.valid) {
          if (!this._passThrough) {
            var e5 = this._altered.texture || this._accumulationTextures[0].width !== this._texture.width || this._accumulationTextures[0].height !== this._texture.height;
            if (this._altered.any || e5) {
              var t5 = this._context.gl, r4 = this._context.gl2facade, i3 = this._texture.size;
              if (this._accumulationTextures[0].initialized)
                (this._altered.texture || e5) && (this._accumulationTextures[0].resize(this._texture.width, this._texture.height), this._accumulationTextures[1].resize(this._texture.width, this._texture.height)), this._altered.precision && (n3 = p2.Wizard.queryInternalTextureFormat(this._context, t5.RGBA, this._precision), this._accumulationTextures[0].reformat(n3[0], t5.RGBA, n3[1]), this._accumulationTextures[1].reformat(n3[0], t5.RGBA, n3[1]));
              else {
                var n3 = p2.Wizard.queryInternalTextureFormat(this._context, t5.RGBA, this._precision);
                this._accumulationTextures[0].initialize(i3[0], i3[1], n3[0], t5.RGBA, n3[1]), this._accumulationTextures[1].initialize(i3[0], i3[1], n3[0], t5.RGBA, n3[1]);
              }
              this._accumulationFBOs[0].initialized || (this._accumulationFBOs[0].initialize([[r4.COLOR_ATTACHMENT0, this._accumulationTextures[0]]]), this._accumulationFBOs[1].initialize([[r4.COLOR_ATTACHMENT0, this._accumulationTextures[1]]])), a.assert(this._accumulationFBOs[0].valid && this._accumulationFBOs[1].valid, "valid accumulation framebuffers expected"), this._altered.reset();
            } else
              a.assert(this._accumulationFBOs[0].valid && this._accumulationFBOs[1].valid, "valid accumulation framebuffers expected");
          }
        } else
          a.log(a.LogLevel.Warning, "valid texture for accumulation update expected, given " + this._texture);
      }, t4.prototype.frame = function(e5, t5) {
        if (a.assert(this._accumulationFBOs[0].valid && this._accumulationFBOs[1].valid, "valid framebuffer objects for accumulation expected (initialize or update was probably not called)"), !this._passThrough && this._texture !== void 0) {
          a.logIf(!this._texture || !this._texture.valid, a.LogLevel.Warning, "valid texture for accumulation frame expected, given " + this._texture);
          var r4 = this._context.gl;
          t5 !== void 0 && r4.viewport(0, 0, t5[0], t5[1]);
          var i3 = e5 % 2, n3 = this._write = 1 - i3, o2 = this._accumulationTextures[i3], s2 = this._texture;
          o2.bind(r4.TEXTURE0), s2.bind(r4.TEXTURE1), this._program.bind(), r4.uniform1f(this._uWeight, 1 / (e5 + 1)), this._accumulationFBOs[n3].bind(r4.DRAW_FRAMEBUFFER), this._ndcTriangle.bind(), this._ndcTriangle.draw(), this._ndcTriangle.unbind(), this._accumulationFBOs[n3].unbind(r4.DRAW_FRAMEBUFFER), o2.unbind(r4.TEXTURE0), s2.unbind(r4.TEXTURE1);
        }
      }, Object.defineProperty(t4.prototype, "texture", { set: function(e5) {
        this.assertInitialized(), this._texture !== e5 && (this._texture = e5, this._altered.alter("texture"));
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "precision", { set: function(e5) {
        this.assertInitialized(), this._precision !== e5 && (this._precision = e5, this._altered.alter("precision"));
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "passThrough", { set: function(e5) {
        this.assertInitialized(), this._passThrough !== e5 && (this._passThrough && this._accumulationTextures[0].initialized && (this._accumulationTextures[0].uninitialize(), this._accumulationTextures[1].uninitialize()), this._passThrough && this._accumulationFBOs[0].initialized && (this._accumulationFBOs[0].uninitialize(), this._accumulationFBOs[1].uninitialize()), this._passThrough = e5, this._altered.alter("passThrough"));
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "framebuffer", { get: function() {
        return this._passThrough ? void 0 : this._accumulationFBOs[this._write];
      }, enumerable: true, configurable: true }), o([c2.Initializable.initialize()], t4.prototype, "initialize", null), o([c2.Initializable.uninitialize()], t4.prototype, "uninitialize", null), o([c2.Initializable.assert_initialized()], t4.prototype, "update", null), o([c2.Initializable.assert_initialized()], t4.prototype, "frame", null), t4;
    }(c2.Initializable);
    t3.AccumulatePass = _2;
  }, function(e3, t3) {
    e3.exports = "\r\nprecision lowp float;\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define texture(sampler, coord) texture2D(sampler, coord)\r\n#else\r\n    #define varying out\r\n#endif\r\n\r\n\r\n\r\n#if __VERSION__ == 100\r\n    attribute vec2 a_vertex;\r\n#else\r\n    layout(location = 0) in vec2 a_vertex;\r\n#endif\r\n\r\n\r\nvarying vec2 v_uv;\r\n\r\n\r\nvoid main(void)\r\n{\r\n    v_uv = a_vertex * 0.5 + 0.5;\r\n\r\n    gl_Position = vec4(a_vertex, 0.0, 1.0);\r\n}\r\n";
  }, function(e3, t3) {
    e3.exports = "\r\nprecision lowp float;\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define texture(sampler, coord) texture2D(sampler, coord)\r\n#else\r\n    #define varying out\r\n#endif\r\n\r\n\r\n\r\n#if __VERSION__ == 100\r\n    attribute vec2 a_vertex;\r\n#else\r\n    layout(location = 0) in vec2 a_vertex;\r\n#endif\r\n\r\nuniform vec4 u_srcBounds; // normalized\r\nuniform vec4 u_dstBounds; // normalized\r\n\r\nvarying vec2 v_uv;\r\n\r\n\r\nvoid main(void)\r\n{\r\n    vec2 uv = a_vertex * 0.5 + 0.5;\r\n\r\n    v_uv = mix(u_srcBounds.xy, u_srcBounds.zw, uv);\r\n    gl_Position = vec4(a_vertex.xy, 0.0, 1.0);\r\n}\r\n";
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(1), s = r3(0), u2 = r3(3), c2 = r3(2), l2 = r3(12), f2 = r3(6), h2 = r3(7), d2 = function(e4) {
      function t4(t5) {
        var r4 = e4.call(this) || this;
        return r4._kernelSize = 7, r4._standardDeviation = 1, r4._redistribute = true, r4._ndcTriangleShared = false, r4._context = t5, r4;
      }
      return n2(t4, e4), t4.prototype.recalculateWeights = function() {
        if (this._weights)
          return false;
        var e5 = 1 / Math.sqrt(2 * Math.PI) * this._standardDeviation, t5 = 2 * this._standardDeviation * this._standardDeviation;
        this._weights = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        for (var r4 = 0, i3 = 0; i3 <= Math.floor(this._kernelSize / 2); i3++)
          this._weights[i3] = e5 * Math.pow(Math.E, -Math.pow(i3, 2) / t5), r4 += i3 > 0 ? 2 * this._weights[i3] : this._weights[i3];
        if (this._redistribute) {
          var n3 = 1 - r4;
          for (i3 = 0; i3 <= Math.floor(this._kernelSize / 2); i3++)
            this._weights[i3] += this._weights[i3] / r4 * n3;
        }
        return true;
      }, Object.defineProperty(t4.prototype, "kernelSize", { get: function() {
        return this._kernelSize;
      }, set: function(e5) {
        s.assert(e5 > 0, "Kernel size has to be positive."), s.assert(e5 <= 2 * (t4._MAXKERNELSIZEHALF - 1) + 1, "Kernel size has to be smaller than " + (2 * (t4._MAXKERNELSIZEHALF - 1) + 2) + "."), s.assert(Number.isInteger(e5), "Kernel size has to be an integer."), s.assert(e5 % 2 == 1, "Kernel size has to be odd."), this._kernelSize = e5, this._weights = void 0;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "standardDeviation", { get: function() {
        return this._standardDeviation;
      }, set: function(e5) {
        s.assert(e5 > 0, "Standard deviation has to be positive."), this._standardDeviation = e5, this._weights = void 0;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "redistribute", { get: function() {
        return this._redistribute;
      }, set: function(e5) {
        this._redistribute = e5, this._weights = void 0;
      }, enumerable: true, configurable: true }), t4.prototype.initialize = function(e5) {
        var t5 = this._context.gl, i3 = new h2.Shader(this._context, t5.VERTEX_SHADER, "gauss.vert");
        i3.initialize(r3(116)), this._fragmentShader = new h2.Shader(this._context, t5.FRAGMENT_SHADER, "gauss.frag"), this._fragmentShader.replace("$KERNEL_HALF_SIZE", "" + Math.floor(this.kernelSize / 2)), this._fragmentShader.initialize(r3(117)), this._program = new f2.Program(this._context), this._program.initialize([i3, this._fragmentShader]), this._uDelta = this._program.uniform("u_delta"), this._uWeights = this._program.uniform("u_weights");
        var n3 = this._program.attribute("a_vertex", 0);
        return e5 === void 0 ? this._ndcTriangle = new l2.NdcFillingTriangle(this._context, "GaussFilterQuad") : (this._ndcTriangle = e5, this._ndcTriangleShared = true), this._ndcTriangle.initialize(n3), true;
      }, t4.prototype.uninitialize = function() {
        this._program.uninitialize(), this._ndcTriangleShared || this._ndcTriangle.uninitialize();
      }, t4.prototype.filter = function(e5, t5) {
        var r4 = this._context.gl, i3 = [a.vec2.fromValues(1, 0), a.vec2.fromValues(0, 1)];
        this.recalculateWeights() && (this._fragmentShader.replace("$KERNEL_HALF_SIZE", "" + Math.floor(this.kernelSize / 2)), this._fragmentShader.compile(), this._program.link(), this._uDelta = this._program.uniform("u_delta"), this._uWeights = this._program.uniform("u_weights"), this._program.bind(), r4.uniform1fv(this._uWeights, this._weights)), this._program.bind(), e5.bind(r4.TEXTURE0), r4.uniform2fv(this._uDelta, a.vec2.divide(u2.v2(), i3[t5], e5.size)), this._ndcTriangle.bind(), this._ndcTriangle.draw(), this._ndcTriangle.unbind(), e5.unbind(r4.TEXTURE0), this._program.unbind();
      }, t4._MAXKERNELSIZEHALF = 32, o([c2.Initializable.initialize()], t4.prototype, "initialize", null), o([c2.Initializable.uninitialize()], t4.prototype, "uninitialize", null), o([c2.Initializable.assert_initialized()], t4.prototype, "filter", null), t4;
    }(c2.Initializable);
    t3.GaussFilter = d2, function(e4) {
      !function(e5) {
        e5[e5.Horizontal = 0] = "Horizontal", e5[e5.Vertical = 1] = "Vertical";
      }(e4.Direction || (e4.Direction = {}));
    }(d2 = t3.GaussFilter || (t3.GaussFilter = {})), t3.GaussFilter = d2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(119);
    t3.CuboidGeometry = i2.CuboidGeometry;
    var n2 = r3(66);
    t3.Icosahedron = n2.Icosahedron;
    var o = r3(120);
    t3.GeosphereGeometry = o.GeosphereGeometry;
    var a = r3(121);
    t3.PlaneGeometry = a.PlaneGeometry;
    var s = r3(122);
    t3.ResourceManager = s.ResourceManager;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(1), n2 = r3(3), o = function() {
      function e4() {
      }
      return e4.prototype.baseVertices = function() {
        var e5 = 0.5 * (1 + Math.sqrt(5)), t4 = 1 / Math.sqrt(e5 * e5 + 1), r4 = e5 * t4;
        return [i2.vec3.fromValues(-t4, +r4, 0), i2.vec3.fromValues(+t4, +r4, 0), i2.vec3.fromValues(-t4, -r4, 0), i2.vec3.fromValues(+t4, -r4, 0), i2.vec3.fromValues(0, -t4, +r4), i2.vec3.fromValues(0, +t4, +r4), i2.vec3.fromValues(0, -t4, -r4), i2.vec3.fromValues(0, +t4, -r4), i2.vec3.fromValues(+r4, 0, -t4), i2.vec3.fromValues(+r4, 0, +t4), i2.vec3.fromValues(-r4, 0, -t4), i2.vec3.fromValues(-r4, 0, +t4)];
      }, e4.prototype.baseFaces = function() {
        return [[0, 11, 5], [0, 5, 1], [0, 1, 7], [0, 7, 10], [0, 10, 11], [1, 5, 9], [5, 11, 4], [11, 10, 2], [10, 7, 6], [7, 1, 8], [3, 9, 4], [3, 4, 2], [3, 2, 6], [3, 6, 8], [3, 8, 9], [4, 9, 5], [2, 4, 11], [6, 2, 10], [8, 6, 7], [9, 8, 1]];
      }, e4.prototype.refine = function(e5, t4, r4) {
        for (var i3 = /* @__PURE__ */ new Map(), n3 = 0; n3 < r4; n3++)
          for (var o2 = t4.length, a = 0; a < o2; a++) {
            var s = t4[a], u2 = s[0], c2 = s[1], l2 = s[2], f2 = this.split(u2, c2, e5, i3), h2 = this.split(c2, l2, e5, i3), d2 = this.split(l2, u2, e5, i3);
            t4[a] = [f2, h2, d2], t4.push([u2, f2, d2]), t4.push([c2, h2, f2]), t4.push([l2, d2, h2]);
          }
      }, e4.prototype.split = function(e5, t4, r4, o2) {
        var a = e5 < t4, s = ((a ? e5 : t4) << 16) + (a ? t4 : e5);
        if (o2.has(s))
          return o2.get(s);
        var u2 = i2.vec3.add(n2.v3(), r4[e5], r4[t4]);
        i2.vec3.normalize(u2, u2), r4.push(u2);
        var c2 = r4.length - 1;
        return o2.set(s, c2), c2;
      }, e4.prototype.generateGeometry = function(e5) {
        this._vertices = this.baseVertices(), this._faces = this.baseFaces(), e5 > 0 && this.refine(this._vertices, this._faces, Math.min(Math.max(e5, 0), 8));
      }, e4.prototype.generateTextureCoordinates = function() {
        this._texcoords = new Array();
        for (var e5 = 0, t4 = this._vertices; e5 < t4.length; e5++) {
          var r4 = t4[e5], o2 = i2.vec3.normalize(n2.v3(), r4), a = i2.vec2.fromValues(0.5 - Math.atan2(o2[2], o2[0]) / (2 * Math.PI), Math.asin(o2[1]) / Math.PI + 0.5);
          this._texcoords.push(a);
        }
      }, Object.defineProperty(e4.prototype, "faces", { get: function() {
        return this._faces;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "vertices", { get: function() {
        return this._vertices;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "texcoords", { get: function() {
        return this._texcoords;
      }, enumerable: true, configurable: true }), e4;
    }();
    t3.Icosahedron = o;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = function(e4) {
      function t4() {
        return e4 !== null && e4.apply(this, arguments) || this;
      }
      return n2(t4, e4), Object.defineProperty(t4.prototype, "scene", { get: function() {
        return this._scene;
      }, set: function(e5) {
        this._scene = e5, this._scene !== void 0 && this.preprocessScene();
      }, enumerable: true, configurable: true }), t4;
    }(r3(2).Initializable);
    t3.SceneRenderPass = o;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = function() {
      function e4(e5) {
        this._nodes = new Array(), this._components = new Array(), this._name = e5, this._parent = void 0;
      }
      return e4.prototype.traverse = function(e5) {
        e5(this);
        for (var t4 = 0, r4 = this._nodes; t4 < r4.length; t4++)
          r4[t4].traverse(e5);
      }, e4.prototype.addNode = function(e5) {
        return e5._parent = this, this._nodes.push(e5), e5;
      }, e4.prototype.addComponent = function(e5) {
        return this._components.push(e5), e5;
      }, e4.prototype.componentsOfType = function(e5) {
        return this._components.filter(function(t4) {
          return e5 === t4.type;
        });
      }, Object.defineProperty(e4.prototype, "name", { get: function() {
        return this._name;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "parent", { get: function() {
        return this._parent;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "nodes", { get: function() {
        return this._nodes;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "components", { get: function() {
        return this._components;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "isLeaf", { get: function() {
        return this._nodes.length === 0;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "isRoot", { get: function() {
        return this._parent === void 0;
      }, enumerable: true, configurable: true }), e4;
    }();
    t3.SceneNode = i2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(13), n2 = function() {
      function e4(e5, t4) {
        e5 === void 0 && (e5 = 0), t4 === void 0 && (t4 = 0), this._bearing = [0, 0], this._extent = [0, 0], this._kernings = /* @__PURE__ */ new Map(), this._subTextureOrigin = [0, 0], this._subTextureExtent = [0, 0], this._index = e5, this._advance = t4;
      }
      return e4.prototype.depictable = function() {
        return this._subTextureExtent[0] > 0 && this._subTextureExtent[1] > 0;
      }, e4.prototype.kerning = function(e5) {
        var t4 = this._kernings.get(e5);
        return t4 !== void 0 ? t4 : 0;
      }, e4.prototype.setKerning = function(e5, t4) {
        this._kernings.set(e5, t4);
      }, Object.defineProperty(e4.prototype, "index", { get: function() {
        return this._index;
      }, set: function(e5) {
        this._index = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "subTextureOrigin", { get: function() {
        return this._subTextureOrigin;
      }, set: function(e5) {
        this._subTextureOrigin = i2.clampf2(e5, "texture origin");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "subTextureExtent", { get: function() {
        return this._subTextureExtent;
      }, set: function(e5) {
        this._subTextureExtent = i2.clampf2(e5, "texture extent");
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "bearing", { get: function() {
        return this._bearing;
      }, set: function(e5) {
        this._bearing = e5;
      }, enumerable: true, configurable: true }), e4.prototype.bearingFromFontBaseAndOffset = function(e5, t4, r4) {
        this._bearing[0] = t4, this._bearing[1] = e5 - r4;
      }, Object.defineProperty(e4.prototype, "extent", { get: function() {
        return this._extent;
      }, set: function(e5) {
        this._extent = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "advance", { get: function() {
        return this._advance;
      }, set: function(e5) {
        this._advance = e5;
      }, enumerable: true, configurable: true }), e4;
    }();
    t3.Glyph = n2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = function() {
      function e4(t4, r4) {
        this._lineFeed = e4.DEFAULT_LINE_FEED, this._altered = false, this._text = t4 || "", this._lineFeed = r4 !== void 0 ? r4 : this._lineFeed;
      }
      return Object.defineProperty(e4.prototype, "length", { get: function() {
        return this._text.length;
      }, enumerable: true, configurable: true }), e4.prototype.charAt = function(e5) {
        return this._text.charAt(e5);
      }, e4.prototype.charCodeAt = function(e5) {
        return this._text.charCodeAt(e5);
      }, Object.defineProperty(e4.prototype, "text", { get: function() {
        return this._text;
      }, set: function(e5) {
        this._text !== e5 && (this._altered = true, this._text = e5);
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "lineFeed", { get: function() {
        return this._lineFeed;
      }, set: function(e5) {
        this._lineFeed !== e5 && (this._altered = true, this._lineFeed = e5);
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "altered", { get: function() {
        return this._altered;
      }, set: function(e5) {
        this._altered = e5;
      }, enumerable: true, configurable: true }), e4.DEFAULT_LINE_FEED = "\n", e4;
    }();
    t3.Text = i2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(0), s = r3(5), u2 = r3(9), c2 = r3(2), l2 = function(e4) {
      function t4(t5, r4) {
        var i3 = e4.call(this, t5, r4) || this;
        return i3._numberOfGlyphs = 0, a.assert(t5.isWebGL2 || t5.supportsInstancedArrays, "expected extension 'ANGLE_instanced_arrays' to be supported"), r4 = r4 !== void 0 && r4 !== "" ? r4 : i3.constructor.name, i3._vertices = new s.Buffer(t5, r4 + "VBO"), i3._buffers.push(i3._vertices), i3._texCoords = new s.Buffer(t5, r4 + "TexCoordVBO"), i3._buffers.push(i3._texCoords), i3._origins = new s.Buffer(t5, r4 + "OriginVBO"), i3._buffers.push(i3._origins), i3._tangents = new s.Buffer(t5, r4 + "TangentVBO"), i3._buffers.push(i3._tangents), i3._ups = new s.Buffer(t5, r4 + "UpVBO"), i3._buffers.push(i3._ups), i3;
      }
      return n2(t4, e4), t4.prototype.bindBuffers = function() {
        var e5 = this.context.gl, t5 = this.context.gl2facade;
        this._vertices.attribEnable(this._vertexLocation, 2, e5.FLOAT, false, 8, 0, true, false), t5.vertexAttribDivisor(this._vertexLocation, 0), this._texCoords.attribEnable(this._texCoordLocation, 4, e5.FLOAT, false, 16, 0, true, false), t5.vertexAttribDivisor(this._texCoordLocation, 1), this._origins.attribEnable(this._originLocation, 3, e5.FLOAT, false, 12, 0, true, false), t5.vertexAttribDivisor(this._originLocation, 1), this._tangents.attribEnable(this._tangentLocation, 3, e5.FLOAT, false, 12, 0, true, false), t5.vertexAttribDivisor(this._tangentLocation, 1), this._ups.attribEnable(this._upLocation, 3, e5.FLOAT, false, 12, 0, true, false), t5.vertexAttribDivisor(this._upLocation, 1);
      }, t4.prototype.unbindBuffers = function() {
        this._vertices.attribDisable(this._vertexLocation, false, false), this._texCoords.attribDisable(this._texCoordLocation, false, false), this._origins.attribDisable(this._originLocation, false, false), this._tangents.attribDisable(this._tangentLocation, false, false), this._ups.attribDisable(this._upLocation, false, false);
      }, t4.prototype.initialize = function(r4, i3, n3, o2, a2) {
        r4 === void 0 && (r4 = 0), i3 === void 0 && (i3 = 1), n3 === void 0 && (n3 = 2), o2 === void 0 && (o2 = 3), a2 === void 0 && (a2 = 4), this._vertexLocation = r4, this._texCoordLocation = i3, this._originLocation = n3, this._tangentLocation = o2, this._upLocation = a2;
        var s2 = this.context.gl, u3 = e4.prototype.initialize.call(this, [s2.ARRAY_BUFFER, s2.ARRAY_BUFFER, s2.ARRAY_BUFFER, s2.ARRAY_BUFFER, s2.ARRAY_BUFFER]);
        return this._vertices.data(t4.VERTICES, s2.STATIC_DRAW), u3;
      }, t4.prototype.update = function(e5, t5, r4, i3) {
        this._numberOfGlyphs = e5.length / 3;
        var n3 = this.context.gl;
        this._texCoords.data(i3, n3.STATIC_DRAW), this._origins.data(e5, n3.STATIC_DRAW), this._tangents.data(t5, n3.STATIC_DRAW), this._ups.data(r4, n3.STATIC_DRAW);
      }, t4.prototype.draw = function(e5, t5) {
        e5 === void 0 && (e5 = 0), t5 === void 0 && (t5 = 0);
        var r4 = this.context.gl, i3 = this.context.gl2facade;
        this._vertices.attribEnable(this._vertexLocation, 2, r4.FLOAT, false, 8, 0, true, false), this._texCoords.attribEnable(this._texCoordLocation, 4, r4.FLOAT, false, 16, 16 * e5, true, false), this._origins.attribEnable(this._originLocation, 3, r4.FLOAT, false, 12, 12 * e5, true, false), this._tangents.attribEnable(this._tangentLocation, 3, r4.FLOAT, false, 12, 12 * e5, true, false), this._ups.attribEnable(this._upLocation, 3, r4.FLOAT, false, 12, 12 * e5, true, false), i3.drawArraysInstanced(r4.TRIANGLE_STRIP, 0, 4, t5);
      }, Object.defineProperty(t4.prototype, "numGlyphs", { get: function() {
        return this._numberOfGlyphs;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "valid", { get: function() {
        var e5 = this._vertices && this._vertices.valid, t5 = this._texCoords && this._texCoords.valid, r4 = this._origins && this._origins.valid, i3 = this._tangents && this._tangents.valid, n3 = this._ups && this._ups.valid;
        return this.initialized && e5 && t5 && r4 && i3 && n3;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "vertexLocation", { get: function() {
        return this._vertexLocation;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "texCoordLocation", { get: function() {
        return this._texCoordLocation;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "originLocation", { get: function() {
        return this._originLocation;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "tangentLocation", { get: function() {
        return this._tangentLocation;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "upLocation", { get: function() {
        return this._upLocation;
      }, enumerable: true, configurable: true }), t4.VERTICES = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]), o([c2.Initializable.assert_initialized()], t4.prototype, "draw", null), t4;
    }(u2.Geometry);
    t3.LabelGeometry = l2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = r3(1), a = r3(0), s = r3(3), u2 = r3(18), c2 = r3(19), l2 = r3(26), f2 = function(e4) {
      function t4(r4, i3, n3) {
        var a2 = e4.call(this, r4, i3, n3) || this;
        return a2._position = o.vec2.fromValues(0, 0), a2._direction = o.vec2.fromValues(1, 0), a2._frameSize = o.vec2.create(), a2._fontSize = t4.DEFAULT_FONTSIZE_PX, a2._fontSizeUnit = c2.Label.Unit.Pixel, a2;
      }
      return n2(t4, e4), t4.prototype.typeset = function(e5) {
        e5 === void 0 && (e5 = false);
        var t5 = e5 || this._altered.typesetting || this._altered.static || this._altered.text || this.text.altered;
        if (t5 || this._altered.dynamic || e5) {
          if (!this.valid)
            return new u2.GlyphVertices(0);
          var r4 = o.vec4.create(), i3 = o.mat4.create();
          o.mat4.translate(i3, s.m4(), o.vec3.fromValues(-1, -1, 0)), o.mat4.scale(i3, i3, o.vec3.fromValues(2 / this._frameSize[0], 2 / this._frameSize[1], 1));
          var n3 = o.vec2.sub(s.v2(), o.vec2.fromValues(this._frameSize[0], this._frameSize[1]), o.vec2.fromValues(r4[3] + r4[1], r4[2] + r4[0])), a2 = o.vec3.fromValues(0.5 * n3[0], 0.5 * n3[1], 0);
          o.vec3.add(a2, a2, o.vec3.fromValues(r4[3], r4[2], 0)), o.mat4.translate(i3, i3, a2), o.mat4.translate(i3, i3, o.vec3.fromValues(this._position[0], this._position[1], 0));
          var f3 = o.vec2.fromValues(1, 0), h2 = o.vec2.angle(f3, this._direction);
          switch (f3[0] * this._direction[1] - f3[1] * this._direction[0] < 0 && (h2 = -h2), o.mat4.rotateZ(i3, i3, h2), this._type) {
            case c2.Label.Type.Static:
              this.staticTransform = o.mat4.clone(i3), this.dynamicTransform = s.m4();
              break;
            case c2.Label.Type.Dynamic:
              this.staticTransform = s.m4(), this.dynamicTransform = o.mat4.clone(i3);
          }
          if (this._altered.reset(), this._text.altered = false, this._color.altered = false, t5) {
            var d2 = this.vertices();
            return l2.Typesetter.typeset(this, d2), d2;
          }
        }
      }, Object.defineProperty(t4.prototype, "frameSize", { get: function() {
        return this._frameSize;
      }, set: function(e5) {
        o.vec2.equals(this._frameSize, e5) || (o.vec2.max(this._frameSize, e5, [1, 1]), this._altered.alter(this._type));
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "position", { get: function() {
        return this._position;
      }, set: function(e5) {
        o.vec2.equals(this._position, e5) || (this._position = o.vec2.clone(e5), this._altered.alter(this._type));
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "direction", { get: function() {
        return this._direction;
      }, set: function(e5) {
        o.vec2.normalize(this._direction, e5), this._altered.alter(this._type);
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "fontSizeUnit", { get: function() {
        return this._fontSizeUnit;
      }, set: function(e5) {
        a.logIf(e5 !== c2.Label.Unit.Pixel, a.LogLevel.Warning, "font size unit other than 'px' are not supported in position-2d-label, given " + e5);
      }, enumerable: true, configurable: true }), t4.DEFAULT_FONTSIZE_PX = 20, t4;
    }(c2.Label);
    t3.Position2DLabel = f2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = r3(1), a = r3(0), s = r3(3), u2 = r3(18), c2 = r3(19), l2 = r3(26), f2 = function(e4) {
      function t4(r4, i3, n3) {
        var a2 = e4.call(this, r4, i3, n3) || this;
        return a2._position = o.vec3.fromValues(0, 0, 0), a2._direction = o.vec3.fromValues(1, 0, 0), a2._up = o.vec3.fromValues(0, 1, 0), a2._fontSize = t4.DEFAULT_FONTSIZE_WORLD, a2._fontSizeUnit = c2.Label.Unit.World, a2;
      }
      return n2(t4, e4), t4.prototype.typeset = function(e5) {
        e5 === void 0 && (e5 = false);
        var t5 = e5 || this._altered.typesetting || this._altered.static || this._altered.text || this.text.altered;
        if (t5 || this._altered.dynamic || e5) {
          if (!this.valid)
            return new u2.GlyphVertices(0);
          var r4 = o.mat4.create();
          o.mat4.translate(r4, s.m4(), this._position);
          var i3 = o.vec3.cross(s.v3(), this._direction, this._up), n3 = o.mat4.fromValues(this._direction[0], this._direction[1], this._direction[2], 0, this._up[0], this._up[1], this._up[2], 0, i3[0], i3[1], i3[2], 0, 0, 0, 0, 1);
          switch (o.mat4.mul(r4, r4, n3), this._type) {
            case c2.Label.Type.Static:
              this.staticTransform = o.mat4.clone(r4), this.dynamicTransform = s.m4();
              break;
            case c2.Label.Type.Dynamic:
              this.staticTransform = s.m4(), this.dynamicTransform = o.mat4.clone(r4);
          }
          if (this._altered.reset(), this._text.altered = false, this._color.altered = false, t5) {
            var a2 = this.vertices();
            return l2.Typesetter.typeset(this, a2), a2;
          }
        }
      }, Object.defineProperty(t4.prototype, "position", { get: function() {
        return this._position;
      }, set: function(e5) {
        this._position = o.vec3.clone(e5), this._altered.alter(this._type);
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "direction", { get: function() {
        return this._direction;
      }, set: function(e5) {
        o.vec3.normalize(this._direction, e5), this._altered.alter(this._type);
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "up", { get: function() {
        return this._up;
      }, set: function(e5) {
        this._up = o.vec3.normalize(this._up, e5), this._altered.alter(this._type);
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "fontSizeUnit", { get: function() {
        return this._fontSizeUnit;
      }, set: function(e5) {
        a.logIf(e5 !== c2.Label.Unit.World, a.LogLevel.Warning, "font size unit other than 'world' are not supported in position-3d-label, given " + e5);
      }, enumerable: true, configurable: true }), t4.DEFAULT_FONTSIZE_WORLD = 0.05, t4;
    }(c2.Label);
    t3.Position3DLabel = f2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = r3(1), a = r3(0), s = r3(3), u2 = r3(18), c2 = r3(19), l2 = r3(26), f2 = function(e4) {
      function t4(r4, i3, n3) {
        var a2 = e4.call(this, r4, i3, n3) || this;
        return a2._position = o.vec3.fromValues(0, 0, 0), a2._direction = o.vec2.fromValues(1, 0), a2._fontSize = t4.DEFAULT_FONTSIZE_PX, a2._fontSizeUnit = c2.Label.Unit.Mixed, a2;
      }
      return n2(t4, e4), t4.prototype.typeset = function(e5) {
        e5 === void 0 && (e5 = false);
        var t5 = e5 || this._altered.typesetting || this._altered.static || this._altered.text || this.text.altered;
        if (t5 || this._altered.dynamic || e5) {
          if (!this.valid || this._camera === void 0)
            return new u2.GlyphVertices(0);
          var r4 = o.vec4.create(), i3 = o.mat4.create();
          o.mat4.translate(i3, i3, o.vec3.fromValues(-1, -1, 0)), o.mat4.scale(i3, i3, o.vec3.fromValues(2 / this._camera.viewport[0], 2 / this._camera.viewport[1], 1)), o.mat4.scale(i3, i3, o.vec3.fromValues(1, 1, 1));
          var n3 = o.vec2.create();
          o.vec2.sub(n3, o.vec2.fromValues(this._camera.viewport[0] / 1, this._camera.viewport[1] / 1), o.vec2.fromValues(r4[3] + r4[1], r4[2] + r4[0]));
          var f3 = o.vec3.fromValues(0.5 * n3[0], 0.5 * n3[1], 0);
          o.vec3.add(f3, f3, o.vec3.fromValues(r4[3], r4[2], 0)), o.mat4.translate(i3, i3, f3);
          var h2 = o.vec4.fromValues(this._position[0], this._position[1], this._position[2], 1);
          o.vec4.transformMat4(h2, h2, this._camera.viewProjection);
          var d2 = o.mat4.create(), p2 = h2[3];
          o.mat4.translate(d2, d2, o.vec3.fromValues(h2[0] / p2, h2[1] / p2, h2[2] / p2)), o.mat4.mul(i3, d2, i3);
          var _2 = o.vec2.fromValues(1, 0), g2 = o.vec2.angle(_2, this._direction);
          switch (_2[0] * this._direction[1] - _2[1] * this._direction[0] < 0 && (g2 = -g2), o.mat4.rotateZ(i3, i3, g2), this._camera.viewProjectionInverse ? o.mat4.mul(i3, this._camera.viewProjectionInverse, i3) : a.log(a.LogLevel.Warning, "camera.viewProjectionInverse is null"), this._type) {
            case c2.Label.Type.Static:
              this.staticTransform = o.mat4.clone(i3), this.dynamicTransform = s.m4();
              break;
            case c2.Label.Type.Dynamic:
              this.staticTransform = s.m4(), this.dynamicTransform = o.mat4.clone(i3);
          }
          if (this._altered.reset(), this._text.altered = false, this._color.altered = false, t5) {
            var m2 = this.vertices();
            return l2.Typesetter.typeset(this, m2), m2;
          }
        }
      }, Object.defineProperty(t4.prototype, "camera", { get: function() {
        return this._camera;
      }, set: function(e5) {
        this._camera = e5, this._altered.alter(this._type);
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "position", { get: function() {
        return this._position;
      }, set: function(e5) {
        this._position = o.vec3.clone(e5), this._altered.alter(this._type);
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "direction", { get: function() {
        return this._direction;
      }, set: function(e5) {
        o.vec2.normalize(this._direction, e5), this._altered.alter(this._type);
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "fontSizeUnit", { get: function() {
        return this._fontSizeUnit;
      }, set: function(e5) {
        a.logIf(e5 !== c2.Label.Unit.Mixed, a.LogLevel.Warning, "font size unit other than 'px' are not supported in projected-3d-label, given " + e5);
      }, enumerable: true, configurable: true }), t4.DEFAULT_FONTSIZE_PX = 20, t4;
    }(c2.Label);
    t3.Projected3DLabel = f2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = function() {
      function e4() {
        this._primitives = new Array();
      }
      return Object.defineProperty(e4.prototype, "primitives", { get: function() {
        return this._primitives;
      }, enumerable: true, configurable: true }), e4.prototype.addPrimitive = function(e5) {
        this._primitives.push(e5);
      }, e4;
    }();
    t3.GLTFMesh = i2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o, a, s = r3(1), u2 = r3(25);
    !function(e4) {
      e4[e4.HAS_NORMALS = 1] = "HAS_NORMALS", e4[e4.HAS_TANGENTS = 2] = "HAS_TANGENTS", e4[e4.HAS_UV = 4] = "HAS_UV", e4[e4.HAS_COLORS = 8] = "HAS_COLORS", e4[e4.USE_IBL = 16] = "USE_IBL", e4[e4.HAS_BASECOLORMAP = 32] = "HAS_BASECOLORMAP", e4[e4.HAS_NORMALMAP = 64] = "HAS_NORMALMAP", e4[e4.HAS_EMISSIVEMAP = 128] = "HAS_EMISSIVEMAP", e4[e4.HAS_METALROUGHNESSMAP = 256] = "HAS_METALROUGHNESSMAP", e4[e4.HAS_OCCLUSIONMAP = 512] = "HAS_OCCLUSIONMAP", e4[e4.USE_TEX_LOD = 1024] = "USE_TEX_LOD";
    }(o = t3.GLTFShaderFlags || (t3.GLTFShaderFlags = {})), function(e4) {
      e4[e4.OPAQUE = 0] = "OPAQUE", e4[e4.MASK = 1] = "MASK", e4[e4.BLEND = 2] = "BLEND";
    }(a = t3.GLTFAlphaMode || (t3.GLTFAlphaMode = {}));
    var c2 = function(e4) {
      function t4(t5, r4) {
        var i3 = e4.call(this, t5, r4) || this;
        return i3.baseColorTexCoord = 0, i3.metallicRoughnessTexCoord = 0, i3.normalTexCoord = 0, i3.occlusionTexCoord = 0, i3.emissiveTexCoord = 0, i3._alphaMode = a.OPAQUE, i3._alphaCutoff = 1, i3._baseColorFactor = s.vec4.fromValues(1, 1, 1, 1), i3._metallicFactor = 1, i3._roughnessFactor = 1, i3._emissiveFactor = s.vec3.fromValues(0, 0, 0), i3._isDoubleSided = false, i3._normalScale = 1, i3;
      }
      return n2(t4, e4), Object.defineProperty(t4.prototype, "baseColorTexture", { get: function() {
        return this._baseColorTexture;
      }, set: function(e5) {
        this._baseColorTexture = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "metallicRoughnessTexture", { get: function() {
        return this._metallicRoughnessTexture;
      }, set: function(e5) {
        this._metallicRoughnessTexture = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "normalTexture", { get: function() {
        return this._normalTexture;
      }, set: function(e5) {
        this._normalTexture = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "occlusionTexture", { get: function() {
        return this._occlusionTexture;
      }, set: function(e5) {
        this._occlusionTexture = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "emissiveTexture", { get: function() {
        return this._emissiveTexture;
      }, set: function(e5) {
        this._emissiveTexture = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "emissiveFactor", { get: function() {
        return this._emissiveFactor;
      }, set: function(e5) {
        this._emissiveFactor = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "baseColorFactor", { get: function() {
        return this._baseColorFactor;
      }, set: function(e5) {
        this._baseColorFactor = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "metallicFactor", { get: function() {
        return this._metallicFactor;
      }, set: function(e5) {
        this._metallicFactor = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "roughnessFactor", { get: function() {
        return this._roughnessFactor;
      }, set: function(e5) {
        this._roughnessFactor = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "normalScale", { get: function() {
        return this._normalScale;
      }, set: function(e5) {
        this._normalScale = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "isDoubleSided", { get: function() {
        return this._isDoubleSided;
      }, set: function(e5) {
        this._isDoubleSided = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "alphaMode", { get: function() {
        return this._alphaMode;
      }, set: function(e5) {
        this._alphaMode = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "alphaCutoff", { get: function() {
        return this._alphaCutoff;
      }, set: function(e5) {
        this._alphaCutoff = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "flags", { get: function() {
        var e5 = 0;
        return this.baseColorTexture !== void 0 && (e5 |= o.HAS_BASECOLORMAP), this.metallicRoughnessTexture !== void 0 && (e5 |= o.HAS_METALROUGHNESSMAP), this.normalTexture !== void 0 && (e5 |= o.HAS_NORMALMAP), this.occlusionTexture !== void 0 && (e5 |= o.HAS_OCCLUSIONMAP), this.emissiveTexture !== void 0 && (e5 |= o.HAS_EMISSIVEMAP), e5;
      }, enumerable: true, configurable: true }), t4;
    }(u2.Material);
    t3.GLTFPbrMaterial = c2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = r3(9);
    t3.IndexBinding = function() {
    };
    t3.VertexBinding = function() {
    };
    var a = function(e4) {
      function t4(t5, r4, i3, n3, o2, a2, s) {
        var u2 = e4.call(this, t5, s) || this;
        return u2._bindings = r4, u2._indexBinding = i3, u2._material = o2, u2._geometryFlags = a2, u2._drawMode = n3, u2;
      }
      return n2(t4, e4), t4.prototype.bindBuffers = function() {
        this._indexBinding && this._indexBinding.buffer.bind();
        for (var e5 = 0, t5 = this._bindings; e5 < t5.length; e5++) {
          var r4 = t5[e5];
          r4.buffer.attribEnable(r4.attributeIndex, r4.size, r4.type, r4.normalized, r4.stride, r4.offset, true, true);
        }
      }, t4.prototype.unbindBuffers = function() {
        this._indexBinding && this._indexBinding.buffer.unbind();
        for (var e5 = 0, t5 = this._bindings; e5 < t5.length; e5++) {
          var r4 = t5[e5];
          r4.buffer.attribDisable(r4.attributeIndex, true, true);
        }
      }, t4.prototype.draw = function() {
        var e5 = this.context.gl;
        this._indexBinding ? e5.drawElements(this._drawMode, this._indexBinding.numIndices, this._indexBinding.type, this._indexBinding.offset) : e5.drawArrays(this._drawMode, 0, this._bindings[0].numVertices);
      }, Object.defineProperty(t4.prototype, "material", { get: function() {
        return this._material;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "flags", { get: function() {
        return this._geometryFlags;
      }, enumerable: true, configurable: true }), t4;
    }(o.Geometry);
    t3.GLTFPrimitive = a;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(33), n2 = function() {
      function e4(e5, t4) {
        var r4 = this;
        this._altered = false, this._eventHandler = new i2.EventHandler(e5, t4), this._eventHandler.pushMouseEnterHandler(function(e6, t5) {
          return r4.onMouseEnter(e6, t5);
        }), this._eventHandler.pushMouseLeaveHandler(function(e6, t5) {
          return r4.onMouseLeave(e6, t5);
        });
      }
      return e4.prototype.onMouseEnter = function(e5, t4) {
        this._altered = false;
      }, e4.prototype.onMouseLeave = function(e5, t4) {
        this._altered = true;
      }, e4.prototype.update = function() {
        this._eventHandler.update();
      }, e4.prototype.reset = function() {
        this._altered = false;
      }, Object.defineProperty(e4.prototype, "altered", { get: function() {
        return this._altered;
      }, enumerable: true, configurable: true }), e4;
    }();
    t3.TestNavigation = n2;
  }, function(e3, t3, r3) {
    r3(80), e3.exports = r3(81);
  }, function(e3, t3, r3) {
    var i2 = this;
    String.prototype.repeat === void 0 && (String.prototype.repeat = function(e4) {
      if (this === null)
        throw new TypeError("can't convert " + this + " to object");
      var t4 = "" + this;
      if ((e4 = +e4) != e4 && (e4 = 0), e4 < 0)
        throw new RangeError("repeat count must be non-negative");
      if (e4 === 1 / 0)
        throw new RangeError("repeat count must be less than infinity");
      if (e4 = Math.floor(e4), t4.length === 0 || e4 === 0)
        return "";
      if (t4.length * e4 >= 1 << 28)
        throw new RangeError("repeat count must not overflow maximum string size");
      for (var r4 = "", i3 = 0; i3 < e4; i3++)
        r4 += t4;
      return r4;
    }), String.prototype.startsWith === void 0 && (String.prototype.startsWith = function(e4, t4) {
      return t4 = t4 || 0, this.indexOf(e4, t4) === t4;
    }), String.prototype.endsWith === void 0 && (String.prototype.endsWith = function(e4, t4) {
      return (t4 === void 0 || t4 > this.length) && (t4 = this.length), this.substring(t4 - e4.length, t4) === e4;
    }), String.prototype.includes === void 0 && (String.prototype.includes = function(e4, t4) {
      return typeof t4 != "number" && (t4 = 0), !(t4 + e4.length > this.length) && this.indexOf(e4, t4) !== -1;
    }), String.prototype.trimLeft === void 0 && (String.prototype.trimLeft = function() {
      return this.replace(/^\s+/, "");
    }), String.prototype.trimRight === void 0 && (String.prototype.trimRight = function() {
      return this.replace(/\s+$/, "");
    }), Array.prototype.forEach === void 0 && (Array.prototype.forEach = function(e4, t4) {
      for (var r4 = i2.length, n2 = 0; n2 < r4; n2++)
        n2 in i2 && e4.call(t4, i2[n2], n2, i2);
    }), Array.prototype.fill === void 0 && (Array.prototype.fill = function(e4, t4, r4) {
      if (i2 === null)
        throw new TypeError("this is null or not defined");
      for (var n2 = Object(i2), o = n2.length >>> 0, a = t4 >> 0, s = a < 0 ? Math.max(o + a, 0) : Math.min(a, o), u2 = r4 === void 0 ? o : r4 >> 0, c2 = u2 < 0 ? Math.max(o + u2, 0) : Math.min(u2, o); s < c2; )
        n2[s] = e4, ++s;
      return n2;
    }), Math.log10 === void 0 && (Math.log10 = function(e4) {
      return Math.log(e4) * Math.LOG10E;
    }), Number.EPSILON === void 0 && (Number.EPSILON = Math.pow(2, -52)), [Float32Array, Uint8Array, Int8Array, Uint32Array, Int32Array].forEach(function(e4) {
      e4.prototype.slice || Object.defineProperty(e4.prototype, "slice", { value: Array.prototype.slice }), e4.prototype.reduce || Object.defineProperty(e4.prototype, "reduce", { value: Array.prototype.reduce }), e4.prototype.filter || Object.defineProperty(e4.prototype, "filter", { value: Array.prototype.filter }), e4.prototype.map || Object.defineProperty(e4.prototype, "map", { value: Array.prototype.map }), e4.prototype.indexOf || Object.defineProperty(e4.prototype, "indexOf", { value: Array.prototype.indexOf });
    }), Object.assign === void 0 && Object.defineProperty(Object, "assign", { value: function(e4, t4) {
      if (e4 === void 0 && e4 === null)
        throw new TypeError("Cannot convert undefined or null to object");
      for (var r4 = Object(e4), i3 = 1; i3 < arguments.length; i3++) {
        var n2 = arguments[i3];
        if (n2 != null)
          for (var o in n2)
            Object.prototype.hasOwnProperty.call(n2, o) && (r4[o] = n2[o]);
      }
      return r4;
    }, configurable: true, writable: true });
  }, function(e3, t3, r3) {
    function i2(e4) {
      for (var r4 in e4)
        t3.hasOwnProperty(r4) || (t3[r4] = e4[r4]);
    }
    Object.defineProperty(t3, "__esModule", { value: true }), i2(r3(40)), i2(r3(133));
    var n2 = r3(47);
    t3.properties = n2;
    var o = r3(34);
    t3.fetch = o;
    var a = r3(139);
    t3.ray_math = a, i2(r3(140));
    var s = r3(144), u2 = r3(145);
    !function(e4) {
      e4.EventBlocker = s.EventBlocker, e4.Fullscreen = u2.Fullscreen;
    }(t3.viewer || (t3.viewer = {}));
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true }), t3.branch = "master", t3.commit = "50315b7a797981700de80b3eea844415c20e02fc", t3.version = "v0.7.1";
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(10), n2 = r3(0), o = function() {
      function e4() {
        this._bytesByIdentifier = /* @__PURE__ */ new Map(), this._bytes = 0, this._bytesSubject = new i2.ReplaySubject(1);
      }
      return e4.prototype.bytesNext = function() {
        this._bytesSubject.next([this._bytes, this.bytesToString()]);
      }, e4.prototype.assertIdentifier = function(e5) {
        n2.assert(this._bytesByIdentifier.has(e5), "allocation identifier unknown");
      }, e4.prototype.createUniqueIdentifier = function(e5) {
        for (var t4 = e5, r4 = 2; this._bytesByIdentifier.has(t4); )
          t4 = e5 + "-" + r4, ++r4;
        return this._bytesByIdentifier.set(t4, 0), t4;
      }, e4.prototype.deleteUniqueIdentifier = function(e5) {
        n2.assert(this._bytesByIdentifier.has(e5), "identifier expected to be known for allocation registration"), this._bytesByIdentifier.delete(e5);
      }, e4.prototype.allocate = function(e5, t4) {
        if (this.assertIdentifier(e5), n2.assert(t4 >= 0, "positive number of bytes expected for allocation, given " + t4), t4 !== 0) {
          var r4 = this._bytesByIdentifier.get(e5) + t4;
          this._bytesByIdentifier.set(e5, r4), this._bytes = this._bytes + t4, this.bytesNext();
        }
      }, e4.prototype.deallocate = function(e5, t4) {
        this.assertIdentifier(e5);
        var r4 = this._bytesByIdentifier.get(e5);
        n2.assert(t4 >= 0, "positive number of bytes expected for deallocation, given " + t4), n2.assert(t4 <= r4, "deallocation cannot exceed previous allocations of " + r4 + ", given " + t4), t4 !== 0 && (this._bytesByIdentifier.set(e5, r4 - t4), this._bytes = this._bytes - t4, this.bytesNext());
      }, e4.prototype.reallocate = function(e5, t4) {
        this.assertIdentifier(e5), n2.assert(t4 >= 0, "positive number of bytes expected for reallocation, given " + t4);
        var r4 = this._bytesByIdentifier.get(e5);
        r4 !== t4 && (this._bytes = this._bytes - r4, this._bytesByIdentifier.set(e5, t4), this._bytes = this._bytes + t4, this.bytesNext());
      }, e4.prototype.allocated = function(e5) {
        return e5 === void 0 ? this._bytes : (this.assertIdentifier(e5), this._bytesByIdentifier.get(e5));
      }, e4.prototype.toString = function() {
        var e5 = new Array();
        return this._bytesByIdentifier.forEach(function(t4, r4) {
          e5.push(r4 + ": " + n2.prettyPrintBytes(t4));
        }), e5.join(", ");
      }, e4.prototype.bytesToString = function(e5) {
        return n2.prettyPrintBytes(this.allocated(e5));
      }, Object.defineProperty(e4.prototype, "bytes", { get: function() {
        return this._bytes;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "bytes$", { get: function() {
        return this._bytesSubject.asObservable();
      }, enumerable: true, configurable: true }), e4;
    }();
    t3.AllocationRegister = o;
  }, function(e3) {
    e3.exports = JSON.parse('[{"identifier":"chrome-63","backend":"webgl2","extensions_strive":["EXT_color_buffer_float","EXT_disjoint_timer_query_webgl2","EXT_texture_filter_anisotropic","OES_texture_float_linear","WEBGL_compressed_texture_s3tc","WEBGL_compressed_texture_s3tc_srgb","WEBGL_debug_renderer_info","WEBGL_debug_shaders","WEBGL_lose_context"]},{"identifier":"edge-41","backend":"webgl1","extensions_strive":["ANGLE_instanced_arrays","EXT_frag_depth","EXT_texture_filter_anisotropic","OES_texture_float","OES_texture_float_linear","OES_standard_derivatives","OES_element_index_uint","OES_texture_half_float","OES_texture_half_float_linear","WEBGL_compressed_texture_s3tc","WEBGL_debug_renderer_info","WEBGL_depth_texture"]},{"identifier":"ie-11","backend":"webgl1","extensions_strive":["ANGLE_instanced_arrays","EXT_texture_filter_anisotropic","OES_texture_float","OES_texture_float_linear","OES_standard_derivatives","OES_element_index_uint","WEBGL_compressed_texture_s3tc","WEBGL_debug_renderer_info"]},{"identifier":"firefox-57","backend":"webgl2","extensions_strive":["EXT_color_buffer_float","EXT_texture_filter_anisotropic","EXT_disjoint_timer_query","OES_texture_float_linear","WEBGL_compressed_texture_s3tc","WEBGL_debug_renderer_info","WEBGL_debug_shaders","WEBGL_lose_context","MOZ_WEBGL_lose_context","MOZ_WEBGL_compressed_texture_s3tc"]},{"identifier":"safari-10.1","backend":"webgl1","extensions_strive":["compressed_texture_pvrtc","compressed_texture_s3tc","debug_renderer_info","disjoint_timer_query","draw_buffers","element_index_uint","frag_depth","instanced_arrays","lose_context","sRGB","shader_texture_lod","standard_derivatives","texture_filter_anisotropic","texture_float","texture_float_linear","texture_half_float","texture_half_float_linear","vertex_array_object"],"functions_undefine":["readBuffer"]},{"identifier":"no-WEBGL_draw_buffers","backend":"webgl1","extensions_conceal":["WEBGL_draw_buffers"]},{"identifier":"no-readBuffer","extensions_hash":"100000","functions_undefine":["readBuffer"]},{"identifier":"webgl1","extensions_hash":"1+++++"},{"identifier":"webgl2","extensions_hash":"2+++++"}]');
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(0), n2 = r3(27), o = function() {
      function e4(e5) {
        this.drawBuffers = void 0, i2.assert(e5 !== void 0, "gl2 facade expects a valid WebGL context"), this.queryHalfFloatSupport(e5), this.queryColorAttachments(e5), this.queryInstancedArraySupport(e5), this.queryDrawBuffersSupport(e5), this.queryVertexArrayObjectSupport(e5), this.queryMaxUniformVec3Components(e5), this.queryBufferSubDataInterface(e5), this.queryTexImageInterface(e5);
      }
      return Object.defineProperty(e4.prototype, "HALF_FLOAT", { get: function() {
        return this._halfFloat;
      }, enumerable: true, configurable: true }), e4.prototype.queryHalfFloatSupport = function(e5) {
        switch (e5.backend) {
          case n2.Context.BackendType.WebGL1:
            this._halfFloat = e5.supportsTextureHalfFloat && e5.textureHalfFloat ? e5.textureHalfFloat.HALF_FLOAT_OES : void 0;
            break;
          case n2.Context.BackendType.WebGL2:
          default:
            this._halfFloat = e5.gl.HALF_FLOAT;
        }
      }, Object.defineProperty(e4.prototype, "COLOR_ATTACHMENT_MIN", { get: function() {
        return this._colorAttachmentMin;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "COLOR_ATTACHMENT_MAX", { get: function() {
        return this._colorAttachmentMax;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "COLOR_ATTACHMENT0", { get: function() {
        return this._colorAttachments[0];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "COLOR_ATTACHMENT1", { get: function() {
        return this._colorAttachments[1];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "COLOR_ATTACHMENT2", { get: function() {
        return this._colorAttachments[2];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "COLOR_ATTACHMENT3", { get: function() {
        return this._colorAttachments[3];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "COLOR_ATTACHMENT4", { get: function() {
        return this._colorAttachments[4];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "COLOR_ATTACHMENT5", { get: function() {
        return this._colorAttachments[5];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "COLOR_ATTACHMENT6", { get: function() {
        return this._colorAttachments[6];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "COLOR_ATTACHMENT7", { get: function() {
        return this._colorAttachments[7];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "COLOR_ATTACHMENT8", { get: function() {
        return this._colorAttachments[8];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "COLOR_ATTACHMENT9", { get: function() {
        return this._colorAttachments[9];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "COLOR_ATTACHMENT10", { get: function() {
        return this._colorAttachments[10];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "COLOR_ATTACHMENT11", { get: function() {
        return this._colorAttachments[11];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "COLOR_ATTACHMENT12", { get: function() {
        return this._colorAttachments[12];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "COLOR_ATTACHMENT13", { get: function() {
        return this._colorAttachments[13];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "COLOR_ATTACHMENT14", { get: function() {
        return this._colorAttachments[14];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "COLOR_ATTACHMENT15", { get: function() {
        return this._colorAttachments[15];
      }, enumerable: true, configurable: true }), e4.prototype.queryColorAttachments = function(e5) {
        var t4 = e5.gl;
        switch (this._colorAttachments = new Array(16), this._colorAttachments[0] = t4.COLOR_ATTACHMENT0, e5.backend) {
          case n2.Context.BackendType.WebGL1:
            var r4 = e5.supportsDrawBuffers ? e5.drawBuffers : void 0;
            if (this._colorAttachmentMin = this._colorAttachments[0], this._colorAttachmentMax = this._colorAttachmentMin + (r4 ? t4.getParameter(r4.MAX_COLOR_ATTACHMENTS_WEBGL) : 0), this._colorAttachments[0] = r4 ? r4.COLOR_ATTACHMENT0_WEBGL : t4.COLOR_ATTACHMENT0, !r4)
              break;
            for (var i3 = 1; i3 < 16; ++i3)
              this._colorAttachments[i3] = r4.COLOR_ATTACHMENT0_WEBGL + i3;
            break;
          case n2.Context.BackendType.WebGL2:
          default:
            for (this._colorAttachmentMin = e5.gl.COLOR_ATTACHMENT0, this._colorAttachmentMax = e5.gl.COLOR_ATTACHMENT0 + t4.getParameter(t4.MAX_COLOR_ATTACHMENTS), i3 = 0; i3 < 16; ++i3)
              this._colorAttachments[i3] = t4.COLOR_ATTACHMENT0 + i3;
        }
      }, e4.prototype.queryInstancedArraySupport = function(e5) {
        (e5.isWebGL2 || e5.supportsInstancedArrays) && (this.drawArraysInstanced = e5.isWebGL2 ? function(t4, r4, i3, n3) {
          return e5.gl.drawArraysInstanced(t4, r4, i3, n3);
        } : function(t4, r4, i3, n3) {
          return e5.instancedArrays.drawArraysInstancedANGLE(t4, r4, i3, n3);
        }, this.drawElementsInstanced = e5.isWebGL2 ? function(t4, r4, i3, n3, o2) {
          return e5.gl.drawElementsInstanced(t4, r4, i3, n3, o2);
        } : function(t4, r4, i3, n3, o2) {
          return e5.instancedArrays.drawElementsInstancedANGLE(t4, r4, i3, n3, o2);
        }, this.vertexAttribDivisor = e5.isWebGL2 ? function(t4, r4) {
          return e5.gl.vertexAttribDivisor(t4, r4);
        } : function(t4, r4) {
          return e5.instancedArrays.vertexAttribDivisorANGLE(t4, r4);
        });
      }, Object.defineProperty(e4.prototype, "MAX_DRAW_BUFFERS", { get: function() {
        return this._maxDrawBuffers;
      }, enumerable: true, configurable: true }), e4.prototype.queryDrawBuffersSupport = function(e5) {
        (e5.isWebGL2 || e5.supportsDrawBuffers) && (this.drawBuffers = e5.isWebGL2 ? function(t4) {
          return e5.gl.drawBuffers(t4);
        } : function(t4) {
          return e5.drawBuffers.drawBuffersWEBGL(t4);
        }, this._maxDrawBuffers = e5.isWebGL2 ? e5.gl.MAX_DRAW_BUFFERS : e5.drawBuffers.MAX_DRAW_BUFFERS_WEBGL);
      }, e4.prototype.queryVertexArrayObjectSupport = function(e5) {
        (e5.isWebGL2 || e5.supportsVertexArrayObject) && (this.createVertexArray = e5.isWebGL2 ? function() {
          return e5.gl.createVertexArray();
        } : function() {
          return e5.vertexArrayObject.createVertexArrayOES();
        }, this.deleteVertexArray = e5.isWebGL2 ? function(t4) {
          return e5.gl.deleteVertexArray(t4);
        } : function(t4) {
          return e5.vertexArrayObject.deleteVertexArrayOES(t4);
        }, this.isVertexArray = e5.isWebGL2 ? function(t4) {
          return e5.gl.isVertexArray(t4);
        } : function(t4) {
          return e5.vertexArrayObject.isVertexArrayOES(t4);
        }, this.bindVertexArray = e5.isWebGL2 ? function(t4) {
          return e5.gl.bindVertexArray(t4);
        } : function(t4) {
          return e5.vertexArrayObject.bindVertexArrayOES(t4);
        });
      }, Object.defineProperty(e4.prototype, "maxUniformVec3Components", { get: function() {
        return this._maxUniformVec3Components;
      }, enumerable: true, configurable: true }), e4.prototype.queryMaxUniformVec3Components = function(e5) {
        var t4 = e5.gl;
        this._maxUniformVec3Components = e5.isWebGL2 ? t4.getParameter(t4.MAX_VERTEX_UNIFORM_COMPONENTS) : 3 * t4.getParameter(t4.MAX_VERTEX_UNIFORM_VECTORS);
      }, e4.prototype.queryBufferSubDataInterface = function(e5) {
        var t4 = e5.gl;
        e5.isWebGL2 ? this.bufferSubData = function(e6, r4, i3, n3, o2) {
          return o2 === void 0 && (o2 = 0), t4.bufferSubData(e6, r4, i3, n3, o2);
        } : this.bufferSubData = function(e6, r4, n3, o2, a) {
          return o2 === void 0 && (o2 = 0), a === void 0 && (a = 0), i2.logIf(o2 !== 0, i2.LogLevel.Warning, "srcOffset ignored (not supported in WebGL)"), i2.logIf(a !== 0, i2.LogLevel.Warning, "length ignored (not supported in WebGL)"), t4.bufferSubData(e6, r4, n3);
        };
      }, e4.prototype.queryTexImageInterface = function(e5) {
        var t4 = e5.gl;
        e5.isWebGL2 ? this.texImage2D = function(e6, r4, n3, o2, a, s, u2, c2, l2, f2) {
          return l2 instanceof ArrayBuffer ? t4.texImage2D(e6, r4, n3, o2, a, s, u2, c2, l2 === void 0 ? null : l2, f2) : (i2.assert(f2 === void 0, "offset expected to be undefined for non ArrayBuffer source"), t4.texImage2D(e6, r4, n3, o2, a, s, u2, c2, l2 === void 0 ? null : l2));
        } : this.texImage2D = function(e6, r4, i3, n3, o2, a, s, u2, c2, l2) {
          return c2 === void 0 ? t4.texImage2D(e6, r4, i3, n3, o2, a, s, u2, null) : c2 instanceof Int8Array || c2 instanceof Uint8Array || c2 instanceof Uint8ClampedArray || c2 instanceof Int16Array || c2 instanceof Uint16Array || c2 instanceof Int32Array || c2 instanceof Uint32Array || c2 instanceof Float32Array || c2 instanceof Float64Array || c2 instanceof DataView ? t4.texImage2D(e6, r4, i3, n3, o2, a, s, u2, c2) : t4.texImage2D(e6, r4, i3, s, u2, c2);
        }, e5.supportsTexImage3D ? this.texImage3D = function(e6, r4, n3, o2, a, s, u2, c2, l2, f2, h2) {
          return f2 instanceof ArrayBuffer ? t4.texImage3D(e6, r4, n3, o2, a, s, u2, c2, l2, f2 === void 0 ? null : f2, h2) : (i2.assert(h2 === void 0, "offset expected to be undefined for non ArrayBuffer source"), t4.texImage3D(e6, r4, n3, o2, a, s, u2, c2, l2, f2 === void 0 ? null : f2));
        } : this.texImage3D = function(e6, t5, r4, n3, o2, a, s, u2, c2, l2, f2) {
          return i2.assert(false, "texImage3D not supported on this context");
        };
      }, e4;
    }();
    t3.GL2Facade = o;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = r3(10), a = r3(1), s = r3(3), u2 = r3(0), c2 = r3(13), l2 = r3(21), f2 = r3(27), h2 = r3(43), d2 = r3(29), p2 = r3(30), _2 = r3(31), g2 = r3(87), m2 = r3(32), v2 = r3(14), b2 = function(e4) {
      function t4(r4, i3) {
        var n3 = e4.call(this) || this;
        n3._framePrecisionSubject = new o.ReplaySubject(1), n3._size = [0, 0], n3._sizeSubject = new o.ReplaySubject(1), n3._frameScaleSubject = new o.ReplaySubject(1), n3._frameSizeSubject = new o.ReplaySubject(1), n3._element = r4 instanceof HTMLCanvasElement ? r4 : document.getElementById(r4), n3._element.addEventListener("webglcontextcreationerror", function(e5) {
          console.log(e5.statusMessage || "Unknown error");
        }, false), n3.observe(n3._element), n3._mouseEventProvider = new p2.MouseEventProvider(n3._element, 200), n3._touchEventProvider = new m2.TouchEventProvider(n3._element, 200), n3._pointerEventProvider = new _2.PointerEventProvider(n3._element, 200), n3._element.style.touchAction = "none";
        var a2, h3 = n3._element.dataset;
        n3._context = f2.Context.request(n3._element, i3), n3.configureController(h3), n3.configureSizeAndScale(h3), n3.configureContextLostAndRestore(), n3.configureContextLostAndRestoreEmulation(), h3.clearColor && (a2 = s.parseVec4(h3.clearColor), u2.logIf(a2 === void 0, u2.LogLevel.Warning, "data-clear-color could not be parsed, given '" + h3.clearColor + "'")), n3._clearColor = a2 ? new l2.Color(c2.tuple4(a2)) : t4.DEFAULT_CLEAR_COLOR;
        var d3 = h3.accumulationFormat ? h3.accumulationFormat : t4.DEFAULT_FRAME_PRECISION;
        return d3 in v2.Wizard.Precision || (d3 = t4.DEFAULT_FRAME_PRECISION, u2.log(u2.LogLevel.Warning, "unknown frame precision '" + h3.accumulationFormat + "' changed to '" + d3 + "'")), n3._framePrecision = d3, n3.framePrecisionNext(), n3;
      }
      return n2(t4, e4), t4.prototype.configureController = function(e5) {
        var r4, i3;
        this._controller = new h2.Controller(), this._controller.block(), e5.multiFrameNumber && (r4 = parseInt(e5.multiFrameNumber, 10), u2.logIf(isNaN(r4), u2.LogLevel.Warning, "data-multi-frame-number could not be parsed, given '" + e5.multiFrameNumber + "'")), e5.debugFrameNumber && (i3 = parseInt(e5.debugFrameNumber, 10), u2.logIf(isNaN(i3), u2.LogLevel.Warning, "data-debug-frame-number could not be parsed, given '" + e5.debugFrameNumber + "'")), this._controller.multiFrameNumber = r4 || t4.DEFAULT_MULTI_FRAME_NUMBER, this._controller.debugFrameNumber = i3 || 0;
        var n3 = !!r4 && r4 !== this._controller.multiFrameNumber;
        u2.logIf(n3, u2.LogLevel.Warning, "data-multi-frame-number changed to " + this._controller.multiFrameNumber + ", given '" + e5.multiFrameNumber + "'");
        var o2 = !!i3 && i3 !== this._controller.debugFrameNumber;
        u2.logIf(o2, u2.LogLevel.Warning, "data-debug-frame-number changed to " + this._controller.debugFrameNumber + ", given '" + e5.debugFrameNumber + "'");
      }, t4.prototype.configureSizeAndScale = function(e5) {
        var t5, r4;
        e5.frameScale && (t5 = s.parseVec2(e5.frameScale), u2.logIf(e5.frameScale !== void 0 && t5 === void 0, u2.LogLevel.Warning, "data-frame-scale could not be parsed, given '" + e5.frameScale + "'")), this._frameScale = t5 ? c2.tuple2(t5) : [1, 1], e5.frameSize && (r4 = s.parseVec2(e5.frameSize), u2.logIf(e5.frameSize !== void 0 && r4 === void 0, u2.LogLevel.Warning, "data-frame-size could not be parsed, given '" + e5.frameSize + "'")), this._favorSizeOverScale = r4 !== void 0, this._frameSize = r4 ? c2.tuple2(r4) : [this._size[0], this._size[1]], this.onResize();
      }, t4.prototype.configureContextLostAndRestore = function() {
        var e5 = this;
        this._element.addEventListener("webglcontextlost", function(t5) {
          t5.preventDefault(), e5.onContextLost();
        }, false), this._element.addEventListener("webglcontextrestored", function(t5) {
          e5.onContextRestore();
        }, false);
      }, t4.prototype.configureContextLostAndRestoreEmulation = function() {
        this._lostContextExtension = this._context.gl.getExtension("WEBGL_lose_context");
      }, t4.prototype.onContextLost = function() {
        u2.log(u2.LogLevel.Warning, "WebGL Context lost. Discarding renderer..."), this._controller.cancel(), this._controller.block(), this._renderer && this._renderer.discard();
      }, t4.prototype.onContextRestore = function() {
        u2.log(u2.LogLevel.Warning, "WebGL Context restored. Reinitializing renderer...");
        var e5 = this._renderer;
        this.unbind(), this.bind(e5), this._controller.unblock();
        var t5 = this._element.style.visibility;
        this._element.style.visibility = "hidden", this._element.offsetHeight, this._element.style.visibility = t5;
      }, t4.prototype.retrieveSize = function() {
        var e5 = g2.Resizable.elementSize(this._element);
        e5 !== void 0 ? (this._size = [e5[0], e5[1]], this.sizeNext()) : this._size = [0, 0];
      }, t4.prototype.onResize = function() {
        if (this.retrieveSize(), this._size[0] === 0 || this._size[1] === 0)
          return u2.log(u2.LogLevel.Debug, "canvas width or height is invalid, resize discarded and controller blocked"), void this._controller.block();
        this._element.width = this._size[0], this._element.height = this._size[1], this._renderer && this._controller.block(), this._favorSizeOverScale ? this.frameSize = this._frameSize : this.frameScale = this._frameScale, this._renderer && (this._controller.unblock(), this._renderer.swap());
      }, t4.prototype.framePrecisionNext = function() {
        this._framePrecisionSubject.next(this._framePrecision);
      }, t4.prototype.sizeNext = function() {
        this._sizeSubject.next(this._size);
      }, t4.prototype.frameScaleNext = function() {
        this._frameScaleSubject.next(this._frameScale);
      }, t4.prototype.frameSizeNext = function() {
        this._frameSizeSubject.next(this._frameSize);
      }, t4.prototype.bind = function(e5) {
        var t5 = this;
        this._renderer !== e5 && (this.unbind(), e5 !== void 0 && (u2.assert(this._controller.blocked, "expected controller to be blocked"), this._renderer = e5, this._renderer.initialize(this.context, function(e6) {
          return t5._controller.update(e6);
        }, { pointerEventProvider: this._pointerEventProvider, mouseEventProvider: this._mouseEventProvider, eyeGazeEventProvider: this._eyeGazeEventProvider }), this._renderer.frameSize = this._frameSize, this._renderer.clearColor = this._clearColor.rgba, this._renderer.framePrecision = this._framePrecision, this._renderer.debugTexture = -1, this._controller.controllable = this._renderer, this._controller.unblock()));
      }, t4.prototype.unbind = function() {
        this._renderer !== void 0 && (this._controller.block(), this._controller.controllable = void 0, this._renderer = void 0);
      }, t4.prototype.dispose = function() {
        e4.prototype.dispose.call(this), this._renderer && (this._renderer.uninitialize(), this.unbind());
      }, t4.prototype.resize = function() {
        this.onResize();
      }, Object.defineProperty(t4.prototype, "controller", { get: function() {
        return this._controller;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "renderer", { get: function() {
        return this._renderer;
      }, set: function(e5) {
        this.bind(e5);
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "frameScale", { get: function() {
        return this._frameScale;
      }, set: function(e5) {
        if (isFinite(e5[0]) && isFinite(e5[1])) {
          u2.logIf(e5[0] < 0 || e5[0] > 2, u2.LogLevel.Info, "frame width scale clamped to [0.0,2.0], given " + e5[0]), u2.logIf(e5[1] < 0 || e5[1] > 2, u2.LogLevel.Info, "frame height scale clamped to [0.0,2.0], given " + e5[0]);
          var t5 = a.vec2.create();
          s.clamp2(t5, e5, [0, 0], [2, 2]);
          var r4 = a.vec2.create();
          a.vec2.mul(r4, this._size, t5), a.vec2.max(r4, [1, 1], r4), a.vec2.round(r4, r4), a.vec2.div(t5, r4, this._size), u2.logIf(!a.vec2.exactEquals(t5, e5), 2, "frame scale was adjusted to " + t5.toString() + ", given " + e5.toString()), this._frameScale = c2.tuple2(t5), this._frameSize = c2.tuple2(r4), this._favorSizeOverScale = false, this.frameScaleNext(), this.frameSizeNext(), this._renderer && (this._renderer.frameSize = this._frameSize);
        } else
          u2.log(u2.LogLevel.Warning, "expected finite frame size, non-finite values ignored, given [" + e5 + "]");
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "frameScale$", { get: function() {
        return this._frameScaleSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "frameSize", { get: function() {
        return this._frameSize;
      }, set: function(e5) {
        if (isFinite(e5[0]) && isFinite(e5[1])) {
          u2.logIf(e5[0] < 1 || e5[0] > this._size[0], u2.LogLevel.Info, "frame width scale clamped to [1," + this._size[0] + "], given " + e5[0]), u2.logIf(e5[1] < 1 || e5[1] > this._size[1], u2.LogLevel.Info, "frame height scale clamped to [1, " + this._size[1] + "], given " + e5[1]);
          var t5 = a.vec2.create();
          s.clamp2(t5, e5, [1, 1], this._size), a.vec2.round(t5, t5), u2.logIf(!a.vec2.exactEquals(t5, e5), u2.LogLevel.Warning, "frame size was adjusted to " + t5.toString() + ", given " + e5.toString());
          var r4 = a.vec2.create();
          a.vec2.div(r4, t5, this._size), this._frameScale = c2.tuple2(r4), this._frameSize = c2.tuple2(t5), this._favorSizeOverScale = !a.vec2.exactEquals(this._frameSize, this._size), this.frameScaleNext(), this.frameSizeNext(), this._renderer && (this._renderer.frameSize = this._frameSize);
        } else
          u2.log(u2.LogLevel.Warning, "expected finite frame size, non-finite values ignored, given [" + e5 + "]");
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "frameSize$", { get: function() {
        return this._frameSizeSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "clearColor", { get: function() {
        return this._clearColor;
      }, set: function(e5) {
        this._clearColor = e5, this._renderer && (this._renderer.clearColor = this._clearColor.rgba);
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "framePrecision", { get: function() {
        return this._framePrecision;
      }, set: function(e5) {
        this._framePrecision = e5, this._renderer && (this._renderer.framePrecision = this._framePrecision, this._framePrecision = this._renderer.framePrecision), this.framePrecisionNext();
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "framePrecision$", { get: function() {
        return this._framePrecisionSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "context", { get: function() {
        return this._context;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "backend", { get: function() {
        return this._context.backendString;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "size", { get: function() {
        return this._size;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "size$", { get: function() {
        return this._sizeSubject.asObservable();
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "width", { get: function() {
        return this._size[0];
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "height", { get: function() {
        return this._size[1];
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "element", { get: function() {
        return this._element;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "mouseEventProvider", { get: function() {
        return this._mouseEventProvider;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "touchEventProvider", { get: function() {
        return this._touchEventProvider;
      }, enumerable: true, configurable: true }), t4.prototype.testLoseContext = function() {
        this._lostContextExtension !== void 0 && this._lostContextExtension.loseContext();
      }, t4.prototype.testRestoreContext = function() {
        this._lostContextExtension !== void 0 && this._lostContextExtension.restoreContext();
      }, Object.defineProperty(t4.prototype, "eyeGazeEventProvider", { get: function() {
        return this._eyeGazeEventProvider;
      }, enumerable: true, configurable: true }), t4.prototype.activateEyeGazeEventProvider = function(e5, t5) {
        this._eyeGazeEventProvider = new d2.EyeGazeEventProvider(e5, t5);
      }, t4.DEFAULT_CLEAR_COLOR = new l2.Color([0.203, 0.227, 0.25, 1]), t4.DEFAULT_FRAME_PRECISION = v2.Wizard.Precision.auto, t4.DEFAULT_MULTI_FRAME_NUMBER = 0, t4;
    }(g2.Resizable);
    t3.Canvas = b2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(0), n2 = function() {
      function e4() {
        var t4 = this;
        if (this._resizeEventListener = function() {
          return e4.resize();
        }, this._mutationEventListener = function() {
          t4._mutationObserver.takeRecords(), e4.resize();
        }, e4.instances.length === 0) {
          var r4 = "on" + e4.EVENT_IDENTIFIER;
          e4.eventSupported = document && (r4 in document.documentElement || r4 in document.body), i2.logIf(!e4.eventSupported, i2.LogLevel.Warning, "resize event not supported");
        }
        e4.instances.length === 0 && e4.eventSupported && window.addEventListener(e4.EVENT_IDENTIFIER, this._resizeEventListener), e4.instances.push(this);
      }
      return e4.resize = function() {
        i2.assert(e4.instances.length > 0, "resize event received without a single resizable registered"), e4.instances.forEach(function(e5) {
          return e5.onResize();
        });
      }, e4.elementSize = function(e5) {
        if (e5 === void 0 || window === void 0 || typeof window.devicePixelRatio != "number")
          return [0, 0];
        var t4 = window.devicePixelRatio, r4 = getComputedStyle(e5);
        if (r4.width !== null && r4.width.endsWith("px") && r4.height !== null && r4.height.endsWith("px")) {
          var n3 = [parseFloat(r4.width), parseFloat(r4.height)];
          return [Math.round(n3[0] * t4), Math.round(n3[1] * t4)];
        }
        i2.log(i2.LogLevel.Debug, "computed element size expected in 'px', given " + r4.width + " " + r4.height);
      }, e4.prototype.observe = function(t4) {
        t4 !== void 0 && (this._mutationObserver = new MutationObserver(this._mutationEventListener)), this._mutationObserver.observe(t4, e4.MUTATION_OBSERVER_CONFIG);
      }, e4.prototype.dispose = function() {
        var t4 = e4.instances.indexOf(this);
        i2.assert(t4 !== -1, "invalid reference counting of resizable instances"), e4.instances.splice(t4, 1), e4.instances.length === 0 && e4.eventSupported && window.removeEventListener(e4.EVENT_IDENTIFIER, this._resizeEventListener), this._mutationObserver && this._mutationObserver.disconnect();
      }, e4.EVENT_IDENTIFIER = "resize", e4.instances = [], e4.eventSupported = false, e4.MUTATION_OBSERVER_CONFIG = { attributes: true, attributeFilter: ["style", "class"], childList: true, subtree: true }, e4;
    }();
    t3.Resizable = n2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(3), n2 = r3(0), o = r3(21), a = r3(34), s = function() {
      function e4() {
        this._hint = e4.InterpolationHint.Linear, this._colors = new Array(), this._inverted = false;
      }
      return e4.stride = function(t4) {
        switch (t4) {
          default:
          case e4.ArrayType.RGB:
          case e4.ArrayType.RGBf:
            return 3;
          case e4.ArrayType.RGBA:
          case e4.ArrayType.RGBAf:
            return 4;
        }
      }, e4.fromPreset = function(t4, r4, i3) {
        return a.fetchJsonAsync(t4, function(t5) {
          for (var n3, o2 = 0, a2 = t5; o2 < a2.length; o2++) {
            var s2 = a2[o2];
            if (s2.identifier === r4) {
              n3 = s2;
              break;
            }
          }
          if (n3 !== void 0) {
            for (var u2 = n3.format, c2 = e4.stride(u2), l2 = n3.colors, f2 = l2.length - 1, h2 = 0; h2 < l2.length; ++h2)
              if (l2[h2].length === i3 * c2) {
                f2 = h2;
                break;
              }
            var d2, p2 = l2[f2], _2 = n3.positions;
            if (_2 === void 0)
              return e4.fromArray(p2, u2, i3, void 0);
            for (h2 = 0; h2 < _2.length; ++h2)
              _2[h2].length === p2.length && (d2 = _2[h2]);
            return e4.fromArray(p2, u2, i3, d2);
          }
        }, e4.SCHEMA.properties);
      }, e4.fromArray = function(t4, r4, i3, a2) {
        if (i3 === 0 || t4.length === 0)
          return new e4();
        for (var s2 = t4, u2 = e4.stride(r4), c2 = s2.length / u2, l2 = new Array(c2), f2 = 0; f2 < s2.length; f2 += u2) {
          var h2 = new o.Color();
          switch (r4) {
            case e4.ArrayType.RGB:
              h2.fromUI8(s2[f2 + 0], s2[f2 + 1], s2[f2 + 2]);
              break;
            case e4.ArrayType.RGBA:
              h2.fromUI8(s2[f2 + 0], s2[f2 + 1], s2[f2 + 2], s2[f2 + 3]);
              break;
            case e4.ArrayType.RGBf:
              h2.fromF32(s2[f2 + 0], s2[f2 + 1], s2[f2 + 2]);
              break;
            case e4.ArrayType.RGBAf:
              h2.fromF32(s2[f2 + 0], s2[f2 + 1], s2[f2 + 2], s2[f2 + 3]);
          }
          l2[f2 / u2] = h2;
        }
        var d2 = new e4();
        if (a2 === void 0 && i3 === c2)
          return d2._colors = l2, d2;
        if (i3 === 1 && d2._colors.push(l2[0]), a2 === void 0)
          for ((a2 = new Array(c2))[0] = 0, f2 = 1; f2 < c2; ++f2)
            a2[f2] = f2 / (c2 - 1);
        n2.assert(a2.length === l2.length, "expected number of positions (" + a2.length + ") to match number of colors (" + l2.length + ")");
        var p2 = 0, _2 = p2 + 1, g2 = c2 - 1;
        for (f2 = 0; f2 < i3; ++f2) {
          var m2 = f2 === 0 ? 0 : f2 / (i3 - 1);
          if (m2 <= a2[p2])
            d2._colors.push(l2[p2]);
          else if (a2[g2] <= m2)
            d2._colors.push(l2[g2]);
          else {
            for (var v2 = p2 + 1; v2 < c2; ++v2)
              if (!(a2[v2] < m2)) {
                _2 = v2, p2 = v2 - 1;
                break;
              }
            var b2 = (m2 - a2[p2]) / (a2[_2] - a2[p2]);
            d2._colors.push(o.Color.lerp(l2[p2], l2[_2], b2, o.Color.Space.LAB));
          }
        }
        return d2;
      }, e4.prototype.lerp = function(t4, r4) {
        if (r4 === void 0 && (r4 = o.Color.Space.LAB), this._colors.length !== 0) {
          if (this._colors.length === 1)
            return this._colors[0];
          var a2 = i2.clamp(t4, 0, 1);
          if (a2 <= 0)
            return this._colors[0];
          if (a2 >= 1)
            return this._colors[this._colors.length - 1];
          var s2 = t4 * this._colors.length, u2 = Math.floor(s2), c2 = u2 + 1;
          return c2 >= this._colors.length ? this._colors[this._colors.length - 1] : (n2.assert(c2 < this._colors.length, "expected upper not exceed maximum color index: " + c2 + " < " + this._colors.length), this._hint === e4.InterpolationHint.Nearest ? this._colors[s2 - u2 <= c2 - s2 ? u2 : c2] : o.Color.lerp(this._colors[u2], this._colors[c2], s2 - u2, r4));
        }
      }, e4.prototype.color = function(e5) {
        if (!(e5 < 0 || e5 >= this._colors.length))
          return this._colors[e5];
      }, Object.defineProperty(e4.prototype, "colors", { get: function() {
        return this._colors;
      }, set: function(e5) {
        this._colors = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "hint", { get: function() {
        return this._hint;
      }, set: function(e5) {
        this._hint = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "length", { get: function() {
        return this._colors.length;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "inverted", { get: function() {
        return this._inverted;
      }, enumerable: true, configurable: true }), e4.prototype.invert = function() {
        this._colors.reverse(), this._inverted = !this._inverted;
      }, e4.prototype.bitsUI8 = function(e5, t4) {
        e5 === void 0 && (e5 = o.Color.Space.RGB), t4 === void 0 && (t4 = true);
        for (var r4 = this._colors.length, i3 = t4 ? 4 : 3, n3 = new Uint8Array(r4 * i3), a2 = 0; a2 < r4; ++a2) {
          var s2 = this._colors[a2].tuple(e5, t4);
          n3[a2 * i3 + 0] = 255 * s2[0], n3[a2 * i3 + 1] = 255 * s2[1], n3[a2 * i3 + 2] = 255 * s2[2], t4 && s2.length === 4 && (n3[a2 * i3 + 3] = 255 * s2[3]);
        }
        return n3;
      }, e4.prototype.bitsF32 = function(e5, t4) {
        e5 === void 0 && (e5 = o.Color.Space.RGB), t4 === void 0 && (t4 = true);
        for (var r4 = this._colors.length, i3 = t4 ? 4 : 3, n3 = new Float32Array(r4 * i3), a2 = 0; a2 < r4; ++a2) {
          var s2 = this._colors[a2].tuple(e5, t4);
          n3[a2 * i3 + 0] = s2[0], n3[a2 * i3 + 1] = s2[1], n3[a2 * i3 + 2] = s2[2], t4 && s2.length === 4 && (n3[a2 * i3 + 3] = s2[3]);
        }
        return n3;
      }, e4.SCHEMA = r3(99), e4;
    }();
    t3.ColorScale = s, function(e4) {
      !function(e5) {
        e5.Linear = "linear", e5.Nearest = "nearest";
      }(e4.InterpolationHint || (e4.InterpolationHint = {})), function(e5) {
        e5.sequential = "sequential", e5.diverging = "diverging", e5.qualitative = "qualitative";
      }(e4.ScaleType || (e4.ScaleType = {})), function(e5) {
        e5.RGB = "rgb", e5.RGBf = "rgbf", e5.RGBA = "rgba", e5.RGBAf = "rgbaf";
      }(e4.ArrayType || (e4.ArrayType = {}));
    }(s = t3.ColorScale || (t3.ColorScale = {})), t3.ColorScale = s;
  }, function(e3, t3, r3) {
    var i2 = e3.exports.Validator = r3(90);
    e3.exports.ValidatorResult = r3(16).ValidatorResult, e3.exports.ValidationError = r3(16).ValidationError, e3.exports.SchemaError = r3(16).SchemaError, e3.exports.SchemaScanResult = r3(36).SchemaScanResult, e3.exports.scan = r3(36).scan, e3.exports.validate = function(e4, t4, r4) {
      return new i2().validate(e4, t4, r4);
    };
  }, function(e3, t3, r3) {
    var i2 = r3(35), n2 = r3(98), o = r3(16), a = r3(36).scan, s = o.ValidatorResult, u2 = o.SchemaError, c2 = o.SchemaContext, l2 = function e4() {
      this.customFormats = Object.create(e4.prototype.customFormats), this.schemas = {}, this.unresolvedRefs = [], this.types = Object.create(h2), this.attributes = Object.create(n2.validators);
    };
    function f2(e4) {
      var t4 = typeof e4 == "string" ? e4 : e4.$ref;
      return typeof t4 == "string" && t4;
    }
    l2.prototype.customFormats = {}, l2.prototype.schemas = null, l2.prototype.types = null, l2.prototype.attributes = null, l2.prototype.unresolvedRefs = null, l2.prototype.addSchema = function(e4, t4) {
      var r4 = this;
      if (!e4)
        return null;
      var i3 = a(t4 || "/", e4), n3 = t4 || e4.id;
      for (var o2 in i3.id)
        this.schemas[o2] = i3.id[o2];
      for (var o2 in i3.ref)
        this.unresolvedRefs.push(o2);
      return this.unresolvedRefs = this.unresolvedRefs.filter(function(e5) {
        return r4.schemas[e5] === void 0;
      }), this.schemas[n3];
    }, l2.prototype.addSubSchemaArray = function(e4, t4) {
      if (Array.isArray(t4))
        for (var r4 = 0; r4 < t4.length; r4++)
          this.addSubSchema(e4, t4[r4]);
    }, l2.prototype.addSubSchemaObject = function(e4, t4) {
      if (t4 && typeof t4 == "object")
        for (var r4 in t4)
          this.addSubSchema(e4, t4[r4]);
    }, l2.prototype.setSchemas = function(e4) {
      this.schemas = e4;
    }, l2.prototype.getSchema = function(e4) {
      return this.schemas[e4];
    }, l2.prototype.validate = function(e4, t4, r4, n3) {
      r4 || (r4 = {});
      var o2 = r4.propertyName || "instance", s2 = i2.resolve(r4.base || "/", t4.id || "");
      if (!n3) {
        (n3 = new c2(t4, r4, o2, s2, Object.create(this.schemas))).schemas[s2] || (n3.schemas[s2] = t4);
        var l3 = a(s2, t4);
        for (var f3 in l3.id) {
          var h3 = l3.id[f3];
          n3.schemas[f3] = h3;
        }
      }
      if (t4) {
        var d2 = this.validateSchema(e4, t4, r4, n3);
        if (!d2)
          throw new Error("Result undefined");
        return d2;
      }
      throw new u2("no schema specified", t4);
    }, l2.prototype.validateSchema = function(e4, t4, r4, i3) {
      var a2, l3 = new s(e4, t4, r4, i3);
      if (typeof t4 == "boolean")
        t4 === true ? t4 = {} : t4 === false && (t4 = { type: [] });
      else if (!t4)
        throw new Error("schema is undefined");
      if (t4.extends)
        if (Array.isArray(t4.extends)) {
          var h3 = { schema: t4, ctx: i3 };
          t4.extends.forEach(this.schemaTraverser.bind(this, h3)), t4 = h3.schema, h3.schema = null, h3.ctx = null, h3 = null;
        } else
          t4 = o.deepMerge(t4, this.superResolve(t4.extends, i3));
      if (a2 = f2(t4)) {
        var d2 = this.resolve(t4, a2, i3), p2 = new c2(d2.subschema, r4, i3.propertyPath, d2.switchSchema, i3.schemas);
        return this.validateSchema(e4, d2.subschema, r4, p2);
      }
      var _2 = r4 && r4.skipAttributes || [];
      for (var g2 in t4)
        if (!n2.ignoreProperties[g2] && _2.indexOf(g2) < 0) {
          var m2 = null, v2 = this.attributes[g2];
          if (v2)
            m2 = v2.call(this, e4, t4, r4, i3);
          else if (r4.allowUnknownAttributes === false)
            throw new u2("Unsupported attribute: " + g2, t4);
          m2 && l3.importErrors(m2);
        }
      if (typeof r4.rewrite == "function") {
        var b2 = r4.rewrite.call(this, e4, t4, r4, i3);
        l3.instance = b2;
      }
      return l3;
    }, l2.prototype.schemaTraverser = function(e4, t4) {
      e4.schema = o.deepMerge(e4.schema, this.superResolve(t4, e4.ctx));
    }, l2.prototype.superResolve = function(e4, t4) {
      var r4;
      return (r4 = f2(e4)) ? this.resolve(e4, r4, t4).subschema : e4;
    }, l2.prototype.resolve = function(e4, t4, r4) {
      if (t4 = r4.resolve(t4), r4.schemas[t4])
        return { subschema: r4.schemas[t4], switchSchema: t4 };
      var n3 = i2.parse(t4), a2 = n3 && n3.hash, s2 = a2 && a2.length && t4.substr(0, t4.length - a2.length);
      if (!s2 || !r4.schemas[s2])
        throw new u2("no such schema <" + t4 + ">", e4);
      var c3 = o.objectGetPath(r4.schemas[s2], a2.substr(1));
      if (c3 === void 0)
        throw new u2("no such schema " + a2 + " located in <" + s2 + ">", e4);
      return { subschema: c3, switchSchema: t4 };
    }, l2.prototype.testType = function(e4, t4, r4, i3, n3) {
      if (typeof this.types[n3] == "function")
        return this.types[n3].call(this, e4);
      if (n3 && typeof n3 == "object") {
        var o2 = this.validateSchema(e4, n3, r4, i3);
        return o2 === void 0 || !(o2 && o2.errors.length);
      }
      return true;
    };
    var h2 = l2.prototype.types = {};
    h2.string = function(e4) {
      return typeof e4 == "string";
    }, h2.number = function(e4) {
      return typeof e4 == "number" && isFinite(e4);
    }, h2.integer = function(e4) {
      return typeof e4 == "number" && e4 % 1 == 0;
    }, h2.boolean = function(e4) {
      return typeof e4 == "boolean";
    }, h2.array = function(e4) {
      return Array.isArray(e4);
    }, h2.null = function(e4) {
      return e4 === null;
    }, h2.date = function(e4) {
      return e4 instanceof Date;
    }, h2.any = function(e4) {
      return true;
    }, h2.object = function(e4) {
      return e4 && typeof e4 == "object" && !Array.isArray(e4) && !(e4 instanceof Date);
    }, e3.exports = l2;
  }, function(e3, t3, r3) {
    (function(e4, i2) {
      var n2;
      /*! https://mths.be/punycode v1.4.1 by @mathias */
      !function(o) {
        t3 && t3.nodeType, e4 && e4.nodeType;
        var a = typeof i2 == "object" && i2;
        a.global !== a && a.window !== a && a.self;
        var s, u2 = 2147483647, c2 = /^xn--/, l2 = /[^\x20-\x7E]/, f2 = /[\x2E\u3002\uFF0E\uFF61]/g, h2 = { overflow: "Overflow: input needs wider integers to process", "not-basic": "Illegal input >= 0x80 (not a basic code point)", "invalid-input": "Invalid input" }, d2 = Math.floor, p2 = String.fromCharCode;
        function _2(e5) {
          throw new RangeError(h2[e5]);
        }
        function g2(e5, t4) {
          for (var r4 = e5.length, i3 = []; r4--; )
            i3[r4] = t4(e5[r4]);
          return i3;
        }
        function m2(e5, t4) {
          var r4 = e5.split("@"), i3 = "";
          return r4.length > 1 && (i3 = r4[0] + "@", e5 = r4[1]), i3 + g2((e5 = e5.replace(f2, ".")).split("."), t4).join(".");
        }
        function v2(e5) {
          for (var t4, r4, i3 = [], n3 = 0, o2 = e5.length; n3 < o2; )
            (t4 = e5.charCodeAt(n3++)) >= 55296 && t4 <= 56319 && n3 < o2 ? (64512 & (r4 = e5.charCodeAt(n3++))) == 56320 ? i3.push(((1023 & t4) << 10) + (1023 & r4) + 65536) : (i3.push(t4), n3--) : i3.push(t4);
          return i3;
        }
        function b2(e5) {
          return g2(e5, function(e6) {
            var t4 = "";
            return e6 > 65535 && (t4 += p2((e6 -= 65536) >>> 10 & 1023 | 55296), e6 = 56320 | 1023 & e6), t4 + p2(e6);
          }).join("");
        }
        function y2(e5, t4) {
          return e5 + 22 + 75 * (e5 < 26) - ((t4 != 0) << 5);
        }
        function E2(e5, t4, r4) {
          var i3 = 0;
          for (e5 = r4 ? d2(e5 / 700) : e5 >> 1, e5 += d2(e5 / t4); e5 > 455; i3 += 36)
            e5 = d2(e5 / 35);
          return d2(i3 + 36 * e5 / (e5 + 38));
        }
        function x2(e5) {
          var t4, r4, i3, n3, o2, a2, s2, c3, l3, f3, h3, p3 = [], g3 = e5.length, m3 = 0, v3 = 128, y3 = 72;
          for ((r4 = e5.lastIndexOf("-")) < 0 && (r4 = 0), i3 = 0; i3 < r4; ++i3)
            e5.charCodeAt(i3) >= 128 && _2("not-basic"), p3.push(e5.charCodeAt(i3));
          for (n3 = r4 > 0 ? r4 + 1 : 0; n3 < g3; ) {
            for (o2 = m3, a2 = 1, s2 = 36; n3 >= g3 && _2("invalid-input"), ((c3 = (h3 = e5.charCodeAt(n3++)) - 48 < 10 ? h3 - 22 : h3 - 65 < 26 ? h3 - 65 : h3 - 97 < 26 ? h3 - 97 : 36) >= 36 || c3 > d2((u2 - m3) / a2)) && _2("overflow"), m3 += c3 * a2, !(c3 < (l3 = s2 <= y3 ? 1 : s2 >= y3 + 26 ? 26 : s2 - y3)); s2 += 36)
              a2 > d2(u2 / (f3 = 36 - l3)) && _2("overflow"), a2 *= f3;
            y3 = E2(m3 - o2, t4 = p3.length + 1, o2 == 0), d2(m3 / t4) > u2 - v3 && _2("overflow"), v3 += d2(m3 / t4), m3 %= t4, p3.splice(m3++, 0, v3);
          }
          return b2(p3);
        }
        function T2(e5) {
          var t4, r4, i3, n3, o2, a2, s2, c3, l3, f3, h3, g3, m3, b3, x3, T3 = [];
          for (g3 = (e5 = v2(e5)).length, t4 = 128, r4 = 0, o2 = 72, a2 = 0; a2 < g3; ++a2)
            (h3 = e5[a2]) < 128 && T3.push(p2(h3));
          for (i3 = n3 = T3.length, n3 && T3.push("-"); i3 < g3; ) {
            for (s2 = u2, a2 = 0; a2 < g3; ++a2)
              (h3 = e5[a2]) >= t4 && h3 < s2 && (s2 = h3);
            for (s2 - t4 > d2((u2 - r4) / (m3 = i3 + 1)) && _2("overflow"), r4 += (s2 - t4) * m3, t4 = s2, a2 = 0; a2 < g3; ++a2)
              if ((h3 = e5[a2]) < t4 && ++r4 > u2 && _2("overflow"), h3 == t4) {
                for (c3 = r4, l3 = 36; !(c3 < (f3 = l3 <= o2 ? 1 : l3 >= o2 + 26 ? 26 : l3 - o2)); l3 += 36)
                  x3 = c3 - f3, b3 = 36 - f3, T3.push(p2(y2(f3 + x3 % b3, 0))), c3 = d2(x3 / b3);
                T3.push(p2(y2(c3, 0))), o2 = E2(r4, m3, i3 == n3), r4 = 0, ++i3;
              }
            ++r4, ++t4;
          }
          return T3.join("");
        }
        s = { version: "1.4.1", ucs2: { decode: v2, encode: b2 }, decode: x2, encode: T2, toASCII: function(e5) {
          return m2(e5, function(e6) {
            return l2.test(e6) ? "xn--" + T2(e6) : e6;
          });
        }, toUnicode: function(e5) {
          return m2(e5, function(e6) {
            return c2.test(e6) ? x2(e6.slice(4).toLowerCase()) : e6;
          });
        } }, (n2 = function() {
          return s;
        }.call(t3, r3, t3, e4)) === void 0 || (e4.exports = n2);
      }();
    }).call(this, r3(92)(e3), r3(93));
  }, function(e3, t3) {
    e3.exports = function(e4) {
      return e4.webpackPolyfill || (e4.deprecate = function() {
      }, e4.paths = [], e4.children || (e4.children = []), Object.defineProperty(e4, "loaded", { enumerable: true, get: function() {
        return e4.l;
      } }), Object.defineProperty(e4, "id", { enumerable: true, get: function() {
        return e4.i;
      } }), e4.webpackPolyfill = 1), e4;
    };
  }, function(e3, t3) {
    var r3;
    r3 = function() {
      return this;
    }();
    try {
      r3 = r3 || new Function("return this")();
    } catch (e4) {
      typeof window == "object" && (r3 = window);
    }
    e3.exports = r3;
  }, function(e3, t3, r3) {
    e3.exports = { isString: function(e4) {
      return typeof e4 == "string";
    }, isObject: function(e4) {
      return typeof e4 == "object" && e4 !== null;
    }, isNull: function(e4) {
      return e4 === null;
    }, isNullOrUndefined: function(e4) {
      return e4 == null;
    } };
  }, function(e3, t3, r3) {
    t3.decode = t3.parse = r3(96), t3.encode = t3.stringify = r3(97);
  }, function(e3, t3, r3) {
    function i2(e4, t4) {
      return Object.prototype.hasOwnProperty.call(e4, t4);
    }
    e3.exports = function(e4, t4, r4, o) {
      t4 = t4 || "&", r4 = r4 || "=";
      var a = {};
      if (typeof e4 != "string" || e4.length === 0)
        return a;
      var s = /\+/g;
      e4 = e4.split(t4);
      var u2 = 1e3;
      o && typeof o.maxKeys == "number" && (u2 = o.maxKeys);
      var c2 = e4.length;
      u2 > 0 && c2 > u2 && (c2 = u2);
      for (var l2 = 0; l2 < c2; ++l2) {
        var f2, h2, d2, p2, _2 = e4[l2].replace(s, "%20"), g2 = _2.indexOf(r4);
        g2 >= 0 ? (f2 = _2.substr(0, g2), h2 = _2.substr(g2 + 1)) : (f2 = _2, h2 = ""), d2 = decodeURIComponent(f2), p2 = decodeURIComponent(h2), i2(a, d2) ? n2(a[d2]) ? a[d2].push(p2) : a[d2] = [a[d2], p2] : a[d2] = p2;
      }
      return a;
    };
    var n2 = Array.isArray || function(e4) {
      return Object.prototype.toString.call(e4) === "[object Array]";
    };
  }, function(e3, t3, r3) {
    var i2 = function(e4) {
      switch (typeof e4) {
        case "string":
          return e4;
        case "boolean":
          return e4 ? "true" : "false";
        case "number":
          return isFinite(e4) ? e4 : "";
        default:
          return "";
      }
    };
    e3.exports = function(e4, t4, r4, s) {
      return t4 = t4 || "&", r4 = r4 || "=", e4 === null && (e4 = void 0), typeof e4 == "object" ? o(a(e4), function(a2) {
        var s2 = encodeURIComponent(i2(a2)) + r4;
        return n2(e4[a2]) ? o(e4[a2], function(e5) {
          return s2 + encodeURIComponent(i2(e5));
        }).join(t4) : s2 + encodeURIComponent(i2(e4[a2]));
      }).join(t4) : s ? encodeURIComponent(i2(s)) + r4 + encodeURIComponent(i2(e4)) : "";
    };
    var n2 = Array.isArray || function(e4) {
      return Object.prototype.toString.call(e4) === "[object Array]";
    };
    function o(e4, t4) {
      if (e4.map)
        return e4.map(t4);
      for (var r4 = [], i3 = 0; i3 < e4.length; i3++)
        r4.push(t4(e4[i3], i3));
      return r4;
    }
    var a = Object.keys || function(e4) {
      var t4 = [];
      for (var r4 in e4)
        Object.prototype.hasOwnProperty.call(e4, r4) && t4.push(r4);
      return t4;
    };
  }, function(e3, t3, r3) {
    var i2 = r3(16), n2 = i2.ValidatorResult, o = i2.SchemaError, a = { ignoreProperties: { id: true, default: true, description: true, title: true, exclusiveMinimum: true, exclusiveMaximum: true, additionalItems: true, $schema: true, $ref: true, extends: true } }, s = a.validators = {};
    function u2(e4, t4, r4, i3, n3) {
      var o2 = t4.throwError;
      t4.throwError = false;
      var a2 = this.validateSchema(e4, n3, t4, r4);
      return t4.throwError = o2, !a2.valid && i3 instanceof Function && i3(a2), a2.valid;
    }
    function c2(e4, t4, r4, i3, n3, o2) {
      if (this.types.object(e4) && (!t4.properties || t4.properties[n3] === void 0))
        if (t4.additionalProperties === false)
          o2.addError({ name: "additionalProperties", argument: n3, message: "additionalProperty " + JSON.stringify(n3) + " exists in instance when not allowed" });
        else {
          var a2 = t4.additionalProperties || {};
          typeof r4.preValidateProperty == "function" && r4.preValidateProperty(e4, n3, a2, r4, i3);
          var s2 = this.validateSchema(e4[n3], a2, r4, i3.makeChild(a2, n3));
          s2.instance !== o2.instance[n3] && (o2.instance[n3] = s2.instance), o2.importErrors(s2);
        }
    }
    s.type = function(e4, t4, r4, i3) {
      if (e4 === void 0)
        return null;
      var o2 = new n2(e4, t4, r4, i3), a2 = Array.isArray(t4.type) ? t4.type : [t4.type];
      if (!a2.some(this.testType.bind(this, e4, t4, r4, i3))) {
        var s2 = a2.map(function(e5) {
          return e5.id && "<" + e5.id + ">" || e5 + "";
        });
        o2.addError({ name: "type", argument: s2, message: "is not of a type(s) " + s2 });
      }
      return o2;
    }, s.anyOf = function(e4, t4, r4, i3) {
      if (e4 === void 0)
        return null;
      var a2 = new n2(e4, t4, r4, i3), s2 = new n2(e4, t4, r4, i3);
      if (!Array.isArray(t4.anyOf))
        throw new o("anyOf must be an array");
      if (!t4.anyOf.some(u2.bind(this, e4, r4, i3, function(e5) {
        s2.importErrors(e5);
      }))) {
        var c3 = t4.anyOf.map(function(e5, t5) {
          return e5.id && "<" + e5.id + ">" || e5.title && JSON.stringify(e5.title) || e5.$ref && "<" + e5.$ref + ">" || "[subschema " + t5 + "]";
        });
        r4.nestedErrors && a2.importErrors(s2), a2.addError({ name: "anyOf", argument: c3, message: "is not any of " + c3.join(",") });
      }
      return a2;
    }, s.allOf = function(e4, t4, r4, i3) {
      if (e4 === void 0)
        return null;
      if (!Array.isArray(t4.allOf))
        throw new o("allOf must be an array");
      var a2 = new n2(e4, t4, r4, i3), s2 = this;
      return t4.allOf.forEach(function(t5, n3) {
        var o2 = s2.validateSchema(e4, t5, r4, i3);
        if (!o2.valid) {
          var u3 = t5.id && "<" + t5.id + ">" || t5.title && JSON.stringify(t5.title) || t5.$ref && "<" + t5.$ref + ">" || "[subschema " + n3 + "]";
          a2.addError({ name: "allOf", argument: { id: u3, length: o2.errors.length, valid: o2 }, message: "does not match allOf schema " + u3 + " with " + o2.errors.length + " error[s]:" }), a2.importErrors(o2);
        }
      }), a2;
    }, s.oneOf = function(e4, t4, r4, i3) {
      if (e4 === void 0)
        return null;
      if (!Array.isArray(t4.oneOf))
        throw new o("oneOf must be an array");
      var a2 = new n2(e4, t4, r4, i3), s2 = new n2(e4, t4, r4, i3), c3 = t4.oneOf.filter(u2.bind(this, e4, r4, i3, function(e5) {
        s2.importErrors(e5);
      })).length, l3 = t4.oneOf.map(function(e5, t5) {
        return e5.id && "<" + e5.id + ">" || e5.title && JSON.stringify(e5.title) || e5.$ref && "<" + e5.$ref + ">" || "[subschema " + t5 + "]";
      });
      return c3 !== 1 && (r4.nestedErrors && a2.importErrors(s2), a2.addError({ name: "oneOf", argument: l3, message: "is not exactly one from " + l3.join(",") })), a2;
    }, s.properties = function(e4, t4, r4, i3) {
      if (this.types.object(e4)) {
        var o2 = new n2(e4, t4, r4, i3), a2 = t4.properties || {};
        for (var s2 in a2) {
          typeof r4.preValidateProperty == "function" && r4.preValidateProperty(e4, s2, a2[s2], r4, i3);
          var u3 = Object.hasOwnProperty.call(e4, s2) ? e4[s2] : void 0, c3 = this.validateSchema(u3, a2[s2], r4, i3.makeChild(a2[s2], s2));
          c3.instance !== o2.instance[s2] && (o2.instance[s2] = c3.instance), o2.importErrors(c3);
        }
        return o2;
      }
    }, s.patternProperties = function(e4, t4, r4, i3) {
      if (this.types.object(e4)) {
        var o2 = new n2(e4, t4, r4, i3), a2 = t4.patternProperties || {};
        for (var s2 in e4) {
          var u3 = true;
          for (var l3 in a2)
            if (new RegExp(l3).test(s2)) {
              u3 = false, typeof r4.preValidateProperty == "function" && r4.preValidateProperty(e4, s2, a2[l3], r4, i3);
              var f3 = this.validateSchema(e4[s2], a2[l3], r4, i3.makeChild(a2[l3], s2));
              f3.instance !== o2.instance[s2] && (o2.instance[s2] = f3.instance), o2.importErrors(f3);
            }
          u3 && c2.call(this, e4, t4, r4, i3, s2, o2);
        }
        return o2;
      }
    }, s.additionalProperties = function(e4, t4, r4, i3) {
      if (this.types.object(e4)) {
        if (t4.patternProperties)
          return null;
        var o2 = new n2(e4, t4, r4, i3);
        for (var a2 in e4)
          c2.call(this, e4, t4, r4, i3, a2, o2);
        return o2;
      }
    }, s.minProperties = function(e4, t4, r4, i3) {
      if (this.types.object(e4)) {
        var o2 = new n2(e4, t4, r4, i3);
        return Object.keys(e4).length >= t4.minProperties || o2.addError({ name: "minProperties", argument: t4.minProperties, message: "does not meet minimum property length of " + t4.minProperties }), o2;
      }
    }, s.maxProperties = function(e4, t4, r4, i3) {
      if (this.types.object(e4)) {
        var o2 = new n2(e4, t4, r4, i3);
        return Object.keys(e4).length <= t4.maxProperties || o2.addError({ name: "maxProperties", argument: t4.maxProperties, message: "does not meet maximum property length of " + t4.maxProperties }), o2;
      }
    }, s.items = function(e4, t4, r4, i3) {
      var o2 = this;
      if (this.types.array(e4) && t4.items) {
        var a2 = new n2(e4, t4, r4, i3);
        return e4.every(function(e5, n3) {
          var s2 = Array.isArray(t4.items) ? t4.items[n3] || t4.additionalItems : t4.items;
          if (s2 === void 0)
            return true;
          if (s2 === false)
            return a2.addError({ name: "items", message: "additionalItems not permitted" }), false;
          var u3 = o2.validateSchema(e5, s2, r4, i3.makeChild(s2, n3));
          return u3.instance !== a2.instance[n3] && (a2.instance[n3] = u3.instance), a2.importErrors(u3), true;
        }), a2;
      }
    }, s.minimum = function(e4, t4, r4, i3) {
      if (this.types.number(e4)) {
        var o2 = new n2(e4, t4, r4, i3);
        return (t4.exclusiveMinimum && t4.exclusiveMinimum === true ? e4 > t4.minimum : e4 >= t4.minimum) || o2.addError({ name: "minimum", argument: t4.minimum, message: "must have a minimum value of " + t4.minimum }), o2;
      }
    }, s.maximum = function(e4, t4, r4, i3) {
      if (this.types.number(e4)) {
        var o2 = new n2(e4, t4, r4, i3);
        return (t4.exclusiveMaximum && t4.exclusiveMaximum === true ? e4 < t4.maximum : e4 <= t4.maximum) || o2.addError({ name: "maximum", argument: t4.maximum, message: "must have a maximum value of " + t4.maximum }), o2;
      }
    };
    var l2 = function(e4, t4, r4, a2, s2, u3) {
      if (this.types.number(e4)) {
        var c3 = t4[s2];
        if (c3 == 0)
          throw new o(s2 + " cannot be zero");
        var l3 = new n2(e4, t4, r4, a2), f3 = i2.getDecimalPlaces(e4), h2 = i2.getDecimalPlaces(c3), d2 = Math.max(f3, h2), p2 = Math.pow(10, d2);
        return Math.round(e4 * p2) % Math.round(c3 * p2) != 0 && l3.addError({ name: s2, argument: c3, message: u3 + JSON.stringify(c3) }), l3;
      }
    };
    function f2(e4, t4, r4) {
      var n3, o2 = r4.length;
      for (n3 = t4 + 1; n3 < o2; n3++)
        if (i2.deepCompareStrict(e4, r4[n3]))
          return false;
      return true;
    }
    s.multipleOf = function(e4, t4, r4, i3) {
      return l2.call(this, e4, t4, r4, i3, "multipleOf", "is not a multiple of (divisible by) ");
    }, s.divisibleBy = function(e4, t4, r4, i3) {
      return l2.call(this, e4, t4, r4, i3, "divisibleBy", "is not divisible by (multiple of) ");
    }, s.required = function(e4, t4, r4, i3) {
      var o2 = new n2(e4, t4, r4, i3);
      return e4 === void 0 && t4.required === true ? o2.addError({ name: "required", message: "is required" }) : this.types.object(e4) && Array.isArray(t4.required) && t4.required.forEach(function(t5) {
        e4[t5] === void 0 && o2.addError({ name: "required", argument: t5, message: "requires property " + JSON.stringify(t5) });
      }), o2;
    }, s.pattern = function(e4, t4, r4, i3) {
      if (this.types.string(e4)) {
        var o2 = new n2(e4, t4, r4, i3);
        return e4.match(t4.pattern) || o2.addError({ name: "pattern", argument: t4.pattern, message: "does not match pattern " + JSON.stringify(t4.pattern.toString()) }), o2;
      }
    }, s.format = function(e4, t4, r4, o2) {
      if (e4 !== void 0) {
        var a2 = new n2(e4, t4, r4, o2);
        return a2.disableFormat || i2.isFormat(e4, t4.format, this) || a2.addError({ name: "format", argument: t4.format, message: "does not conform to the " + JSON.stringify(t4.format) + " format" }), a2;
      }
    }, s.minLength = function(e4, t4, r4, i3) {
      if (this.types.string(e4)) {
        var o2 = new n2(e4, t4, r4, i3), a2 = e4.match(/[\uDC00-\uDFFF]/g);
        return e4.length - (a2 ? a2.length : 0) >= t4.minLength || o2.addError({ name: "minLength", argument: t4.minLength, message: "does not meet minimum length of " + t4.minLength }), o2;
      }
    }, s.maxLength = function(e4, t4, r4, i3) {
      if (this.types.string(e4)) {
        var o2 = new n2(e4, t4, r4, i3), a2 = e4.match(/[\uDC00-\uDFFF]/g);
        return e4.length - (a2 ? a2.length : 0) <= t4.maxLength || o2.addError({ name: "maxLength", argument: t4.maxLength, message: "does not meet maximum length of " + t4.maxLength }), o2;
      }
    }, s.minItems = function(e4, t4, r4, i3) {
      if (this.types.array(e4)) {
        var o2 = new n2(e4, t4, r4, i3);
        return e4.length >= t4.minItems || o2.addError({ name: "minItems", argument: t4.minItems, message: "does not meet minimum length of " + t4.minItems }), o2;
      }
    }, s.maxItems = function(e4, t4, r4, i3) {
      if (this.types.array(e4)) {
        var o2 = new n2(e4, t4, r4, i3);
        return e4.length <= t4.maxItems || o2.addError({ name: "maxItems", argument: t4.maxItems, message: "does not meet maximum length of " + t4.maxItems }), o2;
      }
    }, s.uniqueItems = function(e4, t4, r4, o2) {
      if (this.types.array(e4)) {
        var a2 = new n2(e4, t4, r4, o2);
        return e4.every(function(e5, t5, r5) {
          for (var n3 = t5 + 1; n3 < r5.length; n3++)
            if (i2.deepCompareStrict(e5, r5[n3]))
              return false;
          return true;
        }) || a2.addError({ name: "uniqueItems", message: "contains duplicate item" }), a2;
      }
    }, s.uniqueItems = function(e4, t4, r4, i3) {
      if (this.types.array(e4)) {
        var o2 = new n2(e4, t4, r4, i3);
        return e4.every(f2) || o2.addError({ name: "uniqueItems", message: "contains duplicate item" }), o2;
      }
    }, s.dependencies = function(e4, t4, r4, i3) {
      if (this.types.object(e4)) {
        var o2 = new n2(e4, t4, r4, i3);
        for (var a2 in t4.dependencies)
          if (e4[a2] !== void 0) {
            var s2 = t4.dependencies[a2], u3 = i3.makeChild(s2, a2);
            if (typeof s2 == "string" && (s2 = [s2]), Array.isArray(s2))
              s2.forEach(function(t5) {
                e4[t5] === void 0 && o2.addError({ name: "dependencies", argument: u3.propertyPath, message: "property " + t5 + " not found, required by " + u3.propertyPath });
              });
            else {
              var c3 = this.validateSchema(e4, s2, r4, u3);
              o2.instance !== c3.instance && (o2.instance = c3.instance), c3 && c3.errors.length && (o2.addError({ name: "dependencies", argument: u3.propertyPath, message: "does not meet dependency required by " + u3.propertyPath }), o2.importErrors(c3));
            }
          }
        return o2;
      }
    }, s.enum = function(e4, t4, r4, a2) {
      if (e4 === void 0)
        return null;
      if (!Array.isArray(t4.enum))
        throw new o("enum expects an array", t4);
      var s2 = new n2(e4, t4, r4, a2);
      return t4.enum.some(i2.deepCompareStrict.bind(null, e4)) || s2.addError({ name: "enum", argument: t4.enum, message: "is not one of enum values: " + t4.enum.map(String).join(",") }), s2;
    }, s.const = function(e4, t4, r4, o2) {
      if (e4 === void 0)
        return null;
      var a2 = new n2(e4, t4, r4, o2);
      return i2.deepCompareStrict(t4.const, e4) || a2.addError({ name: "const", argument: t4.const, message: "does not exactly match expected constant: " + t4.const }), a2;
    }, s.not = s.disallow = function(e4, t4, r4, i3) {
      var o2 = this;
      if (e4 === void 0)
        return null;
      var a2 = new n2(e4, t4, r4, i3), s2 = t4.not || t4.disallow;
      return s2 ? (Array.isArray(s2) || (s2 = [s2]), s2.forEach(function(n3) {
        if (o2.testType(e4, t4, r4, i3, n3)) {
          var s3 = n3 && n3.id && "<" + n3.id + ">" || n3;
          a2.addError({ name: "not", argument: s3, message: "is of prohibited type " + s3 });
        }
      }), a2) : null;
    }, e3.exports = a;
  }, function(e3) {
    e3.exports = JSON.parse('{"id":"/ColorScalePresets","title":"Color Scale Presets Schema","description":"JSON schema for a color scale presets data, used in the webgl-operate module for validation.","type":"array","items":{"type":"object","properties":{"identifier":{"type":"string"},"type":{"type":"string","enum":["sequential","diverging","qualitative"]},"format":{"type":"string","enum":["rgb","rgbf"]},"colors":{"type":"array","items":{"type":"array","items":{"type":["integer","number"]}}},"positions":{"type":"array","items":{"type":"array","items":{"type":["integer","number"]}}}},"required":["identifier","format","colors"],"additionalProperties":false}}');
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(0), s = r3(20), u2 = r3(2), c2 = function(e4) {
      function t4() {
        var t5 = e4 !== null && e4.apply(this, arguments) || this;
        return t5._width = 0, t5._height = 0, t5._depth = 0, t5._internalFormat = 0, t5._format = 0, t5._type = 0, t5;
      }
      return n2(t4, e4), t4.prototype.create = function(e5, r4, i3, n3, o2, s2) {
        a.assert(this._context.supportsTexImage3D, "expected texImage3D to be supported"), a.assert(e5 > 0 && r4 > 0 && i3 > 0, "texture requires valid width, height, and depth of greater than zero");
        var u3 = this._context.gl, c3 = this._context.gl2facade;
        return this._object = u3.createTexture(), this._width = e5, this._height = r4, this._depth = i3, this._internalFormat = n3, this._format = o2, this._type = s2, u3.bindTexture(u3.TEXTURE_3D, this._object), u3.texParameteri(u3.TEXTURE_3D, u3.TEXTURE_MAG_FILTER, u3.NEAREST), u3.texParameteri(u3.TEXTURE_3D, u3.TEXTURE_MIN_FILTER, u3.NEAREST), u3.texParameteri(u3.TEXTURE_3D, u3.TEXTURE_WRAP_S, u3.CLAMP_TO_EDGE), u3.texParameteri(u3.TEXTURE_3D, u3.TEXTURE_WRAP_T, u3.CLAMP_TO_EDGE), u3.texParameteri(u3.TEXTURE_3D, u3.TEXTURE_WRAP_R, u3.CLAMP_TO_EDGE), c3.texImage3D(u3.TEXTURE_3D, 0, this._internalFormat, this._width, this._height, this._depth, 0, this._format, this._type), u3.bindTexture(u3.TEXTURE_3D, t4.DEFAULT_TEXTURE), this._valid = u3.isTexture(this._object), this.reallocate(), this._object;
      }, t4.prototype.delete = function() {
        a.assert(this._object instanceof WebGLTexture, "expected WebGLTexture object"), this._context.gl.deleteTexture(this._object), this._object = void 0, this._valid = false, this._internalFormat = 0, this._format = 0, this._type = 0, this._width = 0, this._height = 0, this._depth = 0;
      }, t4.prototype.reallocate = function() {
        var e5 = this.context.gl, t5 = this._context.gl2facade, r4 = this._width * this._height * this._depth * s.byteSizeOfFormat(this.context, this._internalFormat);
        this._type === t5.HALF_FLOAT && this._internalFormat !== e5.RGBA16F ? r4 *= 2 : this._type === e5.FLOAT && this._internalFormat !== e5.RGBA16F && (r4 *= 4), this.context.allocationRegister.reallocate(this._identifier, r4);
      }, t4.prototype.bind = function(e5) {
        var t5 = this.context.gl;
        e5 && t5.activeTexture(e5), t5.bindTexture(t5.TEXTURE_3D, this._object);
      }, t4.prototype.unbind = function(e5) {
        var r4 = this.context.gl;
        e5 && r4.activeTexture(e5), r4.bindTexture(r4.TEXTURE_3D, t4.DEFAULT_TEXTURE);
      }, t4.prototype.load = function(e5, t5, r4) {
        return a.assert(false, "not implemented"), new Promise(function() {
          return true;
        });
      }, t4.prototype.data = function(e5, t5, r4) {
        t5 === void 0 && (t5 = true), r4 === void 0 && (r4 = true);
        var i3 = this.context.gl, n3 = this._context.gl2facade;
        t5 && this.bind(), n3.texImage3D(i3.TEXTURE_3D, 0, this._internalFormat, this._width, this._height, this._depth, 0, this._format, this._type, e5), r4 && this.unbind(), this.reallocate();
      }, t4.prototype.filter = function(e5, t5, r4, i3) {
        r4 === void 0 && (r4 = true), i3 === void 0 && (i3 = true);
        var n3 = this.context.gl;
        r4 && this.bind(), n3.texParameteri(n3.TEXTURE_3D, n3.TEXTURE_MAG_FILTER, e5), n3.texParameteri(n3.TEXTURE_3D, n3.TEXTURE_MIN_FILTER, t5), i3 && this.unbind();
      }, t4.prototype.wrap = function(e5, t5, r4, i3, n3) {
        i3 === void 0 && (i3 = true), n3 === void 0 && (n3 = true);
        var o2 = this.context.gl;
        i3 && this.bind(), o2.texParameteri(o2.TEXTURE_3D, o2.TEXTURE_WRAP_S, e5), o2.texParameteri(o2.TEXTURE_3D, o2.TEXTURE_WRAP_T, t5), o2.texParameteri(o2.TEXTURE_3D, o2.TEXTURE_WRAP_T, r4), n3 && this.unbind();
      }, t4.prototype.reformat = function(e5, t5, r4, i3, n3) {
        i3 === void 0 && (i3 = true), n3 === void 0 && (n3 = true), (e5 !== this._internalFormat || t5 !== void 0 && t5 !== this._format || r4 !== void 0 && r4 !== this._type) && (a.assert(e5 !== void 0, "valid internal format expected"), this._internalFormat = e5, t5 && (this._format = t5), r4 && (this._type = r4), this.data(void 0, i3, n3));
      }, t4.prototype.resize = function(e5, t5, r4, i3, n3) {
        i3 === void 0 && (i3 = true), n3 === void 0 && (n3 = true), e5 === this._width && t5 === this._height && r4 === this._depth || (this._width = e5, this._height = t5, this._depth = r4, this.data(void 0, i3, n3));
      }, Object.defineProperty(t4.prototype, "bytes", { get: function() {
        return this.assertInitialized(), this.context.allocationRegister.allocated(this._identifier);
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "internalFormat", { get: function() {
        return this.assertInitialized(), this._internalFormat;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "format", { get: function() {
        return this.assertInitialized(), this._format;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "type", { get: function() {
        return this.assertInitialized(), this._type;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "width", { get: function() {
        return this.assertInitialized(), this._width;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "height", { get: function() {
        return this.assertInitialized(), this._height;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "depth", { get: function() {
        return this.assertInitialized(), this._depth;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "size", { get: function() {
        return this.assertInitialized(), [this._width, this._height, this._depth];
      }, enumerable: true, configurable: true }), t4.DEFAULT_TEXTURE = void 0, o([u2.Initializable.assert_initialized()], t4.prototype, "bind", null), o([u2.Initializable.assert_initialized()], t4.prototype, "unbind", null), o([u2.Initializable.assert_initialized()], t4.prototype, "load", null), o([u2.Initializable.assert_initialized()], t4.prototype, "data", null), o([u2.Initializable.assert_initialized()], t4.prototype, "filter", null), o([u2.Initializable.assert_initialized()], t4.prototype, "wrap", null), o([u2.Initializable.assert_initialized()], t4.prototype, "reformat", null), o([u2.Initializable.assert_initialized()], t4.prototype, "resize", null), t4;
    }(r3(8).AbstractObject);
    t3.Texture3D = c2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(5), s = r3(2), u2 = function(e4) {
      function t4(t5, r4, i3, n3, o2) {
        n3 === void 0 && (n3 = 0);
        var s2 = e4.call(this) || this;
        return s2._updates = new Array(), s2._cpuBuffer = new ArrayBuffer(r4), s2._gpuBuffer = new a.Buffer(t5, o2), s2._usage = i3, s2._mergeThreshold = n3, s2;
      }
      return n2(t4, e4), t4.updatesNeedMerge = function(e5, t5, r4) {
        return t5.begin - e5.end < r4 || r4 === -1;
      }, t4.prototype.mergeUpdatesLeft = function(e5) {
        for (var r4 = 0, i3 = this._updates[e5], n3 = e5 - 1; n3 >= 0; n3--) {
          var o2 = this._updates[n3];
          if (!t4.updatesNeedMerge(o2, i3, this._mergeThreshold))
            break;
          i3.begin = Math.min(i3.begin, o2.begin), i3.end = Math.max(i3.end, o2.end), r4++;
        }
        return this._updates.splice(e5 - r4, r4), r4 + 1;
      }, t4.prototype.mergeUpdatesRight = function(e5) {
        for (var r4 = 0, i3 = this._updates[e5], n3 = e5 + 1; n3 < this._updates.length; n3++) {
          var o2 = this._updates[n3];
          if (!t4.updatesNeedMerge(i3, o2, this._mergeThreshold))
            break;
          i3.begin = Math.min(i3.begin, o2.begin), i3.end = Math.max(i3.end, o2.end), r4++;
        }
        return this._updates.splice(e5 + 1, r4), r4 + 1;
      }, t4.prototype.addUpdate = function(e5) {
        var t5 = this._updates.findIndex(function(t6) {
          return e5.begin < t6.begin;
        });
        t5 === -1 ? (this._updates.push(e5), this.mergeUpdatesLeft(this._updates.length - 1)) : (this._updates.splice(t5, 0, e5), this.mergeUpdatesRight(t5), this.mergeUpdatesLeft(t5));
      }, t4.prototype.initialize = function(e5) {
        return this._gpuBuffer.initialize(e5);
      }, t4.prototype.uninitialize = function() {
        this._gpuBuffer.uninitialize();
      }, t4.prototype.bind = function() {
        this._gpuBuffer.bind();
      }, t4.prototype.unbind = function() {
        this._gpuBuffer.unbind();
      }, t4.prototype.attribEnable = function(e5, t5, r4, i3, n3, o2, a2, s2) {
        i3 === void 0 && (i3 = false), n3 === void 0 && (n3 = 0), o2 === void 0 && (o2 = 0), a2 === void 0 && (a2 = true), s2 === void 0 && (s2 = true), this._gpuBuffer.attribEnable(e5, t5, r4, i3, n3, o2, a2, s2);
      }, t4.prototype.attribDisable = function(e5, t5, r4) {
        t5 === void 0 && (t5 = true), r4 === void 0 && (r4 = true), this._gpuBuffer.attribDisable(e5, t5, r4);
      }, t4.prototype.mergeSubDataRanges = function() {
        for (var e5 = 0; e5 < this._updates.length; )
          e5 += this.mergeUpdatesRight(e5);
      }, t4.prototype.subData = function(e5, t5) {
        var r4;
        r4 = t5 instanceof ArrayBuffer ? new Uint8Array(t5) : new Uint8Array(t5.buffer).subarray(t5.byteOffset, t5.byteOffset + t5.byteLength), new Uint8Array(this._cpuBuffer).set(r4, e5), this.addUpdate({ begin: e5, end: e5 + r4.byteLength });
      }, t4.prototype.update = function(e5, t5) {
        if (e5 === void 0 && (e5 = false), t5 === void 0 && (t5 = false), e5 && this._gpuBuffer.bind(), this._gpuBuffer.bytes !== this._cpuBuffer.byteLength)
          this._gpuBuffer.data(this._cpuBuffer, this._usage);
        else
          for (var r4 = new Uint8Array(this._cpuBuffer), i3 = 0, n3 = this._updates; i3 < n3.length; i3++) {
            var o2 = n3[i3], a2 = r4.subarray(o2.begin, o2.end);
            this._gpuBuffer.subData(o2.begin, a2);
          }
        t5 && this._gpuBuffer.unbind(), this._updates.length = 0;
      }, Object.defineProperty(t4.prototype, "size", { get: function() {
        return this._cpuBuffer.byteLength;
      }, set: function(e5) {
        var t5 = this._cpuBuffer;
        this._cpuBuffer = new ArrayBuffer(e5);
        var r4 = new Uint8Array(t5).slice(0, e5);
        new Uint8Array(this._cpuBuffer).set(r4);
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "target", { get: function() {
        return this.assertInitialized(), this._gpuBuffer.target;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "usage", { get: function() {
        return this._usage;
      }, set: function(e5) {
        this._usage = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "mergeThreshold", { get: function() {
        return this._mergeThreshold;
      }, set: function(e5) {
        this._mergeThreshold = e5;
      }, enumerable: true, configurable: true }), o([s.Initializable.initialize()], t4.prototype, "initialize", null), o([s.Initializable.uninitialize()], t4.prototype, "uninitialize", null), o([s.Initializable.assert_initialized()], t4.prototype, "bind", null), o([s.Initializable.assert_initialized()], t4.prototype, "unbind", null), o([s.Initializable.assert_initialized()], t4.prototype, "attribEnable", null), o([s.Initializable.assert_initialized()], t4.prototype, "attribDisable", null), o([s.Initializable.assert_initialized()], t4.prototype, "update", null), t4;
    }(s.Initializable);
    t3.UnifiedBuffer = u2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(1), n2 = r3(3), o = r3(0), a = function() {
      function e4() {
        this._tileSize = [0, 0], this._padding = i2.vec4.fromValues(0, 0, 0, 0), this._tile = -1, this._algorithm = e4.Algorithm.ScanLine, this._offset = [0, 0];
      }
      return e4.hilbertIndices = function(e5, t4, r4, i3, n3, o2, a2, s, u2, c2, l2) {
        if (c2 > 0)
          return l2 = this.hilbertIndices(e5, t4, r4, i3, n3, s / 2, u2 / 2, o2 / 2, a2 / 2, c2 - 1, l2), l2 = this.hilbertIndices(e5, t4, r4, i3 + o2 / 2, n3 + a2 / 2, o2 / 2, a2 / 2, s / 2, u2 / 2, c2 - 1, l2), l2 = this.hilbertIndices(e5, t4, r4, i3 + o2 / 2 + s / 2, n3 + a2 / 2 + u2 / 2, o2 / 2, a2 / 2, s / 2, u2 / 2, c2 - 1, l2), this.hilbertIndices(e5, t4, r4, i3 + o2 / 2 + s, n3 + a2 / 2 + u2, -s / 2, -u2 / 2, -o2 / 2, -a2 / 2, c2 - 1, l2);
        if (n3 += (a2 + u2 - 1) / 2, (i3 += (o2 + s - 1) / 2) < t4 && n3 < r4) {
          var f2 = 2 * l2;
          e5[f2 + 0] = i3, e5[f2 + 1] = n3, ++l2;
        }
        return l2;
      }, e4.generateHilbertIndices = function(e5, t4, r4) {
        o.assert(e5.length === 2 * t4 * r4, "expected interleaved indices-array of length " + 2 * t4 * r4 + ", given " + e5.length);
        var i3 = Math.max(t4, r4), n3 = Math.ceil(Math.log2(i3)), a2 = o.upperPowerOfTwo(i3);
        this.hilbertIndices(e5, t4, r4, 0, 0, a2, 0, 0, a2, n3, 0);
      }, e4.generateScanLineIndices = function(e5, t4, r4) {
        o.assert(e5.length === 2 * t4 * r4, "expected interleaved indices-array of length " + 2 * t4 * r4 + ", given " + e5.length);
        for (var i3 = 0; i3 < r4; ++i3)
          for (var n3 = 0; n3 < t4; ++n3) {
            var a2 = 2 * (n3 + i3 * t4);
            e5[a2 + 0] = n3, e5[a2 + 1] = i3;
          }
      }, e4.generateZCurveIndices = function(e5, t4, r4) {
        o.assert(e5.length === 2 * t4 * r4, "expected interleaved indices-array of length " + 2 * t4 * r4 + ", given " + e5.length);
        for (var i3 = Math.max(t4, r4), n3 = 2 * Math.floor(Math.log2(i3)), a2 = 0, s = 0; s < t4 * r4; ++a2) {
          for (var u2 = 0, c2 = 0, l2 = 0; l2 < n3; ++l2)
            u2 += (a2 >> 2 * l2 & 1) << l2, c2 += (a2 >> 2 * l2 + 1 & 1) << l2;
          if (u2 < t4 && c2 < r4) {
            var f2 = 2 * s;
            e5[f2 + 0] = u2, e5[f2 + 1] = c2, ++s;
          }
        }
      }, e4.prototype.invalidate = function(e5) {
        e5 && (this._indices = new Uint16Array(0)), this._valid = false;
      }, e4.prototype.ensureValidIterationIndices = function() {
        if (!(this._indices.length > 0))
          switch (this._indices = new Uint16Array(2 * this.numTiles), this._algorithm) {
            case e4.Algorithm.ScanLine:
              e4.generateScanLineIndices(this._indices, this.numXTiles, this.numYTiles);
              break;
            case e4.Algorithm.HilbertCurve:
              e4.generateHilbertIndices(this._indices, this.numXTiles, this.numYTiles);
              break;
            case e4.Algorithm.ZCurve:
              e4.generateZCurveIndices(this._indices, this.numXTiles, this.numYTiles);
              break;
            default:
              e4.generateScanLineIndices(this._indices, this.numXTiles, this.numYTiles);
          }
      }, e4.prototype.tableIndices = function() {
        this.ensureValidIterationIndices();
        var e5 = 2 * this.tile;
        return [this._indices[e5 + 0], this._indices[e5 + 1]];
      }, e4.prototype.getPaddedTileSize = function() {
        return [this.padding[1] + this.padding[3] + this.tileSize[0], this.padding[0] + this.padding[2] + this.tileSize[1]];
      }, e4.prototype.nextTile = function() {
        return !(this.tile >= this.numTiles - 1 || (this.tile < 0 && (this.tile = -1), ++this.tile, this.update(), 0));
      }, e4.prototype.hasNextTile = function() {
        return this.tile <= this.numTiles - 1 && this.tile >= 0;
      }, e4.prototype.reset = function() {
        this.tile = -1, this._offset[0] = 0, this._offset[1] = 0;
      }, e4.prototype.sourceCameraChanged = function() {
        o.assert(this._sourceCamera !== void 0, "expected the unput/source camera to be defined"), this._camera = Object.create(this._sourceCamera);
      }, e4.prototype.update = function() {
        if (this._valid)
          return this._offset;
        if (this.numTiles <= this.tile || 0 > this.tile)
          return o.log(o.LogLevel.Warning, "index " + this.tile + " is out of bounds " + this.numTiles + ", returning first tile"), this._offset;
        o.assert(this._sourceViewport !== void 0 && this._sourceCamera !== void 0, "expected source camera and source viewport to be defined before updating"), this._valid = true;
        var e5 = this.tableIndices(), t4 = this.sourceViewport, r4 = this.getPaddedTileSize(), a2 = [0, 0];
        a2[0] = e5[0] * this.tileSize[0] + r4[0] / 2, a2[1] = e5[1] * this.tileSize[1] + r4[1] / 2;
        var s = [0, 0];
        s[0] = e5[0] * this.tileSize[0], s[1] = e5[1] * this.tileSize[1];
        var u2 = [2 * a2[0] / t4[0] - 1, 2 * a2[1] / t4[1] - 1], c2 = i2.vec3.fromValues(t4[0] / r4[0], t4[1] / r4[1], 1), l2 = i2.vec3.fromValues(-u2[0], -u2[1], 0), f2 = i2.mat4.scale(n2.m4(), i2.mat4.identity(n2.m4()), c2), h2 = i2.mat4.translate(n2.m4(), f2, l2);
        return this._camera.postViewProjection = h2, this._offset = s, s;
      }, Object.defineProperty(e4.prototype, "valid", { get: function() {
        return this._camera !== void 0 && this._sourceCamera !== void 0 && this._valid;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "numXTiles", { get: function() {
        return o.assert(this._sourceViewport !== void 0, "expected the source viewport to be defined"), Math.ceil(this.sourceViewport[0] / this.tileSize[0]);
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "numYTiles", { get: function() {
        return o.assert(this._sourceViewport !== void 0, "expected the source viewport to be defined"), Math.ceil(this.sourceViewport[1] / this.tileSize[1]);
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "numTiles", { get: function() {
        return this.numXTiles * this.numYTiles;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "offset", { get: function() {
        return this._offset;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "camera", { get: function() {
        return this._camera;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "viewport", { get: function() {
        return [this.offset[0], this.offset[1], this.tileSize[0], this.tileSize[1]];
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "sourceCamera", { get: function() {
        return this._sourceCamera;
      }, set: function(e5) {
        e5 !== void 0 ? (this._sourceCamera = e5, this._camera = Object.create(e5), this.invalidate(false)) : this._sourceCamera = this._camera = void 0;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "tile", { get: function() {
        return this._tile;
      }, set: function(e5) {
        this._tile !== e5 && (this._tile = e5, this.invalidate(false));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "sourceViewport", { get: function() {
        return this._sourceViewport;
      }, set: function(e5) {
        this._sourceViewport !== void 0 && e5 !== void 0 && this._sourceViewport[0] === e5[0] && this._sourceViewport[1] === e5[1] || (this._sourceViewport = e5, this.invalidate(true));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "tileSize", { get: function() {
        return this._tileSize;
      }, set: function(e5) {
        this._tileSize[0] === e5[0] && this._tileSize[1] === e5[1] || (this._tileSize = e5, this.invalidate(true));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "padding", { get: function() {
        return this._padding;
      }, set: function(e5) {
        i2.vec4.equals(this._padding, e5) || (this._padding = i2.vec4.clone(e5), this.invalidate(false));
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "algorithm", { get: function() {
        return this._algorithm;
      }, set: function(e5) {
        this._algorithm !== e5 && (this._algorithm = e5, this.invalidate(true));
      }, enumerable: true, configurable: true }), e4;
    }();
    t3.TileCameraGenerator = a, function(e4) {
      !function(e5) {
        e5.ScanLine = "scanline", e5.HilbertCurve = "hilbertcurve", e5.ZCurve = "zcurve";
      }(e4.Algorithm || (e4.Algorithm = {}));
    }(a = t3.TileCameraGenerator || (t3.TileCameraGenerator = {})), t3.TileCameraGenerator = a;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(1), n2 = r3(33), o = r3(22), a = r3(0), s = r3(53), u2 = r3(54), c2 = r3(55), l2 = r3(56), f2 = r3(57), h2 = r3(40), d2 = r3(58), p2 = function() {
      function e4(t4, r4) {
        var i3 = this;
        this._alwaysRotateOnMove = false, this._invalidate = t4, this._eventHandler = new n2.EventHandler(t4, r4), this._eventHandler.pushPointerDownHandler(function(e5, t5) {
          return i3.onPointerDown(e5, t5);
        }), this._eventHandler.pushPointerUpHandler(function(e5, t5) {
          return i3.onPointerUp(e5, t5);
        }), this._eventHandler.pushPointerEnterHandler(function(e5, t5) {
          return i3.onPointerEnter(e5, t5);
        }), this._eventHandler.pushPointerLeaveHandler(function(e5, t5) {
          return i3.onPointerLeave(e5, t5);
        }), this._eventHandler.pushPointerMoveHandler(function(e5, t5) {
          return i3.onPointerMove(e5, t5);
        }), this._eventHandler.pushPointerCancelHandler(function(e5, t5) {
          return i3.onPointerCancel(e5, t5);
        }), this._eventHandler.pushMouseWheelHandler(function(e5, t5) {
          return i3.onWheel(e5, t5);
        }), this.rotationMetaphor = e4.RotationMetaphor.Turntable, this._pan = new u2.PanModifier(), this._pinch = new c2.PinchZoomModifier(), this._wheelZoom = new d2.WheelZoomModifier(), this._activeEvents = /* @__PURE__ */ new Map();
      }
      return e4.prototype.mode = function() {
        var t4 = Array.from(this._activeEvents.values()), r4 = this.getPrimaryEvent(t4);
        if (r4 !== void 0) {
          var i3 = r4.pointerType === "mouse", n3 = r4.pointerType === "touch" || r4.pointerType === "pen", s2 = 1 & r4.buttons, u3 = r4.shiftKey, c3 = o.PointerLock.active() && this._alwaysRotateOnMove, l3 = this._activeEvents.size, f3 = i3 && s2 && l3 === 1, d3 = n3 && l3 === 1, p3 = i3 && s2 && u3 && l3 === 1, _2 = n3 && l3 === 2;
          return c3 ? e4.Modes.Rotate : p3 ? e4.Modes.Pan : _2 ? e4.Modes.MultiTouch : f3 || d3 ? e4.Modes.Rotate : void 0;
        }
        h2.auxiliaries.log(a.LogLevel.Warning, "No primary pointer event detected in Navigation::mode.");
      }, e4.prototype.resolveMultiTouch = function() {
        if (!(this._activeEvents.size < 2)) {
          var t4 = Array.from(this._activeEvents.values()), r4 = i2.vec2.fromValues(t4[0].movementX, t4[0].movementY), n3 = i2.vec2.fromValues(t4[1].movementX, t4[1].movementY);
          return i2.vec2.length(r4) === 0 || i2.vec2.length(n3) === 0 ? e4.Modes.Zoom : (i2.vec2.normalize(r4, r4), i2.vec2.normalize(n3, n3), i2.vec2.dot(r4, n3) > 0.2 ? e4.Modes.Pan : e4.Modes.Zoom);
        }
        h2.auxiliaries.log(a.LogLevel.Warning, "MultiTouch resolution was canceled because less than two touches were detected.");
      }, e4.prototype.rotate = function(t4) {
        if (this._activeEvents.size === 1) {
          var r4 = Array.from(this._activeEvents.values()), n3 = this._eventHandler.offsets(r4[0])[0];
          switch (this._rotationMetaphor) {
            case e4.RotationMetaphor.FirstPerson:
              var s2 = this._firstPerson, u3 = void 0;
              o.PointerLock.active() && event instanceof MouseEvent && (u3 = i2.vec2.fromValues(event.movementX, event.movementY)), t4 ? s2.initiate(n3) : s2.process(n3, u3);
              break;
            case e4.RotationMetaphor.Trackball:
              var c3 = this._trackball;
              t4 ? c3.initiate(n3) : c3.process(n3);
              break;
            case e4.RotationMetaphor.Turntable:
              var l3 = this._turntable;
              t4 ? l3.initiate(n3) : l3.process(n3);
          }
        } else
          h2.auxiliaries.log(a.LogLevel.Info, "Rotate event was canceled because less or more than two pointers were detected.");
      }, e4.prototype.pan = function(e5) {
        var t4 = Array.from(this._activeEvents.values()), r4 = this.getPrimaryEvent(t4);
        if (r4 !== void 0) {
          var i3 = this._eventHandler.offsets(r4)[0], n3 = this._pan;
          e5 ? n3.initiate(i3) : n3.process(i3);
        } else
          h2.auxiliaries.log(a.LogLevel.Warning, "Pan event was canceled because no primary event was detected.");
      }, e4.prototype.pinch = function(e5) {
        if (this._activeEvents.size === 2) {
          var t4 = Array.from(this._activeEvents.values()), r4 = this._eventHandler.offsets(t4[0])[0], i3 = this._eventHandler.offsets(t4[1])[0], n3 = this._pinch;
          e5 ? n3.initiate(r4, i3) : n3.process(r4, i3);
        } else
          h2.auxiliaries.log(a.LogLevel.Info, "Pinch event was canceled because less or more than two pointers were detected.");
      }, e4.prototype.getPrimaryEvent = function(e5) {
        for (var t4 = 0, r4 = e5; t4 < r4.length; t4++) {
          var i3 = r4[t4];
          if (i3.isPrimary)
            return i3;
        }
      }, e4.prototype.onPointerDown = function(t4, r4) {
        for (var i3 = 0, n3 = t4; i3 < n3.length; i3++) {
          var o2 = n3[i3];
          this._activeEvents.set(o2.pointerId, o2);
        }
        switch (this._mode = this.mode(), this._mode) {
          case e4.Modes.Rotate:
            this.rotate(true);
            break;
          case e4.Modes.Pan:
            this.pan(true);
            break;
          case e4.Modes.Zoom:
            this.pinch(true);
        }
      }, e4.prototype.onPointerUp = function(e5, t4) {
        for (var r4 = 0, i3 = e5; r4 < i3.length; r4++) {
          var n3 = i3[r4];
          this._activeEvents.delete(n3.pointerId);
        }
      }, e4.prototype.onPointerEnter = function(e5, t4) {
      }, e4.prototype.onPointerLeave = function(e5, t4) {
        for (var r4 = 0, i3 = e5; r4 < i3.length; r4++) {
          var n3 = i3[r4];
          this._activeEvents.delete(n3.pointerId);
        }
      }, e4.prototype.onPointerCancel = function(e5, t4) {
        for (var r4 = 0, i3 = e5; r4 < i3.length; r4++) {
          var n3 = i3[r4];
          this._activeEvents.delete(n3.pointerId);
        }
      }, e4.prototype.onPointerMove = function(t4, r4) {
        for (var i3 = 0, n3 = t4; i3 < n3.length; i3++) {
          var o2 = n3[i3];
          this._activeEvents.set(o2.pointerId, o2);
        }
        if (this._mode !== void 0) {
          var a2 = Array.from(this._activeEvents.values()), s2 = this.getPrimaryEvent(a2);
          (s2 == null ? void 0 : s2.pointerType) === "mouse" && (this._mode = this.mode());
          var u3 = false;
          switch (this._mode === e4.Modes.MultiTouch && (this._mode = this.resolveMultiTouch(), u3 = true), this._mode) {
            case e4.Modes.Rotate:
              this.rotate(u3);
              break;
            case e4.Modes.Pan:
              this.pan(u3);
              break;
            case e4.Modes.Zoom:
              this.pinch(u3);
          }
          this._lastInteractionTime = performance.now();
        }
      }, e4.prototype.onWheel = function(e5, t4) {
        var r4, i3 = e5[0];
        (r4 = this._wheelZoom) === null || r4 === void 0 || r4.process(i3.deltaY);
      }, e4.prototype.update = function() {
        this._eventHandler.update();
      }, Object.defineProperty(e4.prototype, "camera", { set: function(e5) {
        this._camera = e5, this._firstPerson && (this._firstPerson.camera = e5), this._trackball && (this._trackball.camera = e5), this._turntable && (this._turntable.camera = e5), this._pan && (this._pan.camera = e5), this._pinch && (this._pinch.camera = e5), this._wheelZoom && (this._wheelZoom.camera = e5);
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "rotationMetaphor", { get: function() {
        return this._rotationMetaphor;
      }, set: function(t4) {
        if (this._rotationMetaphor !== t4) {
          switch (this._firstPerson = void 0, this._trackball = void 0, this._turntable = void 0, this._eventHandler.exitPointerLock(), this._alwaysRotateOnMove = false, this._rotationMetaphor = t4, this._rotationMetaphor) {
            case e4.RotationMetaphor.FirstPerson:
              this._eventHandler.requestPointerLock(), this._alwaysRotateOnMove = true, this._firstPerson = new s.FirstPersonModifier(), this._firstPerson.camera = this._camera;
              break;
            case e4.RotationMetaphor.Trackball:
              this._trackball = new l2.TrackballModifier(), this._trackball.camera = this._camera;
              break;
            case e4.RotationMetaphor.Turntable:
              this._turntable = new f2.TurntableModifier(), this._turntable.camera = this._camera;
          }
          this._invalidate(true);
        }
      }, enumerable: true, configurable: true }), e4;
    }();
    t3.Navigation = p2, function(e4) {
      !function(e5) {
        e5[e5.Move = 0] = "Move", e5[e5.Pan = 1] = "Pan", e5[e5.MultiTouch = 2] = "MultiTouch", e5[e5.Rotate = 3] = "Rotate", e5[e5.Zoom = 4] = "Zoom", e5[e5.ZoomStep = 5] = "ZoomStep";
      }(e4.Modes || (e4.Modes = {})), function(e5) {
        e5.FirstPerson = "firstperson", e5.Flight = "flight", e5.Trackball = "trackball", e5.Turntable = "turntable";
      }(e4.RotationMetaphor || (e4.RotationMetaphor = {}));
    }(p2 = t3.Navigation || (t3.Navigation = {})), t3.Navigation = p2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(5), s = r3(9), u2 = r3(2), c2 = function(e4) {
      function t4(t5, r4) {
        var i3 = e4.call(this, t5, r4) || this;
        r4 = r4 !== void 0 && r4 !== "" ? r4 : i3.constructor.name;
        var n3 = new a.Buffer(t5, r4 + "VBO");
        return i3._buffers.push(n3), i3;
      }
      return n2(t4, e4), t4.prototype.bindBuffers = function() {
        this._buffers[0].attribEnable(this._vertexLocation, 2, this.context.gl.FLOAT, false, 0, 0, true, false);
      }, t4.prototype.unbindBuffers = function() {
        this._buffers[0].attribDisable(this._vertexLocation, true, true);
      }, t4.prototype.initialize = function(r4) {
        r4 === void 0 && (r4 = 0), this._vertexLocation = r4;
        var i3 = this.context.gl, n3 = e4.prototype.initialize.call(this, [i3.ARRAY_BUFFER]);
        return this._buffers[0].data(t4.VERTICES, i3.STATIC_DRAW), n3;
      }, t4.prototype.draw = function() {
        var e5 = this.context.gl;
        e5.drawArrays(e5.TRIANGLE_STRIP, 0, 4);
      }, Object.defineProperty(t4.prototype, "vertexLocation", { get: function() {
        return this._vertexLocation;
      }, enumerable: true, configurable: true }), t4.VERTICES = new Float32Array([-1, -1, 1, -1, -1, 1, 1, 1]), o([u2.Initializable.assert_initialized()], t4.prototype, "draw", null), t4;
    }(s.Geometry);
    t3.NdcFillingRectangle = c2;
  }, function(e3) {
    e3.exports = JSON.parse('{"kernel":[[[[0.201114,0.016597],[-0.090682,-0.219471],[-0.180852,0.162495],[0.055216,0.398563],[-0.41692,-0.073573],[0.291284,-0.365369],[0.437182,0.252665],[-0.32675,-0.455539]]]],"size":{"depth":1,"height":1,"width":8}}');
  }, function(e3) {
    e3.exports = JSON.parse('{"kernel":[[[[-0.058976,0.021042],[0.065636,-0.034686],[0.023064,0.111212],[-0.011378,-0.124856],[-0.122834,-0.069128],[0.155806,0.055484],[-0.170432,0.07677],[-0.101548,0.16694],[0.190248,-0.090414],[0.121364,-0.180584],[0.100078,0.201382],[-0.080262,-0.215026],[-0.247446,-0.0134],[-0.024534,0.25711],[-0.204874,-0.159298],[0.267262,-0.000244],[0.22469,0.145654],[0.031194,-0.270754],[-0.213004,0.222668],[-0.303174,0.132498],[0.245976,-0.236312],[-0.13599,0.312838],[0.177092,0.291552],[-0.157276,-0.305196],[0.31486,-0.146142],[0.04435,0.34728],[-0.337616,-0.10357],[-0.04582,-0.360924],[0.168962,-0.326482],[0.357432,0.089926],[-0.372058,0.042328],[-0.281888,-0.249468],[0.301704,0.235824],[-0.067106,0.403008],[0.40503,-0.055972],[0.078792,-0.416652],[-0.350772,0.278396],[-0.4065,-0.19374],[-0.260602,0.368566],[-0.449072,-0.047842],[-0.22616,-0.395366],[0.13452,0.43745],[0.259132,0.381722],[0.426316,0.180096],[-0.114704,-0.451094],[-0.427786,0.188226],[0.370588,-0.29204],[0.280418,-0.38221],[0.482044,0.034198],[0.447602,-0.20187],[0.009908,0.493178],[-0.358902,-0.339638],[-0.191718,0.458736],[-0.49667,0.098056],[0.391874,0.325994],[0.211534,-0.47238],[-0.483514,-0.28391],[-0.462228,0.334124],[-0.393344,0.424294],[0.336146,0.471892],[-0.31633,-0.485536],[0.41316,-0.437938],[-0.440942,-0.429808],[0.460758,0.416164]]]],"size":{"depth":1,"height":1,"width":64}}');
  }, function(e3) {
    e3.exports = JSON.parse('{"kernel":[[[[-0.992216,-0.610879],[-0.975957,0.625189],[-0.965904,-0.138743],[-0.949645,-0.902675],[-0.933385,0.333393],[-0.923332,-0.430539],[-0.907073,0.805529],[-0.89702,0.0415974],[-0.88076,-0.722335],[-0.864501,0.513733],[-0.854448,-0.250199],[-0.838189,0.985869],[-0.811876,0.221937],[-0.795617,-0.541995],[-0.785564,0.694073],[-0.769305,-0.0698586],[-0.753045,-0.833791],[-0.742992,0.402277],[-0.726733,-0.361655],[-0.70042,0.874413],[-0.684161,0.110482],[-0.674108,-0.65345],[-0.657849,0.582618],[-0.631536,-0.181314],[-0.615277,-0.945246],[-0.605224,0.290822],[-0.588964,-0.47311],[-0.572705,0.762958],[-0.562652,-0.000974417],[-0.546393,-0.764906],[-0.52008,0.471162],[-0.503821,-0.29277],[-0.493768,0.943298],[-0.477509,0.179366],[-0.461249,-0.584566],[-0.451196,0.651502],[-0.434937,-0.11243],[-0.424884,-0.876362],[-0.408624,0.359706],[-0.392365,-0.404226],[-0.382312,0.831842],[-0.366053,0.0679097],[-0.33974,-0.696022],[-0.323481,0.540046],[-0.313428,-0.223886],[-0.297168,-0.987818],[-0.280909,0.24825],[-0.270856,-0.515682],[-0.254597,0.720386],[-0.228284,-0.0435462],[-0.212025,-0.807478],[-0.201972,0.42859],[-0.185713,-0.335342],[-0.169453,0.900726],[-0.1594,0.136794],[-0.143141,-0.627138],[-0.133088,0.60893],[-0.116828,-0.155002],[-0.100569,-0.918934],[-0.0905161,0.317134],[-0.0742567,-0.446798],[-0.0479443,0.78927],[-0.0316849,0.0253379],[-0.021632,-0.738594],[-0.00537252,0.497474],[0.0108869,-0.266458],[0.0209398,0.96961],[0.0371993,0.205678],[0.0635116,-0.558254],[0.079771,0.677814],[0.089824,-0.086118],[0.106083,-0.85005],[0.132396,0.386018],[0.148655,-0.377914],[0.158708,0.858154],[0.174968,0.0942221],[0.191227,-0.66971],[0.20128,0.566358],[0.217539,-0.197574],[0.243852,-0.961506],[0.260111,0.274562],[0.270164,-0.48937],[0.286423,0.746698],[0.302683,-0.0172338],[0.312736,-0.781166],[0.328995,0.454902],[0.339048,-0.30903],[0.355308,0.927038],[0.371567,0.163106],[0.38162,-0.600826],[0.397879,0.635242],[0.424192,-0.12869],[0.440451,-0.892622],[0.450504,0.343446],[0.466763,-0.420486],[0.483023,0.815582],[0.493076,0.0516503],[0.509335,-0.712282],[0.535648,0.523786],[0.551907,-0.240146],[0.56196,0.995922],[0.578219,0.23199],[0.604532,-0.531942],[0.620791,0.704126],[0.630844,-0.0598056],[0.647104,-0.823738],[0.663363,0.41233],[0.673416,-0.351602],[0.689675,0.884466],[0.715988,0.120534],[0.732247,-0.643398],[0.7423,0.59267],[0.758559,-0.171262],[0.774819,-0.935194],[0.784872,0.300874],[0.801131,-0.463058],[0.811184,0.77301],[0.827444,0.0090785],[0.843703,-0.754853],[0.853756,0.481215],[0.870015,-0.282717],[0.896328,0.953351],[0.912587,0.189419],[0.92264,-0.574513],[0.9389,0.661555],[0.955159,-0.102377],[0.965212,-0.866309],[0.981471,0.369759]]]],"size":{"depth":1,"height":1,"width":128}}');
  }, function(e3, t3) {
    e3.exports = "\r\nprecision lowp float;\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define texture(sampler, coord) texture2D(sampler, coord)\r\n#else \r\n    #define varying in\r\n#endif\r\n\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define fragColor gl_FragColor\r\n#else\r\n    layout(location = 0) out vec4 fragColor;\r\n#endif\r\n\r\n\r\nuniform float u_weight;\r\nuniform sampler2D u_accumulationTexture;\r\nuniform sampler2D u_currentFrameTexture;\r\n\r\nvarying vec2 v_uv;\r\n\r\n\r\nvoid main(void)\r\n{\r\n    vec4 accumulationColor = texture(u_accumulationTexture, v_uv);\r\n    vec4 currentFrameColor = texture(u_currentFrameTexture, v_uv);\r\n    fragColor = mix(accumulationColor, currentFrameColor, u_weight);\r\n}\r\n";
  }, function(e3, t3) {
    e3.exports = "\r\nprecision highp float;\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define texture(sampler, coord) texture2D(sampler, coord)\r\n#else \r\n    #define varying in\r\n#endif\r\n\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define fragColor gl_FragColor\r\n#else\r\n    layout(location = 0) out vec4 fragColor;\r\n#endif\r\n\r\n\r\nuniform sampler2D u_source;\r\n\r\nvarying vec2 v_uv;\r\n\r\n\r\nvoid main(void)\r\n{\r\n    fragColor = texture(u_source, v_uv);\r\n}\r\n";
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = r3(0), a = r3(6), s = r3(7), u2 = function(e4) {
      function t4() {
        var r4 = e4 !== null && e4.apply(this, arguments) || this;
        return r4._debug = t4.Mode.Depth, r4._near = 0, r4._far = 0, r4;
      }
      return n2(t4, e4), t4.prototype.createProgram = function() {
        o.assert(this._program === void 0, "expected blit program to be undefined before its creation");
        var e5 = this._context.gl, t5 = new s.Shader(this._context, e5.VERTEX_SHADER, "blit.vert (debug)");
        t5.initialize(r3(63));
        var i3 = new s.Shader(this._context, e5.FRAGMENT_SHADER, "blit_debug.frag (debug)");
        return i3.initialize(r3(111)), this._program = new a.Program(this._context, "DebugProgram"), this._program.initialize([t5, i3]), this._ndcTriangle.initialized || this._ndcTriangle.initialize(), this._program.attribute("a_vertex", this._ndcTriangle.vertexLocation), this._program.link(), this._uSrcBounds = this._program.uniform("u_srcBounds"), this._uDstBounds = this._program.uniform("u_dstBounds"), this._uNearest = this._program.uniform("u_nearest"), this._uDebugMode = this._program.uniform("u_mode"), this._uLinearize = this._program.uniform("u_linearize"), this._program.bind(), e5.uniform1i(this._program.uniform("u_source"), 0), e5.uniform1i(this._uDebugMode, this._debug), this._program.unbind(), this._program.valid;
      }, t4.prototype.initialize = function(t5) {
        var r4 = e4.prototype.initialize.call(this, t5);
        return this.enforceProgramBlit = true, r4 && this.createProgram();
      }, t4.prototype.uninitialize = function() {
        e4.prototype.uninitialize.call(this), this._uDebugMode = void 0, this._uLinearize = void 0;
      }, Object.defineProperty(t4.prototype, "debug", { set: function(e5) {
        this.assertInitialized(), this._debug !== e5 && (this._debug = e5, this._program !== void 0 && this._program.valid && (this._program.bind(), this._context.gl.uniform1i(this._uDebugMode, this._debug), this._program.unbind()));
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "near", { set: function(e5) {
        this._near = e5 || 0, this._program !== void 0 && this._program.valid && (this._program.bind(), this._context.gl.uniform2f(this._uLinearize, this._near, this._far), this._program.unbind());
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "far", { set: function(e5) {
        this._far = e5 || 0, this._program !== void 0 && this._program.valid && (this._program.bind(), this._context.gl.uniform2f(this._uLinearize, this._near, this._far), this._program.unbind());
      }, enumerable: true, configurable: true }), t4;
    }(r3(38).BlitPass);
    t3.DebugPass = u2, function(e4) {
      !function(e5) {
        e5[e5.None = 0] = "None", e5[e5.Depth = 1] = "Depth", e5[e5.DepthLinear = 2] = "DepthLinear", e5[e5.DepthPacked = 3] = "DepthPacked", e5[e5.DepthLinearPacked = 4] = "DepthLinearPacked";
      }(e4.Mode || (e4.Mode = {}));
    }(u2 = t3.DebugPass || (t3.DebugPass = {})), t3.DebugPass = u2;
  }, function(e3, t3) {
    e3.exports = "\r\nprecision highp float;\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define texture(sampler, coord) texture2D(sampler, coord)\r\n#else \r\n    #define varying in\r\n#endif\r\n\r\n\r\n\r\nconst float one255ths = 1.0 / 255.0;\r\n\r\nvec3 float24x1_to_uint8x3(const in float f) {\r\n    vec3 uint8x3 = vec3(f, fract(f * 256.0), fract(f * 65536.0));\r\n    return floor(uint8x3 * 256.0) * one255ths;\r\n}\r\n\r\nvec4 float24x1_to_uint8x4(const in float f) {\r\n    vec4 uint8x4 = vec4(f, fract(f * 256.0), fract(f * 65536.0), fract(f * 16777216.0));\r\n    return floor(uint8x4 * 256.0) * one255ths;\r\n}\r\n\r\nconst vec3 premultUint8x3 = vec3(255.0 / 256.0, 255.0 / 65536.0, 255.0 / 16777216.0);\r\nfloat uint8x3_to_float24x1(const in vec3 v) {\r\n    return dot(v, premultUint8x3); // a1 * b1 + a2 * b2 + a3 * b3  ;)\r\n}\r\n\r\nconst vec4 premultUint8x4 = vec4(255.0 / 256.0, 255.0 / 65536.0, 255.0 / 16777216.0, 255.0 / 4294967296.0);\r\nfloat uint8x4_to_float32x1(const in vec4 v) {\r\n    return dot(v, premultUint8x4); // a1 * b1 + a2 * b2 + a3 * b3 + a4 * b4  ;)\r\n}\r\n\r\n\r\nfloat linearizeDepth(float zInNDC, float near, float far) {\r\n    float zLinear = 2.0 * near;\r\n    zLinear /= far + near - zInNDC * (far - near);\r\n    return zLinear;\r\n}\r\n\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define fragColor gl_FragColor\r\n#else\r\n    layout(location = 0) out vec4 fragColor;\r\n#endif\r\n\r\n\r\nuniform sampler2D u_source;\r\n\r\nuniform int u_mode; /* Debug mode. */\r\nuniform vec2 u_linearize; /* [ zNear, zFar ] */\r\n\r\n\r\nvarying vec2 v_uv;\r\n\r\n\r\nvoid main(void)\r\n{\r\n    vec4 source = texture(u_source, v_uv);\r\n\r\n    /* u_mode == 0                 None */\r\n\r\n    if(u_mode == 1) {           /* Depth */\r\n        source.rgb = vec3(source[0]);\r\n\r\n    } else if (u_mode == 2) {   /* DepthLinear */\r\n        float zLinear = linearizeDepth(source[0], u_linearize[0], u_linearize[1]);\r\n        source.rgb = vec3(zLinear);\r\n\r\n    } else if(u_mode == 3) {    /* DepthPacked */\r\n        source.rgb = float24x1_to_uint8x3(source[0]);\r\n\r\n    } else if (u_mode == 4) {   /* DepthLinearPacked */\r\n        float zLinear = linearizeDepth(source[0], u_linearize[0], u_linearize[1]);\r\n        source.rgb = float24x1_to_uint8x3(zLinear);\r\n    }\r\n\r\n    fragColor = source;\r\n}\r\n";
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a, s = r3(0), u2 = r3(2), c2 = r3(12), l2 = r3(6), f2 = r3(7), h2 = r3(4), d2 = r3(51), p2 = function(e4) {
      function t4(t5) {
        var r4 = e4.call(this) || this;
        return r4._skipCubeLod = false, r4._altered = true, r4._context = t5, r4._cubeMapProgram = new l2.Program(t5, "CubemapEnvironmentProgram"), r4._equiMapProgram = new l2.Program(t5, "EquimapEnvironmentProgram"), r4._polarMapProgram = new l2.Program(t5, "PolarmapEnvironmentProgram"), r4._sphereMapProgram = new l2.Program(t5, "SpheremapEnvironmentProgram"), r4._ndcTriangle = new c2.NdcFillingTriangle(r4._context, "EnvironmentNdcTriangle"), r4;
      }
      return n2(t4, e4), t4.prototype.initialize = function() {
        var e5 = this._context.gl;
        this._ndcTriangle.initialize();
        var t5 = new f2.Shader(this._context, e5.VERTEX_SHADER, "env-projections.vert");
        t5.initialize(r3(113));
        var i3 = new f2.Shader(this._context, e5.FRAGMENT_SHADER, "env-projections.frag");
        i3.initialize(r3(24), false), i3.replace("PROJECTION_TYPE", "CUBE_MAP"), i3.compile(), this._cubeMapProgram.initialize([t5, i3], false), this._cubeMapProgram.attribute("a_vertex", this._ndcTriangle.vertexLocation), this._cubeMapProgram.link(), this._cubeMapProgram.bind(), e5.uniform1i(this._cubeMapProgram.uniform("u_cubemap"), 0), this._uSkipLod = this._cubeMapProgram.uniform("u_skipLod"), this._cubeMapProgram.unbind();
        var n3 = new f2.Shader(this._context, e5.FRAGMENT_SHADER, "env-projections.frag");
        n3.initialize(r3(24), false), n3.replace("PROJECTION_TYPE", "EQUI_MAP"), n3.compile(), this._equiMapProgram.initialize([t5, n3], false), this._equiMapProgram.attribute("a_vertex", this._ndcTriangle.vertexLocation), this._equiMapProgram.link(), this._equiMapProgram.bind(), e5.uniform1i(this._equiMapProgram.uniform("u_equirectmap"), 0), this._equiMapProgram.unbind();
        var o2 = new f2.Shader(this._context, e5.FRAGMENT_SHADER, "env-projections.frag");
        o2.initialize(r3(24), false), o2.replace("PROJECTION_TYPE", "SPHERE_MAP"), o2.compile(), this._sphereMapProgram.initialize([t5, o2], false), this._sphereMapProgram.attribute("a_vertex", this._ndcTriangle.vertexLocation), this._sphereMapProgram.link(), this._sphereMapProgram.bind(), e5.uniform1i(this._sphereMapProgram.uniform("u_spheremap"), 0), this._sphereMapProgram.unbind();
        var a2 = new f2.Shader(this._context, e5.FRAGMENT_SHADER, "env-projections.frag");
        return a2.initialize(r3(24), false), a2.replace("PROJECTION_TYPE", "POLAR_MAP"), a2.compile(), this._polarMapProgram.initialize([t5, a2], false), this._polarMapProgram.attribute("a_vertex", this._ndcTriangle.vertexLocation), this._polarMapProgram.link(), this._polarMapProgram.bind(), e5.uniform1iv(this._polarMapProgram.uniform("u_polarmap"), [0, 1]), this._polarMapProgram.unbind(), true;
      }, t4.prototype.uninitialize = function() {
        this._cubeMapProgram.uninitialize(), this._equiMapProgram.uninitialize(), this._sphereMapProgram.uninitialize(), this._polarMapProgram.uninitialize();
      }, t4.prototype.update = function() {
        if (this._altered !== false) {
          var e5 = this._context.gl;
          this._cubeMapProgram.bind(), e5.uniform1i(this._uSkipLod, this._skipCubeLod), this._altered = false;
        }
      }, t4.prototype.frame = function() {
        var e5 = this._context.gl;
        s.assert(this._camera !== void 0, "Camera is undefined in environment rendering pass."), s.assert(this._environmentTexture !== void 0, "Environment texture is undefined in environment rendering pass.");
        var t5 = this._cubeMapProgram;
        this._envTextureType === a.EquirectangularMap ? (s.assert(this._environmentTexture instanceof h2.Texture2D, "Input texture expected to be Texture2D for equirectangular mapping."), this._environmentTexture.bind(e5.TEXTURE0), t5 = this._equiMapProgram) : this._envTextureType === a.SphereMap ? (s.assert(this._environmentTexture instanceof h2.Texture2D, "Input texture expected to be Texture2D for sphere mapping."), this._environmentTexture.bind(e5.TEXTURE0), t5 = this._sphereMapProgram) : this._envTextureType === a.CubeMap ? (s.assert(this._environmentTexture instanceof d2.TextureCube, "Input texture expected to be a TextureCube for cube mapping."), this._environmentTexture.bind(e5.TEXTURE0), t5 = this._cubeMapProgram) : this._envTextureType === a.PolarMap && (s.assert(this._environmentTexture2 !== void 0, "Two input textures expected for polar mapping."), s.assert(this._environmentTexture instanceof h2.Texture2D, "Input texture expected to be a Texture2D for polar mapping."), s.assert(this._environmentTexture2 instanceof h2.Texture2D, "Input texture expected to be a Texture2D for polar mapping."), this._environmentTexture.bind(e5.TEXTURE0), this._environmentTexture2.bind(e5.TEXTURE1), t5 = this._polarMapProgram), t5.bind(), e5.uniformMatrix4fv(t5.uniform("u_viewProjectionInverse"), false, this._camera.viewProjectionInverse), this._ndcTriangle.bind(), this._ndcTriangle.draw(), t5.unbind();
      }, Object.defineProperty(t4.prototype, "environmentTextureType", { set: function(e5) {
        this._envTextureType = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "environmentTexture", { set: function(e5) {
        this._environmentTexture = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "environmentTexture2", { set: function(e5) {
        this._environmentTexture2 = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "camera", { set: function(e5) {
        this._camera = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "skipCubeLod", { set: function(e5) {
        this._skipCubeLod !== e5 && (this._skipCubeLod = e5, this._altered = true);
      }, enumerable: true, configurable: true }), o([u2.Initializable.initialize()], t4.prototype, "initialize", null), o([u2.Initializable.uninitialize()], t4.prototype, "uninitialize", null), t4;
    }(u2.Initializable);
    t3.EnvironmentRenderingPass = p2, function(e4) {
      e4[e4.CubeMap = 0] = "CubeMap", e4[e4.EquirectangularMap = 1] = "EquirectangularMap", e4[e4.SphereMap = 2] = "SphereMap", e4[e4.PolarMap = 3] = "PolarMap";
    }(a = t3.EnvironmentTextureType || (t3.EnvironmentTextureType = {}));
  }, function(e3, t3) {
    e3.exports = "precision highp float;\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define texture(sampler, coord) texture2D(sampler, coord)\r\n#else\r\n    #define varying out\r\n#endif\r\n\r\n\r\n\r\n#if __VERSION__ == 100\r\n    attribute vec2 a_vertex;\r\n#else\r\n    in vec2 a_vertex;\r\n#endif\r\n\r\n\r\nuniform mat4 u_viewProjectionInverse;\r\n\r\n\r\nvarying vec2 v_uv;\r\nvarying vec4 v_ray;\r\n\r\n\r\nvoid main(void)\r\n{\r\n    v_uv = a_vertex * 0.5 + 0.5;\r\n    v_ray = u_viewProjectionInverse * vec4(a_vertex, 1.0, 1.0);\r\n\r\n    gl_Position = vec4(a_vertex.xy, 1.0 - 1e-6, 1.0);\r\n}\r\n";
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(1), s = r3(0), u2 = r3(3), c2 = r3(17), l2 = r3(2), f2 = r3(12), h2 = r3(6), d2 = r3(7), p2 = r3(4), _2 = function(e4) {
      function t4(t5) {
        var r4 = e4.call(this) || this;
        return r4._cache = false, r4._depthAttachment = 0, r4._cachedDepths = /* @__PURE__ */ new Map(), r4._cachedIDs = /* @__PURE__ */ new Map(), r4._buffer = new Uint8Array(4), r4._ndcTriangleShared = false, r4._context = t5, r4;
      }
      return n2(t4, e4), t4.maxClearDepth = function() {
        return u2.decode_float24x1_from_uint8x3(a.vec3.fromValues(255, 255, 255));
      }, t4.prototype.onFrame = function() {
        this._cachedDepths.clear(), this._cachedIDs.clear();
      }, t4.prototype.hash = function(e5, t5) {
        return 65535 * t5 + e5;
      }, t4.prototype.directReadDepthAt = function(e5, t5) {
        s.assert(this._depthFBO !== void 0 && this._depthFBO.valid, "valid depth FBO expected for reading back depth");
        var r4 = this._depthFBO.texture(this._depthAttachment), i3 = this._context.gl, n3 = r4.size;
        this._depthFBO.bind();
        var o2 = this._referenceSize === void 0 ? [1, 1] : [n3[0] / this._referenceSize[0], n3[1] / this._referenceSize[1]];
        return (this._context.isWebGL2 || this._context.supportsDrawBuffers) && i3.readBuffer(this._depthAttachment), i3.readPixels(e5 * o2[0], n3[1] - t5 * o2[1], 1, 1, i3.RGBA, i3.UNSIGNED_BYTE, this._buffer), this._buffer;
      }, t4.prototype.renderThenReadDepthAt = function(e5, t5) {
        s.assert(this._depthFBO !== void 0 && this._depthFBO.valid, "valid depth FBO expected for reading back depth");
        var r4 = this._depthFBO.texture(this._depthAttachment), i3 = this._context.gl, n3 = r4.size, o2 = this._referenceSize === void 0 ? [1, 1] : [n3[0] / this._referenceSize[0], n3[1] / this._referenceSize[1]];
        return i3.viewport(0, 0, 1, 1), this._program.bind(), i3.uniform2f(this._uOffset, e5 * o2[0] / n3[0], (n3[1] - t5 * o2[1]) / n3[1]), i3.uniform2f(this._uScale, 1 / n3[0], 1 / n3[1]), r4.bind(i3.TEXTURE0), this._framebuffer.bind(), this._ndcTriangle.bind(), this._ndcTriangle.draw(), this._ndcTriangle.unbind(), r4.unbind(), (this._context.isWebGL2 || this._context.supportsDrawBuffers) && i3.readBuffer && i3.readBuffer(i3.COLOR_ATTACHMENT0), i3.readPixels(0, 0, 1, 1, i3.RGBA, i3.UNSIGNED_BYTE, this._buffer), this._framebuffer.unbind(), this._buffer;
      }, t4.prototype.initialize = function(e5, t5) {
        var i3 = this._context.gl, n3 = this._context.gl2facade;
        if (t5)
          return this.readDepthAt = this.directReadDepthAt, true;
        this.readDepthAt = this.renderThenReadDepthAt;
        var o2 = new d2.Shader(this._context, i3.VERTEX_SHADER, "ndcvertices.vert (readback)");
        o2.initialize(r3(62));
        var a2 = new d2.Shader(this._context, i3.FRAGMENT_SHADER, "readbackdepth.frag");
        return a2.initialize(r3(115)), this._program = new h2.Program(this._context, "ReadbackDepthProgram"), this._program.initialize([o2, a2], false), e5 === void 0 ? this._ndcTriangle = new f2.NdcFillingTriangle(this._context) : (this._ndcTriangle = e5, this._ndcTriangleShared = true), this._ndcTriangle.initialized || this._ndcTriangle.initialize(), this._program.attribute("a_vertex", this._ndcTriangle.vertexLocation), this._program.link(), this._uOffset = this._program.uniform("u_offset"), this._program.bind(), i3.uniform1i(this._program.uniform("u_texture"), 0), this._program.unbind(), this._texture = new p2.Texture2D(this._context, "ReadbackRenderTexture"), this._texture.initialize(1, 1, i3.RGBA, i3.RGBA, i3.UNSIGNED_BYTE), this._framebuffer = new c2.Framebuffer(this._context, "ReadbackFBO"), this._framebuffer.initialize([[n3.COLOR_ATTACHMENT0, this._texture]]), true;
      }, t4.prototype.uninitialize = function() {
        this._context.isWebGL1 && !this._context.supportsDepthTexture || (!this._ndcTriangleShared && this._ndcTriangle.initialized && this._ndcTriangle.uninitialize(), this._program.uninitialize(), this._texture.uninitialize(), this._framebuffer.uninitialize());
      }, t4.prototype.depthAt = function(e5, t5) {
        var r4 = this.hash(e5, t5);
        if (this._cache && this._cachedDepths.has(r4))
          return this._cachedDepths.get(r4);
        var i3 = this.readDepthAt(e5, t5), n3 = i3[0] === 255 && i3[1] === 255 && i3[2] === 255 ? void 0 : u2.decode_float24x1_from_uint8x3(a.vec3.fromValues(i3[0], i3[1], i3[2]));
        return this._cache && this._cachedDepths.set(r4, n3), n3;
      }, t4.prototype.coordsAt = function(e5, t5, r4, i3) {
        var n3 = this._depthFBO.texture(this._depthAttachment).size, o2 = r4 === void 0 ? this.depthAt(e5, t5) : r4;
        if (o2 !== void 0) {
          var s2 = this._referenceSize === void 0 ? [1, 1] : [n3[0] / this._referenceSize[0], n3[1] / this._referenceSize[1]], u3 = a.vec3.fromValues(e5 * s2[0] * 2 / n3[0] - 1, 1 - t5 * s2[1] * 2 / n3[1], 2 * o2 - 1);
          return a.vec3.transformMat4(a.vec3.create(), u3, i3);
        }
      }, t4.prototype.idAt = function(e5, t5) {
        var r4 = this.hash(e5, t5);
        if (this._cache && this._cachedIDs.has(r4))
          return this._cachedIDs.get(r4);
        var i3 = this._context.gl, n3 = this._idFBO.texture(this._idAttachment).size, o2 = this._referenceSize === void 0 ? [1, 1] : [n3[0] / this._referenceSize[0], n3[1] / this._referenceSize[1]];
        this._idFBO.bind(), this._context.isWebGL2 && i3.readBuffer(this._idAttachment), i3.readPixels(e5 * o2[0], n3[1] - t5 * o2[1], 1, 1, i3.RGBA, i3.UNSIGNED_BYTE, this._buffer);
        var s2 = u2.decode_uint32_from_rgba8(a.vec4.fromValues(this._buffer[0], this._buffer[1], this._buffer[2], this._buffer[3]));
        return this._cache && this._cachedIDs.set(r4, s2), s2;
      }, t4.prototype.frame = function() {
        this.onFrame();
      }, Object.defineProperty(t4.prototype, "cache", { set: function(e5) {
        this._cache = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "depthFBO", { set: function(e5) {
        this._depthFBO = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "depthAttachment", { set: function(e5) {
        this._depthAttachment = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "idFBO", { set: function(e5) {
        this._idFBO = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "idAttachment", { set: function(e5) {
        this._idAttachment = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "coordinateReferenceSize", { set: function(e5) {
        this._referenceSize = e5;
      }, enumerable: true, configurable: true }), o([l2.Initializable.assert_initialized()], t4.prototype, "directReadDepthAt", null), o([l2.Initializable.assert_initialized()], t4.prototype, "renderThenReadDepthAt", null), o([l2.Initializable.initialize()], t4.prototype, "initialize", null), o([l2.Initializable.uninitialize()], t4.prototype, "uninitialize", null), o([l2.Initializable.assert_initialized()], t4.prototype, "depthAt", null), o([l2.Initializable.assert_initialized()], t4.prototype, "coordsAt", null), o([l2.Initializable.assert_initialized()], t4.prototype, "idAt", null), t4;
    }(l2.Initializable);
    t3.ReadbackPass = _2;
  }, function(e3, t3) {
    e3.exports = "\r\nprecision highp float;\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define texture(sampler, coord) texture2D(sampler, coord)\r\n#else \r\n    #define varying in\r\n#endif\r\n\r\n\r\nconst float one255ths = 1.0 / 255.0;\r\n\r\nvec3 float24x1_to_uint8x3(const in float f) {\r\n    vec3 uint8x3 = vec3(f, fract(f * 256.0), fract(f * 65536.0));\r\n    return floor(uint8x3 * 256.0) * one255ths;\r\n}\r\n\r\nvec4 float24x1_to_uint8x4(const in float f) {\r\n    vec4 uint8x4 = vec4(f, fract(f * 256.0), fract(f * 65536.0), fract(f * 16777216.0));\r\n    return floor(uint8x4 * 256.0) * one255ths;\r\n}\r\n\r\nconst vec3 premultUint8x3 = vec3(255.0 / 256.0, 255.0 / 65536.0, 255.0 / 16777216.0);\r\nfloat uint8x3_to_float24x1(const in vec3 v) {\r\n    return dot(v, premultUint8x3); // a1 * b1 + a2 * b2 + a3 * b3  ;)\r\n}\r\n\r\nconst vec4 premultUint8x4 = vec4(255.0 / 256.0, 255.0 / 65536.0, 255.0 / 16777216.0, 255.0 / 4294967296.0);\r\nfloat uint8x4_to_float32x1(const in vec4 v) {\r\n    return dot(v, premultUint8x4); // a1 * b1 + a2 * b2 + a3 * b3 + a4 * b4  ;)\r\n}\r\n\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define fragDepth gl_FragColor\r\n#else \r\n    layout(location = 0) out vec4 fragDepth;\r\n#endif\r\n\r\n\r\nuniform sampler2D u_texture;\r\nuniform vec2 u_offset;\r\nuniform vec2 u_scale;\r\n\r\nvarying vec2 v_uv;\r\n\r\n\r\n\r\nvoid main(void)\r\n{\r\n    vec2 uv = vec2(v_uv.x, 1.0 - v_uv.y) * u_scale + u_offset;\r\n    float depth = texture(u_texture, uv).r;\r\n\r\n    fragDepth = vec4(float24x1_to_uint8x3(depth), 1.0);\r\n}\r\n";
  }, function(e3, t3) {
    e3.exports = "\r\nprecision lowp float;\r\nprecision lowp int;\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define texture(sampler, coord) texture2D(sampler, coord)\r\n#else\r\n    #define varying out\r\n#endif\r\n\r\n\r\n#if __VERSION__ == 100\r\n  attribute vec2 a_vertex;\r\n#else\r\n  layout(location = 0) in vec2 a_vertex;\r\n#endif\r\n\r\n\r\nvarying vec2 v_texCoords;\r\n\r\n\r\nvoid main()\r\n{\r\n    v_texCoords = a_vertex * 0.5 + 0.5;\r\n    gl_Position = vec4(a_vertex, 0.0, 1.0);\r\n}\r\n";
  }, function(e3, t3) {
    e3.exports = "\r\nprecision lowp float;\r\nprecision lowp int;\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define texture(sampler, coord) texture2D(sampler, coord)\r\n#else \r\n    #define varying in\r\n#endif\r\n\r\n\r\n#if __VERSION__ == 100\r\n  #define fragColor gl_FragColor\r\n#else\r\n  layout(location = 0) out vec4 fragColor;\r\n#endif\r\n\r\n\r\nuniform float u_weights[32];\r\nuniform vec2 u_delta;\r\n\r\nuniform sampler2D u_texture;\r\n\r\nvarying vec2 v_texCoords;\r\n\r\n\r\nvoid main()\r\n{\r\n    vec4 result = u_weights[0] * texture(u_texture, v_texCoords);\r\n    for (int i = 1; i <= $KERNEL_HALF_SIZE; i++)\r\n    {\r\n        result += u_weights[i] * texture(u_texture, v_texCoords + float(i) * u_delta);\r\n        result += u_weights[i] * texture(u_texture, v_texCoords - float(i) * u_delta);\r\n    }\r\n\r\n    fragColor = result;\r\n}\r\n";
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(0), s = r3(17), u2 = r3(64), c2 = r3(2), l2 = r3(23), f2 = r3(4), h2 = r3(14), d2 = function(e4) {
      function t4(t5) {
        var r4 = e4.call(this) || this;
        return r4._gaussFilterKernelSize = 21, r4._context = t5, r4;
      }
      return n2(t4, e4), Object.defineProperty(t4.prototype, "shadowMapFBO", { get: function() {
        return this._shadowMapFBO;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "shadowMapTexture", { get: function() {
        return this.hasBlur ? this._blurTexture : this._shadowMapTexture;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "hasBlur", { get: function() {
        return this._shadowType !== t4.ShadowMappingType.HardLinear;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "blurSize", { get: function() {
        return this._gaussFilterKernelSize;
      }, set: function(e5) {
        e5 !== this._gaussFilterKernelSize && (this._gaussFilter !== void 0 && (this._gaussFilter.kernelSize = e5, this._gaussFilter.standardDeviation = e5 / 6), this._gaussFilterKernelSize = e5);
      }, enumerable: true, configurable: true }), t4.prototype.resize = function(e5, t5, r4) {
        t5 === void 0 && (t5 = true), r4 === void 0 && (r4 = true), a.assert(e5[0] > 0 && e5[1] > 0, "Size has to be > 0."), this._shadowMapSize = e5, this._shadowMapFBO.resize(this._shadowMapSize[0], this._shadowMapSize[1], t5, r4);
      }, t4.prototype.resizeBlurTexture = function(e5, t5, r4) {
        t5 === void 0 && (t5 = true), r4 === void 0 && (r4 = true), a.assert(e5[0] > 0 && e5[1] > 0, "Size has to be > 0."), this._blurredShadowMapSize = e5, this._intermediateBlurFBO.resize(this._blurredShadowMapSize[0], this._blurredShadowMapSize[1], t5, r4), this._blurFBO.resize(this._blurredShadowMapSize[0], this._blurredShadowMapSize[1], t5, r4);
      }, t4.prototype.initialize = function(e5, r4, i3) {
        a.assert(r4[0] > 0 && r4[1] > 0, "Size has to be > 0."), this._shadowType = e5, this._shadowMapSize = r4, this._blurredShadowMapSize = i3 !== void 0 ? i3 : this._shadowMapSize;
        var n3 = this._context.gl, o2 = this._context.gl2facade, c3 = n3.RGBA;
        if (this._context.isWebGL2) {
          var d3 = this._context.gl;
          switch (this._shadowType) {
            case t4.ShadowMappingType.HardLinear:
            case t4.ShadowMappingType.HardExponential:
              c3 = d3.RED;
              break;
            case t4.ShadowMappingType.SoftLinear:
              c3 = d3.RG;
              break;
            case t4.ShadowMappingType.SoftExponential:
              c3 = d3.RGBA;
              break;
            default:
              a.assert(false, "Unexpected value for shadowType");
          }
        }
        var p2 = h2.Wizard.queryInternalTextureFormat(this._context, c3, h2.Wizard.Precision.float), _2 = p2[0], g2 = p2[1];
        this._shadowType !== t4.ShadowMappingType.HardLinear && g2 !== n3.FLOAT && (a.log(a.LogLevel.Warning, "floating point textures are not supported, falling back to HardLinear"), this._shadowType = t4.ShadowMappingType.HardLinear);
        var m2 = n3.LINEAR;
        return g2 !== n3.FLOAT || this._context.supportsTextureFloatLinear || (m2 = n3.NEAREST), g2 !== o2.HALF_FLOAT || this._context.supportsTextureHalfFloatLinear || (m2 = n3.NEAREST), this._shadowMapTexture = new f2.Texture2D(this._context), this._shadowMapTexture.initialize(this._shadowMapSize[0], this._shadowMapSize[1], _2, c3, n3.FLOAT), this._shadowMapTexture.wrap(n3.CLAMP_TO_EDGE, n3.CLAMP_TO_EDGE), this._shadowMapTexture.filter(m2, m2), this._shadowMapRenderbuffer = new l2.Renderbuffer(this._context), this._shadowMapRenderbuffer.initialize(this._shadowMapSize[0], this._shadowMapSize[1], n3.DEPTH_COMPONENT16), this._shadowMapFBO = new s.Framebuffer(this._context), this._shadowMapFBO.initialize([[o2.COLOR_ATTACHMENT0, this._shadowMapTexture], [n3.DEPTH_ATTACHMENT, this._shadowMapRenderbuffer]]), this._shadowMapFBO.clearColor([1, 1, 1, 1]), this._shadowMapFBO.clearDepth(1), this.hasBlur && (this._gaussFilter = new u2.GaussFilter(this._context), this._gaussFilter.kernelSize = this._gaussFilterKernelSize, this._gaussFilter.standardDeviation = this._gaussFilterKernelSize / 6, this._gaussFilter.initialize(), this._intermediateBlurTexture = new f2.Texture2D(this._context, "IntermediateBlurTexture"), this._intermediateBlurTexture.initialize(this._blurredShadowMapSize[0], this._blurredShadowMapSize[1], _2, c3, n3.FLOAT), this._intermediateBlurTexture.wrap(n3.CLAMP_TO_EDGE, n3.CLAMP_TO_EDGE), this._intermediateBlurTexture.filter(m2, m2), this._intermediateBlurFBO = new s.Framebuffer(this._context, "IntermediateBlurFramebuffer"), this._intermediateBlurFBO.initialize([[o2.COLOR_ATTACHMENT0, this._intermediateBlurTexture]]), this._intermediateBlurFBO.clearColor([1, 1, 1, 1]), this._intermediateBlurFBO.clearDepth(1), this._blurTexture = new f2.Texture2D(this._context, "BlurTexture"), this._blurTexture.initialize(this._blurredShadowMapSize[0], this._blurredShadowMapSize[1], _2, c3, n3.FLOAT), this._blurTexture.wrap(n3.CLAMP_TO_EDGE, n3.CLAMP_TO_EDGE), this._blurTexture.filter(m2, m2), this._blurFBO = new s.Framebuffer(this._context, "BlurFramebuffer"), this._blurFBO.initialize([[o2.COLOR_ATTACHMENT0, this._blurTexture]]), this._blurFBO.clearColor([1, 1, 1, 1]), this._blurFBO.clearDepth(1)), true;
      }, t4.prototype.uninitialize = function() {
        this._shadowMapFBO.uninitialize(), this._shadowMapRenderbuffer.uninitialize(), this._shadowMapTexture.uninitialize(), this.hasBlur && (this._intermediateBlurFBO.uninitialize(), this._intermediateBlurTexture.uninitialize(), this._blurFBO.uninitialize(), this._blurTexture.uninitialize(), this._gaussFilter.uninitialize());
      }, t4.prototype.frame = function(e5) {
        var t5 = this._context.gl;
        t5.viewport(0, 0, this._shadowMapSize[0], this._shadowMapSize[1]), t5.enable(t5.DEPTH_TEST), t5.depthFunc(t5.LEQUAL), this._shadowMapFBO.clear(t5.COLOR_BUFFER_BIT | t5.DEPTH_BUFFER_BIT, true, false), e5(), t5.disable(t5.DEPTH_TEST), t5.depthFunc(t5.LESS), this.hasBlur && (t5.viewport(0, 0, this._intermediateBlurFBO.width, this._intermediateBlurFBO.height), this._intermediateBlurFBO.clear(t5.COLOR_BUFFER_BIT | t5.DEPTH_BUFFER_BIT, true, false), this._gaussFilter.filter(this._shadowMapTexture, u2.GaussFilter.Direction.Horizontal), t5.viewport(0, 0, this._blurFBO.width, this._blurFBO.height), this._blurFBO.clear(t5.COLOR_BUFFER_BIT | t5.DEPTH_BUFFER_BIT, true, false), this._gaussFilter.filter(this._intermediateBlurTexture, u2.GaussFilter.Direction.Vertical));
      }, o([c2.Initializable.assert_initialized()], t4.prototype, "resize", null), o([c2.Initializable.assert_initialized()], t4.prototype, "resizeBlurTexture", null), o([c2.Initializable.initialize()], t4.prototype, "initialize", null), o([c2.Initializable.uninitialize()], t4.prototype, "uninitialize", null), o([c2.Initializable.assert_initialized()], t4.prototype, "frame", null), t4;
    }(c2.Initializable);
    t3.ShadowPass = d2, function(e4) {
      !function(e5) {
        e5[e5.HardLinear = 0] = "HardLinear", e5[e5.SoftLinear = 1] = "SoftLinear", e5[e5.HardExponential = 2] = "HardExponential", e5[e5.SoftExponential = 3] = "SoftExponential";
      }(e4.ShadowMappingType || (e4.ShadowMappingType = {}));
    }(d2 = t3.ShadowPass || (t3.ShadowPass = {})), t3.ShadowPass = d2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = r3(1), a = r3(5), s = function(e4) {
      function t4(t5, r4, i3, n3) {
        i3 === void 0 && (i3 = false), n3 === void 0 && (n3 = [1, 1, 1]);
        var s2 = e4.call(this, t5, r4) || this;
        s2._vertexLocation = 0, s2._extent = o.vec3.fromValues(1, 1, 1), s2._uvCoordinates = false, r4 = r4 !== void 0 && r4 !== "" ? r4 : s2.constructor.name;
        var u2 = new a.Buffer(t5, r4 + "VBO");
        s2._buffers.push(u2);
        var c2 = new a.Buffer(t5, r4 + "IndicesVBO");
        return s2._buffers.push(c2), s2._extent = o.vec3.clone(n3), s2._uvCoordinates = i3, s2;
      }
      return n2(t4, e4), t4.prototype.bindBuffers = function() {
        this._uvCoordinates === false ? this._buffers[0].attribEnable(this._vertexLocation, 3, this.context.gl.FLOAT, false, 0, 0, true, false) : (this._buffers[0].attribEnable(this._vertexLocation, 3, this.context.gl.FLOAT, false, 20, 0, true, false), this._buffers[0].attribEnable(this._uvCoordLocation, 2, this.context.gl.FLOAT, false, 20, 12, false, false)), this._buffers[1].bind();
      }, t4.prototype.unbindBuffers = function() {
        this._buffers[0].attribDisable(this._vertexLocation, true, true), this._uvCoordinates && this._buffers[0].attribDisable(this._uvCoordLocation, false, true), this._buffers[1].unbind();
      }, t4.prototype.initialize = function(r4, i3) {
        var n3 = this;
        r4 === void 0 && (r4 = 0), i3 === void 0 && (i3 = 1), this._vertexLocation = r4, this._uvCoordLocation = i3;
        var o2 = this.context.gl, a2 = e4.prototype.initialize.call(this, [o2.ARRAY_BUFFER, o2.ELEMENT_ARRAY_BUFFER], [r4, i3]), s2 = this._uvCoordinates, u2 = s2 ? t4.VERTICES_UV : t4.VERTICES;
        return u2 = u2.map(function(e5, t5) {
          return e5 * (s2 === false ? 0.5 * n3._extent[t5 % 3] : t5 % 5 < 3 ? 0.5 * n3._extent[t5 % 5] : 1);
        }), this._buffers[0].data(u2, o2.STATIC_DRAW), this._buffers[1].data(s2 ? t4.INDICES_UV : t4.INDICES, o2.STATIC_DRAW), this._count = s2 ? t4.INDICES_UV.length : t4.INDICES.length, a2;
      }, t4.prototype.draw = function() {
        var e5 = this.context.gl;
        e5.drawElements(e5.TRIANGLE_STRIP, this._count, e5.UNSIGNED_BYTE, 0);
      }, Object.defineProperty(t4.prototype, "vertexLocation", { get: function() {
        return this._vertexLocation;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "uvCoordLocation", { get: function() {
        return this._uvCoordLocation;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "extent", { get: function() {
        return this._extent;
      }, enumerable: true, configurable: true }), t4.VERTICES = new Float32Array([-1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, -1, -1, -1, 1, -1, -1, -1, 1, -1, 1, 1, -1]), t4.INDICES = new Uint8Array([0, 1, 2, 3, 7, 1, 5, 4, 7, 6, 2, 4, 0, 1]), t4.VERTICES_UV = new Float32Array([-1, -1, 1, 0, 0, 1, -1, 1, 1, 0, -1, 1, 1, 0, 1, 1, 1, 1, 1, 1, -1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, -1, 1, 1, 1, 1, 1, 0, 1, 1, -1, 1, 0, 0, 1, -1, -1, 1, 0, 1, -1, 1, 1, 1, -1, -1, -1, 0, 0, 1, -1, -1, 0, 0, -1, -1, -1, 1, 0, 1, 1, -1, 0, 1, -1, 1, -1, 1, 1, -1, 1, -1, 0, 1, -1, 1, 1, 1, 1, -1, -1, 1, 1, 0, -1, -1, 1, 0, 1]), t4.INDICES_UV = new Uint8Array([3, 2, 1, 0, 10, 19, 11, 18, 11, 17, 16, 4, 16, 5, 6, 7, 6, 8, 9, 10, 9, 11, 12, 13, 14, 15]), t4;
    }(r3(9).Geometry);
    t3.CuboidGeometry = s;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = r3(0), a = r3(5), s = r3(9), u2 = r3(66), c2 = function(e4) {
      function t4(t5, r4, i3, n3) {
        i3 === void 0 && (i3 = 1), n3 === void 0 && (n3 = true);
        var o2 = e4.call(this, t5, r4) || this;
        o2._diameter = 1, o2._textured = false, o2._size = 0, r4 = r4 !== void 0 && r4 !== "" ? r4 : o2.constructor.name, o2._diameter = i3, o2._textured = n3;
        var s2 = new a.Buffer(t5, r4 + "IndexBuffer");
        o2._buffers.push(s2);
        var u3 = new a.Buffer(t5, r4 + "VBO");
        if (o2._buffers.push(u3), o2._textured) {
          var c3 = new a.Buffer(t5, r4 + "UV");
          o2._buffers.push(c3);
        }
        return o2;
      }
      return n2(t4, e4), t4.prototype.bindBuffers = function() {
        this._buffers[0].bind(), this._buffers[1].attribEnable(this._vertexLocation, 3, this.context.gl.FLOAT, false, 0, 0, true, false), this._textured && this._buffers[2].attribEnable(this._texCoordLocation, 2, this.context.gl.FLOAT, false, 0, 0, true, false);
      }, t4.prototype.unbindBuffers = function() {
        this._buffers[0].unbind(), this._buffers[1].attribDisable(this._vertexLocation, true, true), this._textured && this._buffers[2].attribDisable(this._texCoordLocation, true, true);
      }, t4.prototype.initialize = function(t5, r4) {
        t5 === void 0 && (t5 = 0), r4 === void 0 && (r4 = 1);
        var i3 = this.context.gl;
        this._vertexLocation = t5, this._texCoordLocation = r4;
        var n3 = e4.prototype.initialize.call(this, [i3.ELEMENT_ARRAY_BUFFER, i3.ARRAY_BUFFER, i3.ARRAY_BUFFER], [8, t5, r4]);
        o.assert(this._buffers[0] !== void 0 && this._buffers[0].object instanceof WebGLBuffer, "expected valid WebGLBuffer"), o.assert(this._buffers[1] !== void 0 && this._buffers[1].object instanceof WebGLBuffer, "expected valid WebGLBuffer"), this._textured && o.assert(this._buffers[2] !== void 0 && this._buffers[2].object instanceof WebGLBuffer, "expected valid WebGLBuffer");
        var a2 = new u2.Icosahedron();
        a2.generateGeometry(3), this._textured && a2.generateTextureCoordinates();
        for (var s2 = a2.faces, c3 = new Uint16Array(3 * s2.length), l2 = 0, f2 = 0, h2 = s2; f2 < h2.length; f2++) {
          var d2 = h2[f2];
          c3[l2 + 0] = d2[0], c3[l2 + 1] = d2[1], c3[l2 + 2] = d2[2], l2 += 3;
        }
        this._buffers[0].data(c3, i3.STATIC_DRAW), this._size = 3 * s2.length;
        var p2 = a2.vertices, _2 = new Float32Array(3 * p2.length);
        l2 = 0;
        for (var g2 = 0, m2 = p2; g2 < m2.length; g2++) {
          var v2 = m2[g2];
          _2[l2 + 0] = v2[0] * this._diameter, _2[l2 + 1] = v2[1] * this._diameter, _2[l2 + 2] = v2[2] * this._diameter, l2 += 3;
        }
        if (this._buffers[1].data(_2, i3.STATIC_DRAW), this._textured) {
          var b2 = a2.texcoords, y2 = new Float32Array(2 * b2.length);
          if (b2 && b2.length > 0) {
            l2 = 0;
            for (var E2 = 0, x2 = b2; E2 < x2.length; E2++) {
              var T2 = x2[E2];
              y2[l2 + 0] = T2[0], y2[l2 + 1] = T2[1], l2 += 2;
            }
          }
          this._buffers[2].data(y2, i3.STATIC_DRAW);
        }
        return n3;
      }, t4.prototype.draw = function() {
        var e5 = this.context.gl;
        e5.drawElements(e5.TRIANGLES, this._size, e5.UNSIGNED_SHORT, 0);
      }, Object.defineProperty(t4.prototype, "vertexLocation", { get: function() {
        return this._vertexLocation;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "texCoordLocation", { get: function() {
        return this._texCoordLocation;
      }, enumerable: true, configurable: true }), t4;
    }(s.Geometry);
    t3.GeosphereGeometry = c2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = r3(1), a = r3(5), s = function(e4) {
      function t4(t5, r4) {
        var i3 = e4.call(this, t5, r4) || this;
        i3._vertexLocation = 0, i3._texCoordLocation = 1, i3._translation = o.vec3.fromValues(0, 0, 0), i3._scale = o.vec3.fromValues(1, 1, 1), i3._rotation = o.quat.create(), r4 = r4 !== void 0 && r4 !== "" ? r4 : i3.constructor.name;
        var n3 = new a.Buffer(t5, r4 + "VertexVBO"), s2 = new a.Buffer(t5, r4 + "TexCoordVBO"), u2 = new a.Buffer(t5, r4 + "IndexBuffer");
        return i3._buffers.push(n3), i3._buffers.push(s2), i3._buffers.push(u2), i3;
      }
      return n2(t4, e4), t4.prototype.bindBuffers = function() {
        this._buffers[0].attribEnable(this._vertexLocation, 3, this.context.gl.FLOAT, false, 0, 0, true, false), this._buffers[1].attribEnable(this._texCoordLocation, 2, this.context.gl.FLOAT, false, 0, 0, true, false), this._buffers[2].bind();
      }, t4.prototype.unbindBuffers = function() {
        this._buffers[0].attribDisable(this._vertexLocation, true, true), this._buffers[1].attribDisable(this._texCoordLocation, true, true), this._buffers[2].unbind();
      }, t4.prototype.initialize = function(r4, i3) {
        r4 === void 0 && (r4 = 0), i3 === void 0 && (i3 = 1);
        var n3 = this.context.gl;
        this._vertexLocation = r4, this._texCoordLocation = i3;
        var o2 = e4.prototype.initialize.call(this, [n3.ARRAY_BUFFER, n3.ARRAY_BUFFER, n3.ELEMENT_ARRAY_BUFFER], [r4, i3, 8]);
        return this._buffers[0].data(t4.VERTICES, n3.STATIC_DRAW), this._buffers[1].data(t4.UV, n3.STATIC_DRAW), this._buffers[2].data(t4.INDICES, n3.STATIC_DRAW), o2;
      }, t4.prototype.draw = function() {
        var e5 = this.context.gl;
        e5.drawElements(e5.TRIANGLE_STRIP, t4.INDICES.length, e5.UNSIGNED_BYTE, 0);
      }, Object.defineProperty(t4.prototype, "translation", { set: function(e5) {
        this._translation = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "scale", { set: function(e5) {
        this._scale = o.vec3.fromValues(e5[0], 1, e5[1]);
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "rotation", { set: function(e5) {
        this._rotation = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "transformation", { get: function() {
        var e5 = o.mat4.create();
        return o.mat4.fromRotationTranslationScale(e5, this._rotation, this._translation, this._scale);
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "vertexLocation", { get: function() {
        return this._vertexLocation;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "texCoordLocation", { get: function() {
        return this._texCoordLocation;
      }, enumerable: true, configurable: true }), t4.VERTICES = new Float32Array([-1, 0, -1, -1, 0, 1, 1, 0, -1, 1, 0, 1]), t4.UV = new Float32Array([-1, -1, -1, 1, 1, -1, 1, 1]), t4.INDICES = new Uint8Array([0, 1, 2, 3]), t4;
    }(r3(9).Geometry);
    t3.PlaneGeometry = s;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(0), n2 = r3(5), o = r3(9), a = r3(25), s = r3(4), u2 = function() {
      function e4(e5) {
        this._texture2Ds = /* @__PURE__ */ new Map(), this._materials = /* @__PURE__ */ new Map(), this._geometries = /* @__PURE__ */ new Map(), this._buffers = /* @__PURE__ */ new Map(), this._context = e5;
      }
      return e4.prototype.fetchTexture2D = function(e5, t4, r4) {
        if (r4 === void 0 && (r4 = false), !this._texture2Ds.has(e5)) {
          var n3 = new s.Texture2D(this._context, e5);
          return i2.assert(n3.identifier === e5, "expected object identifier to be unchanged"), this._texture2Ds.set(e5, n3), n3.fetch(t4, r4);
        }
      }, e4.prototype.add = function(e5, t4) {
        var r4 = new Array();
        if (e5 instanceof s.Texture2D)
          for (var i3 = e5, u3 = 0, c2 = t4; u3 < c2.length; u3++) {
            var l2 = c2[u3];
            this._texture2Ds.has(l2) || (this._texture2Ds.set(l2, i3), r4.push(l2));
          }
        if (e5 instanceof a.Material)
          for (var f2 = e5, h2 = 0, d2 = t4; h2 < d2.length; h2++)
            l2 = d2[h2], this._materials.has(l2) || (this._materials.set(l2, f2), r4.push(l2));
        if (e5 instanceof o.Geometry)
          for (var p2 = e5, _2 = 0, g2 = t4; _2 < g2.length; _2++)
            l2 = g2[_2], this._geometries.has(l2) || (this._geometries.set(l2, p2), r4.push(l2));
        if (e5 instanceof n2.Buffer)
          for (var m2 = e5, v2 = 0, b2 = t4; v2 < b2.length; v2++)
            l2 = b2[v2], this._buffers.has(l2) || (this._buffers.set(l2, m2), r4.push(l2));
        return r4;
      }, e4.prototype.get = function(e5) {
        return this._texture2Ds.has(e5) ? this._texture2Ds.get(e5) : this._materials.has(e5) ? this._materials.get(e5) : this._geometries.has(e5) ? this._geometries.get(e5) : this._buffers.has(e5) ? this._buffers.get(e5) : void 0;
      }, e4.prototype.uninitialize = function() {
        for (var e5 = 0, t4 = Array.from(this._geometries.values()); e5 < t4.length; e5++) {
          var r4 = t4[e5];
          r4.initialized && r4.uninitialize();
        }
        this._geometries.clear();
        for (var i3 = 0, n3 = Array.from(this._texture2Ds.values()); i3 < n3.length; i3++) {
          var o2 = n3[i3];
          o2.initialized && o2.uninitialize();
        }
        this._texture2Ds.clear();
        for (var a2 = 0, s2 = Array.from(this._buffers.values()); a2 < s2.length; a2++) {
          var u3 = s2[a2];
          u3.initialized && u3.uninitialize();
        }
        this._buffers.clear(), this._materials.clear();
      }, e4;
    }();
    t3.ResourceManager = u2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(1), s = r3(0), u2 = r3(15), c2 = r3(2), l2 = function(e4) {
      function t4(t5) {
        var r4 = e4.call(this) || this;
        return r4._altered = Object.assign(new u2.ChangeLookup(), { any: false, camera: false }), r4._context = t5, r4._opaqueGeometryMap = /* @__PURE__ */ new Map(), r4._transparentGeometryMap = /* @__PURE__ */ new Map(), r4;
      }
      return n2(t4, e4), t4.prototype.preprocessScene = function() {
        s.assert(this._scene !== void 0, "Scene was undefined during preprocessing."), this._scene !== void 0 && (this._opaqueGeometryMap.clear(), this._transparentGeometryMap.clear(), this.preprocessNode(this._scene, a.mat4.create()));
      }, t4.prototype.preprocessNode = function(e5, t5) {
        var r4 = a.mat4.clone(t5), i3 = e5.componentsOfType("TransformComponent");
        if (s.assert(i3.length <= 1, "SceneNode can not have more than one transform component"), i3.length === 1) {
          var n3 = i3[0];
          a.mat4.mul(r4, r4, n3.transform);
        }
        for (var o2 = 0, u3 = e5.componentsOfType("GeometryComponent"); o2 < u3.length; o2++) {
          var c3, l3 = u3[o2], f2 = l3.material, h2 = l3.geometry;
          f2.isTransparent ? ((c3 = this._transparentGeometryMap.get(f2)) === void 0 && (c3 = []), c3.push([h2, r4]), this._transparentGeometryMap.set(f2, c3)) : ((c3 = this._opaqueGeometryMap.get(f2)) === void 0 && (c3 = []), c3.push([h2, r4]), this._opaqueGeometryMap.set(f2, c3));
        }
        if (e5.nodes !== void 0)
          for (var d2 = 0, p2 = e5.nodes; d2 < p2.length; d2++) {
            var _2 = p2[d2];
            this.preprocessNode(_2, r4);
          }
      }, t4.prototype.renderGeometryMap = function(e5) {
        for (var t5 = 0, r4 = Array.from(e5.keys()); t5 < r4.length; t5++) {
          var i3 = r4[t5];
          this.bindMaterial(i3);
          for (var n3 = 0, o2 = e5.get(i3); n3 < o2.length; n3++) {
            var a2 = o2[n3], s2 = a2[0], u3 = a2[1];
            s2.bind(), this.bindGeometry !== void 0 && this.bindGeometry(s2), this.updateModelTransform(u3), s2.draw(), s2.unbind();
          }
        }
      }, t4.prototype.initialize = function() {
        return true;
      }, t4.prototype.uninitialize = function() {
      }, t4.prototype.prepare = function() {
      }, t4.prototype.update = function(e5) {
      }, t4.prototype.frame = function() {
        if (s.assert(this._target && this._target.valid, "valid target expected"), s.assert(this._program && this._program.valid, "valid program expected"), s.assert(this.updateModelTransform !== void 0, "Model transform function needs to be initialized."), s.assert(this.updateViewProjectionTransform !== void 0, "View Projection transform function needs to be initialized."), s.assert(this.bindMaterial !== void 0, "Material binding function needs to be initialized."), this._scene !== void 0) {
          var e5 = this._context.gl;
          e5.enable(e5.DEPTH_TEST);
          var t5 = this._target.size;
          e5.viewport(0, 0, t5[0], t5[1]);
          var r4 = this._clearColor;
          e5.clearColor(r4[0], r4[1], r4[2], r4[3]), this._target.clear(e5.COLOR_BUFFER_BIT | e5.DEPTH_BUFFER_BIT, true, false), this._program.bind(), this.bindUniforms !== void 0 && this.bindUniforms(), this.updateViewProjectionTransform(this._camera.viewProjection), this.drawCalls(), this._program.unbind(), e5.disable(e5.BLEND);
        }
      }, t4.prototype.drawCalls = function(e5) {
        e5 === void 0 && (e5 = true), this._scene !== void 0 && (this.renderGeometryMap(this._opaqueGeometryMap), e5 && this.renderGeometryMap(this._transparentGeometryMap));
      }, Object.defineProperty(t4.prototype, "target", { set: function(e5) {
        this.assertInitialized(), this._target = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "ndcOffset", { set: function(e5) {
        this.assertInitialized(), this._ndcOffset = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "camera", { set: function(e5) {
        this.assertInitialized(), this._camera !== e5 && (this._camera = e5, this._altered.alter("camera"));
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "clearColor", { set: function(e5) {
        this._clearColor = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "program", { set: function(e5) {
        this._program = e5;
      }, enumerable: true, configurable: true }), o([c2.Initializable.initialize()], t4.prototype, "initialize", null), o([c2.Initializable.uninitialize()], t4.prototype, "uninitialize", null), o([c2.Initializable.assert_initialized()], t4.prototype, "update", null), o([c2.Initializable.assert_initialized()], t4.prototype, "frame", null), o([c2.Initializable.assert_initialized()], t4.prototype, "drawCalls", null), t4;
    }(r3(67).SceneRenderPass);
    t3.ForwardSceneRenderPass = l2;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = function(e4) {
      function t4(t5) {
        var r4 = e4.call(this, "TransformComponent") || this;
        return r4._transform = t5, r4;
      }
      return n2(t4, e4), Object.defineProperty(t4.prototype, "transform", { get: function() {
        return this._transform;
      }, enumerable: true, configurable: true }), t4;
    }(r3(39).SceneNodeComponent);
    t3.TransformComponent = o;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    });
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = function(e4) {
      function t4() {
        return e4.call(this, "GeometryComponent") || this;
      }
      return n2(t4, e4), Object.defineProperty(t4.prototype, "geometry", { get: function() {
        return this._geometry;
      }, set: function(e5) {
        this._geometry = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "material", { get: function() {
        return this._material;
      }, set: function(e5) {
        this._material = e5;
      }, enumerable: true, configurable: true }), t4;
    }(r3(39).SceneNodeComponent);
    t3.GeometryComponent = o;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = function() {
      function e4(e5, t4) {
        this._context = e5, this._name = t4, this._isTransparent = false;
      }
      return Object.defineProperty(e4.prototype, "name", { get: function() {
        return this._name;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "isTransparent", { get: function() {
        return this._isTransparent;
      }, set: function(e5) {
        this._isTransparent = e5;
      }, enumerable: true, configurable: true }), e4;
    }();
    t3.Material = i2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(128);
    t3.FontFace = i2.FontFace;
    var n2 = r3(18);
    t3.GlyphVertices = n2.GlyphVertices;
    var o = r3(19);
    t3.Label = o.Label;
    var a = r3(71);
    t3.LabelGeometry = a.LabelGeometry;
    var s = r3(130);
    t3.LabelRenderPass = s.LabelRenderPass;
    var u2 = r3(72);
    t3.Position2DLabel = u2.Position2DLabel;
    var c2 = r3(73);
    t3.Position3DLabel = c2.Position3DLabel;
    var l2 = r3(74);
    t3.Projected3DLabel = l2.Projected3DLabel;
    var f2 = r3(70);
    t3.Text = f2.Text;
    var h2 = r3(26);
    t3.Typesetter = h2.Typesetter;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(0), n2 = r3(4), o = r3(14), a = r3(34), s = r3(129), u2 = r3(69), c2 = function() {
      function e4(e5, t4) {
        this._ascent = 0, this._descent = 0, this._lineGap = 0, this._glyphTextureExtent = [0, 0], this._glyphTexturePadding = [0, 0, 0, 0], this._glyphs = /* @__PURE__ */ new Map(), this._context = e5;
        var r4 = e5.gl;
        t4 = t4 !== void 0 && t4 !== "" ? t4 : this.constructor.name, this._glyphTexture = new n2.Texture2D(e5, t4 + "GlyphAtlas");
        var i3 = o.Wizard.queryInternalTextureFormat(e5, r4.RGBA, o.Wizard.Precision.byte);
        this._glyphTexture.initialize(1, 1, i3[0], r4.RGBA, i3[1]), this._glyphTexture.filter(r4.LINEAR, r4.LINEAR);
      }
      return e4.fromFile = function(t4, r4, i3, n3) {
        return i3 === void 0 && (i3 = false), a.fetchAsync(t4, "text").then(function(o2) {
          var a2 = new e4(r4, n3);
          return s.FontFaceLoader.process(a2, o2, t4, i3).then(function(e5) {
            return e5;
          }).catch(function(e5) {
            return Promise.reject("processing font face data failed: " + e5);
          });
        });
      }, e4.prototype.hasGlyph = function(e5) {
        return !!this._glyphs.get(e5);
      }, e4.prototype.glyph = function(e5) {
        var t4 = this._glyphs.get(e5);
        if (t4)
          return t4;
        var r4 = new u2.Glyph();
        return r4.index = e5, r4;
      }, e4.prototype.addGlyph = function(e5) {
        i2.assert(!this._glyphs.get(e5.index), "expected glyph to not already exist"), this._glyphs.set(e5.index, e5);
      }, e4.prototype.arrayOfGlyphIndices = function() {
        return Array.from(this._glyphs.keys());
      }, e4.prototype.depictable = function(e5) {
        return this.glyph(e5).depictable();
      }, e4.prototype.kerning = function(e5, t4) {
        var r4 = this._glyphs.get(e5);
        return r4 ? r4.kerning(t4) : 0;
      }, e4.prototype.setKerning = function(e5, t4, r4) {
        var n3 = this._glyphs.get(e5);
        n3 && this.hasGlyph(t4) ? n3.setKerning(t4, r4) : i2.assert(false, "expected glyph or glyph of subsequent index to exist,                 given " + e5 + " and " + t4 + " respectively");
      }, Object.defineProperty(e4.prototype, "size", { get: function() {
        return this._size;
      }, set: function(e5) {
        i2.assert(e5 > 0, "expected size to be greater than 0.0, given " + e5), this._size = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "base", { get: function() {
        return this._base;
      }, set: function(e5) {
        i2.assert(e5 > 0, "expected base to be greater than 0.0, given " + e5), this._base = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "ascent", { get: function() {
        return this._ascent;
      }, set: function(e5) {
        i2.assert(e5 > 0, "expected ascent to be greater than 0.0, given " + e5), this._ascent = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "descent", { get: function() {
        return this._descent;
      }, set: function(e5) {
        this._descent = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "lineGap", { get: function() {
        return this._lineGap;
      }, set: function(e5) {
        this._lineGap = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "lineHeight", { get: function() {
        return this.size + this.lineGap;
      }, set: function(e5) {
        i2.assert(this.size > 0, "expected size to be greater than zero to derive line gap from line height"), this._lineGap = e5 - this.size;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "lineSpace", { get: function() {
        return this.lineHeight === 0 ? this.lineHeight : this.size / this.lineHeight;
      }, set: function(e5) {
        this._lineGap = this.size * (e5 - 1);
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "glyphTextureExtent", { get: function() {
        return this._glyphTextureExtent;
      }, set: function(e5) {
        i2.assert(e5[0] > 0, "expected extent.x to be greater than 0.0, given " + e5[0]), i2.assert(e5[1] > 0, "expected extent.y to be greater than 0.0, given " + e5[1]), this._glyphTextureExtent = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "glyphTexturePadding", { get: function() {
        return this._glyphTexturePadding;
      }, set: function(e5) {
        i2.assert(e5[0] >= 0, "expected padding[0] to be greater than 0.0, given " + e5[0]), i2.assert(e5[1] >= 0, "expected padding[1] to be greater than 0.0, given " + e5[1]), i2.assert(e5[2] >= 0, "expected padding[2] to be greater than 0.0, given " + e5[2]), i2.assert(e5[3] >= 0, "expected padding[3] to be greater than 0.0, given " + e5[3]), this._glyphTexturePadding = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "glyphTexture", { get: function() {
        return this._glyphTexture;
      }, set: function(e5) {
        this._glyphTexture = e5;
      }, enumerable: true, configurable: true }), e4;
    }();
    t3.FontFace = c2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(0), n2 = r3(69), o = function() {
      function e4() {
      }
      return e4.processInfo = function(e5, t4) {
        var r4 = /* @__PURE__ */ new Map();
        if (!this.readKeyValuePairs(e5, ["size", "padding"], r4))
          return false;
        t4.size = parseFloat(r4.get("size"));
        var n3 = r4.get("padding").split(",");
        if (n3.length !== 4)
          return i2.log(i2.LogLevel.Warning, "expected 4 values for padding, given " + n3 + " (" + n3.length + ")"), false;
        var o2 = [parseFloat(n3[0]), parseFloat(n3[1]), parseFloat(n3[2]), parseFloat(n3[3])];
        return t4.glyphTexturePadding = o2, true;
      }, e4.processCommon = function(e5, t4) {
        var r4 = /* @__PURE__ */ new Map();
        return !!this.readKeyValuePairs(e5, ["lineHeight", "base", "scaleW", "scaleH"], r4) && (t4.base = parseFloat(r4.get("base")), r4.has("ascent") && (t4.ascent = parseFloat(r4.get("ascent"))), r4.has("descent") && (t4.descent = parseFloat(r4.get("descent"))), t4.lineHeight = parseFloat(r4.get("lineHeight")), t4.glyphTextureExtent = [parseFloat(r4.get("scaleW")), parseFloat(r4.get("scaleH"))], true);
      }, e4.processPage = function(e5, t4, r4) {
        var n3 = /* @__PURE__ */ new Map();
        if (this.readKeyValuePairs(e5, ["file"], n3)) {
          var o2 = i2.dirname(r4), a = n3.get("file");
          return a = a.replace(/['"]+/g, ""), t4.glyphTexture.fetch(o2 + "/" + a, false, true).catch(function() {
            return Promise.reject("page '" + a + "' referenced in font file '" + r4 + "' was not found");
          });
        }
      }, e4.processChar = function(e5, t4) {
        var r4 = /* @__PURE__ */ new Map();
        if (!this.readKeyValuePairs(e5, ["id", "x", "y", "width", "height", "xoffset", "yoffset", "xadvance"], r4))
          return false;
        var o2 = parseInt(r4.get("id"), 10);
        i2.logIf(o2 <= 0, i2.LogLevel.Warning, "expected glyph index to be greater than 0, given " + o2);
        var a = new n2.Glyph();
        a.index = o2;
        var s = [1 / t4.glyphTextureExtent[0], 1 / t4.glyphTextureExtent[1]], u2 = [parseFloat(r4.get("width")), parseFloat(r4.get("height"))];
        return a.subTextureOrigin = [parseFloat(r4.get("x")) * s[0], 1 - (parseFloat(r4.get("y")) + u2[1]) * s[1]], a.extent = u2, a.subTextureExtent[0] = u2[0] * s[0], a.subTextureExtent[1] = u2[1] * s[1], a.bearingFromFontBaseAndOffset(t4.base, parseFloat(r4.get("xoffset")), parseFloat(r4.get("yoffset"))), a.advance = parseFloat(r4.get("xadvance")), t4.addGlyph(a), true;
      }, e4.processKerning = function(e5, t4) {
        var r4 = /* @__PURE__ */ new Map();
        if (!this.readKeyValuePairs(e5, ["first", "second", "amount"], r4))
          return false;
        var n3 = parseInt(r4.get("first"), 10);
        if (n3 <= 0)
          return i2.log(i2.LogLevel.Warning, "expected kerning's first to be greater than 0, given " + n3), false;
        var o2 = parseInt(r4.get("second"), 10);
        if (o2 <= 0)
          return i2.log(i2.LogLevel.Warning, "expected kerning's second to be greater than 0, given " + o2), false;
        var a = parseFloat(r4.get("amount"));
        return t4.setKerning(n3, o2, a), true;
      }, e4.readKeyValuePairs = function(e5, t4, r4) {
        for (var n3, o2, a = 0, s = e5; a < s.length; a++) {
          var u2 = s[a].split("=");
          n3 = u2[0], o2 = u2[1], r4.set(n3, o2);
        }
        var c2 = true;
        return t4.forEach(function(e6) {
          return c2 = c2 && r4.has(e6);
        }), c2 || i2.log(i2.LogLevel.Warning, "Not all required keys are provided! Mandatory keys: " + t4), c2;
      }, e4.findAscentAndDescentIfNoneProvided = function(e5, t4) {
        if (!(e5.ascent > 0 && e5.descent < 0)) {
          e5.ascent > 0 && (e5.descent = e5.ascent - t4), e5.descent < 0 && (e5.ascent = e5.descent - t4);
          for (var r4 = Number.MIN_VALUE, n3 = 0, o2 = e5.arrayOfGlyphIndices(); n3 < o2.length; n3++) {
            var a = o2[n3];
            e5.glyph(a).extent[1] !== 0 && (r4 = Math.max(e5.glyph(a).bearing[1], r4));
          }
          e5.ascent = r4, e5.descent = e5.ascent - t4, i2.log(i2.LogLevel.Debug, "ascent not specified, derived " + e5.ascent + " from maximum y-offset");
        }
      }, e4.process = function(t4, r4, n3, o2) {
        o2 === void 0 && (o2 = false);
        for (var a = r4.split("\n"), s = new Array(), u2 = true, c2 = 0, l2 = a; c2 < l2.length; c2++) {
          var f2 = l2[c2].split(" "), h2 = f2[0];
          switch (f2 = f2.slice(1), h2) {
            case "info":
              u2 = this.processInfo(f2, t4);
              break;
            case "common":
              u2 = this.processCommon(f2, t4);
              break;
            case "page":
              if (o2)
                break;
              var d2 = this.processPage(f2, t4, n3);
              d2 !== void 0 && s.push(d2);
              break;
            case "char":
              u2 = this.processChar(f2, t4);
              break;
            case "kerning":
              this.processKerning(f2, t4);
          }
          if (u2 === false)
            break;
        }
        return e4.findAscentAndDescentIfNoneProvided(t4, t4.size), t4.size <= 0 && i2.log(i2.LogLevel.Warning, "expected fontFace.size to be greater than 0, given " + t4.size), Promise.all(s).then(function() {
          return t4;
        });
      }, e4;
    }();
    t3.FontFaceLoader = o;
  }, function(e3, t3, r3) {
    var i2, n2 = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), o = this && this.__decorate || function(e4, t4, r4, i3) {
      var n3, o2 = arguments.length, a2 = o2 < 3 ? t4 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t4, r4) : i3;
      if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        a2 = Reflect.decorate(e4, t4, r4, i3);
      else
        for (var s2 = e4.length - 1; s2 >= 0; s2--)
          (n3 = e4[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t4, r4, a2) : n3(t4, r4)) || a2);
      return o2 > 3 && a2 && Object.defineProperty(t4, r4, a2), a2;
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var a = r3(1), s = r3(0), u2 = r3(15), c2 = r3(2), l2 = r3(6), f2 = r3(7), h2 = r3(4), d2 = r3(18), p2 = r3(19), _2 = r3(71), g2 = r3(72), m2 = r3(73), v2 = r3(74), b2 = function(e4) {
      function t4(r4) {
        var i3 = e4.call(this) || this;
        return i3._altered = Object.assign(new u2.ChangeLookup(), { any: false, camera: false, geometry: false, labels: false, aaStepScale: false, aaSampling: false }), i3._ndcOffset = [0, 0], i3._depthMask = false, i3._aaSampling = t4.Sampling.Smooth1, i3._labels = new Array(), i3._ranges = new Array(), i3._verticesPerLabel = new Array(), i3._context = r4, i3._depthFunc = r4.gl.LESS, i3._program = new l2.Program(r4, "LabelRenderProgram"), i3._geometry = new _2.LabelGeometry(i3._context, "LabelGeometry"), i3._aaStepScale = t4.DEFAULT_AA_STEP_SCALE, i3;
      }
      return n2(t4, e4), t4.prototype.prepare = function() {
        for (var e5 = this._camera.viewport, t5 = 0; t5 < this._labels.length; ++t5) {
          var r4 = this._labels[t5], i3 = void 0, n3 = this._altered.labels && this._verticesPerLabel[t5] === void 0;
          r4 instanceof g2.Position2DLabel ? (r4.frameSize = e5, i3 = r4.typeset(n3)) : r4 instanceof v2.Projected3DLabel ? (r4.camera = this._camera, i3 = r4.typeset(n3)) : r4 instanceof m2.Position3DLabel && (i3 = r4.typeset(n3)), i3 === void 0 ? i3 = this._verticesPerLabel[t5] : this._verticesPerLabel[t5] = i3;
          var o2 = t5 > 0 ? this._ranges[t5 - 1][1] : 0, a2 = o2 + (i3 === void 0 ? 0 : i3.length);
          this._ranges[t5] = [o2, a2];
        }
        var s2 = d2.GlyphVertices.concat(this._verticesPerLabel);
        this._geometry.update(s2.origins, s2.tangents, s2.ups, s2.texCoords);
      }, t4.prototype.initialize = function() {
        var e5 = this._context.gl;
        this._geometry.initialize(), this._context.enable(["OES_standard_derivatives"]);
        var t5 = new f2.Shader(this._context, e5.VERTEX_SHADER, "glyph.vert");
        t5.initialize(r3(131));
        var i3 = new f2.Shader(this._context, e5.FRAGMENT_SHADER, "glyph.frag");
        return i3.initialize(r3(132)), this._program.initialize([t5, i3], false), this._program.attribute("a_vertex", this._geometry.vertexLocation), this._program.attribute("a_texCoord", this._geometry.texCoordLocation), this._program.attribute("a_origin", this._geometry.originLocation), this._program.attribute("a_tangent", this._geometry.tangentLocation), this._program.attribute("a_up", this._geometry.upLocation), this._program.link(), this._uViewProjection = this._program.uniform("u_viewProjection"), this._uNdcOffset = this._program.uniform("u_ndcOffset"), this._uColor = this._program.uniform("u_color"), this._uAAStepScale = this._program.uniform("u_aaStepScale"), this._uAASampling = this._program.uniform("u_aaSampling"), this._uTransform = this._program.uniform("u_transform"), this._uDynamic = this._program.uniform("u_dynamic"), this._program.bind(), e5.uniform1i(this._program.uniform("u_glyphs"), 0), e5.uniform1f(this._uAAStepScale, this._aaStepScale), e5.uniform1i(this._uAASampling, this._aaSampling), this._program.unbind(), true;
      }, t4.prototype.uninitialize = function() {
        this._geometry.uninitialize(), this._program.uninitialize(), this._uViewProjection = void 0, this._uNdcOffset = void 0, this._uColor = void 0, this._uAAStepScale = void 0, this._uAASampling = void 0, this._uTransform = void 0, this._uDynamic = void 0;
      }, t4.prototype.update = function(e5) {
        e5 === void 0 && (e5 = false);
        var t5 = this._context.gl;
        this._program.bind(), (e5 || this._altered.camera || this._camera.altered) && t5.uniformMatrix4fv(this._uViewProjection, false, this._camera.viewProjection), (e5 || this._altered.aaStepScale) && t5.uniform1f(this._uAAStepScale, this._aaStepScale), (e5 || this._altered.aaSampling) && t5.uniform1i(this._uAASampling, this._aaSampling);
        for (var r4 = e5 || this._altered.labels || this._altered.camera || this._camera.altered, i3 = 0; r4 === false && i3 < this._labels.length; )
          r4 = this._labels[i3].altered, ++i3;
        r4 && this.prepare(), this._altered.reset();
      }, t4.prototype.frame = function() {
        if (this._geometry.numGlyphs !== 0 && this._labels.length !== 0) {
          s.assert(this._target && this._target.valid, "valid target expected");
          var e5 = this._context.gl, t5 = this._target.size;
          e5.viewport(0, 0, t5[0], t5[1]), e5.enable(e5.DEPTH_TEST), e5.depthFunc(this._depthFunc), this._depthMask === false && e5.depthMask(this._depthMask), e5.enable(e5.BLEND), e5.blendFuncSeparate(e5.SRC_ALPHA, e5.ONE_MINUS_SRC_ALPHA, e5.ONE, e5.ONE_MINUS_SRC_ALPHA), this._program.bind(), e5.uniform2fv(this._uNdcOffset, this._ndcOffset), e5.uniformMatrix4fv(this._uViewProjection, false, this._camera.viewProjection), this._target.bind(), this._geometry.bind();
          for (var r4, i3, n3 = [0, 0], o2 = a.mat4.create(), u3 = 0; u3 < this._labels.length; ++u3) {
            var c3 = this._labels[u3];
            if (n3[1] = this._ranges[u3][1], !(n3[0] === n3[1] || u3 < this._labels.length - 1 && !c3.valid)) {
              var l3 = u3 < this._labels.length - 1 ? this._labels[u3 + 1] : void 0, f3 = l3 && c3.type === p2.Label.Type.Static && l3.type === p2.Label.Type.Static, d3 = l3 && c3.color.equals(l3.color), _3 = l3 && c3.fontFace === l3.fontFace, g3 = l3 && c3.fontSizeUnit === l3.fontSizeUnit;
              if (!l3 || !(this._ranges[u3 + 1][0] === this._ranges[u3 + 1][1] || f3 && d3 && _3 && g3)) {
                var m3 = c3.type === p2.Label.Type.Dynamic;
                switch (e5.uniform1i(this._uDynamic, m3), m3 && e5.uniformMatrix4fv(this._uTransform, false, c3.dynamicTransform), r4 !== void 0 && r4.equals(c3.color) || (e5.uniform4fv(this._uColor, c3.color.rgbaF32), r4 = c3.color), i3 !== c3.fontFace && (c3.fontFace.glyphTexture.bind(e5.TEXTURE0), i3 = c3.fontFace), c3.fontSizeUnit) {
                  case p2.Label.Unit.Pixel:
                    e5.uniformMatrix4fv(this._uViewProjection, false, o2);
                    break;
                  case p2.Label.Unit.World:
                  case p2.Label.Unit.Mixed:
                  default:
                    e5.uniformMatrix4fv(this._uViewProjection, false, this._camera.viewProjection);
                }
                this._geometry.draw(n3[0], n3[1] - n3[0]), n3[0] = n3[1];
              }
            }
          }
          e5.bindTexture(e5.TEXTURE_2D, h2.Texture2D.DEFAULT_TEXTURE), this._depthMask === false && e5.depthMask(true), e5.depthFunc(e5.LESS), e5.disable(e5.DEPTH_TEST), e5.disable(e5.BLEND);
        }
      }, t4.prototype.unbind = function() {
        this._geometry.valid && this._geometry.unbind(), this._program.valid && this._program.unbind();
      }, Object.defineProperty(t4.prototype, "target", { set: function(e5) {
        this.assertInitialized(), this._target = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "ndcOffset", { set: function(e5) {
        this.assertInitialized(), this._ndcOffset = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "camera", { set: function(e5) {
        this.assertInitialized(), this._camera !== e5 && (this._camera = e5, this._altered.alter("camera"));
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "depthMask", { get: function() {
        return this._depthMask;
      }, set: function(e5) {
        this._depthMask = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "depthFunc", { get: function() {
        return this._depthFunc;
      }, set: function(e5) {
        this._depthFunc = e5;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "labels", { get: function() {
        return this._labels;
      }, set: function(e5) {
        this._labels = e5, this._ranges.length = this._labels.length, this._verticesPerLabel.length = this._labels.length, this._verticesPerLabel.fill(void 0), this._altered.alter("labels");
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "aaStepScale", { get: function() {
        return this._aaStepScale;
      }, set: function(e5) {
        this._aaStepScale !== e5 && (this._aaStepScale = e5, this._altered.alter("aaStepScale"));
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "aaSampling", { get: function() {
        return this._aaSampling;
      }, set: function(e5) {
        this._aaSampling !== e5 && (this._aaSampling = e5, this._altered.alter("aaSampling"));
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "geometry", { get: function() {
        return this._geometry;
      }, enumerable: true, configurable: true }), Object.defineProperty(t4.prototype, "program", { get: function() {
        return this._program;
      }, enumerable: true, configurable: true }), t4.DEFAULT_AA_STEP_SCALE = 0.6666, o([c2.Initializable.initialize()], t4.prototype, "initialize", null), o([c2.Initializable.uninitialize()], t4.prototype, "uninitialize", null), o([c2.Initializable.assert_initialized()], t4.prototype, "update", null), o([c2.Initializable.assert_initialized()], t4.prototype, "frame", null), o([c2.Initializable.assert_initialized()], t4.prototype, "unbind", null), t4;
    }(c2.Initializable);
    t3.LabelRenderPass = b2, function(e4) {
      !function(e5) {
        e5[e5.None = 0] = "None", e5[e5.Smooth1 = 1] = "Smooth1", e5[e5.Horizontal3 = 2] = "Horizontal3", e5[e5.Vertical3 = 3] = "Vertical3", e5[e5.Grid3x3 = 4] = "Grid3x3", e5[e5.Grid4x4 = 5] = "Grid4x4";
      }(e4.Sampling || (e4.Sampling = {}));
    }(b2 = t3.LabelRenderPass || (t3.LabelRenderPass = {})), t3.LabelRenderPass = b2;
  }, function(e3, t3) {
    e3.exports = "precision mediump float;\r\nprecision lowp int;\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define texture(sampler, coord) texture2D(sampler, coord)\r\n#else\r\n    #define varying out\r\n#endif\r\n\r\n\r\n\r\n#if __VERSION__ == 100\r\n\r\n#extension GL_EXT_draw_buffers : enable\r\nattribute vec2 a_vertex;\r\n/* [ texture ll: vec2, ur: vec2 ] */\r\nattribute vec4 a_texCoord;\r\nattribute vec3 a_origin;\r\nattribute vec3 a_tangent;\r\nattribute vec3 a_up;\r\n\r\n#else\r\n\r\nin vec2 a_vertex;\r\n/* [ texture ll: vec2, ur: vec2 ]*/\r\nin vec4 a_texCoord;\r\nin vec3 a_origin;\r\nin vec3 a_tangent;\r\nin vec3 a_up;\r\n\r\n#endif\r\n\r\n\r\nuniform mat4 u_viewProjection;\r\nuniform vec2 u_ndcOffset;\r\nuniform mat4 u_transform;\r\nuniform bool u_dynamic;\r\n\r\nvarying vec2 v_uv;\r\n\r\n\r\nvoid ndcOffset(inout vec4 vertex, in vec2 offset) {\r\n    vertex.xy = offset * vec2(vertex.w) + vertex.xy;\r\n}\r\n\r\n\r\n\r\nvoid main(void)\r\n{\r\n    /* TEXTURE COORDS */\r\n\r\n    /* flip y-coordinates */\r\n    vec2 texExt = vec2(a_texCoord[2] - a_texCoord[0], a_texCoord[1] - a_texCoord[3]);\r\n\r\n    v_uv = a_vertex * texExt + vec2(a_texCoord[0], 1.0 - a_texCoord[1]);\r\n\r\n    /* POSITIONING */\r\n    /* quad data as flat array: [0, 0,  0, 1,  1, 0,  1, 1] (a_vertex), which translates to ll, lr, ul, ur corners.\r\n     * 2-------4\r\n     * |  \\    |\r\n     * |    \\  |\r\n     * 1-------3\r\n     * The current vertex is calculated based on the current quad corners and the tangent attributes.\r\n     * The following lines are optimized for MAD optimization.\r\n     */\r\n    vec3 tangentDirection = a_origin + a_vertex.x * a_tangent;\r\n    vec4 vertex = vec4(tangentDirection + a_vertex.y * a_up, 1.0);\r\n\r\n    if(u_dynamic) {\r\n        vertex = u_transform * vertex;\r\n    }\r\n    vertex = u_viewProjection * vertex;\r\n\r\n    ndcOffset(vertex, u_ndcOffset);\r\n    gl_Position = vertex;\r\n}\r\n";
  }, function(e3, t3) {
    e3.exports = "precision mediump float;\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define texture(sampler, coord) texture2D(sampler, coord)\r\n#else \r\n    #define varying in\r\n#endif\r\n\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define fragColor gl_FragColor\r\n\r\n    #ifdef GL_OES_standard_derivatives\r\n        #extension GL_OES_standard_derivatives : enable\r\n        #define AASTEP\r\n    #endif\r\n\r\n#else\r\n    layout(location = 0) out vec4 fragColor;\r\n\r\n    #define AASTEP\r\n\r\n#endif\r\n\r\n\r\nuniform sampler2D u_glyphs;\r\nuniform vec4 u_color;\r\nuniform float u_aaStepScale;\r\nuniform int u_aaSampling;\r\n\r\nvarying vec2 v_uv;\r\n\r\nconst int channel = 0;\r\n\r\n\r\nfloat aastep(float t, float value)\r\n{\r\n#ifdef AASTEP\r\n    /* float afwidth = length(vec2(dFdx(value), dFdy(value))) * u_aaStepScale; */\r\n    float afwidth = fwidth(value) * u_aaStepScale;\r\n    /* The aa step scale is more of a hack to provide seemingly smoother (e.g., >= 1.0) or crisper (e.g., between 0.0\r\n     * and 1.0) contours without specific sampling. It's just scaling the outcome of the derivatives.\r\n     */\r\n\r\n    return smoothstep(t - afwidth, t + afwidth, value);\r\n#else\r\n    return step(t, value);\r\n#endif\r\n}\r\n\r\nfloat texStep(float t, vec2 uv)\r\n{\r\n    /*\r\n     * This is a workaround for a known bug in Chrome software rendering (SwiftShader), for updates follow\r\n     * https://issuetracker.google.com/u/1/issues/146041290\r\n     * Workaround: Storing the result of the texture access into another variable that then is passed as parameter.\r\n     */\r\n    float distanceValue = texture(u_glyphs, uv)[channel];\r\n    return step(t, distanceValue);\r\n}\r\n\r\nfloat texSmooth(float t, vec2 uv)\r\n{\r\n    /*\r\n     * This is a workaround for a known bug in Chrome software rendering (SwiftShader), for updates follow\r\n     * https://issuetracker.google.com/u/1/issues/146041290\r\n     * Workaround: Storing the result of the texture access into another variable that then is passed as parameter.\r\n     */\r\n    float distanceValue = texture(u_glyphs, uv)[channel];\r\n    return aastep(t, distanceValue);\r\n}\r\n\r\n#ifdef AASTEP\r\n\r\nfloat aastep3h(float t, vec2 uv)\r\n{\r\n    float x = dFdy(uv.x) * 1.0 / 3.0;\r\n\r\n    float v = texSmooth(t, uv + vec2( -x, 0.0))\r\n            + texSmooth(t, uv + vec2(0.0, 0.0))\r\n            + texSmooth(t, uv + vec2( +x, 0.0));\r\n\r\n    return v / 3.0;\r\n}\r\n\r\nfloat aastep3v(float t, vec2 uv)\r\n{\r\n    float y = dFdy(uv.y) * 1.0 / 3.0;\r\n\r\n    float v = texSmooth(t, uv + vec2( 0.0,  -y))\r\n            + texSmooth(t, uv + vec2( 0.0, 0.0))\r\n            + texSmooth(t, uv + vec2( 0.0,  +y));\r\n\r\n    return v / 3.0;\r\n}\r\n\r\nfloat aastep3x3(float t, vec2 uv)\r\n{\r\n    float x = dFdx(uv.x) * 1.0 / 3.0;\r\n    float y = dFdy(uv.y) * 1.0 / 3.0;\r\n\r\n    float v = texSmooth(t, uv + vec2(  -x, -y)) + texSmooth(t, uv + vec2(  -x, 0.0)) + texSmooth(t, uv + vec2(  -x, +y))\r\n            + texSmooth(t, uv + vec2( 0.0, -y)) + texSmooth(t, uv + vec2( 0.0, 0.0)) + texSmooth(t, uv + vec2( 0.0, +y))\r\n            + texSmooth(t, uv + vec2(  +x, -y)) + texSmooth(t, uv + vec2(  +x, 0.0)) + texSmooth(t, uv + vec2(  +x, +y));\r\n\r\n    return v / 9.0;\r\n}\r\n\r\nfloat aastep4x4(float t, vec2 uv)\r\n{\r\n    float x0 = dFdx(uv.x);\r\n    float y0 = dFdx(uv.y);\r\n    float x1 = x0 * 1.0 / 8.0;\r\n    float y1 = y0 * 1.0 / 8.0;\r\n    float x2 = x0 * 3.0 / 8.0;\r\n    float y2 = y0 * 3.0 / 8.0;\r\n\r\n    float v = texSmooth(t, uv + vec2(-x2,-y2)) + texSmooth(t, uv + vec2(-x2,-y1))\r\n            + texSmooth(t, uv + vec2(-x2,+y1)) + texSmooth(t, uv + vec2(-x2,+y2))\r\n\r\n            + texSmooth(t, uv + vec2(-x1,-y2)) + texSmooth(t, uv + vec2(-x1,-y1))\r\n            + texSmooth(t, uv + vec2(-x1,+y1)) + texSmooth(t, uv + vec2(-x1,+y2))\r\n\r\n            + texSmooth(t, uv + vec2(+x1,-y2)) + texSmooth(t, uv + vec2(+x1,-y1))\r\n            + texSmooth(t, uv + vec2(+x1,+y1)) + texSmooth(t, uv + vec2(+x1,+y2))\r\n\r\n            + texSmooth(t, uv + vec2(+x2,-y2)) + texSmooth(t, uv + vec2(+x2,-y1))\r\n            + texSmooth(t, uv + vec2(+x2,+y1)) + texSmooth(t, uv + vec2(+x2,+y2));\r\n\r\n    return v / 16.0;\r\n}\r\n\r\n// vec4 subpix(float r, float g, float b, vec4 fore, vec4 back)\r\n// {\r\n//     return vec4(mix(back.rgb, fore.rgb, vec3(r, g, b)), mix(back.a, fore.a, (r + b + g) / 3.0));\r\n// }\r\n\r\n#endif\r\n\r\nvoid main(void)\r\n{\r\n    /** @todo mipmap access? */\r\n\r\n    float a = 0.0;\r\n    /* When using multiframe sampling, might not be necessary and even tends to add more blur */\r\n#ifdef AASTEP\r\n    if(u_aaSampling == 0) {         // LabelRenderPass.Sampling.None\r\n#endif\r\n\r\n        a = texStep(0.5, v_uv);\r\n\r\n#ifdef AASTEP\r\n    } else if(u_aaSampling == 1) {  // LabelRenderPass.Sampling.Smooth\r\n        a = texSmooth(0.5, v_uv);\r\n    } else if(u_aaSampling == 2) {  // LabelRenderPass.Sampling.Horizontal3\r\n        a = aastep3h(0.5, v_uv);\r\n    } else if(u_aaSampling == 3) {  // LabelRenderPass.Sampling.Vertical3\r\n        a = aastep3v(0.5, v_uv);\r\n    } else if(u_aaSampling == 4) {  // LabelRenderPass.Sampling.Grid3x3\r\n        a = aastep3x3(0.5, v_uv);\r\n    } else if(u_aaSampling == 5) {  // LabelRenderPass.Sampling.Grid4x4\r\n        a = aastep4x4(0.5, v_uv);\r\n    }\r\n#endif\r\n\r\n    /**\r\n     * @todo - design decision: Don't discard fragments?, as we might need them for an id-buffer for\r\n     * clicking-interaction. Furthermore, using if-statement and discard can slow down performance:\r\n     * it's bad for IMR, TBR, TBDR and early-Z optimization\r\n     * https://stackoverflow.com/questions/8509051/is-discard-bad-for-program-performance-in-opengl\r\n     */\r\n    if(a <= 0.0) {\r\n        discard;\r\n    }\r\n    fragColor = vec4(u_color.rgb, u_color.a * a);\r\n\r\n    /* use when pre-multiplied color is required. */\r\n    /* fragColor = vec4(u_color.rgb * u_color.a * a, u_color.a * a); */\r\n}\r\n";
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(134);
    t3.GLTFLoader = i2.GLTFLoader;
    var n2 = r3(76);
    t3.GLTFAlphaMode = n2.GLTFAlphaMode, t3.GLTFPbrMaterial = n2.GLTFPbrMaterial, t3.GLTFShaderFlags = n2.GLTFShaderFlags;
    var o = r3(77);
    t3.GLTFPrimitive = o.GLTFPrimitive;
    var a = r3(75);
    t3.GLTFMesh = a.GLTFMesh;
  }, function(e3, t3, r3) {
    var i2 = this && this.__awaiter || function(e4, t4, r4, i3) {
      return new (r4 || (r4 = Promise))(function(n3, o2) {
        function a2(e5) {
          try {
            u3(i3.next(e5));
          } catch (e6) {
            o2(e6);
          }
        }
        function s2(e5) {
          try {
            u3(i3.throw(e5));
          } catch (e6) {
            o2(e6);
          }
        }
        function u3(e5) {
          var t5;
          e5.done ? n3(e5.value) : (t5 = e5.value, t5 instanceof r4 ? t5 : new r4(function(e6) {
            e6(t5);
          })).then(a2, s2);
        }
        u3((i3 = i3.apply(e4, t4 || [])).next());
      });
    }, n2 = this && this.__generator || function(e4, t4) {
      var r4, i3, n3, o2, a2 = { label: 0, sent: function() {
        if (1 & n3[0])
          throw n3[1];
        return n3[1];
      }, trys: [], ops: [] };
      return o2 = { next: s2(0), throw: s2(1), return: s2(2) }, typeof Symbol == "function" && (o2[Symbol.iterator] = function() {
        return this;
      }), o2;
      function s2(o3) {
        return function(s3) {
          return function(o4) {
            if (r4)
              throw new TypeError("Generator is already executing.");
            for (; a2; )
              try {
                if (r4 = 1, i3 && (n3 = 2 & o4[0] ? i3.return : o4[0] ? i3.throw || ((n3 = i3.return) && n3.call(i3), 0) : i3.next) && !(n3 = n3.call(i3, o4[1])).done)
                  return n3;
                switch (i3 = 0, n3 && (o4 = [2 & o4[0], n3.value]), o4[0]) {
                  case 0:
                  case 1:
                    n3 = o4;
                    break;
                  case 4:
                    return a2.label++, { value: o4[1], done: false };
                  case 5:
                    a2.label++, i3 = o4[1], o4 = [0];
                    continue;
                  case 7:
                    o4 = a2.ops.pop(), a2.trys.pop();
                    continue;
                  default:
                    if (!((n3 = (n3 = a2.trys).length > 0 && n3[n3.length - 1]) || o4[0] !== 6 && o4[0] !== 2)) {
                      a2 = 0;
                      continue;
                    }
                    if (o4[0] === 3 && (!n3 || o4[1] > n3[0] && o4[1] < n3[3])) {
                      a2.label = o4[1];
                      break;
                    }
                    if (o4[0] === 6 && a2.label < n3[1]) {
                      a2.label = n3[1], n3 = o4;
                      break;
                    }
                    if (n3 && a2.label < n3[2]) {
                      a2.label = n3[2], a2.ops.push(o4);
                      break;
                    }
                    n3[2] && a2.ops.pop(), a2.trys.pop();
                    continue;
                }
                o4 = t4.call(e4, a2);
              } catch (e5) {
                o4 = [6, e5], i3 = 0;
              } finally {
                r4 = n3 = 0;
              }
            if (5 & o4[0])
              throw o4[1];
            return { value: o4[0] ? o4[1] : void 0, done: true };
          }([o3, s3]);
        };
      }
    };
    Object.defineProperty(t3, "__esModule", { value: true });
    var o = r3(1), a = r3(0), s = r3(135), u2 = r3(136), c2 = r3(75), l2 = r3(76), f2 = r3(77), h2 = r3(5), d2 = r3(65), p2 = r3(6), _2 = r3(25), g2 = r3(68), m2 = r3(7), v2 = r3(4), b2 = function() {
      function e4(e5) {
        this._context = e5;
        var t4 = this._context.gl;
        this._resourceManager = new d2.ResourceManager(this._context), this._scenes = new Array();
        var i3 = new m2.Shader(this._context, t4.VERTEX_SHADER, "gltf_default.vert");
        i3.initialize(r3(137));
        var n3 = new m2.Shader(this._context, t4.FRAGMENT_SHADER, "gltf_default.frag");
        n3.initialize(r3(138)), this._pbrProgram = new p2.Program(this._context, "GLTFPbrProgram"), this._pbrProgram.initialize([i3, n3]);
      }
      return e4.prototype.loadTextures = function(e5) {
        return i2(this, void 0, void 0, function() {
          var t4, r4, i3, o2, s2, u3, c3, l3, f3, h3, d3, p3, _3, g3, m3, b3, y2;
          return n2(this, function(n3) {
            switch (n3.label) {
              case 0:
                if (t4 = this._context.gl, r4 = e5.gltf.textures, i3 = e5.gltf.images, o2 = e5.gltf.samplers, !r4 || !i3)
                  return [2];
                s2 = 0, u3 = 0, c3 = r4, n3.label = 1;
              case 1:
                return u3 < c3.length ? (l3 = c3[u3]).source === void 0 ? (a.log(a.LogLevel.Warning, "The GLTF model does not specify a texture source. Possibly it uses an unsupported extension."), s2++, [3, 3]) : (f3 = l3.source, h3 = i3[f3], d3 = this._sceneName + "_texture_" + s2, p3 = h3.name === void 0 ? h3.uri : h3.name, [4, e5.imageData.get(f3)]) : [3, 4];
              case 2:
                _3 = n3.sent(), a.isPowerOfTwo(_3.width) && a.isPowerOfTwo(_3.height) || ((g3 = document.createElement("canvas")).width = a.upperPowerOfTwo(_3.width), g3.height = a.upperPowerOfTwo(_3.height), (m3 = g3.getContext("2d")) === void 0 && a.log(a.LogLevel.Error, "Failed to create context while trying to resize non power of two texture"), m3.drawImage(_3, 0, 0, g3.width, g3.height), _3 = g3), (b3 = new v2.Texture2D(this._context, p3)).initialize(_3.width, _3.height, t4.RGBA8, t4.RGBA, t4.UNSIGNED_BYTE), b3.data(_3), o2 === void 0 || l3.sampler === void 0 ? (b3.wrap(t4.REPEAT, t4.REPEAT), b3.filter(t4.LINEAR, t4.LINEAR)) : (y2 = o2[l3.sampler], b3.wrap(y2.wrapS || t4.REPEAT, y2.wrapT || t4.REPEAT), b3.filter(y2.magFilter || t4.LINEAR, y2.minFilter || t4.LINEAR), y2.minFilter !== t4.NEAREST_MIPMAP_NEAREST && y2.minFilter !== t4.LINEAR_MIPMAP_NEAREST && y2.minFilter !== t4.NEAREST_MIPMAP_LINEAR && y2.minFilter !== t4.LINEAR_MIPMAP_LINEAR || b3.generateMipMap()), this._resourceManager.add(b3, [p3, d3]), s2++, n3.label = 3;
              case 3:
                return u3++, [3, 1];
              case 4:
                return [2];
            }
          });
        });
      }, e4.prototype.getTexture = function(e5) {
        var t4 = this._sceneName + "_texture_" + e5, r4 = this._resourceManager.get(t4);
        if (r4 !== void 0)
          return r4;
        a.log(a.LogLevel.Warning, "Texture with index " + e5 + " could not be located.");
      }, e4.prototype.loadMaterials = function(e5) {
        return i2(this, void 0, void 0, function() {
          var t4, r4, i3, s2, u3, c3, f3, h3, d3, p3, _3, g3, m3;
          return n2(this, function(n3) {
            if (this._pbrDefaultMaterial = new l2.GLTFPbrMaterial(this._context, "DefaultMaterial"), this._resourceManager.add(this._pbrDefaultMaterial, [this._pbrDefaultMaterial.name]), !(t4 = e5.gltf.materials))
              return [2];
            for (r4 = 0, i3 = 0, s2 = t4; i3 < s2.length; i3++)
              u3 = s2[i3], c3 = this._sceneName + "_material_" + r4, f3 = new l2.GLTFPbrMaterial(this._context, u3.name), (h3 = u3.normalTexture) !== void 0 && (f3.normalTexture = this.getTexture(h3.index), f3.normalTexCoord = h3.texCoord || 0, f3.normalScale = h3.scale || 1), (d3 = u3.occlusionTexture) !== void 0 && (f3.occlusionTexture = this.getTexture(d3.index), f3.occlusionTexCoord = d3.texCoord || 0), (p3 = u3.emissiveTexture) !== void 0 && (f3.emissiveTexture = this.getTexture(p3.index), f3.emissiveTexCoord = p3.texCoord || 0), f3.emissiveFactor = o.vec3.fromValues(0, 0, 0), u3.emissiveFactor !== void 0 && (f3.emissiveFactor = o.vec3.fromValues.apply(void 0, u3.emissiveFactor)), f3.alphaMode = l2.GLTFAlphaMode.OPAQUE, u3.alphaMode === "MASK" ? (f3.alphaMode = l2.GLTFAlphaMode.MASK, u3.alphaCutoff === void 0 ? f3.alphaCutoff = 0.5 : f3.alphaCutoff = u3.alphaCutoff) : u3.alphaMode === "BLEND" && (f3.alphaMode = l2.GLTFAlphaMode.BLEND, f3.isTransparent = true), f3.isDoubleSided = u3.doubleSided || false, (_3 = u3.pbrMetallicRoughness) === void 0 && a.log(a.LogLevel.Warning, "Model contains a material without PBR information"), (g3 = _3.baseColorTexture) !== void 0 && (f3.baseColorTexture = this.getTexture(g3.index), f3.baseColorTexCoord = g3.texCoord || 0), (m3 = _3.metallicRoughnessTexture) !== void 0 && (f3.metallicRoughnessTexture = this.getTexture(m3.index), f3.metallicRoughnessTexCoord = m3.texCoord || 0), f3.baseColorFactor = o.vec4.fromValues(1, 1, 1, 1), _3.baseColorFactor !== void 0 && (f3.baseColorFactor = o.vec4.fromValues.apply(void 0, _3.baseColorFactor)), f3.metallicFactor = 1, _3.metallicFactor !== void 0 && (f3.metallicFactor = _3.metallicFactor), f3.roughnessFactor = 1, _3.roughnessFactor !== void 0 && (f3.roughnessFactor = _3.roughnessFactor), this._resourceManager.add(f3, [u3.name, c3]), r4++;
            return [2];
          });
        });
      }, e4.prototype.inferBufferUsage = function(e5, t4) {
        var r4 = this._context.gl, i3 = e5.gltf.meshes, n3 = e5.gltf.accessors;
        if (i3 === void 0 || n3 === void 0)
          return a.log(a.LogLevel.Error, "Asset does not include any meshes or accessors"), r4.ARRAY_BUFFER;
        for (var o2 = 0, s2 = i3; o2 < s2.length; o2++)
          for (var u3 = 0, c3 = s2[o2].primitives; u3 < c3.length; u3++) {
            var l3 = c3[u3].indices;
            if (l3 !== void 0) {
              var f3 = n3[l3].bufferView;
              if (f3 !== void 0 && f3 === t4)
                return r4.ELEMENT_ARRAY_BUFFER;
            }
          }
        return r4.ARRAY_BUFFER;
      }, e4.prototype.loadBuffers = function(e5) {
        return i2(this, void 0, void 0, function() {
          var t4, r4, i3, o2, s2, u3, c3, l3, f3, d3, p3, _3, g3, m3, v3, b3, y2;
          return n2(this, function(n3) {
            switch (n3.label) {
              case 0:
                if (t4 = this._context.gl, r4 = e5.gltf.bufferViews, i3 = e5.gltf.accessors, !r4)
                  return a.log(a.LogLevel.Warning, "The asset does not include any buffer view information."), [2];
                if (!i3)
                  return a.log(a.LogLevel.Warning, "The asset does not include any accessor information."), [2];
                o2 = 0, s2 = 0, u3 = r4, n3.label = 1;
              case 1:
                return s2 < u3.length ? (c3 = u3[s2], v3 = this._sceneName + "_bufferView_" + o2, [4, e5.bufferViewData(o2)]) : [3, 4];
              case 2:
                y2 = n3.sent(), (l3 = c3.target) === void 0 && (l3 = this.inferBufferUsage(e5, o2)), (b3 = new h2.Buffer(this._context, v3)).initialize(l3), b3.data(y2, t4.STATIC_DRAW), this._resourceManager.add(b3, [v3]), o2++, n3.label = 3;
              case 3:
                return s2++, [3, 1];
              case 4:
                f3 = 0, d3 = 0, p3 = i3, n3.label = 5;
              case 5:
                return d3 < p3.length ? (_3 = p3[d3], g3 = _3.bufferView, m3 = _3.sparse, g3 !== void 0 && m3 === void 0 ? [3, 7] : (v3 = this._sceneName + "_accessor_" + f3, b3 = new h2.Buffer(this._context, v3), [4, e5.accessorData(f3)])) : [3, 9];
              case 6:
                y2 = n3.sent(), b3.initialize(t4.ARRAY_BUFFER), b3.data(y2, t4.STATIC_DRAW), this._resourceManager.add(b3, [v3]), n3.label = 7;
              case 7:
                f3++, n3.label = 8;
              case 8:
                return d3++, [3, 5];
              case 9:
                return [2];
            }
          });
        });
      }, e4.prototype.loadMeshes = function(e5) {
        return i2(this, void 0, void 0, function() {
          var t4, r4, i3, o2, s2, u3, l3, f3, h3, d3, p3;
          return n2(this, function(n3) {
            switch (n3.label) {
              case 0:
                if (t4 = new Array(), (r4 = e5.gltf.meshes) === void 0)
                  return a.log(a.LogLevel.Warning, "The asset does not contain any mesh information"), [2, t4];
                i3 = 0, o2 = 0, s2 = r4, n3.label = 1;
              case 1:
                if (!(o2 < s2.length))
                  return [3, 7];
                u3 = s2[o2], l3 = new c2.GLTFMesh(), f3 = 0, h3 = u3.primitives, n3.label = 2;
              case 2:
                return f3 < h3.length ? (d3 = h3[f3], [4, this.loadPrimitive(e5, d3, i3)]) : [3, 5];
              case 3:
                (p3 = n3.sent()) !== void 0 && l3.addPrimitive(p3), i3++, n3.label = 4;
              case 4:
                return f3++, [3, 2];
              case 5:
                t4.push(l3), n3.label = 6;
              case 6:
                return o2++, [3, 1];
              case 7:
                return [2, t4];
            }
          });
        });
      }, e4.prototype.loadPrimitive = function(e5, t4, r4) {
        return i2(this, void 0, void 0, function() {
          var i3, o2, c3, h3, d3, p3, _3, g3, m3, v3, b3, y2, E2, x2, T2, A2, O2, P2, L2, w2, S2, R2, I2, M2, C2;
          return n2(this, function(n3) {
            if (i3 = this._context.gl, o2 = e5.gltf.accessors, c3 = e5.gltf.bufferViews, o2 === void 0)
              return a.log(a.LogLevel.Error, "GLTF asset does not have any accessors."), [2];
            if (c3 === void 0)
              return a.log(a.LogLevel.Error, "GLTF asset does not have any buffer views."), [2];
            for (y2 in h3 = t4.mode, d3 = this._sceneName + "_primitive_" + r4, h3 || (h3 = 4), p3 = u2.GLTFHelper.modeToEnum(i3, h3), _3 = new Array(), g3 = this._pbrDefaultMaterial, t4.material !== void 0 && (m3 = this._sceneName + "_material_" + t4.material, (v3 = this._resourceManager.get(m3)) !== void 0 ? g3 = v3 : a.log(a.LogLevel.Warning, "Material " + m3 + " could not be found.")), b3 = 0, t4.attributes)
              E2 = u2.GLTFHelper.nameToAttributeIndex(y2), y2 === "NORMAL" && (b3 |= l2.GLTFShaderFlags.HAS_NORMALS), y2 === "TANGENT" && (b3 |= l2.GLTFShaderFlags.HAS_TANGENTS), y2 === "COLOR_0" && (b3 |= l2.GLTFShaderFlags.HAS_COLORS), y2 !== "TEXCOORD_0" && y2 !== "TEXCOORD_1" && y2 !== "TEXCOORD_2" || (b3 |= l2.GLTFShaderFlags.HAS_UV), x2 = t4.attributes[y2], S2 = o2[x2], R2 = S2.bufferView, T2 = S2.sparse, M2 = void 0, A2 = 0, R2 === void 0 || T2 !== void 0 ? (O2 = this._sceneName + "_accessor_" + x2, M2 = this._resourceManager.get(O2)) : (P2 = c3[R2], I2 = this._sceneName + "_bufferView_" + R2, M2 = this._resourceManager.get(I2), A2 = P2.byteStride || 0), (L2 = new f2.VertexBinding()).buffer = M2, L2.attributeIndex = E2, L2.numVertices = S2.count, L2.normalized = S2.normalized || false, L2.size = s.GLTF_ELEMENTS_PER_TYPE[S2.type], L2.offset = S2.byteOffset || 0, L2.stride = A2, L2.type = S2.componentType, _3.push(L2);
            return t4.indices !== void 0 && (S2 = o2[t4.indices], !(R2 = S2.bufferView) === void 0 && a.log(a.LogLevel.Error, "Accessor does not reference a BufferView."), I2 = this._sceneName + "_bufferView_" + R2, M2 = this._resourceManager.get(I2), (w2 = new f2.IndexBinding()).buffer = M2, w2.numIndices = S2.count, w2.offset = S2.byteOffset || 0, w2.type = S2.componentType), (C2 = new f2.GLTFPrimitive(this._context, _3, w2, p3, g3, b3)).initialize(), this._resourceManager.add(C2, [d3]), [2, C2];
          });
        });
      }, e4.prototype.generateScenes = function(e5, t4) {
        return i2(this, void 0, void 0, function() {
          var r4, i3, s2, u3, c3, l3, f3, h3, d3, p3, m3, v3, b3, y2, E2, x2, T2, A2, O2, P2, L2, w2, S2, R2, I2, M2, C2, N2, D2, B2, F2, z2, j, U2;
          return n2(this, function(n3) {
            if (r4 = e5.gltf.nodes, i3 = e5.gltf.scenes, !r4 || !i3)
              return a.log(a.LogLevel.Warning, "The asset does not contain any nodes or scene information."), [2];
            for (s2 = /* @__PURE__ */ new Map(), u3 = 0, c3 = 0, l3 = r4; c3 < l3.length; c3++) {
              if (j = l3[c3], f3 = j.name || "node_" + u3, D2 = new g2.SceneNode(f3), s2.set(u3, D2), j.matrix ? (m3 = o.mat4.fromValues.apply(void 0, j.matrix), v3 = new _2.TransformComponent(m3), D2.addComponent(v3)) : (j.translation || j.rotation || j.scale) && (h3 = o.quat.create(), j.rotation && (h3 = o.quat.fromValues.apply(void 0, j.rotation)), d3 = o.vec3.create(), j.translation && (d3 = o.vec3.fromValues.apply(void 0, j.translation)), p3 = o.vec3.fromValues(1, 1, 1), j.scale && (p3 = o.vec3.fromValues.apply(void 0, j.scale)), m3 = o.mat4.fromRotationTranslationScale(o.mat4.create(), h3, d3, p3), v3 = new _2.TransformComponent(m3), D2.addComponent(v3)), j.mesh !== void 0)
                for (b3 = t4[j.mesh], y2 = 0, E2 = b3.primitives; y2 < E2.length; y2++)
                  x2 = E2[y2], (T2 = new _2.GeometryComponent()).material = x2.material, T2.geometry = x2, D2.addComponent(T2);
              (j.skin || j.weights) && a.log(a.LogLevel.Info, "Imported GLTF assets uses skins, which are not supported yet."), u3++;
            }
            for (u3 = 0, A2 = 0, O2 = r4; A2 < O2.length; A2++) {
              if (j = O2[A2], D2 = s2.get(u3), a.assert(D2 !== void 0, "Scene node could not be found."), j.children)
                for (P2 = 0, L2 = j.children; P2 < L2.length; P2++)
                  w2 = L2[P2], (S2 = s2.get(w2)) || a.log(a.LogLevel.Error, "Model references a node that does not exist."), D2.addNode(S2);
              u3++;
            }
            for (R2 = 0, I2 = 0, M2 = i3; I2 < M2.length; I2++) {
              if (C2 = M2[I2], N2 = C2.name || "scene_" + R2, D2 = new g2.SceneNode(N2), C2.nodes)
                for (B2 = 0, F2 = C2.nodes; B2 < F2.length; B2++)
                  z2 = F2[B2], (j = s2.get(z2)) || a.log(a.LogLevel.Error, "Scene references a node that does not exist."), D2.addNode(j);
              else
                a.log(a.LogLevel.Warning, "Scene " + N2 + " does not contain any nodes.");
              this._scenes.push(D2), R2++;
            }
            return (U2 = e5.gltf.scene) !== void 0 && (this._defaultScene = this._scenes[U2]), [2];
          });
        });
      }, e4.prototype.loadAsset = function(e5) {
        return i2(this, void 0, void 0, function() {
          var t4, r4, i3 = this;
          return n2(this, function(n3) {
            switch (n3.label) {
              case 0:
                return [4, new s.GltfLoader().load(e5)];
              case 1:
                return t4 = n3.sent(), r4 = t4.gltf, this._sceneName = "scene", r4.scenes && r4.scene && r4.scenes[r4.scene].name && (this._sceneName = r4.scenes[r4.scene].name), [4, this.loadTextures(t4).then(function() {
                  return i3.loadMaterials(t4);
                }).then(function() {
                  return i3.loadBuffers(t4);
                }).then(function() {
                  return i3.loadMeshes(t4);
                }).then(function(e6) {
                  return i3.generateScenes(t4, e6);
                })];
              case 2:
                return n3.sent(), [2];
            }
          });
        });
      }, e4.prototype.uninitialize = function() {
        this._scenes = [], this._defaultScene = void 0, this._resourceManager.uninitialize();
      }, Object.defineProperty(e4.prototype, "pbrProgram", { get: function() {
        return this._pbrProgram;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "scenes", { get: function() {
        return this._scenes;
      }, enumerable: true, configurable: true }), Object.defineProperty(e4.prototype, "defaultScene", { get: function() {
        return this._defaultScene !== void 0 ? this._defaultScene : this._scenes !== void 0 && this._scenes.length > 0 ? this._scenes[0] : (a.log(a.LogLevel.Warning, "Default scene was requested, but none is available."), new g2.SceneNode("EmptyScene"));
      }, enumerable: true, configurable: true }), e4;
    }();
    t3.GLTFLoader = b2;
  }, function(e3, t3) {
    e3.exports = function(e4) {
      var t4 = {};
      function r3(i2) {
        if (t4[i2])
          return t4[i2].exports;
        var n2 = t4[i2] = { i: i2, l: false, exports: {} };
        return e4[i2].call(n2.exports, n2, n2.exports, r3), n2.l = true, n2.exports;
      }
      return r3.m = e4, r3.c = t4, r3.d = function(e5, t5, i2) {
        r3.o(e5, t5) || Object.defineProperty(e5, t5, { enumerable: true, get: i2 });
      }, r3.r = function(e5) {
        typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(e5, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e5, "__esModule", { value: true });
      }, r3.t = function(e5, t5) {
        if (1 & t5 && (e5 = r3(e5)), 8 & t5)
          return e5;
        if (4 & t5 && typeof e5 == "object" && e5 && e5.__esModule)
          return e5;
        var i2 = /* @__PURE__ */ Object.create(null);
        if (r3.r(i2), Object.defineProperty(i2, "default", { enumerable: true, value: e5 }), 2 & t5 && typeof e5 != "string")
          for (var n2 in e5)
            r3.d(i2, n2, function(t6) {
              return e5[t6];
            }.bind(null, n2));
        return i2;
      }, r3.n = function(e5) {
        var t5 = e5 && e5.__esModule ? function() {
          return e5.default;
        } : function() {
          return e5;
        };
        return r3.d(t5, "a", t5), t5;
      }, r3.o = function(e5, t5) {
        return Object.prototype.hasOwnProperty.call(e5, t5);
      }, r3.p = "", r3(r3.s = 7);
    }([function(e4, t4, r3) {
      Object.defineProperty(t4, "__esModule", { value: true }), t4.LoadingManager = class {
        constructor() {
          this.urlModifier = void 0, this.onStart = void 0, this.onProgress = void 0, this.onLoad = void 0, this.onError = void 0, this.isLoading = false, this.itemsLoaded = 0, this.itemsTotal = 0;
        }
        itemStart(e5) {
          this.itemsTotal++, !this.isLoading && this.onStart && this.onStart(e5, this.itemsLoaded, this.itemsTotal), this.isLoading = true;
        }
        itemEnd(e5) {
          this.itemsLoaded++, this.onProgress && this.onProgress(e5, this.itemsLoaded, this.itemsTotal), this.itemsLoaded === this.itemsTotal && (this.isLoading = false, this.onLoad && this.onLoad());
        }
        itemError(e5) {
          this.onError && this.onError(e5);
        }
        resolveURL(e5) {
          return this.urlModifier ? this.urlModifier(e5) : e5;
        }
      };
    }, function(e4, t4, r3) {
      var i2 = this && this.__awaiter || function(e5, t5, r4, i3) {
        return new (r4 || (r4 = Promise))(function(n3, o2) {
          function a2(e6) {
            try {
              u3(i3.next(e6));
            } catch (e7) {
              o2(e7);
            }
          }
          function s2(e6) {
            try {
              u3(i3.throw(e6));
            } catch (e7) {
              o2(e7);
            }
          }
          function u3(e6) {
            e6.done ? n3(e6.value) : new r4(function(t6) {
              t6(e6.value);
            }).then(a2, s2);
          }
          u3((i3 = i3.apply(e5, t5 || [])).next());
        });
      };
      Object.defineProperty(t4, "__esModule", { value: true });
      const n2 = r3(3), o = r3(0);
      t4.GLTF_COMPONENT_TYPE_ARRAYS = { 5120: Int8Array, 5121: Uint8Array, 5122: Int16Array, 5123: Uint16Array, 5125: Uint32Array, 5126: Float32Array }, t4.GLTF_ELEMENTS_PER_TYPE = { SCALAR: 1, VEC2: 2, VEC3: 3, VEC4: 4, MAT2: 4, MAT3: 9, MAT4: 16 }, t4.GltfAsset = class {
        constructor(e5, t5, r4, i3 = new o.LoadingManager()) {
          this.gltf = e5, this.glbData = r4, this.bufferData = new a(this, t5, i3), this.imageData = new s(this, t5, i3);
        }
        bufferViewData(e5) {
          return i2(this, void 0, void 0, function* () {
            if (!this.gltf.bufferViews)
              throw new Error("No buffer views found.");
            const t5 = this.gltf.bufferViews[e5], r4 = yield this.bufferData.get(t5.buffer), i3 = t5.byteLength || 0, n3 = t5.byteOffset || 0, o2 = r4.buffer, a2 = r4.byteOffset;
            return new Uint8Array(o2, a2 + n3, i3);
          });
        }
        accessorData(e5) {
          return i2(this, void 0, void 0, function* () {
            if (!this.gltf.accessors)
              throw new Error("No accessors views found.");
            const r4 = this.gltf.accessors[e5], i3 = t4.GLTF_ELEMENTS_PER_TYPE[r4.type];
            let n3;
            if (r4.bufferView !== void 0)
              n3 = yield this.bufferViewData(r4.bufferView);
            else {
              const e6 = t4.GLTF_COMPONENT_TYPE_ARRAYS[r4.componentType].BYTES_PER_ELEMENT * i3 * r4.count;
              n3 = new Uint8Array(e6);
            }
            if (r4.sparse) {
              const { count: e6, indices: o2, values: a2 } = r4.sparse;
              let s2 = t4.GLTF_COMPONENT_TYPE_ARRAYS[o2.componentType], u3 = yield this.bufferViewData(o2.bufferView);
              const c2 = new s2(u3.buffer, u3.byteOffset + (o2.byteOffset || 0), e6);
              s2 = t4.GLTF_COMPONENT_TYPE_ARRAYS[r4.componentType], u3 = yield this.bufferViewData(a2.bufferView);
              const l2 = new s2((yield this.bufferViewData(a2.bufferView)).buffer, u3.byteOffset + (a2.byteOffset || 0), e6 * i3);
              r4.bufferView && (n3 = new Uint8Array(n3));
              const f2 = new t4.GLTF_COMPONENT_TYPE_ARRAYS[r4.componentType](n3.buffer);
              for (let t5 = 0; t5 < e6; t5++)
                for (let e7 = 0; e7 < i3; e7++)
                  f2[i3 * c2[t5] + e7] = l2[i3 * t5 + e7];
            }
            return n3;
          });
        }
        preFetchAll() {
          return i2(this, void 0, void 0, function* () {
            return Promise.all([this.bufferData.preFetchAll(), this.imageData.preFetchAll()]);
          });
        }
      };
      class a {
        constructor(e5, t5, r4) {
          this.bufferCache = [], this.asset = e5, this.baseUri = t5, this.manager = r4, this.loader = new n2.FileLoader(r4), this.loader.responseType = "arraybuffer";
        }
        get(e5) {
          return i2(this, void 0, void 0, function* () {
            if (this.bufferCache[e5] !== void 0)
              return this.bufferCache[e5];
            const t5 = this.asset.gltf;
            if (!t5.buffers)
              throw new Error("No buffers found.");
            const r4 = t5.buffers[e5];
            if (r4.uri === void 0) {
              if (e5 !== 0)
                throw new Error("GLB container is required to be the first buffer");
              if (this.asset.glbData === void 0)
                throw new Error("invalid gltf: buffer has no uri nor is there a GLB buffer");
              return this.asset.glbData.binaryChunk;
            }
            const i3 = u2(r4.uri, this.baseUri), n3 = yield this.loader.load(i3), o2 = new Uint8Array(n3);
            return this.bufferCache[e5] = o2, o2;
          });
        }
        preFetchAll() {
          return i2(this, void 0, void 0, function* () {
            const e5 = this.asset.gltf.buffers;
            return e5 ? Promise.all(e5.map((e6, t5) => this.get(t5))) : [];
          });
        }
      }
      t4.BufferData = a;
      class s {
        constructor(e5, t5, r4) {
          this.crossOrigin = "anonymous", this.imageCache = [], this.asset = e5, this.baseUri = t5, this.manager = r4;
        }
        get(e5) {
          return i2(this, void 0, void 0, function* () {
            if (this.imageCache[e5] !== void 0)
              return this.imageCache[e5];
            const t5 = this.asset.gltf;
            if (!t5.images)
              throw new Error("No images found.");
            const r4 = t5.images[e5];
            let i3, n3 = false;
            if (r4.bufferView !== void 0) {
              const e6 = yield this.asset.bufferViewData(r4.bufferView);
              n3 = true;
              const t6 = new Blob([e6], { type: r4.mimeType });
              i3 = URL.createObjectURL(t6);
            } else {
              if (r4.uri === void 0)
                throw new Error("Invalid glTF: image must either have a `uri` or a `bufferView`");
              i3 = this.manager.resolveURL(u2(r4.uri, this.baseUri));
            }
            const o2 = new Image();
            return o2.crossOrigin = this.crossOrigin, new Promise((t6, r5) => {
              o2.onerror = () => {
                r5("Failed to load " + i3), this.manager.itemEnd(i3), this.manager.itemError(i3);
              }, o2.onload = () => {
                n3 && URL.revokeObjectURL(i3), this.imageCache[e5] = o2, t6(o2), this.manager.itemEnd(i3);
              }, o2.src = i3, this.manager.itemStart(i3);
            });
          });
        }
        preFetchAll() {
          return i2(this, void 0, void 0, function* () {
            const e5 = this.asset.gltf.images;
            return e5 ? Promise.all(e5.map((e6, t5) => this.get(t5))) : [];
          });
        }
      }
      function u2(e5, t5) {
        return typeof e5 != "string" || e5 === "" ? "" : /^(https?:)?\/\//i.test(e5) || /^data:.*,.*$/i.test(e5) || /^blob:.*$/i.test(e5) ? e5 : t5 + e5;
      }
      t4.ImageData = s, t4.resolveURL = u2;
    }, function(e4, t4, r3) {
      Object.defineProperty(t4, "__esModule", { value: true }), t4.LoaderUtils = class {
        static decodeText(e5) {
          if (typeof TextDecoder != "undefined")
            return new TextDecoder().decode(e5);
          let t5 = "";
          for (const r4 of e5)
            t5 += String.fromCharCode(r4);
          return decodeURIComponent(escape(t5));
        }
        static extractUrlBase(e5) {
          const t5 = e5.split("/");
          return t5.length === 1 ? "./" : (t5.pop(), t5.join("/") + "/");
        }
      };
    }, function(e4, t4, r3) {
      Object.defineProperty(t4, "__esModule", { value: true }), t4.FileLoader = class {
        constructor(e5) {
          this.runningRequests = {}, this.manager = e5;
        }
        load(e5, t5) {
          if (this.path !== void 0 && (e5 = this.path + e5), e5 = this.manager.resolveURL(e5), this.runningRequests[e5])
            return this.runningRequests[e5];
          const r4 = new Promise((r5, i2) => {
            const n2 = new XMLHttpRequest();
            n2.open("GET", e5, true);
            const o = this;
            n2.onload = function(t6) {
              const a = this.response;
              this.status === 0 ? (console.warn("FileLoader: HTTP Status 0 received."), r5(a), o.manager.itemEnd(e5)) : this.status === 200 ? (r5(a), o.manager.itemEnd(e5)) : (i2({ url: e5, status: this.status, statusText: n2.statusText }), o.manager.itemEnd(e5), o.manager.itemError(e5)), delete o.runningRequests[e5];
            }, n2.onprogress = (e6) => {
              t5 && t5(e6);
            }, n2.onerror = function(t6) {
              i2({ url: e5, status: this.status, statusText: n2.statusText }), o.manager.itemEnd(e5), o.manager.itemError(e5), delete o.runningRequests[e5];
            }, this.responseType && (n2.responseType = this.responseType), this.withCredentials && (n2.withCredentials = this.withCredentials), this.mimeType && n2.overrideMimeType && n2.overrideMimeType(this.mimeType !== void 0 ? this.mimeType : "text/plain");
            for (const e6 in this.requestHeaders)
              n2.setRequestHeader(e6, this.requestHeaders[e6]);
            n2.send(null), this.manager.itemStart(e5);
          });
          return this.runningRequests[e5] = r4, r4;
        }
        setRequestHeader(e5, t5) {
          return this.requestHeaders[e5] = t5, this;
        }
      };
    }, function(e4, t4, r3) {
      Object.defineProperty(t4, "__esModule", { value: true });
    }, function(e4, t4, r3) {
      Object.defineProperty(t4, "__esModule", { value: true });
      const i2 = r3(2);
      t4.BINARY_HEADER_MAGIC = "glTF";
      t4.GLTFBinaryData = class {
        constructor(e5) {
          const r4 = new DataView(e5, 0, 12), n2 = i2.LoaderUtils.decodeText(new Uint8Array(e5, 0, 4)), o = r4.getUint32(4, true);
          if (r4.getUint32(8, true), n2 !== t4.BINARY_HEADER_MAGIC)
            throw new Error("Unsupported glTF-Binary header.");
          if (o < 2)
            throw new Error("Unsupported legacy binary file detected.");
          const a = new DataView(e5, 12);
          let s = 0;
          for (; s < a.byteLength; ) {
            const t5 = a.getUint32(s, true);
            s += 4;
            const r5 = a.getUint32(s, true);
            if (s += 4, r5 === 1313821514) {
              const r6 = new Uint8Array(e5, 12 + s, t5);
              this.json = i2.LoaderUtils.decodeText(r6);
            } else if (r5 === 5130562) {
              const r6 = 12 + s;
              this.binaryChunk = new Uint8Array(e5, r6, t5);
            }
            s += t5;
          }
          if (this.json === null)
            throw new Error("glTF-Binary: JSON content not found.");
        }
      };
    }, function(e4, t4, r3) {
      var i2 = this && this.__awaiter || function(e5, t5, r4, i3) {
        return new (r4 || (r4 = Promise))(function(n3, o2) {
          function a2(e6) {
            try {
              u3(i3.next(e6));
            } catch (e7) {
              o2(e7);
            }
          }
          function s2(e6) {
            try {
              u3(i3.throw(e6));
            } catch (e7) {
              o2(e7);
            }
          }
          function u3(e6) {
            e6.done ? n3(e6.value) : new r4(function(t6) {
              t6(e6.value);
            }).then(a2, s2);
          }
          u3((i3 = i3.apply(e5, t5 || [])).next());
        });
      };
      function n2(e5) {
        for (var r4 in e5)
          t4.hasOwnProperty(r4) || (t4[r4] = e5[r4]);
      }
      Object.defineProperty(t4, "__esModule", { value: true });
      const o = r3(3), a = r3(5), s = r3(1), u2 = r3(2), c2 = r3(0), l2 = r3(4);
      t4.gltf = l2, n2(r3(1)), n2(r3(0)), t4.GltfLoader = class {
        constructor(e5) {
          this.manager = e5 || new c2.LoadingManager();
        }
        load(e5, t5) {
          return i2(this, void 0, void 0, function* () {
            const r4 = u2.LoaderUtils.extractUrlBase(e5), i3 = new o.FileLoader(this.manager);
            i3.responseType = "arraybuffer";
            const n3 = yield i3.load(e5, t5);
            return yield this.parse(n3, r4);
          });
        }
        loadFromFiles(e5) {
          return i2(this, void 0, void 0, function* () {
            let t5, r4;
            for (const [i4, n4] of e5)
              n4.name.match(/\.(gltf|glb)$/) && (t5 = n4, r4 = i4.replace(n4.name, ""));
            if (!t5)
              throw new Error("No .gltf or .glb asset found.");
            const i3 = typeof t5 == "string" ? t5 : URL.createObjectURL(t5), n3 = u2.LoaderUtils.extractUrlBase(i3), o2 = [];
            this.manager.urlModifier = (t6) => {
              const i4 = r4 + t6.replace(n3, "").replace(/^(\.?\/)/, "");
              if (e5.has(i4)) {
                const t7 = e5.get(i4), r5 = URL.createObjectURL(t7);
                return o2.push(r5), r5;
              }
              return t6;
            };
            const a2 = yield this.load(i3);
            return yield a2.preFetchAll(), URL.revokeObjectURL(i3), o2.forEach(URL.revokeObjectURL), a2;
          });
        }
        parse(e5, t5) {
          return i2(this, void 0, void 0, function* () {
            let r4, i3 = void 0;
            r4 = typeof e5 == "string" ? e5 : u2.LoaderUtils.decodeText(new Uint8Array(e5, 0, 4)) === a.BINARY_HEADER_MAGIC ? (i3 = new a.GLTFBinaryData(e5)).json : u2.LoaderUtils.decodeText(new Uint8Array(e5));
            const n3 = JSON.parse(r4);
            if (n3.asset === void 0 || n3.asset.version[0] < 2)
              throw new Error("Unsupported asset. glTF versions >=2.0 are supported.");
            return new s.GltfAsset(n3, t5, i3, this.manager);
          });
        }
      };
    }, function(e4, t4, r3) {
      e4.exports = r3(6);
    }]);
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(0), n2 = function() {
      function e4() {
      }
      return e4.modeToEnum = function(e5, t4) {
        return (t4 < 0 || t4 > 6) && i2.log(i2.LogLevel.Error, "Specified draw mode is " + t4 + " but is required to be between 0 and 6"), t4 === 0 ? e5.POINTS : t4 === 1 ? e5.LINES : t4 === 2 ? e5.LINE_LOOP : t4 === 3 ? e5.LINE_STRIP : t4 === 4 ? e5.TRIANGLES : t4 === 5 ? e5.TRIANGLE_STRIP : t4 === 6 ? e5.TRIANGLE_FAN : e5.TRIANGLES;
      }, e4.nameToAttributeIndex = function(e5) {
        return e5 === "POSITION" ? 0 : e5 === "NORMAL" ? 1 : e5 === "TANGENT" ? 2 : e5 === "TEXCOORD_0" ? 3 : e5 === "TEXCOORD_1" ? 4 : e5 === "TEXCOORD_2" ? 5 : e5 === "JOINTS_0" ? 6 : e5 === "WEIGHTS_0" ? 7 : e5 === "COLOR_0" ? 8 : (i2.log(i2.LogLevel.Warning, "Unknown attribute name '" + e5 + "' encountered.             Possibly this model uses an unsupported extension."), -1);
      }, e4;
    }();
    t3.GLTFHelper = n2;
  }, function(e3, t3) {
    e3.exports = "precision highp float;\r\n\r\n// Adapted from https://github.com/KhronosGroup/glTF-WebGL-PBR\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define texture(sampler, coord) texture2D(sampler, coord)\r\n#else\r\n    #define varying out\r\n#endif\r\n\r\n\r\nconst int HAS_NORMALS           = 1;\r\nconst int HAS_TANGENTS          = 1 << 1;\r\nconst int HAS_UV                = 1 << 2;\r\nconst int HAS_COLORS            = 1 << 3;\r\n\r\n#if __VERSION__ == 100\r\n    attribute vec4 a_position;\r\n    attribute vec4 a_normal;\r\n    attribute vec4 a_tangent;\r\n    attribute vec2 a_texcoord_0;\r\n    attribute vec2 a_texcoord_1;\r\n    attribute vec2 a_texcoord_2;\r\n    attribute vec4 a_joints;\r\n    attribute vec4 a_weights;\r\n    attribute vec4 a_color;\r\n#else\r\n    layout (location = 0) in vec4 a_position;\r\n    layout (location = 1) in vec3 a_normal;\r\n    layout (location = 2) in vec4 a_tangent;\r\n    layout (location = 3) in vec2 a_texcoord_0;\r\n    layout (location = 4) in vec2 a_texcoord_1;\r\n    layout (location = 5) in vec2 a_texcoord_2;\r\n    layout (location = 6) in vec4 a_joints;\r\n    layout (location = 7) in vec4 a_weights;\r\n    layout (location = 8) in vec4 a_color;\r\n#endif\r\n\r\nuniform mat4 u_model;\r\nuniform mat4 u_viewProjection;\r\nuniform mat3 u_normalMatrix;\r\n\r\nuniform mediump int u_geometryFlags;\r\n\r\nvarying vec2 v_uv[3];\r\nvarying vec4 v_color;\r\nvarying vec3 v_position;\r\n\r\nvarying mat3 v_TBN;\r\nvarying vec3 v_normal;\r\n\r\nbool checkFlag(int flag) {\r\n    return (u_geometryFlags & flag) == flag;\r\n}\r\n\r\nvoid main(void)\r\n{\r\n    vec4 pos = u_model * a_position;\r\n    v_position = vec3(pos.xyz) / pos.w;\r\n\r\n    if (checkFlag(HAS_NORMALS)) {\r\n        if (checkFlag(HAS_TANGENTS)) {\r\n            vec3 normalW = normalize(vec3(u_normalMatrix * a_normal));\r\n            vec3 tangentW = normalize(vec3(u_model * vec4(a_tangent.xyz, 0.0)));\r\n            vec3 bitangentW = cross(normalW, tangentW) * a_tangent.w;\r\n            v_TBN = mat3(tangentW, bitangentW, normalW);\r\n        } else { // HAS_TANGENTS != 1\r\n            v_normal = normalize(vec3(u_model * vec4(a_normal.xyz, 0.0)));\r\n        }\r\n    }\r\n\r\n    if (checkFlag(HAS_UV)) {\r\n        v_uv[0] = a_texcoord_0;\r\n        v_uv[1] = a_texcoord_1;\r\n        v_uv[2] = a_texcoord_2;\r\n    } else {\r\n        v_uv[0] = vec2(0., 0.);\r\n        v_uv[1] = vec2(0., 0.);\r\n        v_uv[2] = vec2(0., 0.);\r\n    }\r\n\r\n    if (checkFlag(HAS_COLORS)) {\r\n        v_color = a_color;\r\n    } else {\r\n        v_color = vec4(1.0);\r\n    }\r\n\r\n    gl_Position = u_viewProjection * u_model * a_position;\r\n}\r\n";
  }, function(e3, t3) {
    e3.exports = `precision highp float;\r
\r
// Adapted from https://github.com/KhronosGroup/glTF-WebGL-PBR\r
// References:\r
// [1] Real Shading in Unreal Engine 4\r
//     http://blog.selfshadow.com/publications/s2013-shading-course/karis/s2013_pbs_epic_notes_v2.pdf\r
// [2] Physically Based Shading at Disney\r
//     http://blog.selfshadow.com/publications/s2012-shading-course/burley/s2012_pbs_disney_brdf_notes_v3.pdf\r
// [3] README.md - Environment Maps\r
//     https://github.com/KhronosGroup/glTF-WebGL-PBR/#environment-maps\r
// [4] "An Inexpensive BRDF Model for Physically based Rendering" by Christophe Schlick\r
//     https://www.cs.virginia.edu/~jdl/bib/appearance/analytic%20models/schlick94b.pdf\r
\r
\r
#if __VERSION__ == 100\r
    #define texture(sampler, coord) texture2D(sampler, coord)\r
#else \r
    #define varying in\r
#endif\r
\r
\r
#if __VERSION__ == 100\r
    #define fragColor gl_FragColor\r
#else\r
    layout(location = 0) out vec4 fragColor;\r
#endif\r
\r
const int HAS_NORMALS           = 1;\r
const int HAS_TANGENTS          = 1 << 1;\r
const int HAS_UV                = 1 << 2;\r
const int HAS_COLORS            = 1 << 3;\r
const int USE_IBL               = 1 << 4;\r
const int HAS_BASECOLORMAP      = 1 << 5;\r
const int HAS_NORMALMAP         = 1 << 6;\r
const int HAS_EMISSIVEMAP       = 1 << 7;\r
const int HAS_METALROUGHNESSMAP = 1 << 8;\r
const int HAS_OCCLUSIONMAP      = 1 << 9;\r
const int USE_TEX_LOD           = 1 << 10;\r
\r
const vec3 u_LightDirection = vec3(0.2, 1.0, 0.2);\r
const vec3 u_LightColor = vec3(1, 1, 1);\r
\r
const float M_PI = 3.141592653589793;\r
const float c_MinRoughness = 0.04;\r
\r
uniform sampler2D u_baseColor;\r
uniform sampler2D u_metallicRoughness;\r
uniform sampler2D u_normal;\r
uniform sampler2D u_emissive;\r
uniform sampler2D u_occlusion;\r
\r
uniform samplerCube u_specularEnvironment;\r
uniform sampler2D u_brdfLUT;\r
\r
uniform int u_baseColorTexCoord;\r
uniform int u_normalTexCoord;\r
uniform int u_metallicRoughnessTexCoord;\r
uniform int u_occlusionTexCoord;\r
uniform int u_emissiveTexCoord;\r
\r
uniform vec4 u_baseColorFactor;\r
uniform float u_metallicFactor;\r
uniform float u_roughnessFactor;\r
uniform vec3 u_emissiveFactor;\r
uniform float u_normalScale;\r
uniform int u_blendMode;\r
uniform float u_blendCutoff;\r
\r
uniform mediump int u_geometryFlags;\r
uniform mediump int u_pbrFlags;\r
uniform vec3 u_eye;\r
\r
varying vec2 v_uv[3];\r
varying vec4 v_color;\r
varying vec3 v_position;\r
\r
varying mat3 v_TBN;\r
varying vec3 v_normal;\r
\r
// Encapsulate the various inputs used by the various functions in the shading equation\r
// We store values in this struct to simplify the integration of alternative implementations\r
// of the shading terms, outlined in the Readme.MD Appendix.\r
struct PBRInfo\r
{\r
    float NdotL;                  // cos angle between normal and light direction\r
    float NdotV;                  // cos angle between normal and view direction\r
    float NdotH;                  // cos angle between normal and half vector\r
    float LdotH;                  // cos angle between light direction and half vector\r
    float VdotH;                  // cos angle between view direction and half vector\r
    float perceptualRoughness;    // roughness value, as authored by the model creator (input to shader)\r
    float metalness;              // metallic value at the surface\r
    vec3 reflectance0;            // full reflectance color (normal incidence angle)\r
    vec3 reflectance90;           // reflectance color at grazing angle\r
    float alphaRoughness;         // roughness mapped to a more linear change in the roughness (proposed by [2])\r
    vec3 diffuseColor;            // color contribution from diffuse lighting\r
    vec3 specularColor;           // color contribution from specular lighting\r
};\r
\r
bool checkGeometryFlag(int flag) {\r
    return (u_geometryFlags & flag) == flag;\r
}\r
\r
bool checkFlag(int flag) {\r
    return (u_pbrFlags & flag) == flag;\r
}\r
\r
vec4 SRGBtoLINEAR(vec4 srgbIn)\r
{\r
    #ifdef MANUAL_SRGB\r
    #ifdef SRGB_FAST_APPROXIMATION\r
    vec3 linOut = pow(srgbIn.xyz,vec3(2.2));\r
    #else //SRGB_FAST_APPROXIMATION\r
    vec3 bLess = step(vec3(0.04045),srgbIn.xyz);\r
    vec3 linOut = mix( srgbIn.xyz/vec3(12.92), pow((srgbIn.xyz+vec3(0.055))/vec3(1.055),vec3(2.4)), bLess );\r
    #endif //SRGB_FAST_APPROXIMATION\r
    return vec4(linOut,srgbIn.w);;\r
    #else //MANUAL_SRGB\r
    return srgbIn;\r
    #endif //MANUAL_SRGB\r
}\r
\r
// Find the normal for this fragment, pulling either from a predefined normal map\r
// or from the interpolated mesh normal and tangent attributes.\r
vec3 getNormal()\r
{\r
    // Retrieve the tangent space matrix\r
    mat3 tbn;\r
    if (!checkGeometryFlag(HAS_TANGENTS)) {\r
        vec3 pos_dx = dFdx(v_position);\r
        vec3 pos_dy = dFdy(v_position);\r
        vec3 tex_dx = dFdx(vec3(v_uv[0], 0.0));\r
        vec3 tex_dy = dFdy(vec3(v_uv[0], 0.0));\r
        vec3 t = (tex_dy.t * pos_dx - tex_dx.t * pos_dy) / (tex_dx.s * tex_dy.t - tex_dy.s * tex_dx.t);\r
\r
        vec3 ng;\r
        if (checkGeometryFlag(HAS_NORMALS))\r
            ng = normalize(v_normal);\r
        else\r
            ng = cross(pos_dx, pos_dy);\r
\r
            t = normalize(t - ng * dot(ng, t));\r
            vec3 b = normalize(cross(ng, t));\r
            tbn = mat3(t, b, ng);\r
        }\r
    else { // HAS_TANGENTS\r
        tbn = v_TBN;\r
    }\r
\r
    vec3 n;\r
    if (checkFlag(HAS_NORMALMAP)) {\r
        n = texture(u_normal, v_uv[u_normalTexCoord]).rgb;\r
        n = normalize(tbn * ((2.0 * n - 1.0) * vec3(u_normalScale, u_normalScale, 1.0)));\r
    } else {\r
        // The tbn matrix is linearly interpolated, so we need to re-normalize\r
        n = normalize(tbn[2].xyz);\r
    }\r
\r
    // reverse backface normals\r
    n *= (2.0 * float(gl_FrontFacing) - 1.0);\r
\r
    return n;\r
}\r
\r
// Basic Lambertian diffuse\r
// Implementation from Lambert's Photometria https://archive.org/details/lambertsphotome00lambgoog\r
// See also [1], Equation 1\r
vec3 diffuse(PBRInfo pbrInputs)\r
{\r
    return pbrInputs.diffuseColor / M_PI;\r
}\r
\r
 // The following equation models the Fresnel reflectance term of the spec equation (aka F())\r
// Implementation of fresnel from [4], Equation 15\r
vec3 specularReflection(PBRInfo pbrInputs)\r
{\r
    return pbrInputs.reflectance0 + (pbrInputs.reflectance90 - pbrInputs.reflectance0) * pow(clamp(1.0 - pbrInputs.VdotH, 0.0, 1.0), 5.0);\r
}\r
\r
 // This calculates the specular geometric attenuation (aka G()),\r
// where rougher material will reflect less light back to the viewer.\r
// This implementation is based on [1] Equation 4, and we adopt their modifications to\r
// alphaRoughness as input as originally proposed in [2].\r
float geometricOcclusion(PBRInfo pbrInputs)\r
{\r
    float NdotL = pbrInputs.NdotL;\r
    float NdotV = pbrInputs.NdotV;\r
    float r = pbrInputs.alphaRoughness;\r
\r
    float attenuationL = 2.0 * NdotL / (NdotL + sqrt(r * r + (1.0 - r * r) * (NdotL * NdotL)));\r
    float attenuationV = 2.0 * NdotV / (NdotV + sqrt(r * r + (1.0 - r * r) * (NdotV * NdotV)));\r
    return attenuationL * attenuationV;\r
}\r
\r
 // The following equation(s) model the distribution of microfacet normals across the area being drawn (aka D())\r
// Implementation from "Average Irregularity Representation of a Roughened Surface for Ray Reflection" by T. S. Trowbridge, and K. P. Reitz\r
// Follows the distribution function recommended in the SIGGRAPH 2013 course notes from EPIC Games [1], Equation 3.\r
float microfacetDistribution(PBRInfo pbrInputs)\r
{\r
    float roughnessSq = pbrInputs.alphaRoughness * pbrInputs.alphaRoughness;\r
    float f = (pbrInputs.NdotH * roughnessSq - pbrInputs.NdotH) * pbrInputs.NdotH + 1.0;\r
    return roughnessSq / (M_PI * f * f);\r
}\r
\r
vec3 getIBLContribution(vec3 n, vec3 v, PBRInfo pbrInfo)\r
{\r
    float NdotV = clamp(dot(n, v), 0.0, 1.0);\r
\r
    // TODO: pass uniform for mip count\r
    const float MIP_COUNT = 8.0;\r
    float lod = clamp(pbrInfo.perceptualRoughness * MIP_COUNT, 0.0, MIP_COUNT);\r
    vec3 reflection = normalize(reflect(-v, n));\r
\r
    vec2 brdfSamplePoint = vec2(NdotV, pbrInfo.perceptualRoughness);\r
    vec2 brdf = texture(u_brdfLUT, brdfSamplePoint).rg;\r
\r
    // vec4 diffuseSample = textureCube(u_DiffuseEnvSampler, n);\r
    vec4 specularSample = textureLod(u_specularEnvironment, reflection, lod);\r
\r
    // vec3 diffuseLight = SRGBtoLINEAR(diffuseSample).rgb;\r
    vec3 specularLight = SRGBtoLINEAR(specularSample).rgb;\r
\r
    // vec3 diffuse = diffuseLight * pbrInfo.diffuseColor;\r
    vec3 specular = specularLight * (pbrInfo.specularColor * brdf.x + brdf.y);\r
\r
    return specular;\r
    // return diffuse + specular;\r
}\r
\r
void main(void)\r
{\r
    float perceptualRoughness = u_roughnessFactor;\r
    float metallic = u_metallicFactor;\r
    if (checkFlag(HAS_METALROUGHNESSMAP)) {\r
        // Roughness is stored in the 'g' channel, metallic is stored in the 'b' channel.\r
        // This layout intentionally reserves the 'r' channel for (optional) occlusion map data\r
        vec4 mrSample = texture(u_metallicRoughness, v_uv[u_metallicRoughnessTexCoord]);\r
        perceptualRoughness = mrSample.g * perceptualRoughness;\r
        metallic = mrSample.b * metallic;\r
    }\r
    perceptualRoughness = clamp(perceptualRoughness, c_MinRoughness, 1.0);\r
    metallic = clamp(metallic, 0.0, 1.0);\r
    // Roughness is authored as perceptual roughness; as is convention,\r
    // convert to material roughness by squaring the perceptual roughness [2].\r
    float alphaRoughness = perceptualRoughness * perceptualRoughness;\r
\r
     // The albedo may be defined from a base texture or a flat color\r
    vec4 baseColor;\r
    if (checkFlag(HAS_BASECOLORMAP)) {\r
        baseColor = SRGBtoLINEAR(texture(u_baseColor, v_uv[u_baseColorTexCoord])) * u_baseColorFactor;\r
    } else {\r
        baseColor = u_baseColorFactor;\r
    }\r
\r
    // spec: COLOR_0 ... acts as an additional linear multiplier to baseColor\r
    // TODO!: distinguish vec3/vec4 colors...\r
    baseColor *= vec4(v_color.rgb, 1.0);\r
\r
    vec3 f0 = vec3(0.04);\r
    vec3 diffuseColor = baseColor.rgb * (vec3(1.0) - f0);\r
    diffuseColor *= 1.0 - metallic;\r
    vec3 specularColor = mix(f0, baseColor.rgb, metallic);\r
\r
    // Compute reflectance.\r
    float reflectance = max(max(specularColor.r, specularColor.g), specularColor.b);\r
\r
    // For typical incident reflectance range (between 4% to 100%) set the grazing reflectance to 100% for typical fresnel effect.\r
    // For very low reflectance range on highly diffuse objects (below 4%), incrementally reduce grazing reflecance to 0%.\r
    float reflectance90 = clamp(reflectance * 25.0, 0.0, 1.0);\r
    vec3 specularEnvironmentR0 = specularColor.rgb;\r
    vec3 specularEnvironmentR90 = vec3(1.0, 1.0, 1.0) * reflectance90;\r
\r
    vec3 n = getNormal();                         // normal at surface point\r
    vec3 v = normalize(u_eye - v_position);        // Vector from surface point to camera\r
    vec3 l = normalize(u_LightDirection);          // Vector from surface point to light\r
    vec3 h = normalize(l+v);                       // Half vector between both l and v\r
    vec3 reflection = -normalize(reflect(v, n));\r
\r
    float NdotL = clamp(dot(n, l), 0.001, 1.0);\r
    float NdotV = abs(dot(n, v)) + 0.001;\r
    float NdotH = clamp(dot(n, h), 0.0, 1.0);\r
    float LdotH = clamp(dot(l, h), 0.0, 1.0);\r
    float VdotH = clamp(dot(v, h), 0.0, 1.0);\r
\r
    PBRInfo pbrInputs = PBRInfo(\r
        NdotL,\r
        NdotV,\r
        NdotH,\r
        LdotH,\r
        VdotH,\r
        perceptualRoughness,\r
        metallic,\r
        specularEnvironmentR0,\r
        specularEnvironmentR90,\r
        alphaRoughness,\r
        diffuseColor,\r
        specularColor\r
    );\r
\r
     // Calculate the shading terms for the microfacet specular shading model\r
    vec3 F = specularReflection(pbrInputs);\r
    float G = geometricOcclusion(pbrInputs);\r
    float D = microfacetDistribution(pbrInputs);\r
\r
     // Calculation of analytical lighting contribution\r
    vec3 diffuseContrib = (1.0 - F) * diffuse(pbrInputs);\r
    vec3 specContrib = F * G * D / (4.0 * NdotL * NdotV);\r
    // Obtain final intensity as reflectance (BRDF) scaled by the energy of the light (cosine law)\r
    vec3 color = NdotL * u_LightColor * (diffuseContrib + specContrib);\r
\r
    vec3 environmentLight = getIBLContribution(n, v, pbrInputs);\r
    color += environmentLight;\r
\r
    if (checkFlag(HAS_EMISSIVEMAP)) {\r
        vec3 emissive = SRGBtoLINEAR(texture(u_emissive, v_uv[u_emissiveTexCoord])).rgb * u_emissiveFactor;\r
        color += emissive;\r
    }\r
\r
    // NOTE: the spec mandates to ignore any alpha value in 'OPAQUE' mode\r
    float alpha = 1.0;\r
    if (u_blendMode == 1) {\r
        if (baseColor.a < u_blendCutoff) {\r
            discard;\r
        }\r
    }\r
    else if (u_blendMode == 2) {\r
        alpha = baseColor.a;\r
    }\r
\r
    fragColor = vec4(pow(color, vec3(1.0/2.2)), alpha);\r
}\r
`;
  }, function(e3, t3, r3) {
    var i2, n2 = r3(1), o = r3(3), a = r3(0);
    !function(e4) {
      function t4(e5, t5, r5) {
        r5 === void 0 && (r5 = 1);
        var i4 = n2.vec2.subtract(o.v2(), t5, e5);
        if (!n2.vec2.equals(i4, n2.vec2.fromValues(0, 0))) {
          var a2 = n2.vec2.squaredLength(i4), s2 = 2 * n2.vec2.dot(i4, e5), u2 = s2 * s2 - 4 * a2 * (n2.vec2.squaredLength(e5) - r5 * r5);
          if (!(u2 < 0)) {
            var c2 = Math.sqrt(u2), l2 = Math.min((-s2 + c2) / (2 * a2), (-s2 - c2) / (2 * a2)), f2 = n2.vec2.scale(o.v2(), i4, l2);
            return n2.vec2.add(f2, f2, e5);
          }
        }
      }
      function r4(e5, t5, r5, i4) {
        var a2 = e5, s2 = n2.vec2.sub(o.v2(), t5, e5), u2 = r5, c2 = n2.vec2.sub(o.v2(), i4, r5), l2 = n2.vec2.cross(o.v3(), s2, c2)[2];
        if (l2 !== 0) {
          var f2 = n2.vec2.sub(o.v2(), u2, a2), h2 = n2.vec2.cross(o.v3(), f2, n2.vec2.scale(o.v2(), s2, 1 / l2))[2], d2 = n2.vec2.cross(o.v3(), f2, n2.vec2.scale(o.v2(), c2, 1 / l2))[2];
          if (!(h2 < 0 || h2 > 1 || d2 < 0))
            return [n2.vec2.add(o.v2(), u2, n2.vec2.scale(o.v2(), c2, h2)), d2];
        }
      }
      function i3(e5, t5, r5, i4) {
        r5 === void 0 && (r5 = n2.vec3.fromValues(0, 0, 0)), i4 === void 0 && (i4 = n2.vec3.fromValues(0, 1, 0));
        var a2 = n2.vec3.normalize(o.v3(), n2.vec3.subtract(o.v3(), t5, e5)), s2 = n2.vec3.dot(a2, i4);
        if (!(n2.vec3.equals(a2, [0, 0, 0]) || s2 >= 0)) {
          var u2 = n2.vec3.dot(n2.vec3.subtract(o.v3(), r5, e5), i4) / s2;
          return n2.vec3.add(o.v3(), n2.vec3.scale(o.v3(), a2, u2), e5);
        }
      }
      function s(e5, t5, r5) {
        var i4 = n2.vec3.subtract(o.v3(), t5, e5), a2 = n2.vec3.squaredLength(i4);
        if (a2 === 0)
          return 0;
        var s2 = n2.vec3.subtract(o.v3(), r5, e5);
        return n2.vec3.dot(s2, i4) / a2;
      }
      e4.rayCircleIntersection = t4, e4.pointSquareIntersection = function(e5, t5) {
        t5 === void 0 && (t5 = 1);
        var r5 = o.abs2(o.v2(), e5);
        return r5[0] >= r5[1] ? n2.vec2.fromValues(o.sign(e5[0]) * t5, e5[1] / r5[0] * t5) : n2.vec2.fromValues(e5[0] / r5[1] * t5, o.sign(e5[1]) * t5);
      }, e4.raySquareIntersection = function(e5, t5, i4) {
        i4 === void 0 && (i4 = 1);
        for (var o2 = [n2.vec2.fromValues(-i4, +i4), n2.vec2.fromValues(-i4, -i4), n2.vec2.fromValues(+i4, -i4), n2.vec2.fromValues(+i4, +i4)], a2 = new Array(), s2 = 0; s2 < 4; ++s2) {
          var u2 = r4(e5, t5, o2[s2], o2[(s2 + 1) % 4]);
          u2 && a2.push(u2[1]);
        }
        return a2;
      }, e4.rayLineIntersection = r4, e4.rayPlaneIntersection = i3, e4.raySphereIntersection = function(e5, t5, r5, i4) {
        r5 === void 0 && (r5 = n2.vec3.fromValues(0, 0, 0)), i4 === void 0 && (i4 = 1);
        var a2 = n2.vec3.subtract(o.v3(), e5, r5), s2 = n2.vec3.normalize(o.v3(), n2.vec3.subtract(o.v3(), t5, e5)), u2 = n2.vec3.dot(s2, a2), c2 = u2 * u2 - n2.vec3.squaredLength(a2) + i4 * i4;
        if (!(c2 <= 0))
          return n2.vec3.add(o.v3(), e5, n2.vec3.scale(o.v3(), s2, -u2 - Math.sqrt(c2)));
      }, e4.rayPlaneIntersection_tube = function(e5, r5, o2) {
        o2 === void 0 && (o2 = 1);
        var a2 = i3(e5, r5);
        if (a2 !== void 0 && n2.vec3.length(a2) < o2)
          return a2;
        var s2 = t4(n2.vec2.fromValues(e5[0], e5[2]), n2.vec2.fromValues(r5[0], r5[2]), o2);
        return s2 ? n2.vec3.fromValues(s2[0], 0, s2[1]) : void 0;
      }, e4.isPointWithinSquare = function(e5, t5) {
        t5 === void 0 && (t5 = 1);
        var r5 = o.abs2(o.v2(), e5);
        return r5[0] <= t5 && r5[1] <= t5;
      }, e4.isPointWithinNDC = function(e5, t5) {
        var r5 = n2.vec3.transformMat4(o.v3(), t5, e5), i4 = o.abs3(o.v3(), r5);
        return i4[0] <= 1 && i4[1] <= 1 && r5[2] >= 0 && r5[2] <= 1;
      }, e4.distancePointToRay = s, e4.eyeWithPointInView = function(e5, t5) {
        var r5 = n2.vec3.subtract(o.v3(), e5.center, e5.eye), i4 = n2.vec3.normalize(o.v3(), r5), u2 = n2.vec3.normalize(o.v3(), n2.vec3.cross(o.v3(), i4, e5.up)), c2 = n2.vec3.normalize(o.v3(), n2.vec3.cross(o.v3(), u2, i4)), l2 = s(e5.eye, e5.center, t5), f2 = n2.vec3.add(o.v3(), e5.eye, n2.vec3.scale(o.v3(), r5, l2)), h2 = n2.vec3.subtract(o.v3(), t5, f2), d2 = Math.abs(n2.vec3.dot(h2, u2)) / e5.aspect, p2 = Math.abs(n2.vec3.dot(h2, c2)), _2 = Math.max(d2, p2) / Math.tan(e5.fovy * a.DEG2RAD * 0.5);
        return n2.vec3.subtract(o.v3(), f2, n2.vec3.scale(o.v3(), i4, _2));
      };
    }(i2 || (i2 = {})), e3.exports = i2;
  }, function(e3, t3, r3) {
    Object.defineProperty(t3, "__esModule", { value: true });
    var i2 = r3(78), n2 = r3(141);
    !function(e4) {
      e4.TestRenderer = n2.TestRenderer, e4.TestNavigation = i2.TestNavigation;
    }(t3.debug || (t3.debug = {}));
  }, function(e3, t3, r3) {
    var i2, n2, o = this && this.__extends || (i2 = function(e4, t4) {
      return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e5, t5) {
        e5.__proto__ = t5;
      } || function(e5, t5) {
        for (var r4 in t5)
          t5.hasOwnProperty(r4) && (e5[r4] = t5[r4]);
      })(e4, t4);
    }, function(e4, t4) {
      function r4() {
        this.constructor = e4;
      }
      i2(e4, t4), e4.prototype = t4 === null ? Object.create(t4) : (r4.prototype = t4.prototype, new r4());
    }), a = r3(0), s = r3(61), u2 = r3(59), c2 = r3(38), l2 = r3(48), f2 = r3(17), h2 = r3(12), d2 = r3(6), p2 = r3(23), _2 = r3(50), g2 = r3(7), m2 = r3(4), v2 = r3(78);
    !function(e4) {
      var t4 = function(e5) {
        function t5() {
          var t6 = e5 !== null && e5.apply(this, arguments) || this;
          return t6._extensions = false, t6;
        }
        return o(t5, e5), t5.prototype.onInitialize = function(e6, t6, i3) {
          var n3 = this, o2 = this._context.gl, _3 = this._context.gl2facade;
          this._extensions === false && this._context.isWebGL1 && (a.assert(this._context.supportsStandardDerivatives, "expected OES_standard_derivatives support"), this._context.standardDerivatives, this._extensions = true);
          var b2 = new g2.Shader(this._context, o2.VERTEX_SHADER, "testrenderer.vert");
          b2.initialize(r3(142));
          var y2 = new g2.Shader(this._context, o2.FRAGMENT_SHADER, "testrenderer.frag");
          y2.initialize(r3(143)), this._program = new d2.Program(this._context), this._program.initialize([b2, y2]), this._uNdcOffset = this._program.uniform("u_ndcOffset"), this._uFrameNumber = this._program.uniform("u_frameNumber"), this._ndcTriangle = new h2.NdcFillingTriangle(this._context);
          var E2 = this._program.attribute("a_vertex", 0);
          return this._ndcTriangle.initialize(E2), this._ndcOffsetKernel = new u2.AntiAliasingKernel(this._multiFrameNumber), this._defaultFBO = new l2.DefaultFramebuffer(this._context, "DefaultFBO"), this._defaultFBO.initialize(), this._colorRenderTexture = new m2.Texture2D(this._context, "ColorRenderTexture"), this._depthRenderbuffer = new p2.Renderbuffer(this._context, "DepthRenderbuffer"), this._intermediateFBO = new f2.Framebuffer(this._context, "IntermediateFBO"), this._accumulate = new s.AccumulatePass(this._context), this._accumulate.initialize(this._ndcTriangle), this._accumulate.precision = this._framePrecision, this._accumulate.texture = this._colorRenderTexture, this._blit = new c2.BlitPass(this._context), this._blit.initialize(this._ndcTriangle), this._blit.readBuffer = _3.COLOR_ATTACHMENT0, this._blit.drawBuffer = o2.BACK, this._blit.target = this._defaultFBO, this._testNavigation = new v2.TestNavigation(function() {
            return n3.invalidate();
          }, i3), true;
        }, t5.prototype.onUninitialize = function() {
          e5.prototype.uninitialize.call(this), this._uNdcOffset = -1, this._uFrameNumber = -1, this._program.uninitialize(), this._ndcTriangle.uninitialize(), this._intermediateFBO.uninitialize(), this._defaultFBO.uninitialize(), this._colorRenderTexture.uninitialize(), this._depthRenderbuffer.uninitialize(), this._blit.uninitialize(), this._accumulate.uninitialize();
        }, t5.prototype.onDiscarded = function() {
          this._altered.alter("frameSize"), this._altered.alter("multiFrameNumber"), this._altered.alter("framePrecision"), this._altered.alter("clearColor");
        }, t5.prototype.onUpdate = function() {
          this._testNavigation.update();
          var e6 = this._testNavigation.altered;
          return this._testNavigation.reset(), !(!e6 && !this._altered.any) && e6;
        }, t5.prototype.onPrepare = function() {
          var e6 = this._context.gl, t6 = this._context.gl2facade;
          this._intermediateFBO.initialized ? this._altered.frameSize && this._intermediateFBO.resize(this._frameSize[0], this._frameSize[1]) : (this._colorRenderTexture.initialize(this._frameSize[0], this._frameSize[1], this._context.isWebGL2 ? e6.RGBA8 : e6.RGBA, e6.RGBA, e6.UNSIGNED_BYTE), this._depthRenderbuffer.initialize(this._frameSize[0], this._frameSize[1], e6.DEPTH_COMPONENT16), this._intermediateFBO.initialize([[t6.COLOR_ATTACHMENT0, this._colorRenderTexture], [e6.DEPTH_ATTACHMENT, this._depthRenderbuffer]])), this._altered.multiFrameNumber && (this._ndcOffsetKernel.width = this._multiFrameNumber), this._altered.framePrecision && (this._accumulate.precision = this._framePrecision), this._altered.clearColor && this._intermediateFBO.clearColor(this._clearColor), this._accumulate.update(), this._altered.reset();
        }, t5.prototype.onFrame = function(e6) {
          var t6 = this._context.gl;
          t6.viewport(0, 0, this._frameSize[0], this._frameSize[1]), this._program.bind();
          var r4 = this._ndcOffsetKernel.get(e6);
          r4[0] = 2 * r4[0] / this._frameSize[0], r4[1] = 2 * r4[1] / this._frameSize[1], t6.uniform2fv(this._uNdcOffset, r4), t6.uniform1i(this._uFrameNumber, e6), this._intermediateFBO.clear(t6.COLOR_BUFFER_BIT, true, false), this._ndcTriangle.bind(), this._ndcTriangle.draw(), this._intermediateFBO.unbind(), this._accumulate.frame(e6);
        }, t5.prototype.onSwap = function() {
          this._blit.framebuffer = this._accumulate.framebuffer ? this._accumulate.framebuffer : this._blit.framebuffer = this._intermediateFBO, this._blit.frame();
        }, t5;
      }(_2.Renderer);
      e4.TestRenderer = t4;
    }(n2 || (n2 = {})), e3.exports = n2;
  }, function(e3, t3) {
    e3.exports = "\r\nprecision lowp float;\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define texture(sampler, coord) texture2D(sampler, coord)\r\n#else\r\n    #define varying out\r\n#endif\r\n\r\n\r\nvoid ndcOffset(inout vec4 vertex, in vec2 offset) {\r\n    vertex.xy = offset * vec2(vertex.w) + vertex.xy;\r\n}\r\n\r\n\r\n\r\n#if __VERSION__ == 100\r\n    attribute vec2 a_vertex;\r\n#else \r\n    layout(location = 0) in vec2 a_vertex;\r\n#endif\r\n\r\nuniform vec2 u_ndcOffset;\r\n\r\nvarying vec2 v_uv;\r\n\r\n\r\nvoid main(void)\r\n{\r\n    v_uv = a_vertex.xy * 0.5 + 0.5;\r\n\r\n    vec4 vertex = vec4(a_vertex, 0.0, 1.0);\r\n    ndcOffset(vertex, u_ndcOffset);\r\n\r\n    gl_Position = vertex;\r\n}\r\n";
  }, function(e3, t3) {
    e3.exports = "\r\nprecision lowp float;\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define texture(sampler, coord) texture2D(sampler, coord)\r\n#else \r\n    #define varying in\r\n#endif\r\n\r\n\r\n\r\n#if __VERSION__ == 100\r\n    #define fragColor gl_FragColor\r\n    #extension GL_OES_standard_derivatives : enable\r\n#else \r\n    layout(location = 0) out vec4 fragColor;\r\n#endif\r\n\r\nuniform int u_frameNumber;\r\n\r\nvarying vec2 v_uv;\r\n\r\n\r\nvoid main(void)\r\n{\r\n    vec3 color = vec3(28.0 / 255.0, 117.0 / 255.0, 188.0 / 255.0);\r\n    color += (vec3(0.0, v_uv) - 0.5) * 0.125;\r\n\r\n    vec2 awidth = fwidth(v_uv) * (sin(float(u_frameNumber) * 0.1) * 7.0 + 8.0);\r\n    vec2 cstep = abs(step(awidth, v_uv) - step(awidth, 1.0 - v_uv));\r\n    if(!any(bvec2(cstep))) {\r\n        discard;\r\n    }\r\n    fragColor = vec4(color, 1.0); \r\n}\r\n";
  }, function(e3, t3, r3) {
    var i2;
    !function(e4) {
      var t4 = function() {
        function e5(e6, t5) {
          if (this._blockListenerByEvent = /* @__PURE__ */ new Map(), this._element = e6, t5 !== void 0)
            for (var r4 = 0, i3 = t5; r4 < i3.length; r4++) {
              var n2 = i3[r4];
              this.block(n2);
            }
        }
        return e5.prototype.block = function(e6) {
          this._blockListenerByEvent.has(e6) || (this._blockListenerByEvent.set(e6, function(e7) {
            return e7.preventDefault(), e7.stopPropagation(), false;
          }), this._element.addEventListener(e6, this._blockListenerByEvent.get(e6)));
        }, e5.prototype.unblock = function(e6) {
          this._blockListenerByEvent.has(e6) && (this._element.removeEventListener(e6, this._blockListenerByEvent.get(e6)), this._blockListenerByEvent.delete(e6));
        }, e5;
      }();
      e4.EventBlocker = t4;
    }(i2 || (i2 = {})), e3.exports = i2;
  }, function(e3, t3, r3) {
    var i2, n2 = r3(0);
    !function(e4) {
      var t4 = function() {
        function e5() {
        }
        return e5.queryAndCacheAPI = function() {
          if (e5._exit === void 0) {
            for (var t5 = window.document, r4 = [t5.exitFullScreen, t5.msExitFullscreen, t5.mozCancelFullScreen, t5.webkitExitFullscreen, void 0], i3 = 0; i3 < r4.length && r4[i3] === void 0; ++i3)
              ;
            switch (i3) {
              case 0:
                e5._exit = function() {
                  return t5.exitFullScreen();
                }, e5._request = function(e6) {
                  return e6.requestFullscreen();
                }, e5._element = function() {
                  return t5.fullscreenElement;
                }, e5._event = "fullscreenchange";
                break;
              case 1:
                e5._exit = function() {
                  return t5.msExitFullscreen();
                }, e5._request = function(e6) {
                  return e6.msRequestFullscreen();
                }, e5._element = function() {
                  return t5.msFullscreenElement;
                }, e5._event = "msfullscreenchange";
                break;
              case 2:
                e5._exit = function() {
                  return t5.mozCancelFullScreen();
                }, e5._request = function(e6) {
                  return e6.mozRequestFullScreen();
                }, e5._element = function() {
                  return t5.mozFullScreenElement;
                }, e5._event = "mozfullscreenchange";
                break;
              case 3:
                e5._exit = function() {
                  return t5.webkitExitFullscreen();
                }, e5._request = function(e6) {
                  return e6.webkitRequestFullscreen();
                }, e5._element = function() {
                  return t5.webkitFullscreenElement;
                }, e5._event = "webkitfullscreenchange";
                break;
              default:
                n2.assert(false, "none of the following fullscreen apis was found: native, ms, moz, or webkit");
            }
          }
        }, e5.active = function() {
          return e5._element() !== void 0 && e5._element() !== null;
        }, e5.toggle = function(t5, r4) {
          if (t5 !== void 0) {
            e5.queryAndCacheAPI();
            var i3 = e5.active();
            if (!i3) {
              var n3 = getComputedStyle(t5);
              e5._size[0] = n3.width, e5._size[1] = n3.height;
            }
            r4 && r4(), i3 ? (e5._callback = void 0, window.removeEventListener(e5._event, e5.removeEventListener), t5.style.width = e5._size[0], t5.style.height = e5._size[1]) : (e5._callback = r4, window.addEventListener(e5._event, e5.addEventListener)), i3 ? e5._exit() : e5._request(t5);
          }
        }, e5._size = ["0", "0"], e5.addEventListener = function() {
          window.removeEventListener(e5._event, e5.addEventListener), window.addEventListener(e5._event, e5.removeEventListener);
        }, e5.removeEventListener = function() {
          e5._callback && (e5._callback(), e5._callback = void 0), window.removeEventListener(e5._event, e5.removeEventListener);
        }, e5;
      }();
      e4.Fullscreen = t4;
    }(i2 || (i2 = {})), e3.exports = i2;
  }]);
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.AttributeBuffer = void 0;
  var i2 = r2(0), n2 = i2.auxiliaries.assert, o = i2.auxiliaries.log, a = i2.auxiliaries.LogLevel, s = r2(57), u2 = r2(2);
  !function(e3) {
    !function(e4) {
      e4.String = "string", e4.Numbers = "numbers", e4.Uint8 = "uint8", e4.Int8 = "int8", e4.Uint16 = "uint16", e4.Int16 = "int16", e4.Uint32 = "uint32", e4.Int32 = "int32", e4.Float32 = "float32", e4.Float64 = "float64";
    }(e3.DataType || (e3.DataType = {})), function(e4) {
      e4.Native = "native";
    }(e3.Encoding || (e3.Encoding = {})), function(e4) {
      e4.Topology = "topology", e4.Identity = "identity";
    }(e3.Linearization || (e3.Linearization = {})), function(e4) {
      e4.IdMapping = "id-mapping", e4.IndexMapping = "index-mapping";
    }(e3.LinearizationMapping || (e3.LinearizationMapping = {})), e3.createNormalization = function(e4, t3) {
      return e4.edgeIndexToTopologyIndexMap;
    }, e3.create = function(t3, r3, i3, n3) {
      var s2 = i3.indexOf(":");
      if (s2 === void 0 || s2 < 0)
        o(a.Error, "Buffer type not recognized.");
      else
        switch (i3.substr(0, s2)) {
          case "buffer":
            return e3.createSourceBuffer(r3, i3.substr(s2 + 1), n3);
          case "bufferView":
            return e3.createView(t3, r3, i3.substr(s2 + 1), n3);
          default:
            o(a.Error, "Buffer type not recognized.");
        }
    }, e3.range = function(e4) {
      if (e4.length !== 0)
        return Array.prototype.reduce.apply(e4, [function(e5, t3) {
          return [Math.min(t3, e5[0]), Math.max(t3, e5[1])];
        }, [1 / 0, -1 / 0]]);
    }, e3.createSourceBuffer = function(t3, r3, i3) {
      var o2 = i3.buffers.find(function(e4) {
        return e4.identifier === r3;
      });
      if (o2 && o2.encoding === e3.Encoding.Native)
        return n2(o2.linearization !== e3.Linearization.Identity, "Expect linearization to be of type topology or mapping. Identity is currently unsupported"), u2.Configuration.isLinearizationMapping(o2.linearization) ? s.AttributeTransformations.renormalize_using_intermediate_linearization(o2.data, o2.linearization, t3) : (n2(o2.linearization === e3.Linearization.Topology, "Expect linearization to be of type topology or identity."), s.AttributeTransformations.renormalize(o2.data, t3));
    }, e3.createView = function(t3, r3, i3, n3) {
      var o2 = n3.bufferViews.find(function(e4) {
        return e4.identifier === i3;
      });
      if (o2 !== void 0) {
        var a2 = e3.create(t3, r3, o2.source, n3);
        if (a2 !== void 0)
          return o2.transformations === void 0 || o2.transformations.length === 0 ? a2 : s.AttributeTransformations.applyTransformations(t3, r3, a2, o2.transformations, n3);
      }
    };
  }(t2.AttributeBuffer || (t2.AttributeBuffer = {}));
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.Configuration = void 0;
  var i2 = r2(0), n2 = r2(1), o = function() {
    function e3() {
      this._altered = Object.assign(new i2.ChangeLookup(), { any: false, topology: false, buffers: false, bufferViews: false, colors: false, layout: { any: false, weight: false, sort: false, algorithm: false, siblingMargin: false, parentPadding: false, accessoryPadding: false }, geometry: { any: false, aggregation: false, outlineWidth: false, emphasis: { any: false, outline: false, highlight: false, outlineWidth: false }, areaScale: false, heights: false, heightScale: false, levitate: false, colors: false, parentLayer: false }, labels: false, animations: false }), this._buffers = [], this._bufferViews = [], this._colors = [], this._animations = [];
    }
    return Object.defineProperty(e3.prototype, "altered", { get: function() {
      return this._altered;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "topology", { get: function() {
      return this._topology;
    }, set: function(t3) {
      var r3 = e3.TREEMAP_SCHEMA.properties.topology;
      i2.properties.complement(t3, r3), i2.properties.compare(t3, this._topology, this._altered, "topology"), this._topology = t3;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "buffers", { get: function() {
      return this._buffers;
    }, set: function(t3) {
      var r3 = e3.TREEMAP_SCHEMA.properties.buffers;
      i2.properties.validate(t3, r3, []) && (i2.properties.complement(t3, r3), i2.properties.compare(t3, this._buffers, this._altered, "buffers"), this._buffers = t3);
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "bufferViews", { get: function() {
      return this._bufferViews;
    }, set: function(t3) {
      var r3 = e3.TREEMAP_SCHEMA.properties.bufferViews;
      i2.properties.validate(t3, r3, [[e3.BUFFER_REFERENCE_SCHEMA, "/BufferReference"]]) && (i2.properties.complement(t3, r3), i2.properties.compare(t3, this._bufferViews, this._altered, "bufferViews"), this._bufferViews = t3);
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "colors", { get: function() {
      return this._colors;
    }, set: function(t3) {
      var r3 = e3.TREEMAP_SCHEMA.properties.colors;
      i2.properties.validate(t3, r3, [[e3.COLOR_REFERENCE_SCHEMA, "/ColorReference"]]) && (i2.properties.complement(t3, r3), i2.properties.compare(t3, this._colors, this._altered, "colors"), this._colors = t3);
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "layout", { get: function() {
      return this._layout;
    }, set: function(t3) {
      var r3 = e3.TREEMAP_SCHEMA.properties.layout;
      i2.properties.validate(t3, r3, [[e3.BUFFER_REFERENCE_SCHEMA, "/BufferReference"]]) && (i2.properties.complement(t3, r3), i2.properties.compare(t3, this._layout, this._altered, "layout"), this._layout = t3);
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "geometry", { get: function() {
      return this._geometry;
    }, set: function(t3) {
      var r3 = e3.TREEMAP_SCHEMA.properties.geometry;
      i2.properties.validate(t3, r3, [[e3.BUFFER_REFERENCE_SCHEMA, "/BufferReference"], [e3.COLOR_REFERENCE_SCHEMA, "/ColorReference"], [e3.COLOR_SCHEMA_SCHEMA, "/ColorScheme"]]) && (i2.properties.complement(t3, r3), i2.properties.compare(t3, this._geometry, this._altered, "geometry"), this._geometry = t3);
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "labels", { get: function() {
      return this._labels;
    }, set: function(t3) {
      var r3 = e3.TREEMAP_SCHEMA.properties.labels;
      i2.properties.validate(t3, r3, [[e3.BUFFER_REFERENCE_SCHEMA, "/BufferReference"]]) && (i2.properties.complement(t3, r3), i2.properties.compare(t3, this._labels, this._altered, "labels"), this._labels = t3);
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "animations", { get: function() {
      return this._animations;
    }, set: function(t3) {
      var r3 = e3.TREEMAP_SCHEMA.properties.animations;
      i2.properties.validate(t3, r3, [[e3.BUFFER_REFERENCE_SCHEMA, "/BufferReference"]]) && (i2.properties.complement(t3, r3), i2.properties.compare(t3, this._animations, this._altered, "animations"), this._animations = t3);
    }, enumerable: false, configurable: true }), e3.TREEMAP_SCHEMA = r2(59), e3.BUFFER_REFERENCE_SCHEMA = r2(60), e3.COLOR_REFERENCE_SCHEMA = r2(61), e3.COLOR_SCHEMA_SCHEMA = r2(62), e3;
  }();
  t2.Configuration = o, function(e3) {
    e3.isLinearizationMapping = function(e4) {
      return !(typeof e4 == "string" || e4 instanceof String || e4 in n2.AttributeBuffer.Linearization) && ("type" in e4 && e4.type in n2.AttributeBuffer.LinearizationMapping && "mapping" in e4);
    };
  }(o = t2.Configuration || (t2.Configuration = {})), t2.Configuration = o;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.Topology = void 0;
  var i2 = r2(0).auxiliaries.assert, n2 = r2(58), o = r2(7), a = function() {
    function e3() {
      this._linearization = new n2.Linearization(), this._nodes = new Array(), this._innerNodeIndicesById = /* @__PURE__ */ new Map(), this._leafNodeIndicesById = /* @__PURE__ */ new Map(), this._edgeIndexToTopologyIndexMap = new Array(), this._topologyIndexToEdgeIndexMap = new Array();
    }
    return e3.prototype.fromInterleavedEdgesIdById = function(e4) {
      i2(e4.length % 2 == 0, "expected length of interleaved edges list to be a multiple of 2");
      var t3 = new Array(), r3 = /* @__PURE__ */ new Map(), n3 = new Array();
      t3.push(new o.Node(e4[0], 0)), r3.set(t3[0].id, t3[0]), n3.push(new Array()), n3[0].push(t3[0]);
      for (var a2 = t3[0], s = 0; s < e4.length; s += 2) {
        var u2 = [e4[s + 0], e4[s + 1]], c2 = s + 2 < e4.length ? [e4[s + 2], e4[s + 3]] : [o.Node.INVALID_INDEX, o.Node.INVALID_INDEX];
        if (a2.lastChild !== o.Node.INVALID_INDEX) {
          var l2 = t3[a2.lastChild];
          i2(l2.nextSibling === o.Node.INVALID_INDEX, "expected next sibling to be unset for last child of a node"), l2.initialNextSibling = t3.length, l2.nextSibling = t3.length;
        }
        var f2 = new o.Node(u2[1], t3.length, a2);
        t3.push(f2), n3.length === f2.depth && n3.push(new Array()), n3[f2.depth].push(f2), r3.set(f2.id, f2), c2[0] === u2[1] ? a2 = f2 : c2[0] !== u2[0] && c2[0] !== o.Node.INVALID_ID && (i2(r3.has(c2[0]), "expected next parent to be already created, given " + c2[0]), a2 = r3.get(c2[0]));
      }
      this.fromNodes(t3, n3);
    }, e3.prototype.fromInterleavedEdgesIndexById = function(e4) {
      i2(e4.length % 2 == 0, "expected length of interleaved edges list to be a multiple of 2");
      var t3 = new Array(), r3 = new Array(), n3 = 0;
      for (t3.push(new o.Node(0, 0)), r3.push(new Array()), r3[0].push(t3[0]), e4[0] === -1 && (n3 += 2); n3 < e4.length; n3 += 2) {
        var a2 = [e4[n3 + 0], e4[n3 + 1]], s = void 0;
        if (a2[0] < t3.length && e4[0] === -1 ? s = t3[a2[0]] : (i2(a2[0] < t3.length, "expected parent to be processed before child"), s = t3[a2[0] < 0 ? 0 : a2[0] + 1]), s.lastChild !== o.Node.INVALID_INDEX) {
          var u2 = t3[s.lastChild];
          i2(u2.nextSibling === o.Node.INVALID_INDEX, "expected next sibling to be unset for last child of a node"), u2.initialNextSibling = t3.length, u2.nextSibling = t3.length;
        }
        var c2 = new o.Node(a2[1], t3.length, s);
        t3.push(c2), r3.length === c2.depth && r3.push(new Array()), r3[c2.depth].push(c2);
      }
      this.fromNodes(t3, r3);
    }, e3.prototype.fromNodes = function(e4, t3) {
      this._linearization.clear(), this._innerNodeIndicesById.clear(), this._leafNodeIndicesById.clear(), this._edgeIndexToTopologyIndexMap.length = e4.length, this._topologyIndexToEdgeIndexMap.length = e4.length, this._edgeIndexToTopologyIndexMap.fill(-1), this._topologyIndexToEdgeIndexMap.fill(-1);
      for (var r3 = new Array(), i3 = new Array(), n3 = 0, o2 = t3; n3 < o2.length; n3++) {
        for (var a2 = 0, s = (h2 = o2[n3]).filter(function(e5) {
          return e5.isLeaf;
        }); a2 < s.length; a2++) {
          var u2 = s[a2];
          r3.push(u2);
        }
        var c2 = h2.filter(function(e5) {
          return !e5.isLeaf;
        });
        c2.length > 0 && i3.push(c2);
      }
      i3.push(r3);
      for (var l2 = 0, f2 = i3; l2 < f2.length; l2++) {
        var h2 = f2[l2];
        this._linearization.addSliceByLength(h2.length);
      }
      var d2 = /* @__PURE__ */ new Map();
      this._nodes.length = e4.length, d2.set(-1, -1);
      for (var p2 = 0, _2 = 0, g2 = i3; _2 < g2.length; _2++)
        for (var m2 = 0, v2 = g2[_2]; m2 < v2.length; m2++) {
          u2 = v2[m2];
          this._nodes[p2] = u2, (u2.isLeaf ? this._leafNodeIndicesById : this._innerNodeIndicesById).set(u2.id, p2), d2.set(u2.index, p2), this._edgeIndexToTopologyIndexMap[u2.index] = p2, this._topologyIndexToEdgeIndexMap[p2] = u2.index, ++p2;
        }
      for (var b2 = 0, y2 = this._nodes; b2 < y2.length; b2++) {
        (u2 = y2[b2]).index = d2.get(u2.index), u2.parent = d2.get(u2.parent), u2.initialNextSibling = d2.get(u2.initialNextSibling), u2.initialFirstChild = d2.get(u2.initialFirstChild), u2.nextSibling = u2.initialNextSibling, u2.firstChild = u2.initialFirstChild;
      }
    }, e3.prototype.sliceDo = function(e4, t3) {
      var r3 = this;
      this._linearization.sliceDo(e4, function(e5, i3) {
        for (var n3 = e5; n3 <= i3; ++n3)
          t3(r3._nodes[n3]);
      });
    }, e3.prototype.initialize = function(t3, r3, n3) {
      var o2, a2;
      switch (r3) {
        case e3.InputSemantics.ParentIdId:
          switch (t3) {
            case e3.InputFormat.Tupled:
              this.fromInterleavedEdgesIdById((o2 = []).concat.apply(o2, n3));
              break;
            case e3.InputFormat.Interleaved:
            default:
              i2(n3.length % 2 == 0, "Interleaved edges expect to be a multiple of two ids."), this.fromInterleavedEdgesIdById(n3);
          }
          break;
        case e3.InputSemantics.ParentIndexId:
          switch (t3) {
            case e3.InputFormat.Tupled:
              this.fromInterleavedEdgesIndexById((a2 = []).concat.apply(a2, n3));
              break;
            case e3.InputFormat.Interleaved:
            default:
              i2(n3.length % 2 == 0, "Interleaved edges expect to be a multiple of two ids."), this.fromInterleavedEdgesIndexById(n3);
          }
      }
      return true;
    }, e3.prototype.node = function(e4) {
      if (!(this._nodes.length <= e4))
        return this._nodes[e4];
    }, e3.prototype.innerNodeIndexById = function(e4) {
      return this._innerNodeIndicesById.get(e4);
    }, e3.prototype.leafNodeIndexById = function(e4) {
      return this._leafNodeIndicesById.get(e4);
    }, e3.prototype.innerNodeById = function(e4) {
      var t3 = this.innerNodeIndexById(e4);
      if (t3 !== void 0)
        return this.node(t3);
    }, e3.prototype.leafNodeById = function(e4) {
      var t3 = this.leafNodeIndexById(e4);
      if (t3 !== void 0)
        return this.node(t3);
    }, e3.prototype.forEachInnerNode = function(e4) {
      for (var t3 = 0; t3 < this.depth - 1; ++t3)
        this.sliceDo(t3, e4);
    }, e3.prototype.parentsDoUntilDepth = function(e4, t3) {
      for (var r3 = Math.min(Math.max(e4, 0), this.depth - 1), i3 = 0; i3 < r3; ++i3)
        this.sliceDo(i3, t3);
    }, e3.prototype.forEachLeafNode = function(e4) {
      this.sliceDo(this.depth - 1, e4);
    }, e3.prototype.nodesDo = function(e4) {
      this.forEachInnerNode(e4), this.forEachLeafNode(e4);
    }, e3.prototype.reverseNodesDo = function(e4) {
      this.forEachLeafNode(e4), this.reverseParentsDo(e4);
    }, e3.prototype.depthFirstDo = function(e4) {
      e4(this.root);
    }, e3.prototype.childrenDo = function(e4, t3) {
      i2(e4 !== void 0, "Parent is expected to be valid."), e4.firstChild !== o.Node.INVALID_INDEX && this.siblingsDo(this.node(e4.firstChild), t3);
    }, e3.prototype.siblingsDo = function(e4, t3) {
      var r3 = e4;
      for (t3(r3); r3.nextSibling !== o.Node.INVALID_INDEX; )
        t3(r3 = this.node(r3.nextSibling));
    }, e3.prototype.siblingsRangeDo = function(e4, t3, r3) {
      if (t3 === void 0)
        return this.siblingsDo(e4, r3);
      for (var i3 = e4; i3 !== void 0 && i3 !== t3; i3 = this.node(i3.nextSibling))
        r3(i3);
    }, e3.prototype.reverseParentsDo = function(e4) {
      for (var t3 = this.depth - 2; t3 >= 0; --t3)
        this.sliceDo(t3, e4);
    }, Object.defineProperty(e3.prototype, "linearization", { get: function() {
      return this._linearization;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "numberOfNodes", { get: function() {
      return this._linearization.numberOfNodes;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "numberOfInnerNodes", { get: function() {
      return this._linearization.numberOfInnerNodes;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "numberOfLeafNodes", { get: function() {
      return this._linearization.numberOfLeafNodes;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "depth", { get: function() {
      return this._linearization.length;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "root", { get: function() {
      return this._nodes[0];
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "nodes", { get: function() {
      return this._nodes;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "edgeIndexToTopologyIndexMap", { get: function() {
      return this._edgeIndexToTopologyIndexMap;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "topologyIndexToEdgeIndexMap", { get: function() {
      return this._topologyIndexToEdgeIndexMap;
    }, enumerable: false, configurable: true }), e3;
  }();
  t2.Topology = a, function(e3) {
    !function(e4) {
      e4.Interleaved = "interleaved", e4.Tupled = "tupled";
    }(e3.InputFormat || (e3.InputFormat = {})), function(e4) {
      e4.ParentIdId = "parent-id-id", e4.ParentIndexId = "parent-index-id";
    }(e3.InputSemantics || (e3.InputSemantics = {})), function(e4) {
      e4.TopDown = "top-down", e4.BottomUp = "bottom-up", e4.DepthFirst = "depth-first";
    }(e3.IterationDirection || (e3.IterationDirection = {}));
  }(a = t2.Topology || (t2.Topology = {})), t2.Topology = a;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.Rect = void 0;
  var i2 = r2(0).auxiliaries.assert, n2 = function() {
    function e3(e4, t3, r3, i3, n3) {
      this._left = e4, this._right = r3, this._top = i3, this._bottom = t3, this.orientation = n3;
    }
    return e3.clone = function(t3) {
      return new e3(t3.left, t3.bottom, t3.right, t3.top);
    }, Object.defineProperty(e3.prototype, "area", { get: function() {
      return this.width * this.height;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "center", { get: function() {
      return [(this._left + this._right) / 2, (this._bottom + this._top) / 2];
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "shorterSide", { get: function() {
      return Math.min(this.width, this.height);
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "longerSide", { get: function() {
      return Math.max(this.width, this.height);
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "isReversed", { get: function() {
      return this.orientation !== void 0 && this.orientation >= e3.Orientation.DC;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "top", { get: function() {
      return this._top;
    }, set: function(e4) {
      i2(e4 >= this.bottom, "Non-negative height expected"), this._top = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "left", { get: function() {
      return this._left;
    }, set: function(e4) {
      i2(e4 <= this.right, "Non-negative width expected"), this._left = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "right", { get: function() {
      return this._right;
    }, set: function(e4) {
      i2(e4 >= this.left, "Non-negative width expected"), this._right = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "bottom", { get: function() {
      return this._bottom;
    }, set: function(e4) {
      i2(e4 <= this.top, "Non-negative height expected"), this._bottom = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "width", { get: function() {
      return this._right - this._left;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "height", { get: function() {
      return this._top - this._bottom;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "isHorizontal", { get: function() {
      return this.width > this.height;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "isVertical", { get: function() {
      return this.width <= this.height;
    }, enumerable: false, configurable: true }), e3.prototype.relativeTop = function(e4) {
      return this.relativeRect(0, 1 - e4, 1, e4);
    }, e3.prototype.truncateTop = function(t3) {
      return i2(t3 <= this._top && t3 >= this._bottom, "Expect new top to be within rectangle"), new e3(this._left, this._bottom, this._right, t3);
    }, e3.prototype.relativeLeft = function(e4) {
      return this.relativeRect(0, 0, e4, 1);
    }, e3.prototype.truncateLeft = function(t3) {
      return i2(t3 <= this._right && t3 >= this._left, "Expect new top to be within rectangle"), new e3(t3, this._bottom, this._right, this._top);
    }, e3.prototype.relativeRight = function(e4) {
      return this.relativeRect(1 - e4, 0, e4, 1);
    }, e3.prototype.truncateRight = function(t3) {
      return i2(t3 <= this._right && t3 >= this._left, "Expect new top to be within rectangle"), new e3(this._left, this._bottom, t3, this._top);
    }, e3.prototype.relativeBottom = function(e4) {
      return this.relativeRect(0, 0, 1, e4);
    }, e3.prototype.truncateBottom = function(t3) {
      return i2(t3 <= this._top && t3 >= this._bottom, "Expect new top to be within rectangle"), new e3(this._left, t3, this._right, this._top);
    }, e3.prototype.applyOffset = function(e4, t3) {
      this._left += e4, this._right += e4, this._top += t3, this._bottom += t3;
    }, e3.prototype.relativeRect = function(t3, r3, n3, o, a) {
      i2(t3 >= 0 && t3 <= 1, "Expect posX to be in [0, 1]"), i2(r3 >= 0 && r3 <= 1, "Expect posY to be in [0, 1]"), i2(n3 >= 0 && n3 <= 1, "Expect extX to be in [0, 1]"), i2(o >= 0 && o <= 1, "Expect extY to be in [0, 1]"), i2(t3 + n3 <= 1, "Final width must not exceed given width"), i2(r3 + o <= 1, "Final height must not exceed given height");
      var s = this._left + t3 * this.width, u2 = this._bottom + r3 * this.height;
      return new e3(s, u2, Math.min(s + n3 * this.width, this._right), Math.min(u2 + o * this.height, this._top), a);
    }, e3.prototype.equalizedMargin = function(e4, t3, r3) {
      if (this.area <= 0)
        return 0;
      var n3 = e4, o = 2 * this.width * e4 + 2 * this.height * e4 - 4 * e4 * e4;
      if (o < 0 || o / this.area >= t3 || this.shorterSide < 2 * e4) {
        var a = void 0, s = this.area * t3 * 0.99, u2 = 0.25 * (this.width + this.height), c2 = u2 * u2 - 0.25 * s;
        if (c2 <= 0)
          a = u2;
        else {
          var l2 = Math.sqrt(c2), f2 = u2 + l2, h2 = u2 - l2;
          a = (a = Math.min(f2, h2)) < 0 ? 0 : a;
        }
        i2(a < n3, "expected " + a + " to be smaller than " + n3), n3 = a;
      }
      return n3;
    }, e3.prototype.equalizedRelativeMargin = function(e4) {
      if (this.area <= 0)
        return 0;
      var t3 = this.area * (1 - e4), r3 = this.width / this.height, i3 = 0.5 * -(Math.sqrt(t3 * r3) + Math.sqrt(t3 / r3)), n3 = i3 * i3 * 0.25 - 0.25 * (this.area - t3), o = n3 < 0 ? 0 : Math.sqrt(n3), a = 0.5 * -i3 + o, s = 0.5 * -i3 - o;
      return a < 0 || s < 0 ? Math.max(a, s) : Math.min(a, s);
    }, e3.prototype.padded = function(t3) {
      return this.width < 2 * t3 || this.height < 2 * t3 ? new e3(this.left, this.bottom, this.left, this.bottom) : new e3(this.left + t3, this.bottom + t3, this.right - t3, this.top - t3);
    }, e3.prototype.paddedWithMinArea = function(e4, t3) {
      return e4 <= 0 || 1 - (2 * this.width * e4 + 2 * this.height * e4 - 4 * e4 * e4) / this.area >= t3 && this.shorterSide > 4 * e4 ? this.padded(e4) : this.padded(this.shorterSide / 4).relativePadded(Math.max(0, 1 - e4 / (4 * this.shorterSide)));
    }, e3.prototype.relativePadded = function(e4) {
      var t3 = e4 / 2;
      return this.relativeRect(t3, t3, 1 - e4, 1 - e4);
    }, e3.prototype.map = function(t3, r3) {
      var i3 = (this.left - t3.left) / t3.width * r3.width + r3.left, n3 = r3.right - (t3.right - this.right) / t3.width * r3.width, o = r3.top - (t3.top - this.top) / t3.height * r3.height;
      return new e3(i3, (this.bottom - t3.bottom) / t3.height * r3.height + r3.bottom, n3, o);
    }, e3.prototype.enclose = function(e4) {
      var t3 = Math.min(this.left, e4.left), r3 = Math.max(this.top, e4.top), i3 = Math.max(this.right, e4.right), n3 = Math.min(this.bottom, e4.bottom);
      this._left = t3, this._right = i3, this._top = r3, this._bottom = n3;
    }, e3.prototype.intersects = function(e4) {
      return !(e4.left + Number.EPSILON >= this.right) && (!(e4.right <= this.left + Number.EPSILON) && (!(e4.top <= this.bottom + Number.EPSILON) && !(e4.bottom + Number.EPSILON >= this.top)));
    }, e3.prototype.comprises = function(e4) {
      return this.left - Number.EPSILON <= e4.left + Number.EPSILON && this.right + Number.EPSILON >= e4.right - Number.EPSILON && this.bottom - Number.EPSILON <= e4.bottom + Number.EPSILON && this.top + Number.EPSILON >= e4.top - Number.EPSILON;
    }, Object.defineProperty(e3.prototype, "aspectRatio", { get: function() {
      return this.width / this.height;
    }, enumerable: false, configurable: true }), e3.prototype.centerAround = function(e4) {
      var t3 = this.center, r3 = [e4[0] - t3[0], e4[1] - t3[1]];
      this.applyOffset(r3[0], r3[1]);
    }, e3;
  }();
  t2.Rect = n2, function(e3) {
    !function(e4) {
      e4[e4.CD = 0] = "CD", e4[e4.AC = 1] = "AC", e4[e4.BA = 2] = "BA", e4[e4.DB = 3] = "DB", e4[e4.DC = 4] = "DC", e4[e4.CA = 5] = "CA", e4[e4.AB = 6] = "AB", e4[e4.BD = 7] = "BD";
    }(e3.Orientation || (e3.Orientation = {}));
  }(n2 = t2.Rect || (t2.Rect = {})), t2.Rect = n2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.NodeSort = void 0;
  var i2 = r2(1), n2 = r2(7), o = function() {
    function e3() {
    }
    return e3.byValue = function(e4, t3, r3) {
      if (!(t3.length < 2)) {
        t3.sort(r3);
        for (var i3 = 0; i3 < t3.length - 1; ++i3)
          t3[i3][0].nextSibling = t3[i3 + 1][0].index;
        t3[t3.length - 1][0].nextSibling = n2.Node.INVALID_INDEX, e4.firstChild = t3[0][0].index;
      }
    }, e3.byValues = function(t3, r3, i3, n3) {
      var o2 = new Array(), a = t3.node(r3.firstChild);
      do {
        o2.push([a, i3[a.index]]), a = t3.node(a.nextSibling);
      } while (a !== void 0);
      e3.byValue(r3, o2, n3);
    }, e3.byIdentifier = function(t3, r3, i3) {
      for (var n3 = new Array(), o2 = t3.node(r3.firstChild); o2 !== void 0; )
        n3.push([o2, o2.id]), o2 = t3.node(o2.nextSibling);
      e3.byValue(r3, n3, i3);
    }, e3.restoreOriginalSortOrder = function(e4, t3) {
      t3.firstChild = t3.initialFirstChild;
      for (var r3 = e4.node(t3.initialFirstChild); r3 !== void 0; r3 = e4.node(r3.initialNextSibling))
        r3.nextSibling = r3.initialNextSibling;
    }, e3.sortNodes = function(t3, r3, n3, o2) {
      var a, s = o2.layout.sort;
      if (s === void 0 || s.algorithm === e3.Algorithm.Keep)
        return t3.forEachInnerNode(function(r4) {
          return e3.restoreOriginalSortOrder(t3, r4);
        }), true;
      switch (s.algorithm) {
        case e3.Algorithm.Ascending:
          a = e3.ASCENDING_COMPARATOR;
          break;
        case e3.Algorithm.Descending:
        default:
          a = e3.DESCENDING_COMPARATOR;
      }
      switch (s.key) {
        case e3.Key.Weight:
          var u2 = i2.AttributeBuffer.create(t3, r3, o2.layout.weight, o2);
          u2 && t3.forEachInnerNode(function(r4) {
            return e3.byValues(t3, r4, u2, a);
          });
          break;
        case e3.Key.Identity:
          t3.forEachInnerNode(function(r4) {
            return e3.byIdentifier(t3, r4, a);
          });
          break;
        default:
          n3 !== void 0 && t3.forEachInnerNode(function(r4) {
            return e3.byValues(t3, r4, n3, a);
          });
      }
      return true;
    }, e3.ASCENDING_COMPARATOR = function(e4, t3) {
      return e4[1] - t3[1];
    }, e3.DESCENDING_COMPARATOR = function(e4, t3) {
      return t3[1] - e4[1];
    }, e3;
  }();
  t2.NodeSort = o, function(e3) {
    !function(e4) {
      e4.Keep = "keep", e4.Ascending = "ascending", e4.Descending = "descending";
    }(e3.Algorithm || (e3.Algorithm = {})), function(e4) {
      e4.Identity = "identity", e4.Weight = "weight";
    }(e3.Key || (e3.Key = {}));
  }(o = t2.NodeSort || (t2.NodeSort = {})), t2.NodeSort = o;
}, function(e2, t2, r2) {
  var i2, n2 = this && this.__extends || (i2 = function(e3, t3) {
    return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t4) {
      e4.__proto__ = t4;
    } || function(e4, t4) {
      for (var r3 in t4)
        Object.prototype.hasOwnProperty.call(t4, r3) && (e4[r3] = t4[r3]);
    })(e3, t3);
  }, function(e3, t3) {
    if (typeof t3 != "function" && t3 !== null)
      throw new TypeError("Class extends value " + String(t3) + " is not a constructor or null");
    function r3() {
      this.constructor = e3;
    }
    i2(e3, t3), e3.prototype = t3 === null ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
  }), o = this && this.__decorate || function(e3, t3, r3, i3) {
    var n3, o2 = arguments.length, a2 = o2 < 3 ? t3 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t3, r3) : i3;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
      a2 = Reflect.decorate(e3, t3, r3, i3);
    else
      for (var s2 = e3.length - 1; s2 >= 0; s2--)
        (n3 = e3[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t3, r3, a2) : n3(t3, r3)) || a2);
    return o2 > 3 && a2 && Object.defineProperty(t3, r3, a2), a2;
  };
  Object.defineProperty(t2, "__esModule", { value: true }), t2.MultiRenderTarget = void 0;
  var a = r2(0), s = r2(0), u2 = a.auxiliaries.assert, c2 = function(e3) {
    function t3(t4) {
      var r3 = e3.call(this) || this;
      return r3._debuggableTargets = new Array(), r3._debuggableTargetNames = new Array(), r3._context = t4, r3;
    }
    return n2(t3, e3), t3.prototype.initializeES2_basic = function(e4, t4) {
      var r3 = this._context.gl, i3 = this._context.gl2facade;
      this._drawRestricted = true, this._colorRenderTexture.initialize(e4, t4, r3.RGBA, r3.RGBA, r3.UNSIGNED_BYTE), this._idRenderTexture.initialize(e4, t4, r3.RGBA, r3.RGBA, r3.UNSIGNED_BYTE), this._depthStencilRenderTexture.initialize(e4, t4, r3.RGB, r3.RGB, r3.UNSIGNED_BYTE), this._depthStencilRenderbuffer.initialize(e4, t4, r3.DEPTH_STENCIL), this._depthFBO = new s.Framebuffer(this._context, "DepthFBO"), this._idFBO = new s.Framebuffer(this._context, "IdFBO"), this._primaryFBO.initialize([[i3.COLOR_ATTACHMENT0, this._colorRenderTexture], [r3.DEPTH_STENCIL_ATTACHMENT, this._depthStencilRenderbuffer]]), this._secondaryFBO.initialize([[i3.COLOR_ATTACHMENT0, this._colorRenderTexture], [r3.DEPTH_STENCIL_ATTACHMENT, this._depthStencilRenderbuffer]]), this._idFBO.initialize([[i3.COLOR_ATTACHMENT0, this._idRenderTexture], [r3.DEPTH_STENCIL_ATTACHMENT, this._depthStencilRenderbuffer]]), this._idFBO.clearColor([1, 1, 1, 1], 0), this._depthFBO.initialize([[i3.COLOR_ATTACHMENT0, this._depthStencilRenderTexture], [r3.DEPTH_STENCIL_ATTACHMENT, this._depthStencilRenderbuffer]]), this._depthFBO.clearColor([1, 1, 1, 1], 0);
    }, t3.prototype.initializeES2_extensions = function(e4, t4) {
      var r3 = this._context.gl, i3 = this._context.gl2facade;
      this._drawRestricted = false, this._context.isWebGL1 && (u2(this._context.supportsDrawBuffers, "expected WEBGL_draw_buffers to be supported"), u2(this._context.supportsDepthTexture, "expected WEBGL_depth_texture to be supported")), this._colorRenderTexture.initialize(e4, t4, r3.RGBA, r3.RGBA, r3.UNSIGNED_BYTE), this._idRenderTexture.initialize(e4, t4, r3.RGBA, r3.RGBA, r3.UNSIGNED_BYTE), this._depthStencilRenderTexture.initialize(e4, t4, r3.DEPTH_STENCIL, r3.DEPTH_STENCIL, this._context.depthTexture.UNSIGNED_INT_24_8_WEBGL), this._depthStencilRenderbuffer.initialize(e4, t4, r3.DEPTH_STENCIL), this._primaryFBO.initialize([[i3.COLOR_ATTACHMENT0, this._colorRenderTexture], [i3.COLOR_ATTACHMENT1, this._idRenderTexture], [r3.DEPTH_STENCIL_ATTACHMENT, this._depthStencilRenderTexture]]), this._primaryFBO.clearColor([1, 1, 1, 1], 1), this._secondaryFBO.initialize([[i3.COLOR_ATTACHMENT0, this._colorRenderTexture], [r3.DEPTH_STENCIL_ATTACHMENT, this._depthStencilRenderbuffer]]), this._idFBO = new s.Framebuffer(this._context, "IdFBO"), this._idFBO.initialize([[i3.COLOR_ATTACHMENT0, this._idRenderTexture]]);
    }, t3.prototype.initializeES3 = function(e4, t4) {
      var r3 = this._context.gl, i3 = this._context.gl2facade;
      this._drawRestricted = false, u2(this._context.isWebGL2, "expected a webgl2 context"), this._colorRenderTexture.initialize(e4, t4, r3.RGBA8, r3.RGBA, r3.UNSIGNED_BYTE), this._idRenderTexture.initialize(e4, t4, r3.RGBA8, r3.RGBA, r3.UNSIGNED_BYTE), this._depthStencilRenderTexture.initialize(e4, t4, r3.DEPTH24_STENCIL8, r3.DEPTH_STENCIL, r3.UNSIGNED_INT_24_8), this._depthStencilRenderbuffer.initialize(e4, t4, r3.DEPTH_STENCIL), this._primaryFBO.initialize([[i3.COLOR_ATTACHMENT0, this._colorRenderTexture], [i3.COLOR_ATTACHMENT1, this._idRenderTexture], [r3.DEPTH_STENCIL_ATTACHMENT, this._depthStencilRenderTexture]]), this._primaryFBO.clearColor([1, 1, 1, 1], 1), this._secondaryFBO.initialize([[i3.COLOR_ATTACHMENT0, this._colorRenderTexture], [r3.DEPTH_STENCIL_ATTACHMENT, this._depthStencilRenderbuffer]]);
    }, t3.prototype.initialize = function() {
      var e4 = this._context.gl, t4 = this._context.gl2facade;
      this._defaultFBO = new s.DefaultFramebuffer(this._context, "DefaultFBO"), this._defaultFBO.initialize(), this._colorRenderTexture = new s.Texture2D(this._context, "ColorRenderTexture"), this._idRenderTexture = new s.Texture2D(this._context, "IdRenderTexture"), this._depthStencilRenderTexture = new s.Texture2D(this._context, "DepthStencilRenderTexture"), this._depthStencilRenderbuffer = new s.Renderbuffer(this._context, "DepthStencilRenderbuffer"), this._primaryFBO = new s.Framebuffer(this._context, "PrimaryFBO"), this._secondaryFBO = new s.Framebuffer(this._context, "SecondaryFBO");
      var r3 = this._defaultFBO.width, i3 = this._defaultFBO.height;
      return this._context.isWebGL2 ? this.initializeES3(r3, i3) : this._context.supportsDepthTexture && this._context.supportsDrawBuffers && this._context.gl.getParameter(this._context.drawBuffers.MAX_DRAW_BUFFERS_WEBGL) >= 2 ? this.initializeES2_extensions(r3, i3) : this.initializeES2_basic(r3, i3), this._primaryFBO.clearColor([0, 0, 0, 1], 0), this._secondaryFBO.clearColor([0, 0, 0, 1], 0), this._primaryFBO.clearDepth(s.ReadbackPass.maxClearDepth()), this._primaryFBO.clearStencil(0), this._secondaryFBO.clearDepth(s.ReadbackPass.maxClearDepth()), this._secondaryFBO.clearStencil(0), this._debuggableTargets.push([this._primaryFBO, t4.COLOR_ATTACHMENT0]), this._debuggableTargetNames.push("Color"), this._idFBO ? this._debuggableTargets.push([this._idFBO, t4.COLOR_ATTACHMENT0]) : this._debuggableTargets.push([this._primaryFBO, t4.COLOR_ATTACHMENT1]), this._debuggableTargetNames.push("Id"), this._depthFBO ? this._debuggableTargets.push([this._depthFBO, t4.COLOR_ATTACHMENT0]) : this._debuggableTargets.push([this._primaryFBO, e4.DEPTH_STENCIL_ATTACHMENT]), this._debuggableTargetNames.push("DepthStencil"), u2(this._primaryFBO.valid, this._primaryFBO.identifier + " expected to be valid for rendering"), u2(this._secondaryFBO.valid, this._secondaryFBO.identifier + " expected to be valid for rendering"), u2(this._idFBO === void 0 || this._idFBO.valid, (this._idFBO ? this._idFBO.identifier : "") + " expected to be valid for rendering"), u2(this._depthFBO === void 0 || this._depthFBO.valid, (this._depthFBO ? this._depthFBO.identifier : "") + " expected to be valid for rendering"), true;
    }, t3.prototype.uninitialize = function() {
      this._defaultFBO.uninitialize(), this._primaryFBO.uninitialize(), this._idFBO && this._idFBO.uninitialize(), this._depthFBO && this._depthFBO.uninitialize(), this._depthStencilRenderbuffer && this._depthStencilRenderbuffer.uninitialize(), this._colorRenderTexture.uninitialize(), this._idRenderTexture.uninitialize(), this._depthStencilRenderTexture.uninitialize();
    }, t3.prototype.debuggableTargets = function() {
      return this._debuggableTargetNames;
    }, t3.prototype.debuggableTarget = function(e4) {
      if (!(e4 === void 0 || e4 >= this._debuggableTargets.length || e4 < 0))
        return this._debuggableTargets[e4];
    }, t3.prototype.setClearColor = function(e4) {
      this._primaryFBO.clearColor(e4, 0), this._secondaryFBO.clearColor(e4, 0);
    }, t3.prototype.resize = function(e4, t4) {
      this._primaryFBO.resize(e4, t4), this._secondaryFBO.resize(e4, t4), this._idFBO && this._idFBO.resize(e4, t4), this._depthFBO && this._depthFBO.resize(e4, t4);
    }, Object.defineProperty(t3.prototype, "drawRestricted", { get: function() {
      return this._drawRestricted;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "primaryFBO", { get: function() {
      return this._primaryFBO;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "secondaryFBO", { get: function() {
      return this._secondaryFBO;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "defaultFBO", { get: function() {
      return this._defaultFBO;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "depthFBO", { get: function() {
      return this._drawRestricted ? this._depthFBO : void 0;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "idFBO", { get: function() {
      return this._drawRestricted ? this._idFBO : void 0;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "readBackIdFBO", { get: function() {
      return this._idFBO;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colorRenderTexture", { get: function() {
      return this._colorRenderTexture;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "idRenderTexture", { get: function() {
      return this._idRenderTexture;
    }, enumerable: false, configurable: true }), o([s.Initializable.initialize()], t3.prototype, "initialize", null), o([s.Initializable.uninitialize()], t3.prototype, "uninitialize", null), t3;
  }(s.Initializable);
  t2.MultiRenderTarget = c2, function(e3) {
    !function(e4) {
      e4[e4.Undefined = -1] = "Undefined", e4[e4.Color = 0] = "Color", e4[e4.Id = 1] = "Id", e4[e4.Depth = 2] = "Depth";
    }(e3.Attachment || (e3.Attachment = {}));
  }(c2 = t2.MultiRenderTarget || (t2.MultiRenderTarget = {})), t2.MultiRenderTarget = c2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.Node = void 0;
  var i2 = function() {
    function e3(t3, r3, i3) {
      this._lastChild = e3.INVALID_INDEX, this.index = e3.INVALID_INDEX, this.id = e3.INVALID_ID, this.unmodified = false, this.depth = e3.INVALID_DEPTH, this.height = e3.INVALID_HEIGHT, this.parent = e3.INVALID_INDEX, this.firstChild = e3.INVALID_INDEX, this.initialFirstChild = e3.INVALID_INDEX, this.nextSibling = e3.INVALID_INDEX, this.initialNextSibling = e3.INVALID_INDEX, this.id = t3, this.index = r3, i3 !== void 0 ? (this.depth = i3.depth + 1, this.parent = i3.index, i3.initialFirstChild === e3.INVALID_INDEX && (i3.initialFirstChild = r3, i3.firstChild = r3), i3._lastChild = r3) : this.depth = 0;
    }
    return Object.defineProperty(e3.prototype, "lastChild", { get: function() {
      return this._lastChild;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "isLeaf", { get: function() {
      return this.firstChild === e3.INVALID_INDEX;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "isRoot", { get: function() {
      return this.parent === e3.INVALID_INDEX;
    }, enumerable: false, configurable: true }), e3.INVALID_ID = -1, e3.INVALID_INDEX = -1, e3.INVALID_DEPTH = -1, e3.INVALID_HEIGHT = -1, e3;
  }();
  t2.Node = i2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.ConfigurationAids = void 0;
  var i2 = r2(0);
  !function(e3) {
    var t3, r3;
    e3.heightScale = function(e4, r4) {
      switch (r4 === void 0 && (r4 = t3.SomethingInverseSqrt), r4) {
        default:
        case t3.SomethingInverseSqrt:
          return i2.gl_matrix_extensions.clamp(100 / Math.sqrt(e4.numberOfNodes) + 0.0125, 0.0625, 0.3333);
      }
    }, function(e4) {
      e4.SomethingInverseSqrt = "SomethingInverseSqrt";
    }(t3 = e3.HeightScaleApproach || (e3.HeightScaleApproach = {})), e3.parentMargin = function(e4, t4) {
      switch (t4 === void 0 && (t4 = r3.SomethingLog10), t4) {
        default:
        case r3.SomethingLog10:
          return 0.04 + 0.12 * (1 - Math.log10(e4.numberOfNodes + 1) / 6);
      }
    }, e3.siblingMargin = function(e4, t4) {
      switch (t4 === void 0 && (t4 = r3.SomethingLog10), t4) {
        default:
        case r3.SomethingLog10:
          return 0.01 + 0.12 * (1 - Math.log10(e4.numberOfNodes + 1) / 6);
      }
    }, function(e4) {
      e4.SomethingLog10 = "SomethingLog10";
    }(r3 = e3.MarginApproach || (e3.MarginApproach = {}));
  }(t2.ConfigurationAids || (t2.ConfigurationAids = {}));
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.Layout = t2.LayoutOperation = void 0;
  var i2 = r2(0), n2 = i2.auxiliaries.assert, o = r2(4), a = r2(78), s = r2(79), u2 = r2(81);
  !function(e3) {
    e3[e3.ParentPadding = 0] = "ParentPadding", e3[e3.SiblingMargin = 1] = "SiblingMargin", e3[e3.AccessorPadding = 2] = "AccessorPadding";
  }(t2.LayoutOperation || (t2.LayoutOperation = {}));
  var c2 = function() {
    function e3() {
    }
    return e3.createLayout = function(t3, r3, o2, c3, l2, f2, h2) {
      var d2 = new Array(t3.numberOfNodes);
      if (n2(r3 !== void 0, "Valid weights expected"), r3 === void 0)
        return d2;
      var p2 = r3[0];
      if (i2.auxiliaries.assertions() && t3.numberOfNodes > 1) {
        var _2 = 0;
        t3.forEachLeafNode(function(e4) {
          _2 += r3[e4.index];
        }), n2(p2 !== void 0 && (_2 === 0 || p2 > 0), "Accumulated leaf weights as root weight expected");
      }
      var g2 = o2.aspectRatio, m2 = !!o2.flattenDirectories;
      switch (o2.algorithm) {
        case e3.LayoutAlgorithm.Strip:
          u2.StripLayout.compute(t3, r3, g2, d2, e3.splittingLayoutPostprocessing(o2), c3, l2, f2, h2, m2);
          break;
        case e3.LayoutAlgorithm.Snake:
          s.SnakeLayout.compute(t3, r3, g2, d2, e3.splittingLayoutPostprocessing(o2), c3, l2, f2, h2, m2);
          break;
        case e3.LayoutAlgorithm.CodeCity:
          a.CodeCityLayout.compute(t3, r3, g2, d2, e3.packingLayoutPostprocessing(o2), c3, l2, f2);
      }
      return d2;
    }, e3.splittingLayoutPostprocessing = function(t3) {
      var r3 = { parentPaddingCallback: e3.emptyParentCallback, siblingMarginBeforeCallback: e3.emptyParentCallback, siblingMarginAfterCallback: e3.emptySiblingCallback, accessoryPaddingCallback: e3.emptyAccessoryParentCallback }, i3 = [0], n3 = 0;
      if (t3.siblingMargin !== void 0 && (n3 = t3.siblingMargin.value) >= 0)
        switch (t3.siblingMargin.type) {
          case e3.SiblingMarginType.Absolute:
            r3.siblingMarginAfterCallback = function(e4, t4, r4, i4) {
              if (i4.isRoot)
                return e4;
              var o2 = n3;
              return e4.map(t4, r4).paddedWithMinArea(0.5 * o2, 0);
            };
            break;
          case e3.SiblingMarginType.Relative:
            r3.siblingMarginAfterCallback = function(e4, t4, r4, i4) {
              if (i4.isRoot)
                return e4;
              var o2 = e4.equalizedRelativeMargin(n3);
              return e4.map(t4, r4).paddedWithMinArea(0.5 * o2, 0);
            };
        }
      if (t3.parentPadding !== void 0 && (i3 = t3.parentPadding.value instanceof Array ? t3.parentPadding.value : [t3.parentPadding.value])[0] >= 0)
        switch (t3.parentPadding.type) {
          case e3.ParentPaddingType.Mixed:
            r3.parentPaddingCallback = function(e4, t4, r4, n4, o2, a3) {
              var s3, u4;
              if (i3.length - 1 > t4.depth) {
                var c4 = i3[t4.depth];
                s3 = e4.equalizedMargin(c4, 0.5, 0.9), u4 = e4.padded(s3), o2 !== void 0 && a3 !== void 0 && (o2[t4.index] = u4, a3[t4.index] = s3);
              } else
                s3 = e4.equalizedRelativeMargin(i3[i3.length - 1]), u4 = e4.padded(s3);
              return u4;
            }, r3.siblingMarginBeforeCallback = function(e4, t4, r4, o2) {
              var a3;
              return a3 = i3.length > t4.depth ? n3 : e4.equalizedRelativeMargin(n3), e4.padded(0.5 * -a3);
            };
            break;
          case e3.ParentPaddingType.Absolute:
            r3.parentPaddingCallback = function(e4, t4, r4, n4) {
              var o2 = e4.equalizedMargin(i3[0], 0.5, 0.6);
              return e4.padded(o2);
            }, r3.siblingMarginBeforeCallback = function(e4, t4, r4, i4) {
              var o2 = n3;
              return e4.padded(0.5 * -o2);
            };
            break;
          case e3.ParentPaddingType.Relative:
            r3.parentPaddingCallback = function(e4, t4, r4, n4) {
              var o2 = e4.equalizedRelativeMargin(i3[0]);
              return e4.padded(o2);
            }, r3.siblingMarginBeforeCallback = function(e4, t4, r4, i4) {
              var o2 = e4.equalizedRelativeMargin(n3);
              return e4.padded(0.5 * -o2);
            };
        }
      if (t3.accessoryPadding !== void 0) {
        var a2 = t3.accessoryPadding.type, s2 = t3.accessoryPadding.value, u3 = t3.accessoryPadding.direction, c3 = t3.accessoryPadding.relativeAreaThreshold !== void 0 ? t3.accessoryPadding.relativeAreaThreshold : 0, l2 = t3.accessoryPadding.targetAspectRatio !== void 0 ? t3.accessoryPadding.targetAspectRatio : Number.NaN;
        if (s2 !== void 0)
          switch (a2) {
            case e3.AccessoryPaddingType.Absolute:
              switch (u3) {
                case e3.AccessoryPaddingDirection.Bottom:
                  r3.accessoryPaddingCallback = function(e4, t4, r4, i4, n4) {
                    var a3, u4;
                    if ((a3 = s2 instanceof Array ? s2.length > t4.depth ? s2[t4.depth] : 0 : s2) > e4.height)
                      return n4[t4.index] = new o.Rect(0, 0, 0, 0), e4;
                    u4 = c3 instanceof Array ? c3.length > t4.depth ? c3[t4.depth] : 1 : c3;
                    var f2 = e4.truncateBottom(e4.bottom + a3), h2 = e4.truncateTop(f2.bottom);
                    return f2.area / e4.area <= u4 || h2.aspectRatio < l2 ? (n4[t4.index] = new o.Rect(0, 0, 0, 0), e4) : (n4[t4.index] = h2, f2);
                  };
                  break;
                case e3.AccessoryPaddingDirection.Top:
                  r3.accessoryPaddingCallback = function(e4, t4, r4, i4, n4) {
                    var a3, u4;
                    if ((a3 = s2 instanceof Array ? s2.length > t4.depth ? s2[t4.depth] : 0 : s2) > e4.height)
                      return n4[t4.index] = new o.Rect(0, 0, 0, 0), e4;
                    u4 = c3 instanceof Array ? c3.length > t4.depth ? c3[t4.depth] : 1 : c3;
                    var f2 = e4.truncateTop(e4.top - a3), h2 = e4.truncateBottom(f2.top);
                    return f2.area / e4.area <= u4 || h2.aspectRatio < l2 ? (n4[t4.index] = new o.Rect(0, 0, 0, 0), e4) : (n4[t4.index] = h2, f2);
                  };
                  break;
                case e3.AccessoryPaddingDirection.Left:
                  r3.accessoryPaddingCallback = function(e4, t4, r4, i4, n4) {
                    var a3, u4;
                    if ((a3 = s2 instanceof Array ? s2.length > t4.depth ? s2[t4.depth] : 0 : s2) > e4.width)
                      return n4[t4.index] = new o.Rect(0, 0, 0, 0), e4;
                    u4 = c3 instanceof Array ? c3.length > t4.depth ? c3[t4.depth] : 1 : c3;
                    var f2 = e4.truncateLeft(e4.left + a3), h2 = e4.truncateRight(f2.left);
                    return f2.area / e4.area <= u4 || h2.aspectRatio < l2 ? (n4[t4.index] = new o.Rect(0, 0, 0, 0), e4) : (n4[t4.index] = h2, f2);
                  };
                  break;
                case e3.AccessoryPaddingDirection.Right:
                  r3.accessoryPaddingCallback = function(e4, t4, r4, i4, n4) {
                    var a3, u4;
                    if ((a3 = s2 instanceof Array ? s2.length > t4.depth ? s2[t4.depth] : 0 : s2) > e4.width)
                      return n4[t4.index] = new o.Rect(0, 0, 0, 0), e4;
                    u4 = c3 instanceof Array ? c3.length > t4.depth ? c3[t4.depth] : 1 : c3;
                    var f2 = e4.truncateRight(e4.right + a3), h2 = e4.truncateLeft(f2.right);
                    return f2.area / e4.area <= u4 || h2.aspectRatio < l2 ? (n4[t4.index] = new o.Rect(0, 0, 0, 0), e4) : (n4[t4.index] = h2, f2);
                  };
              }
              break;
            case e3.AccessoryPaddingType.Relative:
              switch (u3) {
                case e3.AccessoryPaddingDirection.Bottom:
                  r3.accessoryPaddingCallback = function(e4, t4, r4, i4, n4) {
                    var o2, a3;
                    o2 = s2 instanceof Array ? s2.length > t4.depth ? s2[t4.depth] : 0 : s2, a3 = c3 instanceof Array ? c3.length > t4.depth ? c3[t4.depth] : 1 : c3;
                    var u4 = e4.relativeTop(1 - o2);
                    return u4.area / e4.area > a3 ? u4 : e4;
                  };
                  break;
                case e3.AccessoryPaddingDirection.Top:
                  r3.accessoryPaddingCallback = function(e4, t4, r4, i4, n4) {
                    var o2, a3;
                    o2 = s2 instanceof Array ? s2.length > t4.depth ? s2[t4.depth] : 0 : s2, a3 = c3 instanceof Array ? c3.length > t4.depth ? c3[t4.depth] : 1 : c3;
                    var u4 = e4.relativeBottom(1 - o2);
                    return u4.area / e4.area > a3 ? u4 : e4;
                  };
                  break;
                case e3.AccessoryPaddingDirection.Left:
                  r3.accessoryPaddingCallback = function(e4, t4, r4, i4, n4) {
                    var o2, a3;
                    o2 = s2 instanceof Array ? s2.length > t4.depth ? s2[t4.depth] : 0 : s2, a3 = c3 instanceof Array ? c3.length > t4.depth ? c3[t4.depth] : 1 : c3;
                    var u4 = e4.relativeRight(1 - o2);
                    return u4.area / e4.area > a3 ? u4 : e4;
                  };
                  break;
                case e3.AccessoryPaddingDirection.Right:
                  r3.accessoryPaddingCallback = function(e4, t4, r4, i4, n4) {
                    var o2, a3;
                    o2 = s2 instanceof Array ? s2.length > t4.depth ? s2[t4.depth] : 0 : s2, a3 = c3 instanceof Array ? c3.length > t4.depth ? c3[t4.depth] : 1 : c3;
                    var u4 = e4.relativeLeft(1 - o2);
                    return u4.area / e4.area > a3 ? u4 : e4;
                  };
              }
          }
      }
      return r3;
    }, e3.packingLayoutPostprocessing = function(t3) {
      return { parentPaddingCallback: e3.emptyParentCallback, siblingMarginBeforeCallback: e3.emptyParentCallback, siblingMarginAfterCallback: e3.emptySiblingCallback, accessoryPaddingCallback: e3.emptyAccessoryParentCallback };
    }, e3.emptyParentCallback = function(e4, t3, r3, i3) {
      return e4;
    }, e3.emptyAccessoryParentCallback = function(e4, t3, r3, i3, n3) {
      return e4;
    }, e3.emptySiblingCallback = function(e4, t3, r3, i3) {
      return e4;
    }, e3;
  }();
  t2.Layout = c2, function(e3) {
    !function(e4) {
      e4.Strip = "strip", e4.Snake = "snake", e4.CodeCity = "codecity";
    }(e3.LayoutAlgorithm || (e3.LayoutAlgorithm = {})), function(e4) {
      e4.Relative = "relative", e4.Absolute = "absolute";
    }(e3.SiblingMarginType || (e3.SiblingMarginType = {})), function(e4) {
      e4.Relative = "relative", e4.Absolute = "absolute", e4.Mixed = "mixed";
    }(e3.ParentPaddingType || (e3.ParentPaddingType = {})), function(e4) {
      e4.Relative = "relative", e4.Absolute = "absolute";
    }(e3.AccessoryPaddingType || (e3.AccessoryPaddingType = {})), function(e4) {
      e4.Top = "top", e4.Bottom = "bottom", e4.Left = "left", e4.Right = "right";
    }(e3.AccessoryPaddingDirection || (e3.AccessoryPaddingDirection = {}));
  }(c2 = t2.Layout || (t2.Layout = {})), t2.Layout = c2;
}, function(e2, t2, r2) {
  var i2, n2 = this && this.__extends || (i2 = function(e3, t3) {
    return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t4) {
      e4.__proto__ = t4;
    } || function(e4, t4) {
      for (var r3 in t4)
        Object.prototype.hasOwnProperty.call(t4, r3) && (e4[r3] = t4[r3]);
    })(e3, t3);
  }, function(e3, t3) {
    if (typeof t3 != "function" && t3 !== null)
      throw new TypeError("Class extends value " + String(t3) + " is not a constructor or null");
    function r3() {
      this.constructor = e3;
    }
    i2(e3, t3), e3.prototype = t3 === null ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
  });
  Object.defineProperty(t2, "__esModule", { value: true }), t2.AnimationRenderer = void 0;
  var o = r2(0), a = r2(0), s = r2(36), u2 = r2(16), c2 = r2(40), l2 = r2(6), f2 = r2(11), h2 = r2(17), d2 = r2(18), p2 = r2(20), _2 = r2(56), g2 = o.auxiliaries.assert, m2 = function(e3) {
    function t3(t4) {
      var r3 = e3.call(this) || this;
      return r3._ndcOffsetScale = 1, r3._timer = new _2.Timer(), r3._skipInnerNodePasses = false, r3._skipLeafNodePasses = false, r3._skipLabelPass = false, r3._skipInnerLabelPass = false, r3._skipLeafLabelPass = false, r3._skipAggregation = false, r3._enableFxaa = true, r3.coordsAt = function(e4, t5, i3, n3) {
        return r3._readbackPass.coordsAt(e4, t5, i3, n3 === void 0 ? r3._camera.viewProjectionInverse : n3);
      }, r3.idAt = function(e4, t5) {
        if (r3._geometry.initialized) {
          var i3 = r3._readbackPass.idAt(e4, t5);
          if (i3 !== void 0 && i3 !== 0) {
            var n3 = r3._geometry.topology.node(i3);
            return n3 === void 0 ? void 0 : n3.id;
          }
        }
      }, r3._visualization = t4, r3;
    }
    return n2(t3, e3), Object.defineProperty(t3.prototype, "geometry", { get: function() {
      return this._geometry;
    }, set: function(e4) {
      this._geometry = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "animations", { get: function() {
      return this._animations;
    }, set: function(e4) {
      this._animations = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "timer", { get: function() {
      return this._timer;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "navigation", { get: function() {
      return this._navigation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "camera", { get: function() {
      return this._camera;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "ndcOffsetScale", { get: function() {
      return this._ndcOffsetScale;
    }, set: function(e4) {
      this._ndcOffsetScale !== e4 && (this._ndcOffsetScale = e4, this.invalidate());
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "enableFxaa", { get: function() {
      return this._enableFxaa;
    }, set: function(e4) {
      this._enableFxaa = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "framebuffer", { get: function() {
      return this._accumulationPass.framebuffer;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "onSwapCallback", { set: function(e4) {
      this._onSwapCallback = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "blitTargets", { get: function() {
      return this._multiRenderTarget.debuggableTargets();
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "blitTarget", { set: function(e4) {
      this._blitTarget !== e4 && (this._blitTarget = e4, this._blitTarget === 2 && (this._debugPass.debug = a.DebugPass.Mode.DepthLinear), this.invalidate());
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "skipInnerNodePasses", { get: function() {
      return this._skipInnerNodePasses;
    }, set: function(e4) {
      this._skipInnerNodePasses !== e4 && (this._skipInnerNodePasses = e4, this.invalidate());
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "skipLeafNodePasses", { get: function() {
      return this._skipLeafNodePasses;
    }, set: function(e4) {
      this._skipLeafNodePasses !== e4 && (this._skipLeafNodePasses = e4, this.invalidate());
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "skipLabelPass", { get: function() {
      return this._skipLabelPass;
    }, set: function(e4) {
      this._skipLabelPass !== e4 && (this._skipLabelPass = e4, this.invalidate());
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "skipInnerLabelPass", { get: function() {
      return this._skipInnerLabelPass;
    }, set: function(e4) {
      this._skipInnerLabelPass !== e4 && (this._skipInnerLabelPass = e4, this.invalidate());
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "skipLeafLabelPass", { get: function() {
      return this._skipLeafLabelPass;
    }, set: function(e4) {
      this._skipLeafLabelPass !== e4 && (this._skipLeafLabelPass = e4, this.invalidate());
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "skipAggregation", { get: function() {
      return this._skipAggregation;
    }, set: function(e4) {
      this._skipAggregation !== e4 && (this._skipAggregation = e4, this._geometry.altered.alter("innerNodeDrawDispatch"), this._geometry.altered.alter("leafNodeDrawDispatch"), this.invalidate());
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colorMode", { set: function(e4) {
      this._leafPass0.colorMode = e4, this._leafPass1.colorMode = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "patternMode", { set: function(e4) {
      this._leafPass0.patternMode = e4, this._leafPass1.patternMode = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "progressMode", { set: function(e4) {
      this._leafPass0.progressMode = e4, this._leafPass0.progressMode = e4;
    }, enumerable: false, configurable: true }), t3.verifyMinimumContextRequirements = function(e4) {
      return e4.enable(["ANGLE_instanced_arrays", "OES_standard_derivatives"]), true;
    }, t3.prototype.renderInnerNodes = function(e4, t4, r3) {
      !this._skipInnerNodePasses && this._geometry.valid && (this._innerPass.target = e4, this._innerPass.attachment = t4, this._innerPass.depthMask = r3, this._innerPass.frame());
    }, t3.prototype.renderLeafNodes = function(e4, t4, r3) {
      !this._skipLeafNodePasses && this._geometry.valid && (this._geometry.leafNodeHeights.length >= 2 && (this._leafPass1.target = e4, this._leafPass1.attachment = t4, this._leafPass1.depthMask = r3, this._leafPass1.frame()), this._leafPass0.target = e4, this._leafPass0.attachment = t4, this._leafPass0.depthMask = r3, this._leafPass0.frame());
    }, t3.prototype.renderLeafLabelBackgrounds = function(e4, t4) {
      this._skipLeafLabelPass || this._skipLabelPass || (this._labelBackgroundPass.target = e4, this._labelBackgroundPass.depthMask = t4, this._labelBackgroundPass.frame());
    }, t3.prototype.renderPoints = function(e4, t4) {
      this._skipLeafLabelPass || this._skipLabelPass || (this._pointPass.target = e4, this._pointPass.depthMask = t4, this._pointPass.frame());
    }, t3.prototype.renderInnerLabels = function(e4, t4, r3) {
      if (!this._skipInnerLabelPass && !this._skipLabelPass && this._geometry.valid) {
        this._innerLabelPass.target = e4, this._innerLabelPass.depthMask = r3;
        var i3 = this._context.gl;
        i3.enable(i3.STENCIL_TEST), i3.enable(i3.DEPTH_TEST), i3.stencilFunc(i3.EQUAL, 1, 255), i3.stencilOp(i3.KEEP, i3.KEEP, i3.KEEP), this._innerLabelPass.frame(), i3.disable(i3.STENCIL_TEST);
      }
    }, t3.prototype.renderLeafLabels = function(e4, t4, r3) {
      this._skipLeafLabelPass || this._skipLabelPass || !this._geometry.valid || (this._leafLabelPass.target = e4, this._leafLabelPass.depthMask = r3, this._leafLabelPass.frame());
    }, t3.prototype.initializeMultiRenderTarget = function(e4) {
      this.assertUninitialized(), this._multiRenderTarget = new l2.MultiRenderTarget(e4), this._multiRenderTarget.initialize(), this._multiRenderTarget.primaryFBO.clearStencil(0), this._multiRenderTarget.secondaryFBO.clearStencil(0);
    }, t3.prototype.initializeLeafPasses = function(e4) {
      this._leafPass0 = new s.AnimatedCuboidRenderPass(e4, 0), this._leafPass0.initialize(), this._leafPass0.camera = this._camera, this._leafPass1 = new s.AnimatedCuboidRenderPass(e4, 1), this._leafPass1.initialize(), this._leafPass1.camera = this._camera;
    }, t3.prototype.initializeInnerPass = function(e4) {
      this.assertUninitialized(), this._innerPass = new d2.QuadRenderPass(e4), this._innerPass.initialize(), this._innerPass.camera = this._camera;
    }, t3.prototype.initializePointPass = function(e4) {
      this._pointPass = new h2.PointRenderPass(e4), this._pointPass.initialize(), this._pointPass.camera = this.camera, this._pointPass.pointSize = 3.5;
    }, t3.prototype.initializeLeafLabelBackgroundPass = function(e4) {
      this._labelBackgroundPass = new p2.ScreenAlignedQuadRenderPass(e4), this._labelBackgroundPass.initialize(), this._labelBackgroundPass.camera = this.camera;
    }, t3.prototype.initializeLabelPasses = function(e4) {
      var t4 = this;
      this.assertUninitialized(), this._innerLabelPass = new a.LabelRenderPass(e4), this._innerLabelPass.initialize(), this._innerLabelPass.camera = this.camera, this._innerLabelPass.target = this._multiRenderTarget.defaultFBO, this._innerLabelPass.depthFunc = e4.gl.ALWAYS, this._innerLabelPass.aaStepScale = 0.3, this._innerLabelPass.aaSampling = a.LabelRenderPass.Sampling.Grid3x3, this._leafLabelPass = new a.LabelRenderPass(e4), this._leafLabelPass.initialize(), this._leafLabelPass.camera = this.camera, this._leafLabelPass.target = this._multiRenderTarget.defaultFBO, this._leafLabelPass.aaStepScale = 0.3, this._leafLabelPass.aaSampling = a.LabelRenderPass.Sampling.Grid3x3, this._leafLabelPass.depthFunc = e4.gl.ALWAYS;
      var r3 = window.SeereneConstants ? window.SeereneConstants.STATIC_DIRECTORY : "assets";
      a.FontFace.fromFile(r3 + "/roboto.fnt", e4).then(function(e5) {
        for (var r4 = 0, i3 = t4._innerLabelPass.labels; r4 < i3.length; r4++) {
          i3[r4].fontFace = e5;
        }
        for (var n3 = 0, o2 = t4._leafLabelPass.labels; n3 < o2.length; n3++) {
          o2[n3].fontFace = e5;
        }
        t4._fontFace = e5, t4._innerLabelPass.update(true), t4._leafLabelPass.update(true), t4._visualization.configuration && (t4._visualization.configuration.altered.alter("geometry"), t4._visualization.configuration.altered.alter("labels")), t4.invalidate();
      }).catch(function(e5) {
        return o.auxiliaries.log(o.auxiliaries.LogLevel.Error, e5);
      });
    }, t3.prototype.initializeAccumulationPass = function(e4) {
      this.assertUninitialized(), g2(this._multiRenderTarget.initialized, "expected multi-render target to be initialized"), g2(this._ndcTriangle !== void 0, "expected NDC triangle to be defined"), this._accumulationPass = new a.AccumulatePass(e4), this._accumulationPass.initialize(this._ndcTriangle), this._accumulationPass.precision = this._framePrecision, this._accumulationPass.texture = this._multiRenderTarget.colorRenderTexture;
    }, t3.prototype.initializeBlitPass = function(e4) {
      this.assertUninitialized(), g2(this._multiRenderTarget.initialized, "expected multi-render target to be initialized"), g2(this._ndcTriangle !== void 0, "expected NDC triangle to be defined");
      var t4 = this._context.gl, r3 = this._context.gl2facade;
      this._blitPass = new a.BlitPass(e4), this._blitPass.initialize(this._ndcTriangle), this._blitPass.readBuffer = r3.COLOR_ATTACHMENT0, this._blitPass.drawBuffer = t4.BACK, this._blitPass.target = this._multiRenderTarget.defaultFBO, this._debugPass = new a.DebugPass(e4), this._debugPass.initialize(this._ndcTriangle), this._debugPass.readBuffer = r3.COLOR_ATTACHMENT0, this._debugPass.drawBuffer = t4.BACK, this._debugPass.target = this._multiRenderTarget.defaultFBO;
    }, t3.prototype.initializeFXAAPass = function(e4) {
      this.assertUninitialized(), g2(this._multiRenderTarget.initialized, "expected multi-render target to be initialized"), g2(this._ndcTriangle !== void 0, "expected NDC triangle to be defined");
      var t4 = this._context.gl2facade;
      this._fxaaPass = new c2.FXAAPass(e4), this._fxaaPass.initialize(this._ndcTriangle), this._fxaaPass.framebuffer = this._accumulationPass.framebuffer, this._fxaaPass.readBuffer = t4.COLOR_ATTACHMENT0, this._fxaaPass.target = this._multiRenderTarget.defaultFBO;
    }, t3.prototype.initializeReadbackPass = function(e4) {
      this.assertUninitialized(), g2(this._multiRenderTarget.initialized, "expected multi-render target to be initialized"), g2(this._ndcTriangle !== void 0, "expected NDC triangle to be defined"), this._readbackPass = new a.ReadbackPass(e4), this._readbackPass.initialize(this._ndcTriangle, this._multiRenderTarget.depthFBO !== void 0), this._readbackPass.cache = true;
      var t4 = this._context.gl, r3 = this._context.gl2facade;
      this._multiRenderTarget.depthFBO ? (this._readbackPass.depthFBO = this._multiRenderTarget.depthFBO, this._readbackPass.depthAttachment = r3.COLOR_ATTACHMENT0) : (this._readbackPass.depthFBO = this._multiRenderTarget.primaryFBO, this._readbackPass.depthAttachment = t4.DEPTH_STENCIL_ATTACHMENT), this._multiRenderTarget.readBackIdFBO ? (this._readbackPass.idFBO = this._multiRenderTarget.readBackIdFBO, this._readbackPass.idAttachment = r3.COLOR_ATTACHMENT0) : (this._readbackPass.idFBO = this._multiRenderTarget.primaryFBO, this._readbackPass.idAttachment = r3.COLOR_ATTACHMENT1);
    }, t3.prototype.initializeCamera = function() {
      this.assertUninitialized(), this._camera = new a.Camera(), this._camera.near = t3.CAMERA_NEAR_DEFAULT, this._camera.far = t3.CAMERA_FAR_DEFAULT, this._camera.eye = o.vec3.fromValues(0, 1.5, 2.2), this._camera.center = o.vec3.fromValues(0, 0, 0.2), this._camera.up = o.vec3.fromValues(0, 1, 0), this._camera.fovy = 2 * a.Camera.calculateFovY(20, 60) * o.auxiliaries.RAD2DEG;
    }, t3.prototype.initializeNavigation = function(e4, t4) {
      this.assertUninitialized(), this._navigation = new f2.Navigation(e4, t4), this._navigation.camera = this._camera, this._navigation.idAccess = this, this._navigation.coordsAccess = this;
    }, t3.prototype.onInitialize = function(e4, r3, i3) {
      var n3 = this;
      if (!t3.verifyMinimumContextRequirements(e4))
        return false;
      this._ndcOffsetKernel = new a.AntiAliasingKernel(this._multiFrameNumber), this._ndcOffsetKernel.sort(a.AbstractKernel.SortApproach.BySquaredLength), this._ndcTriangle = new a.NdcFillingTriangle(e4, "NdcTriangle"), this._ndcTriangle.initialize(0), this.initializeMultiRenderTarget(e4), this.initializeAccumulationPass(e4), this.initializeBlitPass(e4), this.initializeFXAAPass(e4), this.initializeReadbackPass(e4), this.initializeCamera(), this.initializeNavigation(r3, i3), this.initializeInnerPass(e4), this.initializeLeafPasses(e4), this.initializePointPass(e4), this.initializeLeafLabelBackgroundPass(e4), this.initializeLabelPasses(e4), this._bufferIds = [{}, {}];
      for (var s2 = 0; s2 < 2; s2++)
        this._bufferIds[s2] = { areaData: [-1, -1], areaDelay: -1, areaDuration: -1, heightData: [-1, -1], heightDelay: -1, heightDuration: -1, colorData: [-1, -1], colorDelay: -1, colorDuration: -1 };
      return this._eventHandler = new o.EventHandler(r3, i3), this._eventHandler.pushMouseMoveHandler(function(e5, t4) {
        var r4 = e5[e5.length - 1], i4 = n3._eventHandler.offsets(r4, true)[0];
        n3._leafPass0.mousePosition = i4, n3._leafPass1.mousePosition = i4;
      }), true;
    }, t3.prototype.onUninitialize = function() {
      this._ndcTriangle.uninitialize(), this._multiRenderTarget.uninitialize(), this._accumulationPass.uninitialize(), this._blitPass.uninitialize(), this._debugPass.uninitialize(), this._readbackPass.uninitialize(), this._innerPass.uninitialize(), this._pointPass.uninitialize(), this._innerLabelPass.uninitialize(), this._leafLabelPass.uninitialize(), this._labelBackgroundPass.uninitialize();
    }, t3.prototype.onUpdate = function() {
      var e4 = this;
      this._navigation.update(), this._eventHandler.update();
      var t4 = this._visualization.update();
      this._timer.update();
      var r3 = this._animations.some(function(t5) {
        return !t5.isFinished(e4.timer.totalTime);
      });
      r3 = (r3 = r3 || this._leafPass0.progressMode === u2.ProgressMode.SCREENSPACE) || this._leafPass1.progressMode === u2.ProgressMode.SCREENSPACE;
      for (var i3 = false, n3 = 0, o2 = this._innerLabelPass.labels; n3 < o2.length; n3++) {
        if ((c3 = o2[n3]).altered || c3.color.altered) {
          i3 = true;
          break;
        }
      }
      for (var a2 = 0, s2 = this._leafLabelPass.labels; a2 < s2.length; a2++) {
        var c3;
        if ((c3 = s2[a2]).altered || c3.color.altered) {
          i3 = true;
          break;
        }
      }
      return t4 || i3 || r3 || this._altered.any || this._camera.altered;
    }, t3.prototype.onPrepare = function() {
      this._geometry.valid && this.updateGeometryFromAnimation(), this._geometry.altered.any && this._geometry.valid && (this._innerPass.ids = this._geometry.innerNodeIndices, this._innerPass.layout = this._geometry.innerNodeLayouts, this._innerPass.colors = this._geometry.innerNodeColors, this._innerPass.emphases = this._geometry.innerNodeEmphases, this._innerPass.colorTable = this._geometry.colorTable, this._leafPass0.ids = this._geometry.leafNodeIndices, this._leafPass0.layoutData = this._geometry.leafNodeLayouts, this._leafPass0.colorTable = this._geometry.colorTable, this._leafPass0.nodeCount = this._geometry.leafNodeCount, this._leafPass1.ids = this._geometry.leafNodeIndices, this._leafPass1.layoutData = this._geometry.leafNodeLayouts, this._leafPass1.colorTable = this._geometry.colorTable, this._leafPass1.nodeCount = this._geometry.leafNodeCount), this._animations[0].altered.areaEasing && (this._leafPass0.areaEasing = this._animations[0].areaEasing), this._animations[0].altered.heightEasing && (this._leafPass0.heightEasing = this._animations[0].heightEasing), this._animations[1].altered.colorEasing && (this._leafPass1.colorEasing = this._animations[1].colorEasing), this._geometry.altered.colorTableLength && (this._leafPass0.colorTableLengthAltered(), this._leafPass1.colorTableLengthAltered());
      var e4 = this._geometry.altered;
      this._geometry.valid && e4.any && (e4.innerNodeEmphases && (this._innerPass.emphases = this._geometry.innerNodeEmphases), e4.innerNodeDrawDispatch && !this._skipAggregation && (this._innerPass.dispatch = this._geometry.innerNodeDrawDispatch.filtered(0)), this._skipAggregation && (this._innerPass.dispatch = this._geometry.innerNodeDrawDispatch.unfiltered()), e4.outlineWidth && (this._innerPass.outlineWidth = this._geometry.outlineWidth), e4.emphasisOutlineWidth && (this._innerPass.emphasisOutlineWidth = this._geometry.emphasisOutlineWidth), e4.leafNodeEmphases && (this._leafPass0.emphases = this._geometry.leafNodeEmphases), e4.leafNodeDrawDispatch && !this._skipAggregation && (this._leafPass0.dispatch = this._geometry.leafNodeDrawDispatch.filtered(0), this._leafPass1.dispatch = this._geometry.leafNodeDrawDispatch.filtered(0)), this._skipAggregation && (this._leafPass0.dispatch = this._geometry.leafNodeDrawDispatch.unfiltered(), this._leafPass1.dispatch = this._geometry.leafNodeDrawDispatch.unfiltered()), e4.outlineWidth && (this._leafPass0.outlineWidth = this._geometry.outlineWidth, this._leafPass1.outlineWidth = this._geometry.outlineWidth), e4.emphasisOutlineWidth && (this._leafPass0.emphasisOutlineWidth = this._geometry.emphasisOutlineWidth, this._leafPass1.emphasisOutlineWidth = this._geometry.emphasisOutlineWidth), e4.heightScale && (this._leafPass0.heightScale = this._geometry.heightScale, this._leafPass1.heightScale = this._geometry.heightScale), e4.levitate && (this._leafPass1.levitate = this._geometry.levitate)), this._altered.frameSize && (this._multiRenderTarget.resize(this._frameSize[0], this._frameSize[1]), this._camera.viewport = [this._frameSize[0], this._frameSize[1]], this.invalidate()), this._altered.canvasSize && (this._camera.aspect = this._canvasSize[0] / this._canvasSize[1], this._readbackPass.coordinateReferenceSize = this._canvasSize), this._altered.multiFrameNumber && (this._ndcOffsetKernel.width = this._multiFrameNumber, this._ndcOffsetKernel.sort(a.AbstractKernel.SortApproach.BySquaredLength)), this._altered.framePrecision && (this._accumulationPass.precision = this._framePrecision), this._altered.clearColor && this._multiRenderTarget.setClearColor(this._clearColor), this._innerPass.update(), this._leafPass0.update(this._timer.totalTime), this._leafPass1.update(this._timer.totalTime), this._pointPass.update(), this._labelBackgroundPass.update(), this._innerLabelPass.update(), this._leafLabelPass.update(), this._accumulationPass.update(), this._readbackPass.frame(), this._camera.altered && (this._debugPass.near = this._camera.near, this._debugPass.far = this._camera.far), this._visualization.prepare(), this._camera.altered = false, this._geometry.altered.reset(), this._altered.reset();
    }, t3.prototype.onFrame = function(e4) {
      var t4 = this._context.gl, r3 = this._context.gl2facade, i3 = this._ndcOffsetKernel.get(e4);
      i3[0] = 2 * this._ndcOffsetScale * i3[0] / this._frameSize[0], i3[1] = 2 * this._ndcOffsetScale * i3[1] / this._frameSize[1], this._leafPass0.ndcOffset = i3, this._leafPass1.ndcOffset = i3, this._innerPass.ndcOffset = i3, this._innerLabelPass.ndcOffset = i3, this._leafLabelPass.ndcOffset = i3, this._pointPass.ndcOffset = i3, this._labelBackgroundPass.ndcOffset = i3;
      var n3 = e4 === 0, o2 = this._multiRenderTarget, a2 = n3 ? o2.primaryFBO : o2.secondaryFBO;
      a2.clear(t4.COLOR_BUFFER_BIT | t4.DEPTH_BUFFER_BIT | t4.STENCIL_BUFFER_BIT, true, false), t4.viewport(0, 0, this._camera.viewport[0], this._camera.viewport[1]), t4.depthFunc(t4.LESS);
      var s2 = l2.MultiRenderTarget.Attachment;
      o2.drawRestricted || r3.drawBuffers([r3.COLOR_ATTACHMENT0, r3.COLOR_ATTACHMENT1]), this.renderLeafNodes(a2, o2.drawRestricted ? s2.Color : s2.Undefined, true), this.renderInnerNodes(a2, o2.drawRestricted ? s2.Color : s2.Undefined, true), o2.drawRestricted || r3.drawBuffers([r3.COLOR_ATTACHMENT0, t4.NONE]), this.renderInnerLabels(a2, o2.drawRestricted ? s2.Color : s2.Undefined, false), this.renderLeafLabelBackgrounds(a2, false), this.renderLeafLabels(a2, o2.drawRestricted ? s2.Color : s2.Undefined, false), this.renderPoints(a2, false), o2.drawRestricted || r3.drawBuffers([r3.COLOR_ATTACHMENT0, r3.COLOR_ATTACHMENT1]), n3 && o2.idFBO && (o2.idFBO.clear(t4.COLOR_BUFFER_BIT | t4.STENCIL_BUFFER_BIT), this.renderLeafNodes(o2.idFBO, s2.Id, false), this.renderInnerNodes(o2.idFBO, s2.Id, false)), n3 && o2.depthFBO && (o2.depthFBO.clear(t4.COLOR_BUFFER_BIT | t4.STENCIL_BUFFER_BIT), this.renderLeafNodes(o2.depthFBO, s2.Depth, false), this.renderInnerNodes(o2.depthFBO, s2.Depth, false)), this._accumulationPass.frame(e4);
    }, t3.prototype.onSwap = function() {
      var e4, t4 = this, r3 = this._multiRenderTarget.debuggableTarget(this._blitTarget);
      if (this._accumulationPass.initialized && ((e4 = this._accumulationPass.framebuffer) === null || e4 === void 0 ? void 0 : e4.initialized) && this._blitPass.initialized && (!r3 || r3[0].initialized)) {
        var i3 = !this._timer.isPaused && this._animations.some(function(e5) {
          return !e5.isFinished(t4._timer.totalTime);
        });
        if (i3 && this._enableFxaa)
          this._fxaaPass.framebuffer = r3 ? r3[0] : this._accumulationPass.framebuffer, this._fxaaPass.readBuffer = r3 ? r3[1] : this._context.gl2facade.COLOR_ATTACHMENT0, this._fxaaPass.frame();
        else {
          var n3 = this._blitTarget === 2 ? this._debugPass : this._blitPass;
          n3.framebuffer = r3 ? r3[0] : this._accumulationPass.framebuffer, n3.readBuffer = r3 ? r3[1] : this._context.gl2facade.COLOR_ATTACHMENT0, n3.frame();
        }
        i3 && this.invalidate(), this._onSwapCallback && this._onSwapCallback();
      }
    }, t3.prototype.updateGeometryFromAnimation = function() {
      for (var e4 = 0; e4 < this._geometry.leafLayerCount; ++e4) {
        var t4 = this._animations[e4], r3 = this._bufferIds[e4], i3 = e4 === 0 ? this._leafPass0 : this._leafPass1, n3 = t4.ids(this._timer.totalTime), o2 = false;
        o2 = t4.altered.areaData, (n3.areaData.join() !== r3.areaData.join() || o2) && (n3.areaData = this.updateAreasFromAnimation(e4, r3.areaData, n3.areaData, o2)), o2 = t4.altered.heightData, (n3.heightData.join() !== r3.heightData.join() || o2) && (n3.heightData = this.updateHeightsFromAnimation(e4, r3.heightData, n3.heightData, o2)), o2 = t4.altered.colorData, (n3.colorData.join() !== r3.colorData.join() || o2) && (n3.colorData = this.updateColorsFromAnimation(e4, r3.colorData, n3.colorData, o2)), o2 = t4.altered.areaDelays, (n3.areaDelay !== r3.areaDelay || o2) && (i3.areaDelays = t4.areaDelaysById(n3.areaDelay)), o2 = t4.altered.heightDelays, (n3.heightDelay !== r3.heightDelay || o2) && (i3.heightDelays = t4.heightDelaysById(n3.heightDelay)), o2 = t4.altered.colorDelays, (n3.colorDelay !== r3.colorDelay || o2) && (i3.colorDelays = t4.colorDelaysById(n3.colorDelay)), o2 = t4.altered.areaDurations, (n3.areaDuration !== r3.areaDuration || o2) && (i3.areaDuration = t4.areaDurationById(n3.areaDuration)), o2 = t4.altered.heightDurations, (n3.heightDuration !== r3.heightDuration || o2) && (i3.heightDuration = t4.heightDurationById(n3.heightDuration)), o2 = t4.altered.colorDurations, (n3.colorDuration !== r3.colorDuration || o2) && (i3.colorDuration = t4.colorDurationById(n3.colorDuration)), this._bufferIds[e4] = n3, t4.altered.reset();
      }
    }, t3.prototype.updateHeightsFromAnimation = function(e4, t4, r3, i3) {
      i3 === void 0 && (i3 = false);
      var n3 = !(r3[0] === t4[0] || r3[0] === t4[1]), o2 = !(r3[1] === t4[0] || r3[1] === t4[1]), a2 = e4 === 0 ? this._leafPass0 : this._leafPass1;
      return n3 && o2 || i3 ? (a2.heights = [this._animations[e4].heightsById(r3[0]), this._animations[e4].heightsById(r3[1])], a2.swapHeightBuffers = false, r3) : n3 && !o2 ? r3[1] === t4[1] ? (a2.heights = [this._animations[e4].heightsById(r3[0]), void 0], a2.swapHeightBuffers = !a2.swapHeightBuffers, r3) : (a2.heights = [void 0, this._animations[e4].heightsById(r3[0])], a2.swapHeightBuffers = !a2.swapHeightBuffers, [r3[1], r3[0]]) : !n3 && o2 ? r3[0] === t4[0] ? (a2.heights = [void 0, this._animations[e4].heightsById(r3[1])], a2.swapHeightBuffers = !a2.swapHeightBuffers, r3) : (a2.heights = [this._animations[e4].heightsById(r3[1]), void 0], a2.swapHeightBuffers = !a2.swapHeightBuffers, [r3[1], r3[0]]) : t4;
    }, t3.prototype.updateAreasFromAnimation = function(e4, t4, r3, i3) {
      i3 === void 0 && (i3 = false);
      var n3 = !(r3[0] === t4[0] || r3[0] === t4[1]), o2 = !(r3[1] === t4[0] || r3[1] === t4[1]), a2 = e4 === 0 ? this._leafPass0 : this._leafPass1;
      return n3 && o2 || i3 ? (a2.areas = [this._animations[e4].areasById(r3[0]), this._animations[e4].areasById(r3[1])], a2.swapAreaBuffers = false, r3) : n3 && !o2 ? r3[1] === t4[1] ? (a2.areas = [this._animations[e4].areasById(r3[0]), void 0], a2.swapAreaBuffers = !a2.swapAreaBuffers, r3) : (a2.areas = [void 0, this._animations[e4].areasById(r3[0])], a2.swapAreaBuffers = !a2.swapAreaBuffers, [r3[1], r3[0]]) : !n3 && o2 ? r3[0] === t4[0] ? (a2.areas = [void 0, this._animations[e4].areasById(r3[1])], a2.swapAreaBuffers = !a2.swapAreaBuffers, r3) : (a2.areas = [this._animations[e4].areasById(r3[1]), void 0], a2.swapAreaBuffers = !a2.swapAreaBuffers, [r3[1], r3[0]]) : t4;
    }, t3.prototype.updateColorsFromAnimation = function(e4, t4, r3, i3) {
      i3 === void 0 && (i3 = false);
      var n3 = !(r3[0] === t4[0] || r3[0] === t4[1]), o2 = !(r3[1] === t4[0] || r3[1] === t4[1]), a2 = e4 === 0 ? this._leafPass0 : this._leafPass1;
      return n3 && o2 || i3 ? (a2.colors = [this._animations[e4].colorsById(r3[0]), this._animations[e4].colorsById(r3[1])], a2.swapColorBuffers = false, r3) : n3 && !o2 ? r3[1] === t4[1] ? (a2.colors = [this._animations[e4].colorsById(r3[0]), void 0], a2.swapColorBuffers = !a2.swapColorBuffers, r3) : (a2.colors = [void 0, this._animations[e4].colorsById(r3[0])], a2.swapColorBuffers = !a2.swapColorBuffers, [r3[1], r3[0]]) : !n3 && o2 ? r3[0] === t4[0] ? (a2.colors = [void 0, this._animations[e4].colorsById(r3[1])], a2.swapColorBuffers = !a2.swapColorBuffers, r3) : (a2.colors = [this._animations[e4].colorsById(r3[1]), void 0], a2.swapColorBuffers = !a2.swapColorBuffers, [r3[1], r3[0]]) : t4;
    }, t3.prototype.updateLabelsForPass = function(e4, t4) {
      for (var r3 = [], i3 = 0, n3 = e4; i3 < n3.length; i3++) {
        var o2 = n3[i3];
        o2 !== void 0 && (o2.fontFace = this._fontFace, r3.push(o2));
      }
      t4.labels = r3, t4.update();
    }, t3.prototype.updateLabels = function(e4, t4) {
      this.updateLabelsForPass(e4, this._innerLabelPass), this.updateLabelsForPass(t4, this._leafLabelPass);
    }, t3.prototype.updateLeafLabelPass = function() {
      this._leafLabelPass.update();
    }, t3.prototype.updateLeafLabelBackgrounds = function(e4) {
      for (var t4 = [], r3 = [], i3 = [], n3 = [], o2 = 0, s2 = 0, u3 = e4; s2 < u3.length; s2++) {
        if ((h3 = u3[s2]) && h3.color.a !== 0) {
          var c3 = 2 * h3.extent[1] / this._frameSize[1];
          o2 = Math.max(o2, c3);
        }
      }
      for (var l3 = 0, f3 = e4; l3 < f3.length; l3++) {
        var h3;
        if ((h3 = f3[l3]) && h3.color.a !== 0) {
          t4.push(h3.position[0], h3.position[1], h3.position[2]);
          var d3 = (2 * h3.extent[0] + 1.75) / this._frameSize[0];
          r3.push(d3, o2);
          var p3 = 1.75 / this._frameSize[1], _3 = h3.alignment === a.Label.Alignment.Right ? -p3 - d3 : p3, g3 = 1.75 / this._frameSize[1], m3 = h3.lineAnchor === a.Label.LineAnchor.Top ? g3 - o2 : -g3;
          i3.push(_3, m3);
          var v2 = 0;
          h3.alignment === a.Label.Alignment.Left ? h3.lineAnchor === a.Label.LineAnchor.Bottom ? v2 = 1 : h3.lineAnchor === a.Label.LineAnchor.Top && (v2 = 2) : h3.alignment === a.Label.Alignment.Right && (h3.lineAnchor === a.Label.LineAnchor.Bottom ? v2 = 3 : h3.lineAnchor === a.Label.LineAnchor.Top && (v2 = 4)), n3.push(v2);
        }
      }
      this._labelBackgroundPass.updateData(new Float32Array(t4), new Float32Array(r3), new Float32Array(i3), new Uint8Array(n3));
    }, t3.prototype.updatePoints = function(e4) {
      for (var t4 = [], r3 = [], i3 = 0, n3 = e4; i3 < n3.length; i3++) {
        var o2 = n3[i3];
        o2 && (t4.push(o2.position[0], o2.position[1], o2.position[2]), r3.push(o2.color.r, o2.color.g, o2.color.b, o2.color.a));
      }
      this._pointPass.positions = new Float32Array(t4), this._pointPass.colors = new Float32Array(r3);
    }, t3.prototype.frameSizeAltered = function() {
      return this._altered.frameSize;
    }, t3.prototype.setCameraEye = function(e4, t4, r3) {
      this._camera.eye = o.vec3.fromValues(e4, t4, r3);
    }, t3.prototype.invalidate = function() {
      this.initialized && e3.prototype.invalidate.call(this, true);
    }, t3.prototype.onDiscarded = function() {
    }, t3.CAMERA_NEAR_DEFAULT = 0.01, t3.CAMERA_FAR_DEFAULT = 10, t3;
  }(a.Renderer);
  t2.AnimationRenderer = m2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.Navigation = void 0;
  var i2 = r2(15), n2 = r2(0), o = n2.auxiliaries.assert, a = n2.gl_matrix_extensions.v2, s = r2(0), u2 = r2(43), c2 = function() {
    function e3(e4, t3) {
      var r3 = this;
      this._mouseMovedSinceDown = false, this._seereneModifier = new u2.SeereneModifier(), this._nodeEnterSubject = new i2.ReplaySubject(1), this._nodeMoveSubject = new i2.ReplaySubject(1), this._nodeLeaveSubject = new i2.ReplaySubject(1), this._nodeSelectSubject = new i2.ReplaySubject(1), this._navigationStartSubject = new i2.ReplaySubject(1), this._invalidate = e4;
      this._touchSupported = document.documentElement && "ontouchstart" in document.documentElement || "ontouchstart" in document.body, t3.mouseEventProvider.preventDefault(s.MouseEventProvider.Type.Wheel, s.MouseEventProvider.Type.Click), t3.pointerEventProvider.preventDefault(s.PointerEventProvider.Type.Down, s.PointerEventProvider.Type.Move, s.PointerEventProvider.Type.Up), this._eventHandler = new s.EventHandler(e4, t3), this._eventHandler.pushMouseDownHandler(function(e5, t4) {
        return r3.onMouseDown(e5, t4);
      }), this._eventHandler.pushMouseUpHandler(function(e5, t4) {
        return r3.onMouseUp(e5, t4);
      }), this._eventHandler.pushMouseMoveHandler(function(e5, t4) {
        return r3.onMouseMove(e5, t4);
      }), this._eventHandler.pushMouseWheelHandler(function(e5, t4) {
        return r3.onMouseWheel(e5, t4);
      }), this._eventHandler.pushClickHandler(function(e5, t4) {
        return r3.onClick(e5, t4);
      }), this._touchSupported && (this._eventHandler.pushTouchStartHandler(function(e5, t4) {
        return r3.onTouchStart(e5, t4);
      }), this._eventHandler.pushTouchEndHandler(function(e5, t4) {
        return r3.onTouchEnd(e5, t4);
      }), this._eventHandler.pushTouchMoveHandler(function(e5, t4) {
        return r3.onTouchMove(e5, t4);
      }), this._eventHandler.pushTouchCancelHandler(function(e5, t4) {
        return r3.onTouchCancel(e5, t4);
      }));
    }
    return e3.prototype.mode = function(t3) {
      var r3 = t3.type === "mousedown" || t3.type === "mousemove", i3 = t3.type === "wheel";
      return r3 && this.isPrimaryButtonDown(t3) ? e3.Mode.Rotate : r3 && this.isSecondaryButtonDown(t3) ? e3.Mode.Pan : r3 && this.isAuxiliaryButtonDown(t3) ? e3.Mode.Zoom : i3 ? e3.Mode.ZoomStep : this._touchSupported && t3 instanceof TouchEvent && t3.touches.length === 1 ? e3.Mode.Pan : void 0;
    }, e3.prototype.rotate = function(e4, t3) {
      var r3 = n2.vec2.fromValues(e4.clientX, e4.clientY);
      t3 || this._seereneModifier.needStart() ? this._seereneModifier.initiate(r3, void 0, [false, false, true], e4.shiftKey) : (this._seereneModifier.update_positions(r3), this._seereneModifier.rotate());
    }, e3.prototype.pan = function(e4, t3) {
      var r3 = this._eventHandler.offsets(e4)[0];
      t3 || this._seereneModifier.needStart() ? this._seereneModifier.initiate(r3, void 0, [true, false, false], e4.shiftKey) : (this._seereneModifier.update_positions(r3), this._seereneModifier.translate());
    }, e3.prototype.zoom = function(e4, t3) {
      var r3 = this._eventHandler.offsets(e4)[0];
      t3 || this._seereneModifier.needStart() ? this._seereneModifier.initiate(r3, void 0, [false, true, false], e4.shiftKey) : (this._seereneModifier.update_positions(r3), this._seereneModifier.scale());
    }, e3.prototype.emitNodeMovementEvents = function(e4) {
      if (this._idAccess !== void 0) {
        var t3 = this._eventHandler.offsets(e4, false)[0], r3 = n2.vec2.scale(a(), t3, window.devicePixelRatio), i3 = this._idAccess.idAt(r3[0], r3[1]);
        this._lastNode === i3 && i3 !== void 0 && this._nodeMoveSubject.next({ node: i3, point: t3 }), this._lastNode !== i3 && this._lastNode !== void 0 && this._nodeLeaveSubject.next({ node: this._lastNode, point: t3 }), this._lastNode !== i3 && i3 !== void 0 && this._nodeEnterSubject.next({ node: i3, point: t3 }), this._lastNode = i3;
      }
    }, e3.prototype.emitNodeClick = function(e4) {
      if (this._idAccess !== void 0) {
        var t3 = this._eventHandler.offsets(e4, false)[0], r3 = n2.vec2.scale(a(), t3, window.devicePixelRatio), i3 = this._idAccess.idAt(r3[0], r3[1]);
        i3 !== void 0 && this._nodeSelectSubject.next({ node: i3, point: t3 });
      }
    }, e3.prototype.applyZoomStep = function(e4) {
      var t3 = this._eventHandler.offsets(e4)[0];
      this._seereneModifier.initiate(t3, void 0, [false, true, false], e4.shiftKey), e4.preventDefault(), this._seereneModifier.scale(e4.deltaY);
    }, e3.prototype.onMouseDown = function(e4, t3) {
      this._mouseMovedSinceDown = false;
    }, e3.prototype.onMouseUp = function(e4, t3) {
    }, e3.prototype.onMouseMove = function(t3, r3) {
      var i3 = t3[t3.length - 1];
      this._mouseMovedSinceDown = true;
      var n3 = this._mode === void 0;
      switch (this._mode = this.mode(i3), this._mode) {
        case e3.Mode.Rotate:
          return this.rotate(i3, n3), void (n3 && this._navigationStartSubject.next());
        case e3.Mode.Pan:
          return this.pan(i3, n3), void (n3 && this._navigationStartSubject.next());
        case e3.Mode.Zoom:
          return this.zoom(i3, n3), void (n3 && this._navigationStartSubject.next());
        default:
          this.emitNodeMovementEvents(i3);
      }
    }, e3.prototype.onClick = function(t3, r3) {
      var i3 = t3[t3.length - 1];
      switch (this._mode) {
        case e3.Mode.Rotate:
        case e3.Mode.Pan:
        case e3.Mode.Zoom:
          return;
        default:
          this.emitNodeClick(i3);
      }
    }, e3.prototype.onMouseWheel = function(t3, r3) {
      var i3 = t3[t3.length - 1];
      switch (this._mode = this.mode(i3), this._mode) {
        case e3.Mode.ZoomStep:
          this.applyZoomStep(i3), this._navigationStartSubject.next();
      }
    }, e3.prototype.onTouchStart = function(t3, r3) {
      var i3 = t3[t3.length - 1];
      this._mode = this.mode(i3), this._mode !== e3.Mode.Pan ? o(this._mode === void 0, "Interactions other than pan are not implemented for touch events.") : this.pan(i3, true);
    }, e3.prototype.onTouchMove = function(t3, r3) {
      var i3 = t3[t3.length - 1], n3 = this._mode === void 0;
      this._mode = this.mode(i3), this._mode !== e3.Mode.Pan ? o(this._mode === void 0, "Interactions other than pan are not implemented for touch events.") : this.pan(i3, n3);
    }, e3.prototype.onTouchEnd = function(e4, t3) {
    }, e3.prototype.onTouchCancel = function(e4, t3) {
    }, e3.prototype.isPrimaryButtonDown = function(e4) {
      return (e4.buttons === void 0 ? e4.which : e4.buttons) === 1;
    }, e3.prototype.isSecondaryButtonDown = function(e4) {
      return e4.buttons === void 0 ? e4.which === 3 : e4.buttons === 2;
    }, e3.prototype.isAuxiliaryButtonDown = function(e4) {
      return e4.buttons === void 0 ? e4.which === 2 : e4.buttons === 4;
    }, e3.prototype.update = function() {
      this._eventHandler.update();
    }, Object.defineProperty(e3.prototype, "camera", { set: function(e4) {
      this._camera = e4, this._seereneModifier.camera = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "coordsAccess", { set: function(e4) {
      this._coordsAccess = e4, this._seereneModifier.coordsAccess = this._coordsAccess.coordsAt;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "idAccess", { set: function(e4) {
      this._idAccess = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "nodeEnter$", { get: function() {
      return this._nodeEnterSubject.asObservable();
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "nodeMove$", { get: function() {
      return this._nodeMoveSubject.asObservable();
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "nodeLeave$", { get: function() {
      return this._nodeLeaveSubject.asObservable();
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "nodeSelect$", { get: function() {
      return this._nodeSelectSubject.asObservable();
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "navigationStart$", { get: function() {
      return this._navigationStartSubject.asObservable();
    }, enumerable: false, configurable: true }), e3;
  }();
  t2.Navigation = c2, function(e3) {
    !function(e4) {
      e4[e4.Move = 0] = "Move", e4[e4.Pan = 1] = "Pan", e4[e4.Rotate = 2] = "Rotate", e4[e4.Zoom = 3] = "Zoom", e4[e4.ZoomStep = 4] = "ZoomStep";
    }(e3.Mode || (e3.Mode = {}));
  }(c2 = t2.Navigation || (t2.Navigation = {})), t2.Navigation = c2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.AnimationData = void 0;
  var i2 = r2(0), n2 = function() {
    function e3() {
      this._altered = Object.assign(new i2.ChangeLookup(), { any: false, areaData: false, areaDelays: false, areaDurations: false, areaEasing: false, heightData: false, heightDelays: false, heightDurations: false, heightEasing: false, colorData: false, colorDelays: false, colorDurations: false, colorEasing: false }), this.reset();
    }
    return e3.prototype._calculateEndTime = function() {
      var e4 = function(e5) {
        for (var t4 = -1 / 0, r4 = 0; r4 < e5.length; r4++)
          t4 = Math.max(t4, e5[r4]);
        return t4;
      }, t3 = e4(this._area.delays[this._area.delays.length - 1]) + this._area.durations[this._area.durations.length - 1], r3 = e4(this._height.delays[this._height.delays.length - 1]) + this._height.durations[this._height.durations.length - 1], i3 = e4(this._color.delays[this._color.delays.length - 1]) + this._color.durations[this._color.durations.length - 1];
      this._endTime = Math.max(t3, r3, i3);
    }, e3.prototype._calculateStartTimes = function() {
      var e4 = this, t3 = function(e5) {
        for (var t4 = 1 / 0, r3 = 0; r3 < e5.length; r3++)
          t4 = Math.min(t4, e5[r3]);
        return t4;
      };
      this._height.startTimes.length = this._height.delays.length, this._height.delays.forEach(function(r3, i3) {
        e4._height.startTimes[i3] = t3(r3);
      }), this._color.startTimes.length = this._color.delays.length, this._color.delays.forEach(function(r3, i3) {
        e4._color.startTimes[i3] = t3(r3);
      });
    }, e3.prototype._findLastGreaterStartTime = function(e4, t3) {
      for (var r3 = 0, i3 = 0, n3 = e4.map(function(e5, t4) {
        return { time: e5, index: t4 };
      }); i3 < n3.length; i3++) {
        var o = n3[i3], a = o.time, s = o.index;
        if (!(t3 >= a))
          break;
        r3 = s;
      }
      return r3;
    }, e3.prototype.reset = function() {
      this._area = new e3.Area(), this._height = new e3.Height(), this._color = new e3.Color(), this._endTime = -1, this._altered.alter("any");
    }, e3.prototype.ids = function(e4) {
      var t3 = this._findLastGreaterStartTime(this._area.startTimes, e4), r3 = this._findLastGreaterStartTime(this._height.startTimes, e4), i3 = this._findLastGreaterStartTime(this._color.startTimes, e4), n3 = this._area.startTimes.length, o = this._height.startTimes.length, a = this._color.startTimes.length;
      return { areaData: [t3, Math.min(t3 + 1, n3)], areaDelay: t3, areaDuration: t3, heightData: [r3, Math.min(r3 + 1, o)], heightDelay: r3, heightDuration: r3, colorData: [i3, Math.min(i3 + 1, a)], colorDelay: i3, colorDuration: i3 };
    }, Object.defineProperty(e3.prototype, "areas", { set: function(e4) {
      this._area.data = e4, this._altered.alter("areaData");
    }, enumerable: false, configurable: true }), e3.prototype.areasById = function(e4) {
      return this._area.data[e4];
    }, Object.defineProperty(e3.prototype, "heights", { set: function(e4) {
      this._height.data = e4, this._altered.alter("heightData");
    }, enumerable: false, configurable: true }), e3.prototype.heightsById = function(e4) {
      return this._height.data[e4];
    }, Object.defineProperty(e3.prototype, "colors", { set: function(e4) {
      this._color.data = e4, this._altered.alter("colorData");
    }, enumerable: false, configurable: true }), e3.prototype.colorsById = function(e4) {
      return this._color.data[e4];
    }, Object.defineProperty(e3.prototype, "areaDelays", { set: function(e4) {
      this._area.delays = e4, this._calculateStartTimes(), this._altered.alter("areaDelays");
    }, enumerable: false, configurable: true }), e3.prototype.areaDelaysById = function(e4) {
      return this._area.delays[e4];
    }, Object.defineProperty(e3.prototype, "heightDelays", { set: function(e4) {
      this._height.delays = e4, this._calculateStartTimes(), this._altered.alter("heightDelays");
    }, enumerable: false, configurable: true }), e3.prototype.heightDelaysById = function(e4) {
      return this._height.delays[e4];
    }, Object.defineProperty(e3.prototype, "colorDelays", { set: function(e4) {
      this._color.delays = e4, this._calculateStartTimes(), this._altered.alter("colorDelays");
    }, enumerable: false, configurable: true }), e3.prototype.colorDelaysById = function(e4) {
      return this._color.delays[e4];
    }, Object.defineProperty(e3.prototype, "areaDurations", { set: function(e4) {
      this._area.durations = e4, this._altered.alter("areaDurations");
    }, enumerable: false, configurable: true }), e3.prototype.areaDurationById = function(e4) {
      return this._area.durations[e4];
    }, Object.defineProperty(e3.prototype, "heightDurations", { set: function(e4) {
      this._height.durations = e4, this._altered.alter("heightDurations");
    }, enumerable: false, configurable: true }), e3.prototype.heightDurationById = function(e4) {
      return this._height.durations[e4];
    }, Object.defineProperty(e3.prototype, "colorDurations", { set: function(e4) {
      this._color.durations = e4, this._altered.alter("colorDurations");
    }, enumerable: false, configurable: true }), e3.prototype.colorDurationById = function(e4) {
      return this._color.durations[e4];
    }, Object.defineProperty(e3.prototype, "areaEasing", { get: function() {
      return this._area.easing;
    }, set: function(e4) {
      this._area.easing = e4, this._altered.alter("areaEasing");
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "heightEasing", { get: function() {
      return this._height.easing;
    }, set: function(e4) {
      this._height.easing = e4, this._altered.alter("heightEasing");
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "colorEasing", { get: function() {
      return this._color.easing;
    }, set: function(e4) {
      this._color.easing = e4, this._altered.alter("colorEasing");
    }, enumerable: false, configurable: true }), e3.prototype.isFinished = function(e4) {
      return this.endTime < e4;
    }, Object.defineProperty(e3.prototype, "endTime", { get: function() {
      return this._endTime === -1 && this._calculateEndTime(), this._endTime;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "altered", { get: function() {
      return this._altered;
    }, enumerable: false, configurable: true }), e3;
  }();
  t2.AnimationData = n2, function(e3) {
    var t3 = function() {
      this.data = [new Uint8Array(), new Uint8Array()], this.delays = [new Float32Array()], this.durations = [1], this.easing = i3.LINEAR, this.startTimes = [0];
    };
    e3.Area = t3;
    var r3 = function() {
      this.data = [new Uint8Array(), new Uint8Array()], this.delays = [new Float32Array()], this.durations = [1], this.easing = i3.LINEAR, this.startTimes = [0];
    };
    e3.Height = r3;
    var i3, n3 = function() {
      this.data = [new Uint8Array(), new Uint8Array()], this.delays = [new Float32Array()], this.durations = [1], this.easing = i3.LINEAR, this.startTimes = [0];
    };
    e3.Color = n3, function(e4) {
      e4[e4.LINEAR = 0] = "LINEAR", e4[e4.SMOOTHSTEP = 1] = "SMOOTHSTEP", e4[e4.UNIMPLEMENTED = -1] = "UNIMPLEMENTED";
    }(i3 = e3.Easing || (e3.Easing = {}));
  }(n2 = t2.AnimationData || (t2.AnimationData = {})), t2.AnimationData = n2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.GeometryCreation = void 0;
  var i2 = function() {
    function e3() {
    }
    return e3.getColorIndexByEdges = function(e4, t3, r3, i3) {
      for (var n2 = 0; n2 < r3.length && e4 > r3[n2]; )
        ++n2;
      return Math.min(n2, t3 - 1);
    }, e3.getColorIndexByEdgesInverted = function(e4, t3, r3, i3) {
      for (var n2 = 0; n2 < r3.length; n2++)
        if (e4 <= r3[n2])
          return t3 - 1 - n2;
      return 0;
    }, e3.getColorIndex = function(e4, t3, r3) {
      var i3 = (e4 - r3[0]) / (r3[1] - r3[0]);
      return Math.min(t3 - 1, Math.floor(Math.max(0, t3 * i3 - 1e-4)));
    }, e3.getColorIndexInverted = function(e4, t3, r3) {
      return t3 - 1 - this.getColorIndex(e4, t3, r3);
    }, e3.getColorIndexComputation = function(e4, t3, r3, i3) {
      var n2 = this;
      return t3 === void 0 ? r3 ? function(t4) {
        return n2.getColorIndexInverted(t4, e4, i3);
      } : function(t4) {
        return n2.getColorIndex(t4, e4, i3);
      } : r3 ? function(r4) {
        return n2.getColorIndexByEdgesInverted(r4, e4, t3, i3);
      } : function(r4) {
        return n2.getColorIndexByEdges(r4, e4, t3, i3);
      };
    }, e3.insertLayoutIntoBuffer = function(e4, t3, r3) {
      var i3 = 4 * t3;
      e4[i3 + 0] = 2 * r3.left - 1, e4[i3 + 1] = 1 - 2 * r3.bottom - 2 * r3.height, e4[i3 + 2] = 2 * r3.width, e4[i3 + 3] = 2 * r3.height;
    }, e3.createLeafLayoutBuffer = function(t3, r3, i3) {
      var n2 = new Float32Array(4 * t3.numberOfLeafNodes), o = t3.numberOfInnerNodes;
      return t3.forEachLeafNode(function(t4) {
        var i4 = t4.index - o, a = r3[t4.index];
        e3.insertLayoutIntoBuffer(n2, i4, a);
      }), n2;
    }, e3.createLeafUnmodifiedBuffer = function(e4, t3) {
      var r3 = new Uint8Array(e4.numberOfLeafNodes), i3 = e4.numberOfInnerNodes;
      return e4.forEachLeafNode(function(e5) {
        var t4 = e5.index - i3;
        r3[t4] = e5.unmodified ? 1 : 0;
      }), r3;
    }, e3.createLayerHeightBuffer = function(e4, t3, r3, i3) {
      var n2 = new Uint8Array(2 * e4.numberOfLeafNodes), o = e4.numberOfInnerNodes, a = false;
      return e4.forEachLeafNode(function(e5) {
        var i4 = e5.index - o, s = r3 !== void 0 ? Math.max(r3[2 * i4 + 1], 0) : 0, u2 = Math.max(t3[e5.index], 0), c2 = s + 255 * u2;
        s > 0 && u2 > 0 && (c2 = Math.ceil(c2)), c2 > 255 && (a = true, c2 = 255), n2[2 * i4 + 0] = s, n2[2 * i4 + 1] = c2;
      }), a && console.error("Height value overflow"), n2;
    }, e3.createEmptyLayerHeightBuffer = function(e4) {
      return new Uint8Array(2 * e4.numberOfLeafNodes);
    }, e3.createLeafAreaScalesBuffer = function(e4, t3) {
      var r3 = new Uint8Array(e4.numberOfLeafNodes), i3 = e4.numberOfInnerNodes;
      return e4.forEachLeafNode(function(e5) {
        var n2 = e5.index - i3, o = Math.min(255 * t3[e5.index], 255);
        r3[n2] = o;
      }), r3;
    }, e3.createDefaultLeafAreaScalesBuffer = function(e4, t3) {
      t3 === void 0 && (t3 = 1);
      var r3 = new Uint8Array(e4.numberOfLeafNodes);
      return r3.fill(255 * t3), r3;
    }, e3.createParentLayoutBuffer = function(t3, r3, i3) {
      var n2 = new Float32Array(4 * t3.numberOfInnerNodes);
      return t3.forEachInnerNode(function(t4) {
        var i4 = t4.index, o = r3[t4.index];
        e3.insertLayoutIntoBuffer(n2, i4, o);
      }), n2;
    }, e3.defaultLeafNodeColors = function(e4, t3) {
      var r3 = new Uint8Array(e4.numberOfLeafNodes);
      return r3.fill(t3), r3;
    }, e3.createLeafNodeColors = function(e4, t3, r3, i3, n2, o, a, s, u2) {
      var c2 = new Uint8Array(e4.numberOfLeafNodes), l2 = e4.numberOfInnerNodes, f2 = this.getColorIndexComputation(i3, a, s, n2);
      return e4.forEachLeafNode(function(e5) {
        var i4 = e5.index - l2, n3 = t3[e5.index];
        if (n3 > -1) {
          var a2 = u2 && u2[e5.index] === 0 ? -1 : 1;
          c2[i4] = a2 * (r3 + f2(n3)) + 32;
        } else
          c2[i4] = o + 32;
      }), c2;
    }, e3.createLeafNodeHeights = function() {
      return new Uint8Array(0);
    }, e3.createLeafNodeAreaScales = function() {
      return new Uint8Array(0);
    }, e3;
  }();
  t2.GeometryCreation = i2, function(e3) {
    !function(e4) {
      e4.Plain = "plain";
    }(e3.ParentShading || (e3.ParentShading = {})), function(e4) {
      e4.Plain = "plain", e4.Diff = "diff";
    }(e3.LeafShading || (e3.LeafShading = {}));
  }(i2 = t2.GeometryCreation || (t2.GeometryCreation = {})), t2.GeometryCreation = i2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.ServiceAdapter = void 0;
  var i2 = r2(0), n2 = r2(1), o = r2(2), a = r2(8), s = r2(9), u2 = r2(5), c2 = r2(30), l2 = r2(31), f2 = r2(3), h2 = function() {
    function e3() {
      this._config = new o.Configuration(), this.setupLayoutAndGeometry();
    }
    return e3.prototype.loadAll = function(e4, t3, r3, i3, n3, o2) {
      this.loadAndPrepareAreaData(e4), this.loadAndPrepareColorData(t3), this.loadAndPrepareHeightData(r3, n3, o2), this.loadNames(i3);
    }, e3.prototype.loadCombinedFormat = function(e4, t3) {
      var r3, i3, n3 = new c2.BufferReader(e4), o2 = new c2.ServiceFormatHeader(n3);
      if (o2.hasFlag(c2.BufferFlags.HIERARCHY)) {
        var a2 = n3.getInt(), s2 = n3.getInt(), u3 = n3.getByteArray(s2);
        n3.addPadding(), this.createOrUpdateTopology(u3, a2);
      }
      if (o2.hasFlag(c2.BufferFlags.HEIGHTS) && (r3 = new l2.ServiceBufferHeader(e4, n3.offset), n3.offset = r3.offset + r3.length * Uint16Array.BYTES_PER_ELEMENT, n3.addPadding()), o2.hasFlag(c2.BufferFlags.HEIGHTS_COMPARE) && (i3 = new l2.ServiceBufferHeader(e4, n3.offset), n3.offset = i3.offset + i3.length * Uint16Array.BYTES_PER_ELEMENT, n3.addPadding()), this.loadAndPrepareHeightDataV2(e4, r3, i3), o2.hasFlag(c2.BufferFlags.AREAS)) {
        var f3 = new l2.ServiceBufferHeader(e4, n3.offset);
        n3.offset = f3.offset + f3.length * Uint16Array.BYTES_PER_ELEMENT, n3.addPadding(), this.loadAndPrepareAreaData(e4, f3);
      }
      o2.hasFlag(c2.BufferFlags.COLORS) ? n3.addPadding() : this.loadAndPrepareColorData(e4, r3);
    }, e3.prototype.loadAndPrepareAreaData = function(t3, r3) {
      r3 || (r3 = new l2.ServiceBufferHeader(t3)), i2.auxiliaries.log(i2.auxiliaries.LogLevel.Debug, "area - min: " + r3.minimum + ", max: " + r3.maximum), this.createOrUpdateBuffer({ identifier: e3.BufferIdentifier.SourceArea, type: n2.AttributeBuffer.DataType.Uint16, data: new Uint16Array(t3, r3.offset, r3.length), encoding: n2.AttributeBuffer.Encoding.Native, linearization: n2.AttributeBuffer.Linearization.Topology }), this.createOrUpdateBufferView({ identifier: e3.BufferViewIdentifier.DecodedArea, source: "buffer:" + e3.BufferIdentifier.SourceArea, transformations: [this.metricRangeTransform(r3.minimum, r3.maximum)] });
      var o2 = Math.max(1e-5, r3.maximum);
      r3.maximum === 0 && console.warn("treemap: max area is 0 - clamping to " + o2 + " for successful layout"), this.createOrUpdateBufferView({ identifier: e3.BufferViewIdentifier.ClampedArea, source: "bufferView:" + e3.BufferViewIdentifier.DecodedArea, transformations: [{ type: "clamp", min: o2 * e3.MINIMUM_NODE_WEIGHT, max: o2 }] }), this.createOrUpdateBufferView({ identifier: e3.BufferViewIdentifier.Weight, source: "bufferView:" + e3.BufferViewIdentifier.ClampedArea, transformations: [{ type: "propagate-up", operation: "sum" }] }), this._config.altered.alter("buffers"), this._config.altered.alter("bufferViews");
    }, e3.prototype.loadAndPrepareColorData = function(t3, r3) {
      r3 || (r3 = new l2.ServiceBufferHeader(t3)), i2.auxiliaries.log(i2.auxiliaries.LogLevel.Debug, "color - min: " + r3.minimum + ", max: " + r3.maximum), this.createOrUpdateBuffer({ identifier: e3.BufferIdentifier.SourceColor, type: n2.AttributeBuffer.DataType.Uint16, data: new Uint16Array(t3, r3.offset, r3.length), encoding: n2.AttributeBuffer.Encoding.Native, linearization: n2.AttributeBuffer.Linearization.Topology }), this.createOrUpdateBufferView({ identifier: e3.BufferViewIdentifier.DecodedColor, source: "buffer:" + e3.BufferIdentifier.SourceColor, transformations: [this.metricRangeTransform(r3.minimum, r3.maximum)] }), this.createOrUpdateBufferView({ identifier: e3.BufferViewIdentifier.Unmodified, source: "buffer:" + e3.BufferIdentifier.SourceColor, transformations: [{ type: "mask", value: e3.UINT16_ENCODING_UNMODIFIED }] }), this._config.altered.alter("buffers"), this._config.altered.alter("bufferViews");
    }, e3.prototype.loadAndPrepareHeightData = function(t3, r3, o2) {
      var a2 = new l2.ServiceBufferHeader(t3);
      i2.auxiliaries.log(i2.auxiliaries.LogLevel.Debug, "height - min: " + a2.minimum + ", max: " + a2.maximum);
      var s2 = a2.offset, u3 = new Uint16Array(t3, a2.offset, a2.length);
      if (a2.minimum > 0 && a2.minimum === a2.maximum)
        for (var c3 = 0; c3 < u3.length; c3++)
          u3[c3] === e3.UINT16_ENCODING_ZERO && (u3[c3] = e3.UINT16_ENCODING_MAX);
      if (this.createOrUpdateBuffer({ identifier: e3.BufferIdentifier.SourceHeight, type: n2.AttributeBuffer.DataType.Uint16, data: u3, encoding: n2.AttributeBuffer.Encoding.Native, linearization: n2.AttributeBuffer.Linearization.Topology }), s2 += Uint16Array.BYTES_PER_ELEMENT * a2.length, s2 += Int32Array.BYTES_PER_ELEMENT, this.createOrUpdateBuffer({ identifier: e3.BufferIdentifier.SourceCompareThreshold, type: n2.AttributeBuffer.DataType.Int8, data: new Int8Array(t3, s2, a2.length), encoding: n2.AttributeBuffer.Encoding.Native, linearization: n2.AttributeBuffer.Linearization.Topology }), s2 += Int8Array.BYTES_PER_ELEMENT * a2.length, r3) {
        s2 += 4 - s2 % 4;
        var f3 = new Uint32Array(t3, s2, 1)[0];
        s2 += Uint32Array.BYTES_PER_ELEMENT;
        var h3 = new Uint32Array(t3, s2, 1)[0];
        s2 += Uint32Array.BYTES_PER_ELEMENT, this.createOrUpdateTopology(new Uint8Array(t3, s2, h3), f3);
      }
      this.createOrUpdateBufferView({ identifier: e3.BufferViewIdentifier.DecodedHeight, source: "buffer:" + e3.BufferIdentifier.SourceHeight, transformations: [this.metricRangeTransform(a2.minimum, a2.maximum)] }), this.createOrUpdateBufferView({ identifier: e3.BufferViewIdentifier.NormalizedHeight, source: "buffer:" + e3.BufferIdentifier.SourceHeight, transformations: [this.metricRangeTransform(0, 1)] }), this.createOrUpdateBufferView({ identifier: e3.BufferViewIdentifier.HeightChange, source: "buffer:" + e3.BufferIdentifier.SourceCompareThreshold, transformations: [{ type: "threshold", value: 0 }] }), this.createOrUpdateBufferView({ identifier: e3.BufferViewIdentifier.BaseHeight, source: "buffer:" + e3.BufferIdentifier.SourceCompareThreshold, transformations: [{ type: "transform", operation: "divide", parameter: 127 }, { type: "transform", operation: "as-remainder" }, { type: "transform", operation: "multiply", buffer: "bufferView:" + e3.BufferViewIdentifier.NormalizedHeight }] }), this.createOrUpdateBufferView({ identifier: e3.BufferViewIdentifier.DecodedBaseHeight, source: "buffer:" + e3.BufferIdentifier.SourceCompareThreshold, transformations: [{ type: "transform", operation: "divide", parameter: 127 }, { type: "transform", operation: "as-remainder" }, { type: "transform", operation: "multiply", buffer: "bufferView:" + e3.BufferViewIdentifier.DecodedHeight }] }), this.createOrUpdateBufferView({ identifier: e3.BufferViewIdentifier.DeltaHeight, source: "bufferView:" + e3.BufferViewIdentifier.NormalizedHeight, transformations: [{ type: "transform", operation: "subtract", buffer: "bufferView:" + e3.BufferViewIdentifier.BaseHeight }, { type: "transform", operation: "abs" }] }), this.createOrUpdateBufferView({ identifier: e3.BufferViewIdentifier.DecodedDeltaHeight, source: "bufferView:" + e3.BufferViewIdentifier.DecodedHeight, transformations: [{ type: "transform", operation: "subtract", buffer: "bufferView:" + e3.BufferViewIdentifier.DecodedBaseHeight }, { type: "transform", operation: "abs" }] }), this._config.altered.alter("buffers"), this._config.altered.alter("bufferViews");
    }, e3.prototype.loadAndPrepareHeightDataV2 = function(t3, r3, o2) {
      i2.auxiliaries.log(i2.auxiliaries.LogLevel.Debug, "height - min: " + r3.minimum + ", max: " + r3.maximum), this.createOrUpdateBuffer({ identifier: e3.BufferIdentifier.SourceHeight, type: n2.AttributeBuffer.DataType.Uint16, data: new Uint16Array(t3, r3.offset, r3.length), encoding: n2.AttributeBuffer.Encoding.Native, linearization: n2.AttributeBuffer.Linearization.Topology }), this.createOrUpdateBufferView({ identifier: e3.BufferViewIdentifier.DecodedHeight, source: "buffer:" + e3.BufferIdentifier.SourceHeight, transformations: [this.metricRangeTransform(r3.minimum, r3.maximum)] }), o2 ? (this.createOrUpdateBuffer({ identifier: e3.BufferIdentifier.SourceCompareHeight, type: n2.AttributeBuffer.DataType.Uint16, data: new Uint16Array(t3, o2.offset, o2.length), encoding: n2.AttributeBuffer.Encoding.Native, linearization: n2.AttributeBuffer.Linearization.Topology }), this.createOrUpdateBufferView({ identifier: e3.BufferViewIdentifier.DecodedCompareHeight, source: "buffer:" + e3.BufferIdentifier.SourceCompareHeight, transformations: [this.metricRangeTransform(o2.minimum, o2.maximum)] }), this.createOrUpdateBufferView({ identifier: e3.BufferViewIdentifier.DecodedBaseHeight, source: "bufferView:" + e3.BufferViewIdentifier.DecodedHeight, transformations: [{ type: "transform", operation: "min", buffer: "bufferView:" + e3.BufferViewIdentifier.DecodedCompareHeight }] }), this.createOrUpdateBufferView({ identifier: e3.BufferViewIdentifier.DecodedDeltaHeight, source: "bufferView:" + e3.BufferViewIdentifier.DecodedHeight, transformations: [{ type: "transform", operation: "subtract", buffer: "bufferView:" + e3.BufferViewIdentifier.DecodedCompareHeight }, { type: "transform", operation: "abs" }] }), this.createOrUpdateBufferView({ identifier: e3.BufferViewIdentifier.BaseHeight, source: "bufferView:" + e3.BufferViewIdentifier.DecodedBaseHeight, transformations: [{ type: "range-transform", sourceRange: [r3.minimum, r3.maximum], targetRange: [0, 1] }] }), this.createOrUpdateBufferView({ identifier: e3.BufferViewIdentifier.DeltaHeight, source: "bufferView:" + e3.BufferViewIdentifier.DecodedDeltaHeight, transformations: [{ type: "range-transform", sourceRange: [o2.minimum, o2.maximum], targetRange: [0, 1] }] }), this.createOrUpdateBufferView({ identifier: e3.BufferViewIdentifier.HeightChange, source: "buffer:" + e3.BufferIdentifier.SourceHeight, transformations: [{ type: "transform", operation: "compare", buffer: "buffer:" + e3.BufferIdentifier.SourceCompareHeight }, { type: "threshold", value: 0 }] })) : this.createOrUpdateBufferView({ identifier: e3.BufferViewIdentifier.BaseHeight, source: "bufferView:" + e3.BufferViewIdentifier.DecodedHeight, transformations: [{ type: "range-transform", sourceRange: [r3.minimum, r3.maximum], targetRange: [0, 1] }] }), this._config.altered.alter("buffers"), this._config.altered.alter("bufferViews");
    }, e3.prototype.metricRangeTransform = function(t3, r3) {
      return { type: "range-transform", sourceRange: [e3.UINT16_ENCODING_ZERO, e3.UINT16_ENCODING_MAX], targetRange: [t3, r3] };
    }, e3.prototype.setupLayoutAndGeometry = function() {
      this._config.colors = [{ identifier: "emphasis", space: "hex", value: "#00b0ff" }, { identifier: "auxiliary", space: "hex", values: ["#00aa5e", "#71237c"] }, { identifier: "inner", space: "hex", values: ["#e8eaee", "#eef0f4"] }, { identifier: "analysis", space: "hex", values: ["#ffffff", "#fed500", "#fe8500", "#e62325"] }, { identifier: "segmentation", space: "hex", values: ["#ffffff", "#5392ff", "#71cddd", "#34bc6e", "#95d13c", "#db7c00", "#ffb000", "#ff509e", "#9b82f3"] }], this._config.layout = { algorithm: s.Layout.LayoutAlgorithm.Snake, weight: "bufferView:" + e3.BufferViewIdentifier.Weight, aspectRatio: 1, sort: { key: u2.NodeSort.Key.Weight, algorithm: u2.NodeSort.Algorithm.Descending }, siblingMargin: { type: "relative", value: 0.1 }, parentPadding: { type: "relative", value: 0.02 }, accessoryPadding: { type: "absolute", direction: "bottom", value: [0, 0.018, 0.015], relativeAreaThreshold: 0.4, targetAspectRatio: 2 }, cascade: false, flattenDirectories: false }, this._config.altered.alter("geometry"), this._config.geometry = { aggregation: { buffer: "bufferView:" + e3.BufferViewIdentifier.Unmodified, depthThreshold: 2, valueThreshold: 1 }, emphasis: { outline: new Array(), highlight: new Array() }, parentLayer: { showRoot: false }, leafLayers: [{ colorScheme: { inverted: false, classBounds: void 0 }, colorMap: "color:analysis", height: "bufferView:" + e3.BufferViewIdentifier.BaseHeight, colors: "bufferView:" + e3.BufferViewIdentifier.DecodedColor }, { colorScheme: { inverted: false, classBounds: void 0 }, colorMap: "color:analysis", height: "bufferView:" + e3.BufferViewIdentifier.DeltaHeight, colors: "bufferView:" + e3.BufferViewIdentifier.HeightChange }], heightScale: a.ConfigurationAids.HeightScaleApproach.SomethingInverseSqrt }, this._config.labels = { innerNodeLayerRange: [1, 3], numTopInnerNodes: 200, numTopWeightNodes: 0, numTopHeightNodes: 3, numTopColorNodes: 3 };
    }, e3.prototype.createOrUpdateBuffer = function(e4) {
      for (var t3 = 0; t3 < this._config.buffers.length && this._config.buffers[t3].identifier !== e4.identifier; )
        ++t3;
      this._config.buffers.length === t3 ? this._config.buffers.push(e4) : this._config.buffers.splice(t3, 1, e4);
    }, e3.prototype.createOrUpdateBufferView = function(e4) {
      for (var t3 = 0; t3 < this._config.bufferViews.length && this._config.bufferViews[t3].identifier !== e4.identifier; )
        ++t3;
      this._config.bufferViews.length === t3 ? this._config.bufferViews.push(e4) : this._config.bufferViews.splice(t3, 1, e4);
    }, e3.prototype.createOrUpdateTopology = function(e4, t3) {
      for (var r3 = new Array(), n3 = new Array(), o2 = t3 + 1, a2 = 0; a2 < e4.length; a2 += o2) {
        for (var s2 = i2.vec4.create(), u3 = 0; u3 < t3; u3++)
          s2[u3] = e4[a2 + u3];
        var c3 = i2.gl_matrix_extensions.decode_uint32_from_rgba8(s2), l3 = e4[a2 + t3];
        if (l3 > 0) {
          var h3 = n3[l3 - 1];
          r3.push(h3), r3.push(c3);
        }
        n3[l3] = c3;
      }
      this._config.topology = { edges: r3, format: f2.Topology.InputFormat.Interleaved };
    }, e3.prototype.loadNames = function(e4) {
      var t3 = /* @__PURE__ */ new Map();
      if (e4.apps || e4.groups) {
        for (var r3 in e4.apps) {
          var i3 = parseInt(r3, 10);
          t3.set(i3, e4.apps[r3]);
        }
        for (var r3 in e4.groups) {
          i3 = parseInt(r3, 10);
          t3.set(i3, e4.groups[r3]);
        }
      } else
        Object.keys(e4).forEach(function(r4) {
          var i4 = parseInt(r4, 10);
          t3.set(i4, e4[i4]);
        });
      this._config.labels.callback = function(e5, r4) {
        return r4(t3);
      };
    }, Object.defineProperty(e3.prototype, "config", { get: function() {
      return this._config;
    }, enumerable: false, configurable: true }), e3.UINT16_ENCODING_DB_NULL = 0, e3.UINT16_ENCODING_UNMODIFIED = 1, e3.UINT16_ENCODING_ZERO = 2, e3.UINT16_ENCODING_MAX = 65535, e3.MINIMUM_NODE_WEIGHT = 0.01, e3;
  }();
  t2.ServiceAdapter = h2, function(e3) {
    !function(e4) {
      e4.SourceArea = "SourceArea", e4.SourceHeight = "SourceHeight", e4.SourceColor = "SourceColor", e4.SourceCompareThreshold = "SourceCompareThresholds", e4.SourceCompareHeight = "SourceCompareHeight";
    }(e3.BufferIdentifier || (e3.BufferIdentifier = {})), function(e4) {
      e4.DecodedArea = "DecodedArea", e4.ClampedArea = "ClampedArea", e4.Weight = "Weight", e4.DecodedColor = "DecodedColor", e4.HeightChange = "HeightChange", e4.Unmodified = "Unmodified", e4.DecodedHeight = "DecodedHeight", e4.DecodedCompareHeight = "DecodedCompareHeight", e4.NormalizedHeight = "NormalizedHeight", e4.BaseHeight = "BaseHeight", e4.DeltaHeight = "DeltaHeight", e4.DecodedBaseHeight = "DecodedBaseHeight", e4.DecodedDeltaHeight = "DecodedDeltaHeight";
    }(e3.BufferViewIdentifier || (e3.BufferViewIdentifier = {}));
  }(h2 = t2.ServiceAdapter || (t2.ServiceAdapter = {})), t2.ServiceAdapter = h2;
}, function(e2, t2) {
  e2.exports = require$$0;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.ProgressMode = t2.ColorMode = void 0, function(e3) {
    e3[e3.UNDEFINED = -1] = "UNDEFINED", e3[e3.VERTICAL = 0] = "VERTICAL", e3[e3.ARROWS = 1] = "ARROWS", e3[e3.ARROWS_FULL = 2] = "ARROWS_FULL", e3[e3.ARROWS_DIVIDED_STATIC = 3] = "ARROWS_DIVIDED_STATIC", e3[e3.ARROWS_DIVIDED_DYNAMIC = 4] = "ARROWS_DIVIDED_DYNAMIC", e3[e3.DITHERING = 5] = "DITHERING", e3[e3.PYRAMID = 6] = "PYRAMID", e3[e3.NOISE = 7] = "NOISE", e3[e3.NOISE_DOUBLE = 8] = "NOISE_DOUBLE", e3[e3.QUADS = 9] = "QUADS";
  }(t2.ColorMode || (t2.ColorMode = {})), function(e3) {
    e3[e3.TIMER = 0] = "TIMER", e3[e3.WORLDSPACE = 1] = "WORLDSPACE", e3[e3.SCREENSPACE = 2] = "SCREENSPACE";
  }(t2.ProgressMode || (t2.ProgressMode = {}));
}, function(e2, t2, r2) {
  var i2, n2 = this && this.__extends || (i2 = function(e3, t3) {
    return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t4) {
      e4.__proto__ = t4;
    } || function(e4, t4) {
      for (var r3 in t4)
        Object.prototype.hasOwnProperty.call(t4, r3) && (e4[r3] = t4[r3]);
    })(e3, t3);
  }, function(e3, t3) {
    if (typeof t3 != "function" && t3 !== null)
      throw new TypeError("Class extends value " + String(t3) + " is not a constructor or null");
    function r3() {
      this.constructor = e3;
    }
    i2(e3, t3), e3.prototype = t3 === null ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
  }), o = this && this.__decorate || function(e3, t3, r3, i3) {
    var n3, o2 = arguments.length, a2 = o2 < 3 ? t3 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t3, r3) : i3;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
      a2 = Reflect.decorate(e3, t3, r3, i3);
    else
      for (var s2 = e3.length - 1; s2 >= 0; s2--)
        (n3 = e3[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t3, r3, a2) : n3(t3, r3)) || a2);
    return o2 > 3 && a2 && Object.defineProperty(t3, r3, a2), a2;
  };
  Object.defineProperty(t2, "__esModule", { value: true }), t2.PointRenderPass = void 0;
  var a = r2(0), s = r2(0), u2 = r2(44), c2 = function(e3) {
    function t3(t4) {
      var r3 = e3.call(this) || this;
      return r3._altered = Object.assign(new s.ChangeLookup(), { any: false, camera: false, geometry: false }), r3._context = t4, r3._program = new s.Program(t4, "PointRenderProgram"), r3._geometry = new u2.PointGeometry(r3._context, "Point"), r3;
    }
    return n2(t3, e3), t3.prototype.relink = function() {
      for (var e4 = 0, t4 = this._program.shaders; e4 < t4.length; e4++) {
        t4[e4].compile();
      }
      this._program.attribute("a_vertex", this._geometry.vertexLocation), this._program.attribute("a_color", this._geometry.colorLocation), this._program.link(), this._program.linked && (this._uViewProjection = this._program.uniform("u_viewProjection"), this._uNdcOffset = this._program.uniform("u_ndcOffset"), this._uPointSize = this._program.uniform("u_pointSize"));
    }, t3.prototype.initialize = function() {
      var e4 = this._context.gl, t4 = new s.Shader(this._context, e4.VERTEX_SHADER, "point.vert");
      t4.initialize(r2(45), false);
      var i3 = new s.Shader(this._context, e4.FRAGMENT_SHADER, "point.frag");
      return i3.initialize(r2(46), false), this._program.initialize([i3, t4], false), this._geometry.initialize(), true;
    }, t3.prototype.uninitialize = function() {
      this._geometry.uninitialize(), this._program.uninitialize(), this._uViewProjection = void 0, this._uNdcOffset = void 0, this._uPointSize = void 0;
    }, t3.prototype.update = function() {
      var e4 = this._context.gl;
      (this._program.initialized && this._program.linked || (this.relink(), this._program.linked)) && (this._program.bind(), (this._altered.camera || this._camera.altered) && e4.uniformMatrix4fv(this._uViewProjection, false, this._camera.viewProjection), this._altered.geometry && this._geometry.valid && this._geometry.update(), this._altered.reset());
    }, t3.prototype.frame = function() {
      a.auxiliaries.assert(this._target && this._target.valid, "valid target expected");
      var e4 = this._context.gl, t4 = this._target.size;
      e4.viewport(0, 0, t4[0], t4[1]), e4.disable(e4.DEPTH_TEST), e4.enable(e4.BLEND), e4.blendFuncSeparate(e4.SRC_ALPHA, e4.ONE_MINUS_SRC_ALPHA, e4.ONE, e4.ONE_MINUS_SRC_ALPHA), this._depthMask === false && (e4.depthFunc(e4.LEQUAL), e4.depthMask(false)), this._program.bind(), e4.uniform2fv(this._uNdcOffset, this._ndcOffset), e4.uniform1f(this._uPointSize, this._pointSize * window.devicePixelRatio), this._geometry.bind(), this._target.bind(), this._geometry.valid && this._geometry.draw(), this._depthMask === false && (e4.depthFunc(e4.LESS), e4.depthMask(true)), e4.disable(e4.BLEND);
    }, Object.defineProperty(t3.prototype, "target", { set: function(e4) {
      this.assertInitialized(), this._target = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "ndcOffset", { set: function(e4) {
      this.assertInitialized(), this._ndcOffset = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "pointSize", { set: function(e4) {
      this._pointSize = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "camera", { set: function(e4) {
      this.assertInitialized(), this._camera !== e4 && (this._camera = e4, this._altered.alter("camera"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "positions", { set: function(e4) {
      this._geometry.vertices = e4, this._altered.alter("geometry");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colors", { set: function(e4) {
      this.assertInitialized(), this._geometry.colors = e4, this._altered.alter("geometry");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "depthMask", { set: function(e4) {
      this._depthMask = e4;
    }, enumerable: false, configurable: true }), o([s.Initializable.assert_initialized()], t3.prototype, "relink", null), o([s.Initializable.initialize()], t3.prototype, "initialize", null), o([s.Initializable.uninitialize()], t3.prototype, "uninitialize", null), o([s.Initializable.assert_initialized()], t3.prototype, "update", null), o([s.Initializable.assert_initialized()], t3.prototype, "frame", null), t3;
  }(s.Initializable);
  t2.PointRenderPass = c2;
}, function(e2, t2, r2) {
  var i2, n2 = this && this.__extends || (i2 = function(e3, t3) {
    return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t4) {
      e4.__proto__ = t4;
    } || function(e4, t4) {
      for (var r3 in t4)
        Object.prototype.hasOwnProperty.call(t4, r3) && (e4[r3] = t4[r3]);
    })(e3, t3);
  }, function(e3, t3) {
    if (typeof t3 != "function" && t3 !== null)
      throw new TypeError("Class extends value " + String(t3) + " is not a constructor or null");
    function r3() {
      this.constructor = e3;
    }
    i2(e3, t3), e3.prototype = t3 === null ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
  }), o = this && this.__decorate || function(e3, t3, r3, i3) {
    var n3, o2 = arguments.length, a2 = o2 < 3 ? t3 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t3, r3) : i3;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
      a2 = Reflect.decorate(e3, t3, r3, i3);
    else
      for (var s2 = e3.length - 1; s2 >= 0; s2--)
        (n3 = e3[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t3, r3, a2) : n3(t3, r3)) || a2);
    return o2 > 3 && a2 && Object.defineProperty(t3, r3, a2), a2;
  };
  Object.defineProperty(t2, "__esModule", { value: true }), t2.QuadRenderPass = void 0;
  var a = r2(0), s = r2(0), u2 = r2(19), c2 = r2(6), l2 = r2(50), f2 = function(e3) {
    function t3(t4) {
      var r3 = e3.call(this) || this;
      return r3._standardDerivatives = void 0, r3._altered = Object.assign(new s.ChangeLookup(), { any: false, camera: false, geometry: false, colorTable: false, emphases: false, outlineWidth: true, emphasisOutlineWidth: true }), r3._outlineWidth = u2.CuboidRenderPass.OUTLINE_WIDTH_DEFAULT, r3._emphasisOutlineWidth = u2.CuboidRenderPass.EMPHASIS_OUTLINE_WIDTH_DEFAULT, r3._attachment = c2.MultiRenderTarget.Attachment.Undefined, r3._context = t4, r3._program = new s.Program(t4, "QuadRenderProgram"), r3._geometry = new l2.QuadGeometry(r3._context, "Quad"), r3;
    }
    return n2(t3, e3), t3.prototype.relink = function() {
      if (this._colorTable !== void 0) {
        for (var e4 = 0, t4 = this._program.shaders; e4 < t4.length; e4++) {
          var r3 = t4[e4];
          r3.replace("$ColorTableLength", String(this._colorTable.length / 4)), r3.compile();
        }
        this._program.attribute("a_vertex", this._geometry.vertexLocation), this._program.attribute("a_layout", this._geometry.layoutLocation), this._program.attribute("a_id", this._geometry.idLocation), this._program.attribute("a_color", this._geometry.colorLocation), this._program.attribute("a_emphasis", this._geometry.emphasisLocation), this._program.link(), this._program.linked && (this._drawRestricted && (this._uAttachment = this._program.uniform("u_attachment")), this._uViewProjection = this._program.uniform("u_viewProjection"), this._uNdcOffset = this._program.uniform("u_ndcOffset"), this._uColorTable = this._program.uniform("u_colorTable"), this._uOutlineWidth = this._program.uniform("u_outlineWidth"), this._uEmphasisOutlineWidth = this._program.uniform("u_emphasisOutlineWidth"));
      }
    }, t3.prototype.initialize = function() {
      var e4 = this._context.gl;
      this._drawRestricted = !this._context.isWebGL2 && !this._context.supportsDrawBuffers, this._context.isWebGL1 && this._standardDerivatives === void 0 && (this._context.enable(["OES_standard_derivatives"]), this._standardDerivatives = this._context.standardDerivatives);
      var t4 = new s.Shader(this._context, e4.VERTEX_SHADER, "quad.vert");
      t4.initialize(r2(51), false);
      var i3 = new s.Shader(this._context, e4.FRAGMENT_SHADER, "quad.frag");
      return i3.initialize(r2(52), false), this._program.initialize([i3, t4], false), this._geometry.initialize(), true;
    }, t3.prototype.uninitialize = function() {
      this._geometry.uninitialize(), this._program.uninitialize(), this._uAttachment = void 0, this._uViewProjection = void 0, this._uNdcOffset = void 0, this._uColorTable = void 0, this._uOutlineWidth = void 0, this._uEmphasisOutlineWidth = void 0;
    }, t3.prototype.update = function() {
      var e4 = this._context.gl;
      (this._program.initialized && this._program.linked || (this.relink(), this._program.linked)) && (this._program.bind(), (this._altered.camera || this._camera.altered) && e4.uniformMatrix4fv(this._uViewProjection, false, this._camera.viewProjection), this._colorTable && e4.uniform4fv(this._uColorTable, this._colorTable), this._altered.geometry && this._geometry.valid && this._geometry.update(), this._altered.outlineWidth && e4.uniform1f(this._uOutlineWidth, this._outlineWidth), this._target && this._target.valid && e4.uniform1f(this._uEmphasisOutlineWidth, this._emphasisOutlineWidth * window.devicePixelRatio), this._altered.reset());
    }, t3.prototype.frame = function() {
      if (a.auxiliaries.assert(this._target && this._target.valid, "valid target expected"), this._dispatch !== void 0 && this._colorTable !== void 0) {
        var e4 = this._context.gl, t4 = this._target.size;
        if (e4.viewport(0, 0, t4[0], t4[1]), e4.enable(e4.CULL_FACE), e4.enable(e4.DEPTH_TEST), e4.enable(e4.STENCIL_TEST), e4.stencilFunc(e4.GREATER, 1, 255), e4.stencilOp(e4.KEEP, e4.KEEP, e4.REPLACE), this._depthMask === false && (e4.depthFunc(e4.LEQUAL), e4.depthMask(false)), this._program.bind(), this._drawRestricted && e4.uniform1i(this._uAttachment, this._attachment), e4.uniform2fv(this._uNdcOffset, this._ndcOffset), this._geometry.bind(), this._target.bind(), this._geometry.valid)
          for (var r3 = 0; r3 < this._dispatch.length; r3 += 2) {
            var i3 = this._dispatch[r3 + 0], n3 = this._dispatch[r3 + 1];
            this._geometry.draw(i3, n3);
          }
        this._depthMask === false && (e4.depthFunc(e4.LESS), e4.depthMask(true)), e4.disable(e4.STENCIL_TEST), e4.disable(e4.DEPTH_TEST), e4.disable(e4.CULL_FACE);
      }
    }, Object.defineProperty(t3.prototype, "target", { set: function(e4) {
      this.assertInitialized(), this._target = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "ndcOffset", { set: function(e4) {
      this.assertInitialized(), this._ndcOffset = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "camera", { set: function(e4) {
      this.assertInitialized(), this._camera !== e4 && (this._camera = e4, this._altered.alter("camera"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "dispatch", { set: function(e4) {
      this.assertInitialized(), this._dispatch = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "layout", { set: function(e4) {
      this.assertInitialized(), this._geometry.layout = e4, this._altered.alter("geometry");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "ids", { set: function(e4) {
      this.assertInitialized(), this._geometry.ids = e4, this._altered.alter("geometry");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colors", { set: function(e4) {
      this.assertInitialized(), this._geometry.colors = e4, this._altered.alter("geometry");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "emphases", { set: function(e4) {
      this.assertInitialized(), this._geometry.emphases = e4, this._altered.alter("emphases");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colorTable", { set: function(e4) {
      this.assertInitialized(), this._colorTable = e4, this._altered.alter("colorTable");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "outlineWidth", { set: function(e4) {
      this.assertInitialized(), this._outlineWidth !== e4 && (this._outlineWidth = e4 === void 0 ? u2.CuboidRenderPass.OUTLINE_WIDTH_DEFAULT : Math.max(0, e4), this._altered.alter("outlineWidth"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "emphasisOutlineWidth", { set: function(e4) {
      this.assertInitialized(), this._emphasisOutlineWidth !== e4 && (this._emphasisOutlineWidth = e4 === void 0 ? u2.CuboidRenderPass.EMPHASIS_OUTLINE_WIDTH_DEFAULT : Math.max(0, e4), this._altered.alter("emphasisOutlineWidth"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "attachment", { set: function(e4) {
      a.auxiliaries.logIf(e4 !== c2.MultiRenderTarget.Attachment.Undefined && !this._drawRestricted, a.auxiliaries.LogLevel.Debug, "expected WEBGL_draw_buffers to be unsupported"), this._attachment = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "depthMask", { set: function(e4) {
      this._depthMask = e4;
    }, enumerable: false, configurable: true }), o([s.Initializable.assert_initialized()], t3.prototype, "relink", null), o([s.Initializable.initialize()], t3.prototype, "initialize", null), o([s.Initializable.uninitialize()], t3.prototype, "uninitialize", null), o([s.Initializable.assert_initialized()], t3.prototype, "update", null), o([s.Initializable.assert_initialized()], t3.prototype, "frame", null), t3;
  }(s.Initializable);
  t2.QuadRenderPass = f2;
}, function(e2, t2, r2) {
  var i2, n2 = this && this.__extends || (i2 = function(e3, t3) {
    return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t4) {
      e4.__proto__ = t4;
    } || function(e4, t4) {
      for (var r3 in t4)
        Object.prototype.hasOwnProperty.call(t4, r3) && (e4[r3] = t4[r3]);
    })(e3, t3);
  }, function(e3, t3) {
    if (typeof t3 != "function" && t3 !== null)
      throw new TypeError("Class extends value " + String(t3) + " is not a constructor or null");
    function r3() {
      this.constructor = e3;
    }
    i2(e3, t3), e3.prototype = t3 === null ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
  }), o = this && this.__decorate || function(e3, t3, r3, i3) {
    var n3, o2 = arguments.length, a2 = o2 < 3 ? t3 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t3, r3) : i3;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
      a2 = Reflect.decorate(e3, t3, r3, i3);
    else
      for (var s2 = e3.length - 1; s2 >= 0; s2--)
        (n3 = e3[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t3, r3, a2) : n3(t3, r3)) || a2);
    return o2 > 3 && a2 && Object.defineProperty(t3, r3, a2), a2;
  };
  Object.defineProperty(t2, "__esModule", { value: true }), t2.CuboidRenderPass = void 0;
  var a = r2(0), s = r2(0), u2 = r2(47), c2 = r2(6), l2 = function(e3) {
    function t3(r3, i3) {
      var n3 = e3.call(this) || this;
      return n3._standardDerivatives = void 0, n3._altered = Object.assign(new s.ChangeLookup(), { any: true, camera: true, geometry: true, colorTable: true, colorTableLength: true, emphases: true, layerIndex: true, heightScale: true, levitate: true, outlineWidth: true, emphasisOutlineWidth: true }), n3._arrows = false, n3._outlineWidth = t3.OUTLINE_WIDTH_DEFAULT, n3._emphasisOutlineWidth = t3.EMPHASIS_OUTLINE_WIDTH_DEFAULT, n3._attachment = c2.MultiRenderTarget.Attachment.Undefined, n3._faceSequence = new Array(), n3._faceData = /* @__PURE__ */ new Map(), n3._context = r3, a.auxiliaries.assert(i3 >= 0 && i3 <= t3.CUBOID_LAYERS, "expected layer index to be in range [0, " + t3.MINIMUM_CUBOID_HEIGHT + "], given " + i3), n3._layerIndex = i3, n3._drawRestricted = !n3._context.isWebGL2 && !n3._context.supportsDrawBuffers, n3._program = new s.Program(r3, "CuboidRenderProgram"), n3._geometry = t3.referenceGeometry(r3), n3;
    }
    return n2(t3, e3), t3.referenceGeometry = function(e4) {
      var r3;
      t3.GEOMETRY_BY_CONTEXT.has(e4) ? r3 = t3.GEOMETRY_BY_CONTEXT.get(e4) : ((r3 = new u2.CuboidGeometry(e4, t3.CUBOID_LAYERS, "CuboidGeometry")).initialize(), t3.GEOMETRY_BY_CONTEXT.set(e4, r3), t3.REFCOUNT_BY_GEOMETRY.set(r3, 0));
      var i3 = t3.REFCOUNT_BY_GEOMETRY.get(r3) + 1;
      return t3.REFCOUNT_BY_GEOMETRY.set(r3, i3), r3;
    }, t3.unreferenceGeometry = function(e4) {
      if (t3.GEOMETRY_BY_CONTEXT.has(e4)) {
        var r3 = t3.GEOMETRY_BY_CONTEXT.get(e4), i3 = t3.REFCOUNT_BY_GEOMETRY.get(r3) - 1;
        t3.REFCOUNT_BY_GEOMETRY.set(r3, i3), i3 > 0 || (r3.uninitialize(), t3.GEOMETRY_BY_CONTEXT.delete(e4), t3.REFCOUNT_BY_GEOMETRY.delete(r3));
      }
    }, t3.prototype.relink = function() {
      if (this._colorTable !== void 0) {
        for (var e4 = 0, t4 = this._program.shaders; e4 < t4.length; e4++) {
          var r3 = t4[e4];
          r3.replace("$ColorTableLength", String(this._colorTable.length / 4)), r3.compile();
        }
        this._program.attribute("a_vertex", this._geometry.vertexLocation), this._program.attribute("a_layout", this._geometry.layoutLocation), this._program.attribute("a_id", this._geometry.idLocation), this._program.attribute("a_areaScale", this._geometry.areaScaleLocation), this._program.attribute("a_color", this._geometry.colorLocation), this._program.attribute("a_emphasis", this._geometry.emphasisLocation), this._program.attribute("a_heights", this._geometry.heightLocation), this._program.attribute("a_texCoord", this._geometry.texCoordLocation), this._program.link(), this._program.linked && (this._drawRestricted && (this._uAttachment = this._program.uniform("u_attachment")), this._uViewProjection = this._program.uniform("u_viewProjection"), this._uNdcOffset = this._program.uniform("u_ndcOffset"), this._uColorTable = this._program.uniform("u_colorTable"), this._uLayer = this._program.uniform("u_layer"), this._uArrows = this._program.uniform("u_arrows"), this._uFace = this._program.uniform("u_face"), this._uNormalAndLambert = this._program.uniform("u_normalAndLambert"), this._uHeightScale = this._program.uniform("u_heightScale"), this._uFloatingGap = this._program.uniform("u_floatingGap"), this._uOutlineWidth = this._program.uniform("u_outlineWidth"), this._uEmphasisOutlineWidth = this._program.uniform("u_emphasisOutlineWidth"));
      }
    }, t3.prototype.optimizeFaceSequence = function() {
      var e4 = this._camera.eye, r3 = this._camera.center, i3 = new Array(), n3 = a.vec3.create();
      a.vec3.sub(n3, e4, r3), a.vec3.normalize(n3, n3), e4[1] > 0 && i3.push([t3.Face.Top, Math.abs(a.vec3.dot(a.vec3.fromValues(0, 1, 0), n3))]), e4[2] > -1 && i3.push([t3.Face.Front, Math.abs(a.vec3.dot(a.vec3.fromValues(0, 0, 1), n3))]), e4[2] < 1 && i3.push([t3.Face.Back, Math.abs(a.vec3.dot(a.vec3.fromValues(0, 0, -1), n3))]), e4[0] > -1 && i3.push([t3.Face.Left, Math.abs(a.vec3.dot(a.vec3.fromValues(1, 0, 0), n3))]), e4[0] < 1 && i3.push([t3.Face.Right, Math.abs(a.vec3.dot(a.vec3.fromValues(-1, 0, 0), n3))]), i3 = i3.sort(function(e5, t4) {
        return t4[1] - e5[1];
      }), this._faceSequence = i3.map(function(e5) {
        return e5[0];
      });
    }, t3.prototype.initialize = function() {
      var e4 = this._context.gl;
      this._context.isWebGL1 && this._standardDerivatives === void 0 && (this._context.enable(["OES_standard_derivatives"]), this._standardDerivatives = this._context.standardDerivatives);
      var i3 = new s.Shader(this._context, e4.VERTEX_SHADER, "cuboid.vert");
      i3.initialize(r2(48), false);
      var n3 = new s.Shader(this._context, e4.FRAGMENT_SHADER, "cuboid.frag");
      return n3.initialize(r2(49), false), this._program.initialize([i3, n3], false), this._faceData.set(t3.Face.Top, [0, 1, 0, 1]), this._faceData.set(t3.Face.Bottom, [0, -1, 0, 0.68]), this._faceData.set(t3.Face.Front, [0, 0, 1, 0.88]), this._faceData.set(t3.Face.Back, [0, 0, -1, 0.88]), this._faceData.set(t3.Face.Left, [1, 0, 0, 0.84]), this._faceData.set(t3.Face.Right, [-1, 0, 0, 0.84]), true;
    }, t3.prototype.uninitialize = function() {
      t3.unreferenceGeometry(this._context), this._program.uninitialize(), this._uAttachment = void 0, this._uViewProjection = void 0, this._uNdcOffset = void 0, this._uColorTable = void 0, this._uLayer = void 0, this._uFace = void 0, this._uNormalAndLambert = void 0, this._uHeightScale = void 0, this._uFloatingGap = void 0, this._uOutlineWidth = void 0, this._uEmphasisOutlineWidth = void 0;
    }, t3.prototype.update = function() {
      var e4 = this._context.gl, r3 = false;
      if (!this._program.initialized || !this._program.linked || this._altered.colorTableLength) {
        if (this.relink(), !this._program.linked)
          return;
        r3 = true;
      }
      if (this._program.bind(), (r3 || this._altered.camera || this._camera.altered) && (e4.uniformMatrix4fv(this._uViewProjection, false, this._camera.viewProjection), this.optimizeFaceSequence()), (r3 || this._colorTable) && e4.uniform4fv(this._uColorTable, this._colorTable), this._altered.geometry && this._geometry.valid && this._geometry.update(), (r3 || this._altered.heightScale) && e4.uniform1f(this._uHeightScale, this._heightScale / 255), (r3 || this._altered.outlineWidth) && e4.uniform1f(this._uOutlineWidth, this._outlineWidth), r3 || this._altered.emphasisOutlineWidth) {
        var i3 = window.devicePixelRatio;
        e4.uniform1f(this._uEmphasisOutlineWidth, this._emphasisOutlineWidth * i3);
      }
      if (this._target && this._target.valid) {
        i3 = window.devicePixelRatio;
        e4.uniform2f(this._uFloatingGap, this._levitate * i3 / this._target.height, t3.MINIMUM_CUBOID_HEIGHT * i3 / this._target.height);
      }
      this._altered.reset();
    }, t3.prototype.frame = function() {
      if (a.auxiliaries.assert(this._target && this._target.valid, "valid target expected"), this._dispatch !== void 0) {
        var e4 = this._context.gl, t4 = this._target.size;
        e4.viewport(0, 0, t4[0], t4[1]), e4.enable(e4.CULL_FACE), e4.enable(e4.DEPTH_TEST), e4.enable(e4.STENCIL_TEST), e4.stencilFunc(e4.ALWAYS, 2, 255), e4.stencilOp(e4.KEEP, e4.KEEP, e4.REPLACE), this._depthMask === false && (e4.depthFunc(e4.LEQUAL), e4.depthMask(false)), this._program.bind(), this._drawRestricted && e4.uniform1i(this._uAttachment, this._attachment), e4.uniform2fv(this._uNdcOffset, this._ndcOffset), e4.uniform1i(this._uLayer, this._layerIndex), e4.uniform1i(this._uArrows, this._arrows ? 1 : 0), this._geometry.bind(), this._target.bind();
        for (var r3 = 0, i3 = this._faceSequence; r3 < i3.length; r3++) {
          var n3 = i3[r3];
          if (e4.uniform1i(this._uFace, n3), e4.uniform4fv(this._uNormalAndLambert, this._faceData.get(n3)), this._geometry.valid)
            for (var o2 = 0; o2 < this._dispatch.length; o2 += 2) {
              var s2 = (n3 - 1) * u2.CuboidGeometry.BYTES_PER_VERTEX * 4, c3 = this._dispatch[o2 + 0], l3 = this._dispatch[o2 + 1];
              this._geometry.draw(this._layerIndex, c3, s2, l3);
            }
        }
        this._depthMask === false && (e4.depthFunc(e4.LESS), e4.depthMask(true)), e4.disable(e4.STENCIL_TEST), e4.disable(e4.DEPTH_TEST), e4.disable(e4.CULL_FACE);
      }
    }, t3.prototype.colorTableLengthAltered = function() {
      this._altered.alter("colorTableLength");
    }, Object.defineProperty(t3.prototype, "target", { set: function(e4) {
      this.assertInitialized(), this._target = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "ndcOffset", { set: function(e4) {
      this.assertInitialized(), this._ndcOffset = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "camera", { set: function(e4) {
      this.assertInitialized(), this._camera !== e4 && (this._camera = e4, this._altered.alter("camera"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "dispatch", { set: function(e4) {
      this.assertInitialized(), this._dispatch = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "layoutData", { set: function(e4) {
      this.assertInitialized(), this._layerIndex > 0 || (this._geometry.layout = e4, this._altered.alter("geometry"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "ids", { set: function(e4) {
      this.assertInitialized(), this._layerIndex > 0 || (this._geometry.ids = e4, this._altered.alter("geometry"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "areaScales", { set: function(e4) {
      this.assertInitialized(), this._layerIndex > 0 || (this._geometry.areaScales(e4, void 0, 1), this._altered.alter("geometry"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colors", { set: function(e4) {
      this.assertInitialized(), this._layerIndex > 0 || (this._geometry.colors(e4, void 0, 1), this._altered.alter("geometry"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "emphases", { set: function(e4) {
      this.assertInitialized(), this._layerIndex > 0 || (this._geometry.emphases = e4, this._altered.alter("emphases"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "heights", { set: function(e4) {
      this.assertInitialized(), this._geometry.heights(e4, this._layerIndex), this._altered.alter("geometry");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colorTable", { set: function(e4) {
      this.assertInitialized(), this._colorTable = e4, this._altered.alter("colorTable");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "outlineWidth", { set: function(e4) {
      this.assertInitialized(), this._outlineWidth !== e4 && (this._outlineWidth = e4 === void 0 ? t3.OUTLINE_WIDTH_DEFAULT : Math.max(0, e4), this._altered.alter("outlineWidth"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "emphasisOutlineWidth", { set: function(e4) {
      this.assertInitialized(), this._emphasisOutlineWidth !== e4 && (this._emphasisOutlineWidth = e4 === void 0 ? t3.EMPHASIS_OUTLINE_WIDTH_DEFAULT : Math.max(0, e4), this._altered.alter("emphasisOutlineWidth"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "heightScale", { set: function(e4) {
      this.assertInitialized(), this._heightScale !== e4 && (this._heightScale = e4 === void 0 ? 0 : a.gl_matrix_extensions.clamp(e4, 0, 1), this._altered.alter("heightScale"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "levitate", { set: function(e4) {
      this.assertInitialized(), this._levitate !== e4 && (this._levitate = e4 === void 0 ? 0 : Math.max(0, e4), this._altered.alter("levitate"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "attachment", { set: function(e4) {
      a.auxiliaries.logIf(e4 !== c2.MultiRenderTarget.Attachment.Undefined && !this._drawRestricted, a.auxiliaries.LogLevel.Debug, "expected WEBGL_draw_buffers to be unsupported"), this._attachment = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "depthMask", { set: function(e4) {
      this._depthMask = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "arrows", { set: function(e4) {
      this._arrows = e4;
    }, enumerable: false, configurable: true }), t3.GEOMETRY_BY_CONTEXT = /* @__PURE__ */ new Map(), t3.CUBOID_LAYERS = 2, t3.REFCOUNT_BY_GEOMETRY = /* @__PURE__ */ new Map(), t3.MINIMUM_CUBOID_HEIGHT = 4, t3.OUTLINE_WIDTH_DEFAULT = 0.8, t3.EMPHASIS_OUTLINE_WIDTH_DEFAULT = 1.6, o([s.Initializable.assert_initialized()], t3.prototype, "relink", null), o([s.Initializable.assert_initialized()], t3.prototype, "optimizeFaceSequence", null), o([s.Initializable.initialize()], t3.prototype, "initialize", null), o([s.Initializable.uninitialize()], t3.prototype, "uninitialize", null), o([s.Initializable.assert_initialized()], t3.prototype, "update", null), o([s.Initializable.assert_initialized()], t3.prototype, "frame", null), t3;
  }(s.Initializable);
  t2.CuboidRenderPass = l2, function(e3) {
    !function(e4) {
      e4[e4.Top = 1] = "Top", e4[e4.Bottom = 2] = "Bottom", e4[e4.Front = 3] = "Front", e4[e4.Back = 4] = "Back", e4[e4.Left = 5] = "Left", e4[e4.Right = 6] = "Right";
    }(e3.Face || (e3.Face = {}));
  }(l2 = t2.CuboidRenderPass || (t2.CuboidRenderPass = {})), t2.CuboidRenderPass = l2;
}, function(e2, t2, r2) {
  var i2, n2 = this && this.__extends || (i2 = function(e3, t3) {
    return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t4) {
      e4.__proto__ = t4;
    } || function(e4, t4) {
      for (var r3 in t4)
        Object.prototype.hasOwnProperty.call(t4, r3) && (e4[r3] = t4[r3]);
    })(e3, t3);
  }, function(e3, t3) {
    if (typeof t3 != "function" && t3 !== null)
      throw new TypeError("Class extends value " + String(t3) + " is not a constructor or null");
    function r3() {
      this.constructor = e3;
    }
    i2(e3, t3), e3.prototype = t3 === null ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
  }), o = this && this.__decorate || function(e3, t3, r3, i3) {
    var n3, o2 = arguments.length, a2 = o2 < 3 ? t3 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t3, r3) : i3;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
      a2 = Reflect.decorate(e3, t3, r3, i3);
    else
      for (var s2 = e3.length - 1; s2 >= 0; s2--)
        (n3 = e3[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t3, r3, a2) : n3(t3, r3)) || a2);
    return o2 > 3 && a2 && Object.defineProperty(t3, r3, a2), a2;
  };
  Object.defineProperty(t2, "__esModule", { value: true }), t2.ScreenAlignedQuadRenderPass = void 0;
  var a = r2(0), s = r2(0), u2 = r2(53), c2 = function(e3) {
    function t3(t4) {
      var r3 = e3.call(this) || this;
      return r3._altered = Object.assign(new s.ChangeLookup(), { any: false, camera: false, geometry: false }), r3._context = t4, r3._program = new s.Program(t4, "ScreenAlignedQuadRenderProgram"), r3._geometry = new u2.ScreenAlignedQuadGeometry(r3._context, "ScreenAlignedQuad"), r3;
    }
    return n2(t3, e3), t3.prototype.relink = function() {
      for (var e4 = 0, t4 = this._program.shaders; e4 < t4.length; e4++) {
        t4[e4].compile();
      }
      this._program.attribute("a_vertex", this._geometry.vertexLocation), this._program.attribute("a_origin", this._geometry.originLocation), this._program.attribute("a_extent", this._geometry.extentLocation), this._program.attribute("a_offset", this._geometry.offsetLocation), this._program.attribute("a_pointyCorner", this._geometry.pointyCornerLocation), this._program.link(), this._program.linked && (this._uViewProjection = this._program.uniform("u_viewProjection"), this._uNdcOffset = this._program.uniform("u_ndcOffset"), this._uAspectRatio = this._program.uniform("u_aspectRatio"));
    }, t3.prototype.initialize = function() {
      var e4 = this._context.gl, t4 = new s.Shader(this._context, e4.VERTEX_SHADER, "screenalignedquad.vert");
      t4.initialize(r2(54), false);
      var i3 = new s.Shader(this._context, e4.FRAGMENT_SHADER, "screenalignedquad.frag");
      return i3.initialize(r2(55), false), this._program.initialize([i3, t4], false), this._geometry.initialize(), true;
    }, t3.prototype.uninitialize = function() {
      this._geometry.uninitialize(), this._program.uninitialize(), this._uViewProjection = void 0, this._uNdcOffset = void 0, this._uAspectRatio = void 0;
    }, t3.prototype.update = function() {
      var e4 = this._context.gl;
      (this._program.initialized && this._program.linked || (this.relink(), this._program.linked)) && (this._program.bind(), (this._altered.camera || this._camera.altered) && (e4.uniformMatrix4fv(this._uViewProjection, false, this._camera.viewProjection), e4.uniform1f(this._uAspectRatio, 1 / this._camera.aspect)), this._altered.geometry && this._geometry.valid && this._geometry.update(), this._altered.reset());
    }, t3.prototype.frame = function() {
      a.auxiliaries.assert(this._target && this._target.valid, "valid target expected");
      var e4 = this._context.gl, t4 = this._target.size;
      e4.viewport(0, 0, t4[0], t4[1]), e4.disable(e4.DEPTH_TEST), e4.enable(e4.BLEND), e4.blendFuncSeparate(e4.SRC_ALPHA, e4.ONE_MINUS_SRC_ALPHA, e4.ONE, e4.ONE_MINUS_SRC_ALPHA), this._depthMask === false && (e4.depthFunc(e4.LEQUAL), e4.depthMask(false)), this._program.bind(), e4.uniform2fv(this._uNdcOffset, this._ndcOffset), this._geometry.bind(), this._target.bind(), this._geometry.valid && this._geometry.draw(), this._depthMask === false && (e4.depthFunc(e4.LESS), e4.depthMask(true)), e4.disable(e4.BLEND);
    }, Object.defineProperty(t3.prototype, "target", { set: function(e4) {
      this.assertInitialized(), this._target = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "ndcOffset", { set: function(e4) {
      this.assertInitialized(), this._ndcOffset = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "camera", { set: function(e4) {
      this.assertInitialized(), this._camera !== e4 && (this._camera = e4, this._altered.alter("camera"));
    }, enumerable: false, configurable: true }), t3.prototype.updateData = function(e4, t4, r3, i3) {
      this._geometry.updateData(e4, t4, r3, i3), this._altered.alter("geometry");
    }, Object.defineProperty(t3.prototype, "depthMask", { set: function(e4) {
      this._depthMask = e4;
    }, enumerable: false, configurable: true }), o([s.Initializable.assert_initialized()], t3.prototype, "relink", null), o([s.Initializable.initialize()], t3.prototype, "initialize", null), o([s.Initializable.uninitialize()], t3.prototype, "uninitialize", null), o([s.Initializable.assert_initialized()], t3.prototype, "update", null), o([s.Initializable.assert_initialized()], t3.prototype, "frame", null), t3;
  }(s.Initializable);
  t2.ScreenAlignedQuadRenderPass = c2;
}, function(e2, t2, r2) {
  var i2, n2 = this && this.__extends || (i2 = function(e3, t3) {
    return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t4) {
      e4.__proto__ = t4;
    } || function(e4, t4) {
      for (var r3 in t4)
        Object.prototype.hasOwnProperty.call(t4, r3) && (e4[r3] = t4[r3]);
    })(e3, t3);
  }, function(e3, t3) {
    if (typeof t3 != "function" && t3 !== null)
      throw new TypeError("Class extends value " + String(t3) + " is not a constructor or null");
    function r3() {
      this.constructor = e3;
    }
    i2(e3, t3), e3.prototype = t3 === null ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
  });
  Object.defineProperty(t2, "__esModule", { value: true }), t2.Renderer = void 0;
  var o = r2(0), a = r2(0), s = r2(19), u2 = r2(6), c2 = r2(11), l2 = r2(17), f2 = r2(18), h2 = r2(20), d2 = o.auxiliaries.assert, p2 = function(e3) {
    function t3(t4) {
      var r3 = e3.call(this) || this;
      return r3._ndcOffsetScale = 1, r3._skipInnerNodePasses = false, r3._skipLeafNodePasses = false, r3._skipLabelPass = false, r3._skipInnerLabelPass = false, r3._skipLeafLabelPass = false, r3._skipAggregation = false, r3.coordsAt = function(e4, t5, i3, n3) {
        return r3._readbackPass.coordsAt(e4, t5, i3, n3 === void 0 ? r3._camera.viewProjectionInverse : n3);
      }, r3.idAt = function(e4, t5) {
        if (r3._geometry.initialized) {
          var i3 = r3._readbackPass.idAt(e4, t5);
          if (i3 !== void 0 && i3 !== 0) {
            var n3 = r3._geometry.topology.node(i3);
            return n3 === void 0 ? void 0 : n3.id;
          }
        }
      }, r3._visualization = t4, r3;
    }
    return n2(t3, e3), Object.defineProperty(t3.prototype, "geometry", { get: function() {
      return this._geometry;
    }, set: function(e4) {
      this._geometry = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "navigation", { get: function() {
      return this._navigation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "camera", { get: function() {
      return this._camera;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "ndcOffsetScale", { get: function() {
      return this._ndcOffsetScale;
    }, set: function(e4) {
      this._ndcOffsetScale !== e4 && (this._ndcOffsetScale = e4, this.invalidate());
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "blitTargets", { get: function() {
      return this._multiRenderTarget.debuggableTargets();
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "blitTarget", { set: function(e4) {
      this._blitTarget !== e4 && (this._blitTarget = e4, this._blitTarget === 2 && (this._debugPass.debug = a.DebugPass.Mode.DepthLinear), this.invalidate());
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "skipInnerNodePasses", { get: function() {
      return this._skipInnerNodePasses;
    }, set: function(e4) {
      this._skipInnerNodePasses !== e4 && (this._skipInnerNodePasses = e4, this.invalidate());
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "skipLeafNodePasses", { get: function() {
      return this._skipLeafNodePasses;
    }, set: function(e4) {
      this._skipLeafNodePasses !== e4 && (this._skipLeafNodePasses = e4, this.invalidate());
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "skipLabelPass", { get: function() {
      return this._skipLabelPass;
    }, set: function(e4) {
      this._skipLabelPass !== e4 && (this._skipLabelPass = e4, this.invalidate());
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "skipInnerLabelPass", { get: function() {
      return this._skipInnerLabelPass;
    }, set: function(e4) {
      this._skipInnerLabelPass !== e4 && (this._skipInnerLabelPass = e4, this.invalidate());
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "skipLeafLabelPass", { get: function() {
      return this._skipLeafLabelPass;
    }, set: function(e4) {
      this._skipLeafLabelPass !== e4 && (this._skipLeafLabelPass = e4, this.invalidate());
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "skipAggregation", { get: function() {
      return this._skipAggregation;
    }, set: function(e4) {
      this._skipAggregation !== e4 && (this._skipAggregation = e4, this._geometry.altered.alter("innerNodeDrawDispatch"), this._geometry.altered.alter("leafNodeDrawDispatch"), this.invalidate());
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "arrows", { set: function(e4) {
      this._leafPass1.arrows = e4, this.invalidate();
    }, enumerable: false, configurable: true }), t3.verifyMinimumContextRequirements = function(e4) {
      return e4.enable(["ANGLE_instanced_arrays", "OES_standard_derivatives"]), true;
    }, t3.prototype.renderInnerNodes = function(e4, t4, r3) {
      !this._skipInnerNodePasses && this._geometry.valid && (this._innerPass.target = e4, this._innerPass.attachment = t4, this._innerPass.depthMask = r3, this._innerPass.frame());
    }, t3.prototype.renderLeafNodes = function(e4, t4, r3) {
      !this._skipLeafNodePasses && this._geometry.valid && (this._geometry.leafNodeHeights.length >= 2 && (this._leafPass1.target = e4, this._leafPass1.attachment = t4, this._leafPass1.depthMask = r3, this._leafPass1.frame()), this._geometry.leafNodeHeights.length >= 1 && (this._leafPass0.target = e4, this._leafPass0.attachment = t4, this._leafPass0.depthMask = r3, this._leafPass0.frame()));
    }, t3.prototype.renderLeafLabelBackgrounds = function(e4, t4) {
      this._skipLeafLabelPass || this._skipLabelPass || (this._labelBackgroundPass.target = e4, this._labelBackgroundPass.depthMask = t4, this._labelBackgroundPass.frame());
    }, t3.prototype.renderPoints = function(e4, t4) {
      this._skipLeafLabelPass || this._skipLabelPass || (this._pointPass.target = e4, this._pointPass.depthMask = t4, this._pointPass.frame());
    }, t3.prototype.renderInnerLabels = function(e4, t4, r3) {
      if (!this._skipInnerLabelPass && !this._skipLabelPass && this._geometry.valid) {
        this._innerLabelPass.target = e4, this._innerLabelPass.depthMask = r3;
        var i3 = this._context.gl;
        i3.enable(i3.STENCIL_TEST), i3.enable(i3.DEPTH_TEST), i3.stencilFunc(i3.EQUAL, 1, 255), i3.stencilOp(i3.KEEP, i3.KEEP, i3.KEEP), this._innerLabelPass.frame(), i3.disable(i3.STENCIL_TEST);
      }
    }, t3.prototype.renderLeafLabels = function(e4, t4, r3) {
      this._skipLeafLabelPass || this._skipLabelPass || !this._geometry.valid || (this._leafLabelPass.target = e4, this._leafLabelPass.depthMask = r3, this._leafLabelPass.frame());
    }, t3.prototype.initializeMultiRenderTarget = function(e4) {
      this.assertUninitialized(), this._multiRenderTarget = new u2.MultiRenderTarget(e4), this._multiRenderTarget.initialize(), this._multiRenderTarget.primaryFBO.clearStencil(0), this._multiRenderTarget.secondaryFBO.clearStencil(0);
    }, t3.prototype.initializeLeafPasses = function(e4) {
      this._leafPass0 = new s.CuboidRenderPass(e4, 0), this._leafPass0.initialize(), this._leafPass0.camera = this._camera, this._leafPass1 = new s.CuboidRenderPass(e4, 1), this._leafPass1.initialize(), this._leafPass1.camera = this._camera;
    }, t3.prototype.initializeInnerPass = function(e4) {
      this.assertUninitialized(), this._innerPass = new f2.QuadRenderPass(e4), this._innerPass.initialize(), this._innerPass.camera = this._camera;
    }, t3.prototype.initializePointPass = function(e4) {
      this._pointPass = new l2.PointRenderPass(e4), this._pointPass.initialize(), this._pointPass.camera = this.camera, this._pointPass.pointSize = 3.5;
    }, t3.prototype.initializeLeafLabelBackgroundPass = function(e4) {
      this._labelBackgroundPass = new h2.ScreenAlignedQuadRenderPass(e4), this._labelBackgroundPass.initialize(), this._labelBackgroundPass.camera = this.camera;
    }, t3.prototype.initializeLabelPasses = function(e4) {
      var t4 = this;
      this.assertUninitialized(), this._innerLabelPass = new a.LabelRenderPass(e4), this._innerLabelPass.initialize(), this._innerLabelPass.camera = this.camera, this._innerLabelPass.target = this._multiRenderTarget.defaultFBO, this._innerLabelPass.depthFunc = e4.gl.ALWAYS, this._innerLabelPass.aaStepScale = 0.3, this._innerLabelPass.aaSampling = a.LabelRenderPass.Sampling.Grid3x3, this._leafLabelPass = new a.LabelRenderPass(e4), this._leafLabelPass.initialize(), this._leafLabelPass.camera = this.camera, this._leafLabelPass.target = this._multiRenderTarget.defaultFBO, this._leafLabelPass.aaStepScale = 0.3, this._leafLabelPass.aaSampling = a.LabelRenderPass.Sampling.Grid3x3, this._leafLabelPass.depthFunc = e4.gl.ALWAYS;
      var r3 = window.SeereneConstants ? window.SeereneConstants.STATIC_DIRECTORY : "assets";
      a.FontFace.fromFile(r3 + "/roboto.fnt", e4).then(function(e5) {
        for (var r4 = 0, i3 = t4._innerLabelPass.labels; r4 < i3.length; r4++) {
          i3[r4].fontFace = e5;
        }
        for (var n3 = 0, o2 = t4._leafLabelPass.labels; n3 < o2.length; n3++) {
          o2[n3].fontFace = e5;
        }
        t4._fontFace = e5, t4._innerLabelPass.update(true), t4._leafLabelPass.update(true), t4._visualization.configuration && (t4._visualization.configuration.altered.alter("geometry"), t4._visualization.configuration.altered.alter("labels")), t4.invalidate();
      }).catch(function(e5) {
        return o.auxiliaries.log(o.auxiliaries.LogLevel.Error, e5);
      });
    }, t3.prototype.initializeAccumulationPass = function(e4) {
      this.assertUninitialized(), d2(this._multiRenderTarget.initialized, "expected multi-render target to be initialized"), d2(this._ndcTriangle !== void 0, "expected NDC triangle to be defined"), this._accumulationPass = new a.AccumulatePass(e4), this._accumulationPass.initialize(this._ndcTriangle), this._accumulationPass.precision = this._framePrecision, this._accumulationPass.texture = this._multiRenderTarget.colorRenderTexture;
    }, t3.prototype.initializeBlitPass = function(e4) {
      this.assertUninitialized(), d2(this._multiRenderTarget.initialized, "expected multi-render target to be initialized"), d2(this._ndcTriangle !== void 0, "expected NDC triangle to be defined");
      var t4 = this._context.gl, r3 = this._context.gl2facade;
      this._blitPass = new a.BlitPass(e4), this._blitPass.initialize(this._ndcTriangle), this._blitPass.readBuffer = r3.COLOR_ATTACHMENT0, this._blitPass.drawBuffer = t4.BACK, this._blitPass.target = this._multiRenderTarget.defaultFBO, this._debugPass = new a.DebugPass(e4), this._debugPass.initialize(this._ndcTriangle), this._debugPass.readBuffer = r3.COLOR_ATTACHMENT0, this._debugPass.drawBuffer = t4.BACK, this._debugPass.target = this._multiRenderTarget.defaultFBO;
    }, t3.prototype.initializeReadbackPass = function(e4) {
      this.assertUninitialized(), d2(this._multiRenderTarget.initialized, "expected multi-render target to be initialized"), d2(this._ndcTriangle !== void 0, "expected NDC triangle to be defined"), this._readbackPass = new a.ReadbackPass(e4), this._readbackPass.initialize(this._ndcTriangle, this._multiRenderTarget.depthFBO !== void 0), this._readbackPass.cache = true;
      var t4 = this._context.gl, r3 = this._context.gl2facade;
      this._multiRenderTarget.depthFBO ? (this._readbackPass.depthFBO = this._multiRenderTarget.depthFBO, this._readbackPass.depthAttachment = r3.COLOR_ATTACHMENT0) : (this._readbackPass.depthFBO = this._multiRenderTarget.primaryFBO, this._readbackPass.depthAttachment = t4.DEPTH_STENCIL_ATTACHMENT), this._multiRenderTarget.readBackIdFBO ? (this._readbackPass.idFBO = this._multiRenderTarget.readBackIdFBO, this._readbackPass.idAttachment = r3.COLOR_ATTACHMENT0) : (this._readbackPass.idFBO = this._multiRenderTarget.primaryFBO, this._readbackPass.idAttachment = r3.COLOR_ATTACHMENT1);
    }, t3.prototype.initializeCamera = function() {
      this.assertUninitialized(), this._camera = new a.Camera(), this._camera.near = t3.CAMERA_NEAR_DEFAULT, this._camera.far = t3.CAMERA_FAR_DEFAULT, this._camera.eye = o.vec3.fromValues(0, 1.5, 2.2), this._camera.center = o.vec3.fromValues(0, 0, 0.2), this._camera.up = o.vec3.fromValues(0, 1, 0), this._camera.fovy = 2 * a.Camera.calculateFovY(20, 60) * o.auxiliaries.RAD2DEG;
    }, t3.prototype.initializeNavigation = function(e4, t4) {
      this.assertUninitialized(), this._navigation = new c2.Navigation(e4, t4), this._navigation.camera = this._camera, this._navigation.idAccess = this, this._navigation.coordsAccess = this;
    }, t3.prototype.onInitialize = function(e4, r3, i3) {
      return !!t3.verifyMinimumContextRequirements(e4) && (this._ndcOffsetKernel = new a.AntiAliasingKernel(this._multiFrameNumber), this._ndcOffsetKernel.sort(a.AbstractKernel.SortApproach.BySquaredLength), this._ndcTriangle = new a.NdcFillingTriangle(e4, "NdcTriangle"), this._ndcTriangle.initialize(0), this.initializeMultiRenderTarget(e4), this.initializeAccumulationPass(e4), this.initializeBlitPass(e4), this.initializeReadbackPass(e4), this.initializeCamera(), this.initializeNavigation(r3, i3), this.initializeInnerPass(e4), this.initializeLeafPasses(e4), this.initializePointPass(e4), this.initializeLeafLabelBackgroundPass(e4), this.initializeLabelPasses(e4), true);
    }, t3.prototype.onUninitialize = function() {
      this._ndcTriangle.uninitialize(), this._multiRenderTarget.uninitialize(), this._accumulationPass.uninitialize(), this._blitPass.uninitialize(), this._debugPass.uninitialize(), this._readbackPass.uninitialize(), this._innerPass.uninitialize(), this._pointPass.uninitialize(), this._innerLabelPass.uninitialize(), this._leafLabelPass.uninitialize(), this._labelBackgroundPass.uninitialize();
    }, t3.prototype.onDiscarded = function() {
    }, t3.prototype.onUpdate = function() {
      this._navigation.update();
      var e4 = false;
      try {
        e4 = this._visualization.update();
      } catch (e5) {
        console.log(e5);
      }
      for (var t4 = false, r3 = 0, i3 = this._innerLabelPass.labels; r3 < i3.length; r3++) {
        if ((a2 = i3[r3]).altered || a2.color.altered) {
          t4 = true;
          break;
        }
      }
      for (var n3 = 0, o2 = this._leafLabelPass.labels; n3 < o2.length; n3++) {
        var a2;
        if ((a2 = o2[n3]).altered || a2.color.altered) {
          t4 = true;
          break;
        }
      }
      return e4 || t4 || this._altered.any || this._camera.altered;
    }, t3.prototype.onPrepare = function() {
      this._geometry.altered.any && this._geometry.valid && (this._innerPass.ids = this._geometry.innerNodeIndices, this._innerPass.layout = this._geometry.innerNodeLayouts, this._innerPass.colors = this._geometry.innerNodeColors, this._innerPass.emphases = this._geometry.innerNodeEmphases, this._innerPass.colorTable = this._geometry.colorTable, this._geometry.leafNodeHeights.length >= 1 && (this._leafPass0.ids = this._geometry.leafNodeIndices, this._leafPass0.layoutData = this._geometry.leafNodeLayouts, this._leafPass0.areaScales = this._geometry.leafNodeAreaScales[0], this._leafPass0.colors = this._geometry.leafNodeColors[0], this._leafPass0.heights = this._geometry.leafNodeHeights[0], this._leafPass0.colorTable = this._geometry.colorTable), this._geometry.leafNodeHeights.length >= 2 && (this._leafPass1.ids = this._geometry.leafNodeIndices, this._leafPass1.layoutData = this._geometry.leafNodeLayouts, this._leafPass1.areaScales = this._geometry.leafNodeAreaScales[1], this._leafPass1.colors = this._geometry.leafNodeColors[1], this._leafPass1.heights = this._geometry.leafNodeHeights[1], this._leafPass1.colorTable = this._geometry.colorTable)), this._geometry.altered.colorTableLength && (this._leafPass0.colorTableLengthAltered(), this._leafPass1.colorTableLengthAltered());
      var e4 = this._geometry.altered;
      this._geometry.valid && e4.any && (e4.innerNodeEmphases && (this._innerPass.emphases = this._geometry.innerNodeEmphases), e4.innerNodeDrawDispatch && !this._skipAggregation && (this._innerPass.dispatch = this._geometry.innerNodeDrawDispatch.filtered(0)), this._skipAggregation && (this._innerPass.dispatch = this._geometry.innerNodeDrawDispatch.unfiltered()), e4.outlineWidth && (this._innerPass.outlineWidth = this._geometry.outlineWidth), e4.emphasisOutlineWidth && (this._innerPass.emphasisOutlineWidth = this._geometry.emphasisOutlineWidth), e4.leafNodeEmphases && (this._leafPass0.emphases = this._geometry.leafNodeEmphases), e4.leafNodeDrawDispatch && !this._skipAggregation && (this._leafPass0.dispatch = this._geometry.leafNodeDrawDispatch.filtered(0), this._leafPass1.dispatch = this._geometry.leafNodeDrawDispatch.filtered(0)), this._skipAggregation && (this._leafPass0.dispatch = this._geometry.leafNodeDrawDispatch.unfiltered(), this._leafPass1.dispatch = this._geometry.leafNodeDrawDispatch.unfiltered()), e4.outlineWidth && (this._leafPass0.outlineWidth = this._geometry.outlineWidth, this._leafPass1.outlineWidth = this._geometry.outlineWidth), e4.emphasisOutlineWidth && (this._leafPass0.emphasisOutlineWidth = this._geometry.emphasisOutlineWidth, this._leafPass1.emphasisOutlineWidth = this._geometry.emphasisOutlineWidth), e4.heightScale && (this._leafPass0.heightScale = this._geometry.heightScale, this._leafPass1.heightScale = this._geometry.heightScale), e4.levitate && (this._leafPass1.levitate = this._geometry.levitate)), this._altered.frameSize && (this._multiRenderTarget.resize(this._frameSize[0], this._frameSize[1]), this._camera.viewport = [this._frameSize[0], this._frameSize[1]], this.invalidate()), this._altered.canvasSize && (this._camera.aspect = this._canvasSize[0] / this._canvasSize[1], this._readbackPass.coordinateReferenceSize = this._canvasSize), this._altered.multiFrameNumber && (this._ndcOffsetKernel.width = this._multiFrameNumber, this._ndcOffsetKernel.sort(a.AbstractKernel.SortApproach.BySquaredLength)), this._altered.framePrecision && (this._accumulationPass.precision = this._framePrecision), this._altered.clearColor && this._multiRenderTarget.setClearColor(this._clearColor), this._innerPass.update(), this._leafPass0.update(), this._leafPass1.update(), this._pointPass.update(), this._labelBackgroundPass.update(), this._innerLabelPass.update(), this._leafLabelPass.update(), this._accumulationPass.update(), this._readbackPass.frame(), this._camera.altered && (this._debugPass.near = this._camera.near, this._debugPass.far = this._camera.far), this._visualization.prepare(), this._camera.altered = false, this._geometry.altered.reset(), this._altered.reset();
    }, t3.prototype.onFrame = function(e4) {
      var t4 = this._context.gl, r3 = this._context.gl2facade, i3 = this._ndcOffsetKernel.get(e4);
      i3[0] = 2 * this._ndcOffsetScale * i3[0] / this._frameSize[0], i3[1] = 2 * this._ndcOffsetScale * i3[1] / this._frameSize[1], this._leafPass0.ndcOffset = i3, this._leafPass1.ndcOffset = i3, this._innerPass.ndcOffset = i3, this._innerLabelPass.ndcOffset = i3, this._leafLabelPass.ndcOffset = i3, this._pointPass.ndcOffset = i3, this._labelBackgroundPass.ndcOffset = i3;
      var n3 = e4 === 0, o2 = this._multiRenderTarget, a2 = n3 ? o2.primaryFBO : o2.secondaryFBO;
      a2.clear(t4.COLOR_BUFFER_BIT | t4.DEPTH_BUFFER_BIT | t4.STENCIL_BUFFER_BIT, true, false), t4.viewport(0, 0, this._camera.viewport[0], this._camera.viewport[1]), t4.depthFunc(t4.LESS);
      var s2 = u2.MultiRenderTarget.Attachment;
      o2.drawRestricted || r3.drawBuffers([r3.COLOR_ATTACHMENT0, r3.COLOR_ATTACHMENT1]), this.renderLeafNodes(a2, o2.drawRestricted ? s2.Color : s2.Undefined, true), this.renderInnerNodes(a2, o2.drawRestricted ? s2.Color : s2.Undefined, true), o2.drawRestricted || r3.drawBuffers([r3.COLOR_ATTACHMENT0, t4.NONE]), this.renderInnerLabels(a2, o2.drawRestricted ? s2.Color : s2.Undefined, false), this.renderLeafLabelBackgrounds(a2, false), this.renderLeafLabels(a2, o2.drawRestricted ? s2.Color : s2.Undefined, false), this.renderPoints(a2, false), o2.drawRestricted || r3.drawBuffers([r3.COLOR_ATTACHMENT0, r3.COLOR_ATTACHMENT1]), n3 && o2.idFBO && (o2.idFBO.clear(t4.COLOR_BUFFER_BIT | t4.STENCIL_BUFFER_BIT), this.renderLeafNodes(o2.idFBO, s2.Id, false), this.renderInnerNodes(o2.idFBO, s2.Id, false)), n3 && o2.depthFBO && (o2.depthFBO.clear(t4.COLOR_BUFFER_BIT | t4.STENCIL_BUFFER_BIT), this.renderLeafNodes(o2.depthFBO, s2.Depth, false), this.renderInnerNodes(o2.depthFBO, s2.Depth, false)), this._accumulationPass.frame(e4);
    }, t3.prototype.onSwap = function() {
      var e4, t4 = this._multiRenderTarget.debuggableTarget(this._blitTarget);
      if (this._accumulationPass.initialized && ((e4 = this._accumulationPass.framebuffer) === null || e4 === void 0 ? void 0 : e4.initialized) && this._blitPass.initialized && (!t4 || t4[0].initialized)) {
        var r3 = this._blitTarget === 2 ? this._debugPass : this._blitPass;
        r3.framebuffer = t4 ? t4[0] : this._accumulationPass.framebuffer, r3.readBuffer = t4 ? t4[1] : this._context.gl2facade.COLOR_ATTACHMENT0, r3.frame();
      }
    }, t3.prototype.updateLabelsForPass = function(e4, t4) {
      for (var r3 = [], i3 = 0, n3 = e4; i3 < n3.length; i3++) {
        var o2 = n3[i3];
        o2 !== void 0 && (o2.fontFace = this._fontFace, r3.push(o2));
      }
      t4.labels = r3, t4.update();
    }, t3.prototype.updateLabels = function(e4, t4) {
      this.updateLabelsForPass(e4, this._innerLabelPass), this.updateLabelsForPass(t4, this._leafLabelPass);
    }, t3.prototype.updateLeafLabelPass = function() {
      this._leafLabelPass.update();
    }, t3.prototype.updateLeafLabelBackgrounds = function(e4) {
      for (var t4 = [], r3 = [], i3 = [], n3 = [], o2 = 0, s2 = 0, u3 = e4; s2 < u3.length; s2++) {
        if ((h3 = u3[s2]) && h3.color.a !== 0) {
          var c3 = 2 * h3.extent[1] / this._frameSize[1];
          o2 = Math.max(o2, c3);
        }
      }
      for (var l3 = 0, f3 = e4; l3 < f3.length; l3++) {
        var h3;
        if ((h3 = f3[l3]) && h3.color.a !== 0) {
          t4.push(h3.position[0], h3.position[1], h3.position[2]);
          var d3 = (2 * h3.extent[0] + 1.75) / this._frameSize[0];
          r3.push(d3, o2);
          var p3 = 1.75 / this._frameSize[1], _2 = h3.alignment === a.Label.Alignment.Right ? -p3 - d3 : p3, g2 = 1.75 / this._frameSize[1], m2 = h3.lineAnchor === a.Label.LineAnchor.Top ? g2 - o2 : -g2;
          i3.push(_2, m2);
          var v2 = 0;
          h3.alignment === a.Label.Alignment.Left ? h3.lineAnchor === a.Label.LineAnchor.Bottom ? v2 = 1 : h3.lineAnchor === a.Label.LineAnchor.Top && (v2 = 2) : h3.alignment === a.Label.Alignment.Right && (h3.lineAnchor === a.Label.LineAnchor.Bottom ? v2 = 3 : h3.lineAnchor === a.Label.LineAnchor.Top && (v2 = 4)), n3.push(v2);
        }
      }
      this._labelBackgroundPass.updateData(new Float32Array(t4), new Float32Array(r3), new Float32Array(i3), new Uint8Array(n3));
    }, t3.prototype.updatePoints = function(e4) {
      for (var t4 = [], r3 = [], i3 = 0, n3 = e4; i3 < n3.length; i3++) {
        var o2 = n3[i3];
        o2 && (t4.push(o2.position[0], o2.position[1], o2.position[2]), r3.push(o2.color.r, o2.color.g, o2.color.b, o2.color.a));
      }
      this._pointPass.positions = new Float32Array(t4), this._pointPass.colors = new Float32Array(r3);
    }, t3.prototype.frameSizeAltered = function() {
      return this._altered.frameSize;
    }, t3.prototype.setCameraEye = function(e4, t4, r3) {
      this._camera.eye = o.vec3.fromValues(e4, t4, r3);
    }, t3.prototype.invalidate = function() {
      this.initialized && e3.prototype.invalidate.call(this, true);
    }, t3.CAMERA_NEAR_DEFAULT = 0.01, t3.CAMERA_FAR_DEFAULT = 10, t3;
  }(a.Renderer);
  t2.Renderer = p2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.RendererCapabilities = void 0;
  var i2 = r2(0), n2 = r2(10), o = r2(21), a = i2.auxiliaries.assert;
  !function(e3) {
    var t3;
    !function(e4) {
      e4[e4.ANIMATION = 0] = "ANIMATION", e4[e4.LAYERS = 1] = "LAYERS";
    }(t3 = e3.Capability || (e3.Capability = {}));
    var r3 = { AnimationRenderer: [t3.ANIMATION, t3.LAYERS], Renderer: [t3.LAYERS] };
    e3.supportsCapabilities = function(e4, t4) {
      return e4 instanceof o.Renderer ? r3.Renderer.every(function(e5) {
        return t4.includes(e5);
      }) : e4 instanceof n2.AnimationRenderer && r3.AnimationRenderer.every(function(e5) {
        return t4.includes(e5);
      });
    }, e3.createRendererFromCapabilities = function(e4, t4) {
      return e4 === void 0 || e4.every(function(e5) {
        return r3.Renderer.includes(e5);
      }) ? new o.Renderer(t4) : e4.every(function(e5) {
        return r3.AnimationRenderer.includes(e5);
      }) ? new n2.AnimationRenderer(t4) : (a(false, "Could not create Renderer for capabilities: " + e4), new o.Renderer(t4));
    };
  }(t2.RendererCapabilities || (t2.RendererCapabilities = {}));
}, function(e2, t2, r2) {
  var i2, n2 = this && this.__extends || (i2 = function(e3, t3) {
    return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t4) {
      e4.__proto__ = t4;
    } || function(e4, t4) {
      for (var r3 in t4)
        Object.prototype.hasOwnProperty.call(t4, r3) && (e4[r3] = t4[r3]);
    })(e3, t3);
  }, function(e3, t3) {
    if (typeof t3 != "function" && t3 !== null)
      throw new TypeError("Class extends value " + String(t3) + " is not a constructor or null");
    function r3() {
      this.constructor = e3;
    }
    i2(e3, t3), e3.prototype = t3 === null ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
  }), o = this && this.__decorate || function(e3, t3, r3, i3) {
    var n3, o2 = arguments.length, a2 = o2 < 3 ? t3 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t3, r3) : i3;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
      a2 = Reflect.decorate(e3, t3, r3, i3);
    else
      for (var s2 = e3.length - 1; s2 >= 0; s2--)
        (n3 = e3[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t3, r3, a2) : n3(t3, r3)) || a2);
    return o2 > 3 && a2 && Object.defineProperty(t3, r3, a2), a2;
  };
  Object.defineProperty(t2, "__esModule", { value: true }), t2.Geometry = void 0;
  var a = r2(0), s = r2(67), u2 = function(e3) {
    function t3() {
      var t4 = e3 !== null && e3.apply(this, arguments) || this;
      return t4._altered = Object.assign(new a.ChangeLookup(), { any: false, colorTableLength: false, colorTable: false, innerNodeIndices: false, innerNodeLayouts: false, innerNodeEmphases: false, innerNodeColors: false, innerNodeDrawDispatch: false, layers: false, leafNodeIndices: false, leafNodeLayouts: false, leafNodeEmphases: false, leafNodeAreaScales: false, leafNodeColors: false, leafNodeHeights: false, leafNodeDrawDispatch: false, outlineWidth: false, emphasisOutlineWidth: false, heightScale: false, levitate: false, labels: false }), t4._leafNodeAreaScales = new Array(), t4._leafNodeColors = new Array(), t4._leafNodeHeights = new Array(), t4;
    }
    return n2(t3, e3), t3.prototype.initialize = function(e4) {
      return this._topology = e4, this._altered.alter("any"), this._topology.numberOfInnerNodes > 0 || this._topology.numberOfLeafNodes > 0;
    }, t3.prototype.uninitialize = function() {
      this._topology = void 0, this._colorTable = void 0, this._leafNodeAreaScales.length = 0, this._leafNodeColors.length = 0, this._leafNodeHeights.length = 0, this._innerNodeIndices = void 0, this._innerNodeLayouts = void 0, this._innerNodeEmphases = void 0, this._innerNodeColors = void 0, this._innerNodeDrawDispatch = void 0, this._leafNodeIndices = void 0, this._leafNodeLayouts = void 0, this._leafNodeEmphases = void 0, this._leafNodeDrawDispatch = void 0;
    }, t3.prototype.asObjBlob = function(e4, t4) {
      return s.ObjExport.blob(this, e4, t4);
    }, t3.prototype.downloadObjBlob = function(e4, t4, r3) {
      e4 === void 0 && (e4 = "treemap.obj");
      var i3 = this.asObjBlob(t4, r3), n3 = window.URL.createObjectURL(i3), o2 = document.createElement("a");
      o2.setAttribute("href", n3), o2.setAttribute("download", e4), o2.click();
    }, Object.defineProperty(t3.prototype, "altered", { get: function() {
      return this._altered;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "topology", { get: function() {
      return this.assertInitialized(), this._topology;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "innerNodeIndices", { get: function() {
      return this._innerNodeIndices;
    }, set: function(e4) {
      this.assertInitialized(), this._innerNodeIndices = e4, this._altered.alter("innerNodeIndices");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "innerNodeLayouts", { get: function() {
      return this._innerNodeLayouts;
    }, set: function(e4) {
      this.assertInitialized(), this._innerNodeLayouts = e4, this._altered.alter("innerNodeLayouts");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "innerNodeEmphases", { get: function() {
      return this._innerNodeEmphases;
    }, set: function(e4) {
      this.assertInitialized(), this._innerNodeEmphases = e4, this._altered.alter("innerNodeEmphases");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "innerNodeColors", { get: function() {
      return this._innerNodeColors;
    }, set: function(e4) {
      this.assertInitialized(), this._innerNodeColors = e4, this._altered.alter("innerNodeColors");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "innerNodeDrawDispatch", { get: function() {
      return this._innerNodeDrawDispatch;
    }, set: function(e4) {
      this.assertInitialized(), this._innerNodeDrawDispatch = e4, this._altered.alter("innerNodeDrawDispatch");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "leafNodeIndices", { get: function() {
      return this._leafNodeIndices;
    }, set: function(e4) {
      this.assertInitialized(), this._leafNodeIndices = e4, this._altered.alter("leafNodeIndices");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "leafNodeLayouts", { get: function() {
      return this._leafNodeLayouts;
    }, set: function(e4) {
      this.assertInitialized(), this._leafNodeLayouts = e4, this._altered.alter("leafNodeLayouts");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "leafNodeEmphases", { get: function() {
      return this._leafNodeEmphases;
    }, set: function(e4) {
      this.assertInitialized(), this._leafNodeEmphases = e4, this._altered.alter("leafNodeEmphases");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "leafNodeAreaScales", { get: function() {
      return this._leafNodeAreaScales;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "leafNodeColors", { get: function() {
      return this._leafNodeColors;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colorTable", { get: function() {
      return this._colorTable;
    }, set: function(e4) {
      this.assertInitialized(), this._colorTable = e4, this._altered.alter("colorTable");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "leafNodeHeights", { get: function() {
      return this._leafNodeHeights;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "leafNodeDrawDispatch", { get: function() {
      return this._leafNodeDrawDispatch;
    }, set: function(e4) {
      this.assertInitialized(), this._leafNodeDrawDispatch = e4, this._altered.alter("leafNodeDrawDispatch");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "innerNodeCount", { get: function() {
      return this.assertInitialized(), this._topology.numberOfInnerNodes;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "leafNodeCount", { get: function() {
      return this.assertInitialized(), this._topology.numberOfLeafNodes;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "heightScale", { get: function() {
      return this._heightScale;
    }, set: function(e4) {
      this.assertInitialized(), this._heightScale = e4, this._altered.alter("heightScale");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "levitate", { get: function() {
      return this._levitate;
    }, set: function(e4) {
      this.assertInitialized(), this._levitate = e4, this._altered.alter("levitate");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "outlineWidth", { get: function() {
      return this._outlineWidth;
    }, set: function(e4) {
      this.assertInitialized(), this._outlineWidth = e4, this._altered.alter("outlineWidth");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "emphasisOutlineWidth", { get: function() {
      return this._emphasisOutlineWidth;
    }, set: function(e4) {
      this.assertInitialized(), this._emphasisOutlineWidth = e4, this._altered.alter("emphasisOutlineWidth");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "leafLayerCount", { get: function() {
      return this.assertInitialized(), this._leafNodeHeights.length;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "valid", { get: function() {
      return this.initialized;
    }, enumerable: false, configurable: true }), o([a.Initializable.initialize()], t3.prototype, "initialize", null), o([a.Initializable.uninitialize()], t3.prototype, "uninitialize", null), t3;
  }(a.Initializable);
  t2.Geometry = u2, function(e3) {
    !function(e4) {
      e4[e4.None = 0] = "None", e4[e4.Outline = 1] = "Outline", e4[e4.Highlight = 2] = "Highlight";
    }(e3.Emphasis || (e3.Emphasis = {}));
  }(u2 = t2.Geometry || (t2.Geometry = {})), t2.Geometry = u2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.RelativeLabelPosition = void 0;
  var i2 = r2(0), n2 = i2.auxiliaries.assert, o = i2.gl_matrix_extensions.v2;
  !function(e3) {
    var t3;
    !function(e4) {
      e4.UpperRight = "upper-right", e4.UpperLeft = "upper-left", e4.LowerRight = "lower-right", e4.LowerLeft = "lower-left", e4.Hidden = "hidden";
    }(t3 = e3.Type || (e3.Type = {})), e3.labelOrigin = function(e4, r3, a) {
      switch (e4) {
        case t3.UpperRight:
          return r3;
        case t3.UpperLeft:
          return i2.vec2.sub(o(), r3, [a[0], 0]);
        case t3.LowerLeft:
          return i2.vec2.sub(o(), r3, a);
        case t3.LowerRight:
          return i2.vec2.sub(o(), r3, [0, a[1]]);
        case t3.Hidden:
          return r3;
        default:
          n2(false, "No valid type for relative label position, given" + e4);
      }
      return i2.vec2.create();
    }, e3.isVisible = function(e4) {
      return e4 !== t3.Hidden;
    }, e3.relativeLabelPosition = function(e4, r3) {
      var a = i2.vec2.add(o(), e4, [r3[0] / 2, r3[1] / 2]);
      return a[0] > 0 && a[1] > 0 ? t3.UpperRight : a[0] < 0 && a[1] > 0 ? t3.UpperLeft : a[0] < 0 && a[1] < 0 ? t3.LowerLeft : a[0] > 0 && a[1] < 0 ? t3.LowerRight : (n2(false, "midpointOffset is " + a + ", given offset " + e4 + " and extent " + r3), t3.Hidden);
    };
  }(t2.RelativeLabelPosition || (t2.RelativeLabelPosition = {}));
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.LabelManagement = t2.LabelPaddingSide = void 0;
  var i2, n2 = r2(0), o = n2.auxiliaries.assert, a = n2.auxiliaries.log, s = n2.auxiliaries.LogLevel;
  function u2(e3, t3, r3) {
    e3.length > 0 && e3[e3.length - 1].value < t3 && (e3[e3.length - 1] = { nodeId: r3, value: t3 }, e3.sort(function(e4, t4) {
      return t4.value - e4.value;
    }));
  }
  function c2(e3, t3) {
    t3.filter(function(e4) {
      return e4.nodeId !== void 0;
    }).map(function(t4) {
      e3.add(t4.nodeId);
    });
  }
  !function(e3) {
    e3[e3.Bottom = 0] = "Bottom", e3[e3.Top = 1] = "Top", e3[e3.Left = 2] = "Left", e3[e3.Right = 3] = "Right";
  }(i2 = t2.LabelPaddingSide || (t2.LabelPaddingSide = {}));
  var l2 = function() {
    function e3() {
    }
    return e3.createLeafLabel = function(t3, r3) {
      var i3, a2 = new n2.Projected3DLabel(new n2.Text("  " + t3 + "  "), n2.Label.Type.Dynamic);
      return (i3 = a2.color).fromF32.apply(i3, e3.leafLabelColor), a2.lineAnchor = n2.Label.LineAnchor.Bottom, a2.fontSize = 20, o(r3.length === 3, "Expected a 3D position for leaf label anchor, got " + r3), a2.position = r3, a2;
    }, e3.createInnerNodeLabel = function(t3, r3, o2) {
      var u3, c3 = new n2.Position3DLabel(new n2.Text(t3), n2.Label.Type.Static);
      (u3 = c3.color).fromF32.apply(u3, e3.innerLabelColor), c3.alignment = n2.Label.Alignment.Center, c3.lineAnchor = n2.Label.LineAnchor.Bottom;
      var l3 = i2.Bottom, f2 = 0, h2 = 0;
      switch (c3.fontSize = 2 * o2, c3.elide = n2.Label.Elide.Middle, +l3) {
        case i2.Bottom:
          f2 = r3.left + r3.right - 1, h2 = 2 * (r3.bottom - o2) - 1, c3.lineWidth = 2 * r3.width, c3.direction = [1, 0, 0], c3.up = [0, 0, -1];
          break;
        case i2.Top:
          f2 = r3.left + r3.right - 1, h2 = 2 * (r3.top + o2) - 1, c3.lineWidth = 2 * r3.width, c3.direction = [-1, 0, 0], c3.up = [0, 0, 1];
          break;
        case i2.Left:
          f2 = 2 * (r3.left - o2) - 1, h2 = r3.top + r3.bottom - 1, c3.lineWidth = 2 * r3.height, c3.direction = [0, 0, 1], c3.up = [1, 0, 0];
          break;
        case i2.Right:
          f2 = 2 * (r3.right + o2) - 1, h2 = r3.top + r3.bottom - 1, c3.lineWidth = 2 * r3.height, c3.direction = [0, 0, -1], c3.up = [-1, 0, 0];
          break;
        default:
          c3.fontSize = 0, a(s.Warning, l3 + " is not a valid value of LabelPaddingSide, skip label '" + t3 + "'");
      }
      return c3.position = [f2, 0, -h2], c3;
    }, e3.createInnerNodeLabelOnAccessory = function(t3, r3) {
      var i3, o2 = new n2.Position3DLabel(new n2.Text(t3), n2.Label.Type.Static);
      (i3 = o2.color).fromF32.apply(i3, e3.innerLabelColor), o2.alignment = n2.Label.Alignment.Center, o2.lineAnchor = n2.Label.LineAnchor.Bottom;
      var a2 = r3.left + r3.right - 1, s2 = 2 * r3.bottom - 1;
      return o2.fontSize = 2 * r3.height, o2.elide = n2.Label.Elide.Middle, o2.lineWidth = 2 * r3.width, o2.position = [a2, 0, -s2], o2.direction = [1, 0, 0], o2.up = [0, 0, -1], o2;
    }, e3.fillLeafLabelArray = function(t3, r3, i3, n3, o2, a2) {
      var s2 = new Array(t3.numberOfInnerNodes);
      return i3.forEach(function(i4) {
        var u3 = t3.leafNodeById(i4), c3 = r3.get(i4);
        if (u3 !== void 0 && c3 !== void 0 && c3.length !== 0) {
          var l3 = u3.index - t3.numberOfInnerNodes, f2 = 4 * l3, h2 = o2[f2 + 0], d2 = o2[f2 + 1], p2 = o2[f2 + 2], _2 = o2[f2 + 3], g2 = a2[2 * l3 + 1];
          if (p2 > 0 && _2 > 0) {
            var m2 = h2 + 0.5 * p2, v2 = g2 * n3 / 255, b2 = d2 + 0.5 * _2;
            s2[u3.index] = e3.createLeafLabel(c3, [m2, v2, b2]);
          }
        }
      }), s2;
    }, e3.fillInnerNodeLabelArrayOnAccessory = function(t3, r3, i3, n3) {
      var o2 = new Array(t3.numberOfInnerNodes);
      return i3.forEach(function(i4) {
        var a2 = t3.innerNodeById(i4);
        if (a2 !== void 0 && n3[a2.index] !== void 0 && n3[a2.index].area > 0) {
          var s2 = r3.get(i4);
          if (s2 === void 0 || s2.length === 0)
            return;
          o2[a2.index] = e3.createInnerNodeLabelOnAccessory(s2, n3[a2.index]);
        }
      }), o2;
    }, e3.fillInnerNodeLabelArray = function(t3, r3, i3, n3, o2) {
      var a2 = new Array(t3.numberOfInnerNodes);
      return i3.forEach(function(i4) {
        var s2 = t3.innerNodeById(i4);
        if (s2 !== void 0 && n3[s2.index] !== void 0) {
          var u3 = r3.get(i4);
          if (u3 === void 0 || u3.length === 0)
            return;
          !s2.isLeaf && n3[s2.index].area > 0 && (a2[s2.index] = e3.createInnerNodeLabel(u3, n3[s2.index], o2[s2.index]));
        }
      }), a2;
    }, e3.createLabelSelection = function(e4, t3, r3, i3, n3, o2, a2, s2, l3, f2, h2) {
      var d2 = /* @__PURE__ */ new Set(), p2 = new Array(s2), _2 = new Array(l3), g2 = new Array(f2), m2 = new Array(h2);
      return p2.fill({ nodeId: void 0, value: -1 }), _2.fill({ nodeId: void 0, value: -1 }), g2.fill({ nodeId: void 0, value: -1 }), m2.fill({ nodeId: void 0, value: -1 }), e4.parentsDoUntilDepth(a2[1], function(e5) {
        e5.depth < a2[0] || n3[e5.index] || (u2(p2, t3[e5.index], e5.id), o2.has(e5.id) && d2.add(e5.id));
      }), e4.forEachLeafNode(function(e5) {
        n3[e5.index] || e5.id === void 0 || (u2(_2, t3[e5.index], e5.id), u2(g2, r3[e5.index], e5.id), u2(m2, i3[e5.index], e5.id), o2.has(e5.id) && d2.add(e5.id));
      }), c2(d2, p2), c2(d2, _2), c2(d2, g2), c2(d2, m2), d2;
    }, e3.fillLeafLabelArrayByExplicitNames = function(t3, r3, i3, n3, o2) {
      var a2 = /* @__PURE__ */ new Map(), s2 = /* @__PURE__ */ new Set();
      return Object.keys(r3).forEach(function(e4) {
        var t4 = parseInt(e4, 10);
        a2.set(t4, r3[t4]), s2.add(t4);
      }), e3.fillLeafLabelArray(t3, a2, s2, i3, n3, o2);
    }, e3.fillInnerNodeLabelArrayOnAccessoryByExplicitNames = function(t3, r3, i3) {
      var n3 = /* @__PURE__ */ new Map(), o2 = /* @__PURE__ */ new Set();
      return Object.keys(r3).forEach(function(e4) {
        var t4 = parseInt(e4, 10);
        n3.set(t4, r3[t4]), o2.add(t4);
      }), e3.fillInnerNodeLabelArrayOnAccessory(t3, n3, o2, i3);
    }, e3;
  }();
  t2.LabelManagement = l2, function(e3) {
    e3.leafLabelColor = [0, 0, 0, 0.8], e3.innerLabelColor = [0, 0, 0, 0.54];
  }(l2 = t2.LabelManagement || (t2.LabelManagement = {})), t2.LabelManagement = l2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.DrawDispatch = void 0;
  var i2 = r2(0), n2 = r2(75), o = r2(27), a = function() {
    function e3() {
      this._ids = void 0, this._mask = void 0, this._slices = void 0, this._filters = /* @__PURE__ */ new Map(), this._unfiltered = void 0, this._sequences = /* @__PURE__ */ new Map(), this._complements = /* @__PURE__ */ new Map();
    }
    return Object.defineProperty(e3, "debug", { set: function(t3) {
      t3 && i2.auxiliaries.logVerbosity() < i2.auxiliaries.LogLevel.Debug && (i2.auxiliaries.logVerbosity(i2.auxiliaries.LogLevel.Debug), i2.auxiliaries.log(i2.auxiliaries.LogLevel.Debug, "changed log verbosity to " + i2.auxiliaries.LogLevel.Debug + " (debug)")), e3._debug = t3;
    }, enumerable: false, configurable: true }), e3.encode = function(t3) {
      var r3 = "draw dispatch encode";
      i2.auxiliaries.logPerformanceStartIf(e3._debug, r3);
      var n3 = new Array();
      if (t3.length === 0)
        return i2.auxiliaries.logPerformanceStopIf(e3._debug, r3, "empty", o.PERF_LOG_INDENT), n3;
      t3.sort(function(e4, t4) {
        return e4 - t4;
      });
      var a2 = t3[0], s = t3[0];
      n3.push(a2);
      for (var u2 = 1; u2 < t3.length; ++u2) {
        var c2 = t3[u2];
        s + 1 !== c2 ? (n3.push(s - a2 + 1), a2 = s = c2, n3.push(a2)) : s = c2;
      }
      return n3.push(s - a2 + 1), i2.auxiliaries.logPerformanceStopIf(e3._debug, r3, void 0, o.PERF_LOG_INDENT), n3;
    }, e3.prototype.slice = function(t3) {
      var r3 = "draw dispatch slice";
      if (i2.auxiliaries.logPerformanceStartIf(e3._debug, r3), this._slices === void 0)
        return i2.auxiliaries.logPerformanceStopIf(e3._debug, r3, "undefined", o.PERF_LOG_INDENT), t3;
      for (var n3 = new Array(), a2 = 0; a2 < this._slices.length; a2 += 2)
        for (var s = this._slices[a2 + 0], u2 = this._slices[a2 + 1], c2 = 0; c2 < t3.length; c2 += 2) {
          var l2 = t3[c2 + 0], f2 = l2 + t3[c2 + 1] - 1;
          if (!(f2 < s || l2 > u2)) {
            var h2 = Math.max(s, l2), d2 = Math.min(u2, f2) - h2 + 1;
            n3.push(h2), n3.push(d2);
          }
        }
      return i2.auxiliaries.logPerformanceStopIf(e3._debug, r3, void 0, o.PERF_LOG_INDENT), n3;
    }, e3.prototype.compute_unfiltered = function() {
      var t3 = this, r3 = "draw dispatch unfiltered";
      if (i2.auxiliaries.logPerformanceStartIf(e3._debug, r3), this._ids === void 0)
        return this._unfiltered = void 0, void i2.auxiliaries.logPerformanceStopIf(e3._debug, r3, "undefined", o.PERF_LOG_INDENT);
      var n3 = this._ids.map(function(e4, t4) {
        return t4;
      }).filter(function(e4) {
        return t3._mask === void 0 || t3._mask[e4] > 0;
      });
      this._unfiltered = this.slice(e3.encode(n3)), i2.auxiliaries.logPerformanceStopIf(e3._debug, r3, void 0, o.PERF_LOG_INDENT);
    }, e3.prototype.compute_filtered = function(t3) {
      var r3 = this, n3 = "draw dispatch filtered";
      i2.auxiliaries.logPerformanceStartIf(e3._debug, n3);
      var a2 = this._filters.get(t3);
      if (a2 === void 0 || this._ids === void 0)
        return this._sequences.set(t3, []), void i2.auxiliaries.logPerformanceStopIf(e3._debug, n3, "undefined", o.PERF_LOG_INDENT);
      var s = a2.map(function(e4) {
        return r3._ids.indexOf(e4);
      }).filter(function(e4) {
        return r3._mask === void 0 || r3._mask[e4] > 0;
      }), u2 = this.slice(e3.encode(s));
      this._sequences.set(t3, u2), i2.auxiliaries.logPerformanceStopIf(e3._debug, n3, void 0, o.PERF_LOG_INDENT);
    }, e3.prototype.compute_complement = function(t3) {
      var r3 = this, n3 = "draw dispatch complement";
      i2.auxiliaries.logPerformanceStartIf(e3._debug, n3);
      var a2 = this._filters.get(t3);
      if (a2 === void 0 || this._ids === void 0)
        return this._sequences.set(t3, []), void i2.auxiliaries.logPerformanceStopIf(e3._debug, n3, "undefined", o.PERF_LOG_INDENT);
      var s = this._ids.map(function(e4, t4) {
        return t4;
      }).filter(function(e4) {
        return a2.indexOf(r3._ids[e4]) === -1 && (r3._mask === void 0 || r3._mask[e4] > 0);
      }), u2 = this.slice(e3.encode(s));
      this._complements.set(t3, u2), i2.auxiliaries.logPerformanceStopIf(e3._debug, n3, void 0, o.PERF_LOG_INDENT);
    }, e3.prototype.count = function(e4) {
      return e4.reduce(function(e5, t3, r3) {
        return r3 % 2 == 1 ? e5 + t3 : e5;
      }, 0);
    }, e3.prototype.invalidate = function(e4) {
      if (e4)
        return this._sequences.delete(e4), void this._complements.delete(e4);
      this._sequences.clear(), this._complements.clear(), this._unfiltered = void 0;
    }, e3.prototype.filter = function(e4, t3) {
      this.invalidate(e4), this._filters.set(e4, t3 instanceof Uint32Array ? Array.from(t3) : t3);
    }, e3.prototype.unfiltered = function() {
      return this._ids === void 0 ? new Array() : (this._unfiltered === void 0 && this.compute_unfiltered(), this._unfiltered);
    }, e3.prototype.filtered = function(e4) {
      return this._filters.has(e4) ? (this._sequences.has(e4) || this.compute_filtered(e4), this._sequences.get(e4)) : (i2.auxiliaries.log(i2.auxiliaries.LogLevel.Warning, "unknown draw dispatch sequence handle, given " + e4), new Array(0));
    }, e3.prototype.complemented = function(e4) {
      return this._filters.has(e4) ? (this._complements.has(e4) || this.compute_complement(e4), this._complements.get(e4)) : (i2.auxiliaries.log(i2.auxiliaries.LogLevel.Warning, "unknown draw dispatch sequence handle, given " + e4), new Array(0));
    }, e3.prototype.unfilteredCount = function() {
      var e4 = this.unfiltered();
      return this.count(e4);
    }, e3.prototype.filteredCount = function(e4) {
      var t3 = this.filtered(e4);
      return this.count(t3);
    }, e3.prototype.complementedCount = function(e4) {
      var t3 = this.complemented(e4);
      return this.count(t3);
    }, Object.defineProperty(e3.prototype, "mask", { set: function(e4) {
      this.invalidate(), e4 !== void 0 ? n2.IS_EDGE ? this._mask = e4 instanceof Uint8Array ? Array.from(e4) : e4 : this._mask = e4 instanceof Uint8Array ? e4 : Uint8Array.from(e4) : this._mask = void 0;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "slices", { get: function() {
      return this._slices;
    }, set: function(e4) {
      this.invalidate(), this._slices = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "ids", { set: function(e4) {
      this.invalidate(), n2.IS_EDGE || n2.IS_IE11 ? this._ids = e4 instanceof Uint32Array ? Array.from(e4) : e4 : this._ids = e4 instanceof Uint32Array ? e4 : Uint32Array.from(e4), this._filters.clear(), this._mask = void 0;
    }, enumerable: false, configurable: true }), e3._debug = false, e3;
  }();
  t2.DrawDispatch = a;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.PERF_LOG_INDENT = void 0, t2.PERF_LOG_INDENT = 24;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.Row = void 0;
  var i2 = r2(0).auxiliaries.assert, n2 = r2(4), o = function() {
    function e3(e4, t3, r3, i3, n3) {
      this._tree = e4, this._weights = t3, this._availableSpace = r3, this._availableWeight = i3, this._horizontal = n3, this._insertedChildrenCount = 0, this._overallChildrenCount = 0, this._parentWeight = i3, this._childrenWeight = 0, this._overallChildrenWeight = 0;
    }
    return e3.aspectRatio = function(e4, t3, r3) {
      var i3 = e4 * t3;
      return i3 > r3 ? i3 / r3 : r3 / i3;
    }, e3.prototype.optimizedAverageAspectRatio = function(t3) {
      if (t3) {
        var r3 = Math.min(this._childrenWeight + t3, this._availableWeight), i3 = Math.min(r3 / this._availableWeight, 1), n3 = this._horizontal ? this._availableSpace.width : this._availableSpace.height, o2 = (this._horizontal ? this._availableSpace.height : this._availableSpace.width) * i3;
        return e3.aspectRatio(1 / (this._insertedChildrenCount + 1), n3, o2);
      }
      r3 = this._childrenWeight, i3 = Math.min(r3 / this._availableWeight, 1), n3 = this._horizontal ? this._availableSpace.width : this._availableSpace.height, o2 = (this._horizontal ? this._availableSpace.height : this._availableSpace.width) * i3;
      return e3.aspectRatio(1 / this._insertedChildrenCount, n3, o2);
    }, e3.prototype.insert = function(e4, t3) {
      this._firstChild || (this._firstChild = e4), i2(this._lastChild === void 0 || this._lastChild === e4, "Next node invariant not held."), this._lastChild = this._tree.node(e4.nextSibling), t3 > Number.EPSILON && (this._childrenWeight = Math.min(this._childrenWeight + t3, this._availableWeight), this._overallChildrenWeight = Math.min(this._overallChildrenWeight + t3, this._parentWeight), this._insertedChildrenCount += 1);
    }, e3.prototype.layoutNodes = function(e4) {
      var t3 = this;
      if (this._firstChild !== void 0)
        if (this.isDisabled)
          this._tree.siblingsRangeDo(this._firstChild, this._lastChild, function(r4) {
            e4[r4.index] = new n2.Rect(t3._availableSpace.left, t3._availableSpace.bottom, t3._availableSpace.left, t3._availableSpace.bottom);
          });
        else {
          var r3 = this.currentSpace;
          if (this._horizontal) {
            var o2 = r3.left;
            this._tree.siblingsRangeDo(this._firstChild, this._lastChild, function(a2) {
              var s = t3._weights[a2.index], u2 = r3.width * s / t3._childrenWeight, c2 = Math.min(o2 + u2, r3.right);
              e4[a2.index] = new n2.Rect(o2, r3.bottom, c2, r3.top), i2(t3._availableSpace.comprises(e4[a2.index]), "Expect that child rect is within parent rect"), o2 = c2;
            });
          } else {
            var a = r3.bottom;
            this._tree.siblingsRangeDo(this._firstChild, this._lastChild, function(o3) {
              var s = t3._weights[o3.index], u2 = r3.height * s / t3._childrenWeight, c2 = Math.min(a + u2, r3.top);
              e4[o3.index] = new n2.Rect(r3.left, a, r3.right, c2), i2(t3._availableSpace.comprises(e4[o3.index]), "Expect that child rect is within parent rect"), a = c2;
            });
          }
        }
    }, Object.defineProperty(e3.prototype, "isDisabled", { get: function() {
      return this._availableWeight <= 0 || this._availableSpace.width <= 0 || this._availableSpace.height <= 0;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "availableWeight", { get: function() {
      return this._availableWeight;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "remainingWeight", { get: function() {
      return this.isDisabled ? 0 : Math.max(this._parentWeight - this._overallChildrenWeight, 0);
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "availableSpace", { get: function() {
      return this._availableSpace;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "currentSpace", { get: function() {
      if (this.isDisabled)
        return this._availableSpace.truncateBottom(this._availableSpace.top);
      if (this._childrenWeight >= this._availableWeight || this._lastChild === void 0)
        return n2.Rect.clone(this.availableSpace);
      var e4 = this._childrenWeight / this._availableWeight;
      if (this._horizontal) {
        var t3 = this._availableSpace.bottom + e4 * this._availableSpace.height;
        return this._availableSpace.truncateTop(t3);
      }
      t3 = this._availableSpace.left + e4 * this._availableSpace.width;
      return this._availableSpace.truncateRight(t3);
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "remainingSpace", { get: function() {
      if (this.isDisabled)
        return this._availableSpace.truncateBottom(this._availableSpace.top);
      var e4 = Math.min(this._childrenWeight / this._availableWeight, 1);
      if (this._horizontal) {
        var t3 = this._availableSpace.bottom + e4 * this._availableSpace.height;
        return this._availableSpace.truncateBottom(t3);
      }
      t3 = this._availableSpace.left + e4 * this._availableSpace.width;
      return this._availableSpace.truncateLeft(t3);
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "isHorizontal", { get: function() {
      return this._horizontal;
    }, enumerable: false, configurable: true }), e3.prototype.increasesAverageAspectRatio = function(e4) {
      return !(this.isDisabled || this._firstChild === void 0 || e4 <= Number.EPSILON) && this.optimizedAverageAspectRatio(e4) > this.optimizedAverageAspectRatio() + Number.EPSILON;
    }, e3.prototype.next = function(e4) {
      var t3 = this.remainingSpace;
      i2(this._availableSpace.comprises(t3), "Remaining Space should not exceed available space"), this._availableSpace = t3, this._availableWeight = this.remainingWeight, this._horizontal = e4, this._firstChild = void 0, this._lastChild = void 0, this._insertedChildrenCount = 0, this._childrenWeight = 0;
    }, e3;
  }();
  t2.Row = o;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.ServiceAdapter = t2.AnimatedServiceAdapter = void 0;
  var i2, n2 = r2(0), o = r2(1), a = r2(2), s = r2(8), u2 = r2(9), c2 = r2(5), l2 = r2(30), f2 = r2(31), h2 = r2(3), d2 = function() {
    function e3() {
      this._config = new a.Configuration(), this.setupLayoutAndGeometry();
    }
    return e3.prototype.loadAll = function(e4, t3, r3, i3, n3, o2) {
      this.loadAndPrepareAreaData(e4), this.loadAndPrepareColorData(t3), this.loadAndPrepareHeightData(r3, n3, o2), this.loadNames(i3);
    }, e3.prototype.loadCombinedFormat = function(e4, t3) {
      var r3, i3, n3 = new l2.BufferReader(e4), o2 = new l2.ServiceFormatHeader(n3);
      if (o2.hasFlag(l2.BufferFlags.HIERARCHY)) {
        var a2 = n3.getInt(), s2 = n3.getInt(), u3 = n3.getByteArray(s2);
        n3.addPadding(), this.createOrUpdateTopology(u3, a2);
      }
      if (o2.hasFlag(l2.BufferFlags.HEIGHTS) && (r3 = new f2.ServiceBufferHeader(e4, n3.offset), n3.offset = r3.offset + r3.length * Uint16Array.BYTES_PER_ELEMENT, n3.addPadding()), o2.hasFlag(l2.BufferFlags.HEIGHTS_COMPARE) && (i3 = new f2.ServiceBufferHeader(e4, n3.offset), n3.offset = i3.offset + i3.length * Uint16Array.BYTES_PER_ELEMENT, n3.addPadding()), this.loadAndPrepareHeightDataV2(e4, r3, i3), o2.hasFlag(l2.BufferFlags.AREAS)) {
        var c3 = new f2.ServiceBufferHeader(e4, n3.offset);
        n3.offset = c3.offset + c3.length * Uint16Array.BYTES_PER_ELEMENT, n3.addPadding(), this.loadAndPrepareAreaData(e4, c3);
      }
      o2.hasFlag(l2.BufferFlags.COLORS) ? n3.addPadding() : this.loadAndPrepareColorData(e4, r3);
    }, e3.prototype.loadAndPrepareAreaData = function(t3, r3) {
      r3 || (r3 = new f2.ServiceBufferHeader(t3)), n2.auxiliaries.log(n2.auxiliaries.LogLevel.Debug, "area - min: " + r3.minimum + ", max: " + r3.maximum), this.createOrUpdateBuffer({ identifier: i2.BufferIdentifier.SourceArea, type: o.AttributeBuffer.DataType.Uint16, data: new Uint16Array(t3, r3.offset, r3.length), encoding: o.AttributeBuffer.Encoding.Native, linearization: o.AttributeBuffer.Linearization.Topology }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.DecodedArea, source: "buffer:" + i2.BufferIdentifier.SourceArea, transformations: [this.metricRangeTransform(r3.minimum, r3.maximum)] });
      var a2 = Math.max(1e-5, r3.maximum);
      r3.maximum === 0 && console.warn("treemap: max area is 0 - clamping to " + a2 + " for successful layout"), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.ClampedArea, source: "bufferView:" + i2.BufferViewIdentifier.DecodedArea, transformations: [{ type: "clamp", min: a2 * e3.MINIMUM_NODE_WEIGHT, max: a2 }] }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.Weight, source: "bufferView:" + i2.BufferViewIdentifier.ClampedArea, transformations: [{ type: "propagate-up", operation: "sum" }] }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.BaseAreaScale, source: "bufferView:" + i2.BufferViewIdentifier.Weight, transformations: [{ type: "transform", operation: "multiply", parameter: 0 }] }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.BaseAreaScale, source: "bufferView:" + i2.BufferViewIdentifier.Weight, transformations: [{ type: "transform", operation: "pow", parameter: 0 }] }), this._config.altered.alter("buffers"), this._config.altered.alter("bufferViews");
    }, e3.prototype.loadAndPrepareColorData = function(t3, r3) {
      r3 || (r3 = new f2.ServiceBufferHeader(t3)), n2.auxiliaries.log(n2.auxiliaries.LogLevel.Debug, "color - min: " + r3.minimum + ", max: " + r3.maximum), this.createOrUpdateBuffer({ identifier: i2.BufferIdentifier.SourceColor, type: o.AttributeBuffer.DataType.Uint16, data: new Uint16Array(t3, r3.offset, r3.length), encoding: o.AttributeBuffer.Encoding.Native, linearization: o.AttributeBuffer.Linearization.Topology }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.DecodedColor, source: "bufferView:" + i2.BufferViewIdentifier.DecodedBaseHeight, transformations: [this.metricRangeTransform(r3.minimum, r3.maximum)] }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.DecodedEndColor, source: "bufferView:" + i2.BufferViewIdentifier.DecodedEndHeight, transformations: [this.metricRangeTransform(r3.minimum, r3.maximum)] }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.Unmodified, source: "buffer:" + i2.BufferIdentifier.SourceColor, transformations: [{ type: "mask", value: e3.UINT16_ENCODING_UNMODIFIED }] }), this._config.altered.alter("buffers"), this._config.altered.alter("bufferViews");
    }, e3.prototype.loadAndPrepareHeightData = function(t3, r3, a2) {
      var s2 = new f2.ServiceBufferHeader(t3);
      n2.auxiliaries.log(n2.auxiliaries.LogLevel.Debug, "height - min: " + s2.minimum + ", max: " + s2.maximum);
      var u3 = s2.offset, c3 = new Uint16Array(t3, s2.offset, s2.length);
      if (s2.minimum > 0 && s2.minimum === s2.maximum)
        for (var l3 = 0; l3 < c3.length; l3++)
          c3[l3] === e3.UINT16_ENCODING_ZERO && (c3[l3] = e3.UINT16_ENCODING_MAX);
      if (this.createOrUpdateBuffer({ identifier: i2.BufferIdentifier.SourceHeight, type: o.AttributeBuffer.DataType.Uint16, data: c3, encoding: o.AttributeBuffer.Encoding.Native, linearization: o.AttributeBuffer.Linearization.Topology }), u3 += Uint16Array.BYTES_PER_ELEMENT * s2.length, u3 += Int32Array.BYTES_PER_ELEMENT, this.createOrUpdateBuffer({ identifier: i2.BufferIdentifier.SourceCompareThreshold, type: o.AttributeBuffer.DataType.Int8, data: new Int8Array(t3, u3, s2.length), encoding: o.AttributeBuffer.Encoding.Native, linearization: o.AttributeBuffer.Linearization.Topology }), u3 += Int8Array.BYTES_PER_ELEMENT * s2.length, r3) {
        u3 += 4 - u3 % 4;
        var h3 = new Uint32Array(t3, u3, 1)[0];
        u3 += Uint32Array.BYTES_PER_ELEMENT;
        var d3 = new Uint32Array(t3, u3, 1)[0];
        u3 += Uint32Array.BYTES_PER_ELEMENT, this.createOrUpdateTopology(new Uint8Array(t3, u3, d3), h3);
      }
      this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.DecodedHeight, source: "buffer:" + i2.BufferIdentifier.SourceHeight, transformations: [this.metricRangeTransform(s2.minimum, s2.maximum)] }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.NormalizedHeight, source: "buffer:" + i2.BufferIdentifier.SourceHeight, transformations: [this.metricRangeTransform(0, 1)] }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.HeightChange, source: "buffer:" + i2.BufferIdentifier.SourceCompareThreshold, transformations: [{ type: "threshold", value: 0 }] }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.BaseHeight, source: "buffer:" + i2.BufferIdentifier.SourceCompareThreshold, transformations: [{ type: "transform", operation: "divide", parameter: 127 }, { type: "transform", operation: "as-remainder" }, { type: "transform", operation: "multiply", buffer: "bufferView:" + i2.BufferViewIdentifier.NormalizedHeight }] }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.DecodedBaseHeight, source: "buffer:" + i2.BufferIdentifier.SourceCompareThreshold, transformations: [{ type: "transform", operation: "divide", parameter: 127 }, { type: "transform", operation: "as-remainder" }, { type: "transform", operation: "multiply", buffer: "bufferView:" + i2.BufferViewIdentifier.DecodedHeight }] }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.DeltaHeight, source: "bufferView:" + i2.BufferViewIdentifier.NormalizedHeight, transformations: [{ type: "transform", operation: "subtract", buffer: "bufferView:" + i2.BufferViewIdentifier.BaseHeight }, { type: "transform", operation: "abs" }] }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.DecodedDeltaHeight, source: "bufferView:" + i2.BufferViewIdentifier.DecodedHeight, transformations: [{ type: "transform", operation: "subtract", buffer: "bufferView:" + i2.BufferViewIdentifier.DecodedBaseHeight }, { type: "transform", operation: "abs" }] }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.EndHeight, source: "bufferView:" + i2.BufferViewIdentifier.NormalizedHeight }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.DecodedEndHeight, source: "bufferView:" + i2.BufferViewIdentifier.DecodedHeight }), this._config.altered.alter("buffers"), this._config.altered.alter("bufferViews");
    }, e3.prototype.loadAndPrepareHeightDataV2 = function(e4, t3, r3) {
      n2.auxiliaries.log(n2.auxiliaries.LogLevel.Debug, "height - min: " + t3.minimum + ", max: " + t3.maximum), this.createOrUpdateBuffer({ identifier: i2.BufferIdentifier.SourceHeight, type: o.AttributeBuffer.DataType.Uint16, data: new Uint16Array(e4, t3.offset, t3.length), encoding: o.AttributeBuffer.Encoding.Native, linearization: o.AttributeBuffer.Linearization.Topology }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.DecodedHeight, source: "buffer:" + i2.BufferIdentifier.SourceHeight, transformations: [this.metricRangeTransform(t3.minimum, t3.maximum)] }), r3 ? (this.createOrUpdateBuffer({ identifier: i2.BufferIdentifier.SourceCompareHeight, type: o.AttributeBuffer.DataType.Uint16, data: new Uint16Array(e4, r3.offset, r3.length), encoding: o.AttributeBuffer.Encoding.Native, linearization: o.AttributeBuffer.Linearization.Topology }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.DecodedCompareHeight, source: "buffer:" + i2.BufferIdentifier.SourceCompareHeight, transformations: [this.metricRangeTransform(r3.minimum, r3.maximum)] }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.DecodedBaseHeight, source: "bufferView:" + i2.BufferViewIdentifier.DecodedHeight }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.DecodedDeltaHeight, source: "bufferView:" + i2.BufferViewIdentifier.DecodedHeight, transformations: [{ type: "transform", operation: "subtract", buffer: "bufferView:" + i2.BufferViewIdentifier.DecodedCompareHeight }, { type: "transform", operation: "abs" }] }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.DecodedEndHeight, source: "bufferView:" + i2.BufferViewIdentifier.DecodedCompareHeight }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.BaseHeight, source: "bufferView:" + i2.BufferViewIdentifier.DecodedBaseHeight, transformations: [{ type: "range-transform", sourceRange: [t3.minimum, t3.maximum], targetRange: [0, 1] }] }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.DeltaHeight, source: "bufferView:" + i2.BufferViewIdentifier.DecodedDeltaHeight, transformations: [{ type: "range-transform", sourceRange: [r3.minimum, r3.maximum], targetRange: [0, 1] }] }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.EndHeight, source: "bufferView:" + i2.BufferViewIdentifier.DecodedEndHeight, transformations: [{ type: "range-transform", sourceRange: [r3.minimum, r3.maximum], targetRange: [0, 1] }] }), this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.HeightChange, source: "buffer:" + i2.BufferIdentifier.SourceHeight, transformations: [{ type: "transform", operation: "compare", buffer: "buffer:" + i2.BufferIdentifier.SourceCompareHeight }, { type: "threshold", value: 0 }] })) : this.createOrUpdateBufferView({ identifier: i2.BufferViewIdentifier.BaseHeight, source: "bufferView:" + i2.BufferViewIdentifier.DecodedHeight, transformations: [{ type: "range-transform", sourceRange: [t3.minimum, t3.maximum], targetRange: [0, 1] }] }), this._config.altered.alter("buffers"), this._config.altered.alter("bufferViews");
    }, e3.prototype.metricRangeTransform = function(t3, r3) {
      return { type: "range-transform", sourceRange: [e3.UINT16_ENCODING_ZERO, e3.UINT16_ENCODING_MAX], targetRange: [t3, r3] };
    }, e3.prototype.setupLayoutAndGeometry = function() {
      this._config.colors = [{ identifier: "emphasis", space: "hex", value: "#00b0ff" }, { identifier: "auxiliary", space: "hex", values: ["#00aa5e", "#71237c"] }, { identifier: "inner", space: "hex", values: ["#e8eaee", "#eef0f4"] }, { identifier: "analysis", space: "hex", values: ["#4575b4", "#91bfdb", "#e0f3f8", "#ffffbf", "#fee090", "#fc8d59", "#d73027"] }, { identifier: "segmentation", space: "hex", values: ["#ffffff", "#5392ff", "#71cddd", "#34bc6e", "#95d13c", "#db7c00", "#ffb000", "#ff509e", "#9b82f3"] }], this._config.layout = { algorithm: u2.Layout.LayoutAlgorithm.Snake, weight: "bufferView:" + i2.BufferViewIdentifier.Weight, aspectRatio: 1, sort: { key: c2.NodeSort.Key.Weight, algorithm: c2.NodeSort.Algorithm.Descending }, siblingMargin: { type: "relative", value: 0.1 }, parentPadding: { type: "relative", value: 0.02 }, accessoryPadding: { type: "absolute", direction: "bottom", value: [0, 0.018, 0.015], relativeAreaThreshold: 0.4, targetAspectRatio: 2 }, cascade: false, flattenDirectories: false }, this._config.altered.alter("geometry"), this._config.geometry = { aggregation: { buffer: "bufferView:" + i2.BufferViewIdentifier.Unmodified, depthThreshold: 2, valueThreshold: 1 }, emphasis: { outline: new Array(), highlight: new Array() }, parentLayer: { showRoot: false }, leafLayers: [{ colorScheme: { inverted: false, classBounds: void 0 }, areaScale: "bufferView:" + i2.BufferViewIdentifier.BaseAreaScale, colorMap: "color:analysis", height: "bufferView:" + i2.BufferViewIdentifier.BaseHeight, colors: "bufferView:" + i2.BufferViewIdentifier.DecodedColor }, { colorScheme: { inverted: false, classBounds: void 0 }, areaScale: "bufferView:" + i2.BufferViewIdentifier.BaseAreaScale, colorMap: "color:analysis", height: "bufferView:" + i2.BufferViewIdentifier.Empty, colors: "bufferView:" + i2.BufferViewIdentifier.HeightChange }], heightScale: s.ConfigurationAids.HeightScaleApproach.SomethingInverseSqrt }, this.config.animations = [{ layer: 0, areaScale: { buffers: ["bufferView:" + i2.BufferViewIdentifier.BaseAreaScale, "bufferView:" + i2.BufferViewIdentifier.EndAreaScale], delaySpread: 0, timestamps: [0, 4e3], easing: "smoothstep", order: "synchronous" }, height: { buffers: ["bufferView:" + i2.BufferViewIdentifier.BaseHeight, "bufferView:" + i2.BufferViewIdentifier.EndHeight], delaySpread: 0, timestamps: [0, 4e3], easing: "smoothstep", order: "synchronous" }, color: { buffers: ["bufferView:" + i2.BufferViewIdentifier.DecodedColor, "bufferView:" + i2.BufferViewIdentifier.DecodedEndColor], delaySpread: 0, timestamps: [0, 4e3], easing: "linear", order: "synchronous" } }], this._config.labels = { innerNodeLayerRange: [1, 3], numTopInnerNodes: 200, numTopWeightNodes: 0, numTopHeightNodes: 3, numTopColorNodes: 3 };
    }, e3.prototype.createOrUpdateBuffer = function(e4) {
      for (var t3 = 0; t3 < this._config.buffers.length && this._config.buffers[t3].identifier !== e4.identifier; )
        ++t3;
      this._config.buffers.length === t3 ? this._config.buffers.push(e4) : this._config.buffers.splice(t3, 1, e4);
    }, e3.prototype.createOrUpdateBufferView = function(e4) {
      for (var t3 = 0; t3 < this._config.bufferViews.length && this._config.bufferViews[t3].identifier !== e4.identifier; )
        ++t3;
      this._config.bufferViews.length === t3 ? this._config.bufferViews.push(e4) : this._config.bufferViews.splice(t3, 1, e4);
    }, e3.prototype.createOrUpdateTopology = function(e4, t3) {
      for (var r3 = new Array(), i3 = new Array(), o2 = t3 + 1, a2 = 0; a2 < e4.length; a2 += o2) {
        for (var s2 = n2.vec4.create(), u3 = 0; u3 < t3; u3++)
          s2[u3] = e4[a2 + u3];
        var c3 = n2.gl_matrix_extensions.decode_uint32_from_rgba8(s2), l3 = e4[a2 + t3];
        if (l3 > 0) {
          var f3 = i3[l3 - 1];
          r3.push(f3), r3.push(c3);
        }
        i3[l3] = c3;
      }
      this._config.topology = { edges: r3, format: h2.Topology.InputFormat.Interleaved };
    }, e3.prototype.loadNames = function(e4) {
      var t3 = /* @__PURE__ */ new Map();
      if (e4.apps || e4.groups) {
        for (var r3 in e4.apps) {
          var i3 = parseInt(r3, 10);
          t3.set(i3, e4.apps[r3]);
        }
        for (var r3 in e4.groups) {
          i3 = parseInt(r3, 10);
          t3.set(i3, e4.groups[r3]);
        }
      } else
        Object.keys(e4).forEach(function(r4) {
          var i4 = parseInt(r4, 10);
          t3.set(i4, e4[i4]);
        });
      this._config.labels.callback = function(e5, r4) {
        return r4(t3);
      };
    }, Object.defineProperty(e3.prototype, "config", { get: function() {
      return this._config;
    }, enumerable: false, configurable: true }), e3.UINT16_ENCODING_DB_NULL = 0, e3.UINT16_ENCODING_UNMODIFIED = 1, e3.UINT16_ENCODING_ZERO = 2, e3.UINT16_ENCODING_MAX = 65535, e3.MINIMUM_NODE_WEIGHT = 0.01, e3;
  }();
  t2.AnimatedServiceAdapter = d2, function(e3) {
    !function(e4) {
      e4.SourceArea = "SourceArea", e4.SourceHeight = "SourceHeight", e4.SourceColor = "SourceColor", e4.SourceCompareThreshold = "SourceCompareThresholds", e4.SourceCompareHeight = "SourceCompareHeight";
    }(e3.BufferIdentifier || (e3.BufferIdentifier = {})), function(e4) {
      e4.DecodedArea = "DecodedArea", e4.ClampedArea = "ClampedArea", e4.Weight = "Weight", e4.DecodedColor = "DecodedColor", e4.DecodedEndColor = "DecodedEndColor", e4.HeightChange = "HeightChange", e4.Unmodified = "Unmodified", e4.Empty = "Empty", e4.DecodedHeight = "DecodedHeight", e4.DecodedCompareHeight = "DecodedCompareHeight", e4.NormalizedHeight = "NormalizedHeight", e4.BaseAreaScale = "BaseArea", e4.DeltaArea = "DeltaArea", e4.EndAreaScale = "EndArea", e4.BaseHeight = "BaseHeight", e4.DeltaHeight = "DeltaHeight", e4.EndHeight = "EndHeight", e4.DecodedBaseHeight = "DecodedBaseHeight", e4.DecodedDeltaHeight = "DecodedDeltaHeight", e4.DecodedEndHeight = "DecodedEndHeight";
    }(e3.BufferViewIdentifier || (e3.BufferViewIdentifier = {}));
  }(i2 = t2.ServiceAdapter || (t2.ServiceAdapter = {}));
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.ServiceFormatHeader = t2.BufferReader = t2.BufferFlags = void 0, function(e3) {
    e3[e3.HEIGHTS = 1] = "HEIGHTS", e3[e3.HEIGHTS_COMPARE = 2] = "HEIGHTS_COMPARE", e3[e3.AREAS = 4] = "AREAS", e3[e3.COLORS = 8] = "COLORS", e3[e3.HIERARCHY = 16] = "HIERARCHY";
  }(t2.BufferFlags || (t2.BufferFlags = {}));
  var i2 = function() {
    function e3(e4) {
      this.data = e4, this.offset = 0;
    }
    return e3.prototype.getArray = function(e4, t3) {
      var r3 = new t3(this.data, this.offset, e4);
      return this.offset += t3.BYTES_PER_ELEMENT * e4, r3;
    }, e3.prototype.getValue = function(e4) {
      return this.getArray(1, e4)[0];
    }, e3.prototype.addPadding = function() {
      this.offset += 4 - this.offset % 4;
    }, e3.prototype.getByte = function() {
      return this.getValue(Uint8Array);
    }, e3.prototype.getShort = function() {
      return this.getValue(Uint16Array);
    }, e3.prototype.getFloat = function() {
      return this.getValue(Float32Array);
    }, e3.prototype.getInt = function() {
      return this.getValue(Int32Array);
    }, e3.prototype.getShortArray = function(e4) {
      return this.getArray(e4, Uint16Array);
    }, e3.prototype.getByteArray = function(e4) {
      return this.getArray(e4, Uint8Array);
    }, e3;
  }();
  t2.BufferReader = i2;
  var n2 = function() {
    function e3(e4) {
      this.numBuffers = e4.getByte(), this.flags = e4.getByte(), e4.addPadding();
    }
    return e3.prototype.hasFlag = function(e4) {
      return (this.flags & e4) === e4;
    }, e3;
  }();
  t2.ServiceFormatHeader = n2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.ServiceBufferHeader = void 0;
  var i2 = function() {
    function e3(e4, t3) {
      t3 === void 0 && (t3 = 0), this._offset = t3, this._minimum = new Float32Array(e4, this._offset, 1)[0], this._offset += 1 * Float32Array.BYTES_PER_ELEMENT, isFinite(this._minimum) || (this._minimum = 0), this._maximum = new Float32Array(e4, this._offset, 1)[0], this._offset += 1 * Float32Array.BYTES_PER_ELEMENT, this._length = new Int32Array(e4, this._offset, 1)[0], this._offset += 1 * Int32Array.BYTES_PER_ELEMENT;
    }
    return Object.defineProperty(e3.prototype, "minimum", { get: function() {
      return this._minimum;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "maximum", { get: function() {
      return this._maximum;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "length", { get: function() {
      return this._length;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "offset", { get: function() {
      return this._offset;
    }, enumerable: false, configurable: true }), e3;
  }();
  t2.ServiceBufferHeader = i2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.ScreenshotCreator = void 0;
  var i2 = r2(0), n2 = r2(0), o = i2.auxiliaries.assert, a = function() {
    function e3(e4) {
      this._context = e4;
    }
    return e3.toDataURL = function(e4, t3, r3) {
      var i3 = document.createElement("canvas"), n3 = i3.getContext("2d");
      return i3.width = e4.width, i3.height = e4.height, n3.putImageData(e4, 0, 0), i3.toDataURL(t3, r3);
    }, e3.downloadDataURL = function(e4, t3) {
      var r3 = new Image();
      r3.src = e4;
      var i3 = document.createElement("a");
      i3.download = t3, i3.href = r3.src, i3.click();
    }, e3.downloadImage = function(t3, r3) {
      var i3 = e3.toDataURL(t3);
      e3.downloadDataURL(i3, r3);
    }, e3.prototype.captureDefaultFramebufferIntoBuffer = function(e4, t3) {
      var r3 = this._context.gl;
      r3.readBuffer(r3.BACK), r3.readPixels(e4.x, e4.y, e4.width, e4.height, r3.RGBA, r3.UNSIGNED_BYTE, t3);
    }, e3.prototype.captureFramebufferIntoBuffer = function(e4, t3, r3, i3) {
      var n3 = this._context.gl, a2 = e4.texture(t3);
      if (o(a2 !== void 0, "Framebuffer does not have given attachment " + t3 + "."), o(a2.format === n3.RGBA, "Unsupported texture format " + a2.format + "."), o(a2.type === n3.UNSIGNED_BYTE || a2.type === n3.FLOAT || a2.type === n3.HALF_FLOAT, "Unsupported texture type " + a2.type + "."), n3.readBuffer(t3), a2.type === n3.FLOAT || a2.type === n3.HALF_FLOAT) {
        var s = new Float32Array(r3.width * r3.height * 4);
        n3.readPixels(r3.x, r3.y, r3.width, r3.height, n3.RGBA, n3.FLOAT, s), s.forEach(function(e5, t4) {
          i3[t4] = 255 * e5;
        });
      } else
        a2.type === n3.UNSIGNED_BYTE && n3.readPixels(r3.x, r3.y, r3.width, r3.height, n3.RGBA, n3.UNSIGNED_BYTE, i3);
    }, e3.prototype.flipImageDataVertically = function(e4) {
      for (var t3 = new Uint32Array(e4.data.buffer), r3 = e4.width, i3 = e4.height, n3 = 0; n3 < Math.floor(i3 / 2); n3++)
        for (var o2 = 0; o2 < r3; o2++) {
          var a2 = o2 + n3 * r3, s = o2 + (i3 - n3) * r3, u2 = t3[a2];
          t3[a2] = t3[s], t3[s] = u2;
        }
    }, e3.prototype.capture = function(e4, t3, r3) {
      var i3 = this._context.gl, o2 = e4.size;
      r3 === void 0 && (r3 = { x: 0, y: 0, width: o2[0], height: o2[1] }), t3 === void 0 && (t3 = i3.COLOR_ATTACHMENT0);
      var a2 = new ImageData(r3.width, r3.height), s = new Uint8Array(a2.data.buffer);
      return e4.bind(i3.READ_FRAMEBUFFER), e4 instanceof n2.DefaultFramebuffer ? this.captureDefaultFramebufferIntoBuffer(r3, s) : e4 instanceof n2.Framebuffer && this.captureFramebufferIntoBuffer(e4, t3, r3, s), e4.unbind(i3.READ_FRAMEBUFFER), this.flipImageDataVertically(a2), a2;
    }, e3;
  }();
  t2.ScreenshotCreator = a;
}, function(e2, t2, r2) {
  r2(34), e2.exports = r2(35);
}, function(e2, t2, r2) {
  Array.prototype.find || Object.defineProperty(Array.prototype, "find", { value: function(e3) {
    if (this === null)
      throw new TypeError('"this" is null or not defined');
    var t3 = Object(this), r3 = t3.length >>> 0;
    if (typeof e3 != "function")
      throw new TypeError("predicate must be a function");
    for (var i2 = arguments[1], n2 = 0; n2 < r3; ) {
      var o = t3[n2];
      if (e3.call(i2, o, n2, t3))
        return o;
      n2++;
    }
  }, configurable: true, writable: true }), Array.prototype.forEach || (Array.prototype.forEach = function(e3) {
    var t3, r3;
    if (this === null)
      throw new TypeError("this is null or not defined");
    var i2 = Object(this), n2 = i2.length >>> 0;
    if (typeof e3 != "function")
      throw new TypeError(e3 + " is not a function");
    for (arguments.length > 1 && (t3 = arguments[1]), r3 = 0; r3 < n2; ) {
      var o = void 0;
      r3 in i2 && (o = i2[r3], e3.call(t3, o, r3, i2)), r3++;
    }
  }), Array.prototype.fill || Object.defineProperty(Array.prototype, "fill", { value: function(e3) {
    if (this === null)
      throw new TypeError("this is null or not defined");
    for (var t3 = Object(this), r3 = t3.length >>> 0, i2 = arguments[1], n2 = i2 >> 0, o = n2 < 0 ? Math.max(r3 + n2, 0) : Math.min(n2, r3), a = arguments[2], s = a === void 0 ? r3 : a >> 0, u2 = s < 0 ? Math.max(r3 + s, 0) : Math.min(s, r3); o < u2; )
      t3[o] = e3, o++;
    return t3;
  } }), Uint8Array.prototype.fill || (Uint8Array.prototype.fill = Array.prototype.fill), Float32Array.prototype.fill || (Float32Array.prototype.fill = Array.prototype.fill), [Float32Array, Uint8Array, Int8Array, Uint32Array, Int32Array].forEach(function(e3) {
    e3.prototype.slice || Object.defineProperty(e3.prototype, "slice", { value: Array.prototype.slice }), e3.prototype.filter || Object.defineProperty(e3.prototype, "filter", { value: Array.prototype.filter }), e3.prototype.map || Object.defineProperty(e3.prototype, "map", { value: Array.prototype.map }), e3.prototype.indexOf || Object.defineProperty(e3.prototype, "indexOf", { value: Array.prototype.indexOf });
  });
}, function(e2, t2, r2) {
  var i2 = this && this.__createBinding || (Object.create ? function(e3, t3, r3, i3) {
    i3 === void 0 && (i3 = r3), Object.defineProperty(e3, i3, { enumerable: true, get: function() {
      return t3[r3];
    } });
  } : function(e3, t3, r3, i3) {
    i3 === void 0 && (i3 = r3), e3[i3] = t3[r3];
  }), n2 = this && this.__exportStar || function(e3, t3) {
    for (var r3 in e3)
      r3 === "default" || Object.prototype.hasOwnProperty.call(t3, r3) || i2(t3, e3, r3);
  };
  Object.defineProperty(t2, "__esModule", { value: true }), t2.VideoCreator = t2.ScreenshotCreator = t2.AnimationData = t2.Navigation = t2.CSVData = t2.MRHData = t2.TestData = t2.ServiceAdapter = t2.ServiceData = t2.JSONData = t2.AnimatedServiceAdapter = t2.AnimatedServiceData = t2.GeometryCreation = t2.Layout = t2.NodeSort = t2.AttributeBuffer = t2.Topology = t2.Visualization = t2.RendererCapabilities = t2.Renderer = t2.ConfigurationAids = t2.Configuration = t2.AnimationRenderer = t2.gloperate = void 0;
  var o = r2(0);
  o.auxiliaries.logVerbosity(2), o.auxiliaries.assertions(true), t2.gloperate = o;
  var a = r2(10);
  Object.defineProperty(t2, "AnimationRenderer", { enumerable: true, get: function() {
    return a.AnimationRenderer;
  } });
  var s = r2(2);
  Object.defineProperty(t2, "Configuration", { enumerable: true, get: function() {
    return s.Configuration;
  } });
  var u2 = r2(8);
  Object.defineProperty(t2, "ConfigurationAids", { enumerable: true, get: function() {
    return u2.ConfigurationAids;
  } });
  var c2 = r2(21);
  Object.defineProperty(t2, "Renderer", { enumerable: true, get: function() {
    return c2.Renderer;
  } });
  var l2 = r2(22);
  Object.defineProperty(t2, "RendererCapabilities", { enumerable: true, get: function() {
    return l2.RendererCapabilities;
  } });
  var f2 = r2(63);
  Object.defineProperty(t2, "Visualization", { enumerable: true, get: function() {
    return f2.Visualization;
  } });
  var h2 = r2(3);
  Object.defineProperty(t2, "Topology", { enumerable: true, get: function() {
    return h2.Topology;
  } });
  var d2 = r2(1);
  Object.defineProperty(t2, "AttributeBuffer", { enumerable: true, get: function() {
    return d2.AttributeBuffer;
  } });
  var p2 = r2(5);
  Object.defineProperty(t2, "NodeSort", { enumerable: true, get: function() {
    return p2.NodeSort;
  } });
  var _2 = r2(9);
  Object.defineProperty(t2, "Layout", { enumerable: true, get: function() {
    return _2.Layout;
  } });
  var g2 = r2(13);
  Object.defineProperty(t2, "GeometryCreation", { enumerable: true, get: function() {
    return g2.GeometryCreation;
  } });
  var m2 = r2(83);
  Object.defineProperty(t2, "AnimatedServiceData", { enumerable: true, get: function() {
    return m2.AnimatedServiceData;
  } });
  var v2 = r2(29);
  Object.defineProperty(t2, "AnimatedServiceAdapter", { enumerable: true, get: function() {
    return v2.AnimatedServiceAdapter;
  } });
  var b2 = r2(84);
  Object.defineProperty(t2, "JSONData", { enumerable: true, get: function() {
    return b2.JSONData;
  } });
  var y2 = r2(85);
  Object.defineProperty(t2, "ServiceData", { enumerable: true, get: function() {
    return y2.ServiceData;
  } });
  var E2 = r2(14);
  Object.defineProperty(t2, "ServiceAdapter", { enumerable: true, get: function() {
    return E2.ServiceAdapter;
  } });
  var x2 = r2(86);
  Object.defineProperty(t2, "TestData", { enumerable: true, get: function() {
    return x2.TestData;
  } });
  var T2 = r2(90);
  Object.defineProperty(t2, "MRHData", { enumerable: true, get: function() {
    return T2.MRHData;
  } });
  var A2 = r2(92);
  Object.defineProperty(t2, "CSVData", { enumerable: true, get: function() {
    return A2.CSVData;
  } });
  var O2 = r2(11);
  Object.defineProperty(t2, "Navigation", { enumerable: true, get: function() {
    return O2.Navigation;
  } });
  var P2 = r2(12);
  Object.defineProperty(t2, "AnimationData", { enumerable: true, get: function() {
    return P2.AnimationData;
  } });
  var L2 = r2(32);
  Object.defineProperty(t2, "ScreenshotCreator", { enumerable: true, get: function() {
    return L2.ScreenshotCreator;
  } });
  var w2 = r2(94);
  Object.defineProperty(t2, "VideoCreator", { enumerable: true, get: function() {
    return w2.VideoCreator;
  } }), n2(r2(95), t2);
}, function(e2, t2, r2) {
  var i2, n2 = this && this.__extends || (i2 = function(e3, t3) {
    return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t4) {
      e4.__proto__ = t4;
    } || function(e4, t4) {
      for (var r3 in t4)
        Object.prototype.hasOwnProperty.call(t4, r3) && (e4[r3] = t4[r3]);
    })(e3, t3);
  }, function(e3, t3) {
    if (typeof t3 != "function" && t3 !== null)
      throw new TypeError("Class extends value " + String(t3) + " is not a constructor or null");
    function r3() {
      this.constructor = e3;
    }
    i2(e3, t3), e3.prototype = t3 === null ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
  }), o = this && this.__decorate || function(e3, t3, r3, i3) {
    var n3, o2 = arguments.length, a2 = o2 < 3 ? t3 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t3, r3) : i3;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
      a2 = Reflect.decorate(e3, t3, r3, i3);
    else
      for (var s2 = e3.length - 1; s2 >= 0; s2--)
        (n3 = e3[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t3, r3, a2) : n3(t3, r3)) || a2);
    return o2 > 3 && a2 && Object.defineProperty(t3, r3, a2), a2;
  };
  Object.defineProperty(t2, "__esModule", { value: true }), t2.CuboidRenderPass = t2.AnimatedCuboidRenderPass = void 0;
  var a, s = r2(0), u2 = r2(0), c2 = r2(37), l2 = r2(16), f2 = r2(6), h2 = function(e3) {
    function t3(r3, i3) {
      var n3 = e3.call(this) || this;
      return n3._standardDerivatives = void 0, n3._altered = Object.assign(new u2.ChangeLookup(), { any: true, camera: true, geometry: true, colorTable: true, colorTableLength: true, nodeCount: true, emphases: true, layerIndex: true, heightScale: true, levitate: true, outlineWidth: true, emphasisOutlineWidth: true, heightDuration: true, colorDuration: true, areaDuration: true, heightEasing: true, colorEasing: true, areaEasing: true, colorMode: true, patternMode: true, progressMode: true }), n3._outlineWidth = t3.OUTLINE_WIDTH_DEFAULT, n3._emphasisOutlineWidth = t3.EMPHASIS_OUTLINE_WIDTH_DEFAULT, n3._swapColorBuffers = false, n3._colorMode = l2.ColorMode.VERTICAL, n3._patternMode = l2.ColorMode.UNDEFINED, n3._mousePosition = [0, 0], n3._attachment = f2.MultiRenderTarget.Attachment.Undefined, n3._faceSequence = new Array(), n3._faceData = /* @__PURE__ */ new Map(), n3.swapAreaBuffers = false, n3.swapHeightBuffers = false, n3.swapColorBuffers = false, n3._context = r3, s.auxiliaries.assert(i3 >= 0 && i3 <= t3.CUBOID_LAYERS, "expected layer index to be in range [0, " + t3.MINIMUM_CUBOID_HEIGHT + "], given " + i3), n3._layerIndex = i3, n3._drawRestricted = !n3._context.isWebGL2 && !n3._context.supportsDrawBuffers, n3._program = new u2.Program(r3, "CuboidRenderProgram"), n3._geometry = t3.referenceGeometry(r3), n3._ditheringTexture = new s.Texture2D(n3._context, "DitheringTexture"), n3;
    }
    return n2(t3, e3), t3.referenceGeometry = function(e4) {
      var r3;
      t3.GEOMETRY_BY_CONTEXT.has(e4) ? r3 = t3.GEOMETRY_BY_CONTEXT.get(e4) : ((r3 = new c2.AnimatedCuboidGeometry(e4, t3.CUBOID_LAYERS, "CuboidGeometry")).initialize(), t3.GEOMETRY_BY_CONTEXT.set(e4, r3), t3.REFCOUNT_BY_GEOMETRY.set(r3, 0));
      var i3 = t3.REFCOUNT_BY_GEOMETRY.get(r3) + 1;
      return t3.REFCOUNT_BY_GEOMETRY.set(r3, i3), r3;
    }, t3.unreferenceGeometry = function(e4) {
      if (t3.GEOMETRY_BY_CONTEXT.has(e4)) {
        var r3 = t3.GEOMETRY_BY_CONTEXT.get(e4), i3 = t3.REFCOUNT_BY_GEOMETRY.get(r3) - 1;
        t3.REFCOUNT_BY_GEOMETRY.set(r3, i3), i3 > 0 || (r3.uninitialize(), t3.GEOMETRY_BY_CONTEXT.delete(e4), t3.REFCOUNT_BY_GEOMETRY.delete(r3));
      }
    }, t3.prototype.relink = function() {
      if (this._colorTable !== void 0) {
        for (var e4 = 0, t4 = this._program.shaders; e4 < t4.length; e4++) {
          var r3 = t4[e4];
          r3.replace("$ColorTableLength", String(this._colorTable.length / 4)), r3.compile();
        }
        this._program.attribute("a_vertex", this._geometry.vertexLocation), this._program.attribute("a_layout", this._geometry.layoutLocation), this._program.attribute("a_id", this._geometry.idLocation), this._program.attribute("a_areaBegin", this._geometry.areaBeginLocation), this._program.attribute("a_areaEnd", this._geometry.areaEndLocation), this._program.attribute("a_areaDelay", this._geometry.areaDelayLocation), this._program.attribute("a_colorBegin", this._geometry.colorBeginLocation), this._program.attribute("a_colorEnd", this._geometry.colorEndLocation), this._program.attribute("a_colorDelay", this._geometry.colorDelayLocation), this._program.attribute("a_emphasis", this._geometry.emphasisLocation), this._program.attribute("a_heightsBegin", this._geometry.heightBeginLocation), this._program.attribute("a_heightsEnd", this._geometry.heightEndLocation), this._program.attribute("a_heightDelay", this._geometry.heightDelayLocation), this._program.attribute("a_texCoord", this._geometry.texCoordLocation), this._program.link(), this._program.linked && (this._drawRestricted && (this._uAttachment = this._program.uniform("u_attachment")), this._uViewProjection = this._program.uniform("u_viewProjection"), this._uNdcOffset = this._program.uniform("u_ndcOffset"), this._uColorTable = this._program.uniform("u_colorTable"), this._uNodeCount = this._program.uniform("u_nodeCountSqrt"), this._uLayer = this._program.uniform("u_layer"), this._uFace = this._program.uniform("u_face"), this._uNormalAndLambert = this._program.uniform("u_normalAndLambert"), this._uHeightScale = this._program.uniform("u_heightScale"), this._uFloatingGap = this._program.uniform("u_floatingGap"), this._uOutlineWidth = this._program.uniform("u_outlineWidth"), this._uEmphasisOutlineWidth = this._program.uniform("u_emphasisOutlineWidth"), this._uTime = this._program.uniform("u_time"), this._uAreaDuration = this._program.uniform("u_areaDuration"), this._uHeightDuration = this._program.uniform("u_heightDuration"), this._uColorDuration = this._program.uniform("u_colorDuration"), this._uAreaEasing = this._program.uniform("u_areaEasing"), this._uHeightEasing = this._program.uniform("u_heightEasing"), this._uColorEasing = this._program.uniform("u_colorEasing"), this._uDitheringTexture = this._program.uniform("u_ditheringTexture"), this._uColorMode = this._program.uniform("u_colorMode"), this._uPatternMode = this._program.uniform("u_patternMode"), this._uProgressMode = this._program.uniform("u_progressMode"), this._uMousePosition = this._program.uniform("u_mousePosition"), this._uScreenSize = this._program.uniform("u_screenSize"));
      }
    }, t3.prototype.optimizeFaceSequence = function() {
      var e4 = this._camera.eye, t4 = this._camera.center, r3 = new Array(), i3 = s.vec3.create();
      s.vec3.sub(i3, e4, t4), s.vec3.normalize(i3, i3), e4[1] > 0 && r3.push([a.Face.Top, Math.abs(s.vec3.dot(s.vec3.fromValues(0, 1, 0), i3))]), e4[2] > -1 && r3.push([a.Face.Front, Math.abs(s.vec3.dot(s.vec3.fromValues(0, 0, 1), i3))]), e4[2] < 1 && r3.push([a.Face.Back, Math.abs(s.vec3.dot(s.vec3.fromValues(0, 0, -1), i3))]), e4[0] > -1 && r3.push([a.Face.Left, Math.abs(s.vec3.dot(s.vec3.fromValues(1, 0, 0), i3))]), e4[0] < 1 && r3.push([a.Face.Right, Math.abs(s.vec3.dot(s.vec3.fromValues(-1, 0, 0), i3))]), r3 = r3.sort(function(e5, t5) {
        return t5[1] - e5[1];
      }), this._faceSequence = r3.map(function(e5) {
        return e5[0];
      });
    }, t3.prototype.initialize = function() {
      var e4 = this._context.gl;
      this._context.isWebGL1 && this._standardDerivatives === void 0 && (this._context.enable(["OES_standard_derivatives"]), this._standardDerivatives = this._context.standardDerivatives);
      var t4 = new u2.Shader(this._context, e4.VERTEX_SHADER, "animatedcuboid.vert");
      t4.initialize(r2(38), false);
      var i3 = new u2.Shader(this._context, e4.FRAGMENT_SHADER, "animatedcuboid.frag");
      return i3.initialize(r2(39), false), this._program.initialize([t4, i3], false), this._faceData.set(a.Face.Top, [0, 1, 0, 1]), this._faceData.set(a.Face.Bottom, [0, -1, 0, 0.68]), this._faceData.set(a.Face.Front, [0, 0, 1, 0.88]), this._faceData.set(a.Face.Back, [0, 0, -1, 0.88]), this._faceData.set(a.Face.Left, [1, 0, 0, 0.84]), this._faceData.set(a.Face.Right, [-1, 0, 0, 0.84]), this._ditheringTexture.initialize(1, 1, e4.RGB, e4.RGB, e4.UNSIGNED_BYTE), this._ditheringTexture.wrap(e4.REPEAT, e4.REPEAT, true, true), this._ditheringTexture.fetch("./assets/bayer16.png", true), true;
    }, t3.prototype.uninitialize = function() {
      t3.unreferenceGeometry(this._context), this._program.uninitialize(), this._uAttachment = void 0, this._uViewProjection = void 0, this._uNdcOffset = void 0, this._uColorTable = void 0, this._uNodeCount = void 0, this._uLayer = void 0, this._uFace = void 0, this._uNormalAndLambert = void 0, this._uHeightScale = void 0, this._uFloatingGap = void 0, this._uOutlineWidth = void 0, this._uEmphasisOutlineWidth = void 0, this._uTime = void 0, this._uAreaDuration = void 0, this._uHeightDuration = void 0, this._uColorDuration = void 0, this._uAreaEasing = void 0, this._uHeightEasing = void 0, this._uColorEasing = void 0, this._uDitheringTexture = void 0, this._uColorMode = void 0, this._uPatternMode = void 0, this._uProgressMode = void 0, this._uMousePosition = void 0, this._uScreenSize = void 0;
    }, t3.prototype.update = function(e4) {
      var r3 = this._context.gl, i3 = false;
      if (!this._program.initialized || !this._program.linked || this._altered.colorTableLength) {
        if (this.relink(), !this._program.linked)
          return;
        i3 = true;
      }
      if (this._program.bind(), (i3 || this._altered.camera || this._camera.altered) && (r3.uniformMatrix4fv(this._uViewProjection, false, this._camera.viewProjection), this.optimizeFaceSequence()), (i3 || this._colorTable) && r3.uniform4fv(this._uColorTable, this._colorTable), this._altered.geometry && this._geometry.valid && this._geometry.update(), (i3 || this._altered.nodeCount) && r3.uniform1f(this._uNodeCount, Math.sqrt(this._nodeCount)), (i3 || this._altered.heightScale) && r3.uniform1f(this._uHeightScale, this._heightScale / 255), (i3 || this._altered.outlineWidth) && r3.uniform1f(this._uOutlineWidth, this._outlineWidth), i3 || this._altered.emphasisOutlineWidth) {
        var n3 = window.devicePixelRatio;
        r3.uniform1f(this._uEmphasisOutlineWidth, this._emphasisOutlineWidth * n3);
      }
      if (this._target && this._target.valid) {
        n3 = window.devicePixelRatio;
        r3.uniform2f(this._uFloatingGap, this._levitate * n3 / this._target.height, t3.MINIMUM_CUBOID_HEIGHT * n3 / this._target.height);
      }
      r3.uniform1f(this._uTime, e4), r3.uniform2iv(this._uMousePosition, this._mousePosition), (i3 || this._altered.areaDuration) && r3.uniform1f(this._uAreaDuration, this._areaDuration), (i3 || this._altered.heightDuration) && r3.uniform1f(this._uHeightDuration, this._heightDuration), (i3 || this._altered.colorDuration) && r3.uniform1f(this._uColorDuration, this._colorDuration), (i3 || this._altered.areaEasing) && r3.uniform1i(this._uAreaEasing, this._areaEasing), (i3 || this._altered.heightEasing) && r3.uniform1i(this._uHeightEasing, this._heightEasing), (i3 || this._altered.colorEasing) && r3.uniform1i(this._uColorEasing, this._colorEasing), (i3 || this._altered.colorMode) && r3.uniform1i(this._uColorMode, this._colorMode), (i3 || this._altered.patternMode) && r3.uniform1i(this._uPatternMode, this._patternMode), (i3 || this._altered.progressMode) && r3.uniform1i(this._uProgressMode, this._progressMode), i3 && r3.uniform1i(this._uDitheringTexture, 0), this._altered.reset();
    }, t3.prototype.frame = function() {
      if (s.auxiliaries.assert(this._target && this._target.valid, "valid target expected"), this._dispatch !== void 0) {
        var e4 = this._context.gl, t4 = this._target.size;
        e4.viewport(0, 0, t4[0], t4[1]), e4.enable(e4.CULL_FACE), e4.enable(e4.DEPTH_TEST), e4.enable(e4.STENCIL_TEST), e4.stencilFunc(e4.ALWAYS, 2, 255), e4.stencilOp(e4.KEEP, e4.KEEP, e4.REPLACE), this._depthMask === false && (e4.depthFunc(e4.LEQUAL), e4.depthMask(false)), this._program.bind(), this._drawRestricted && e4.uniform1i(this._uAttachment, this._attachment), e4.uniform2fv(this._uNdcOffset, this._ndcOffset), e4.uniform1i(this._uLayer, this._layerIndex), e4.uniform2iv(this._uScreenSize, t4), this._geometry.bind(), this._target.bind(), this._ditheringTexture.bind(e4.TEXTURE0);
        for (var r3 = 0, i3 = this._faceSequence; r3 < i3.length; r3++) {
          var n3 = i3[r3];
          if (e4.uniform1i(this._uFace, n3), e4.uniform4fv(this._uNormalAndLambert, this._faceData.get(n3)), this._geometry.valid)
            for (var o2 = 0; o2 < this._dispatch.length; o2 += 2) {
              var a2 = (n3 - 1) * c2.AnimatedCuboidGeometry.BYTES_PER_VERTEX * 4, u3 = this._dispatch[o2 + 0], l3 = this._dispatch[o2 + 1];
              this._geometry.draw(this._layerIndex, u3, a2, l3, this.swapAreaBuffers, this.swapHeightBuffers, this.swapColorBuffers);
            }
        }
        this._depthMask === false && (e4.depthFunc(e4.LESS), e4.depthMask(true)), e4.disable(e4.STENCIL_TEST), e4.disable(e4.DEPTH_TEST), e4.disable(e4.CULL_FACE);
      }
    }, t3.prototype.colorTableLengthAltered = function() {
      this._altered.alter("colorTableLength");
    }, Object.defineProperty(t3.prototype, "target", { set: function(e4) {
      this.assertInitialized(), this._target = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "ndcOffset", { set: function(e4) {
      this.assertInitialized(), this._ndcOffset = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "camera", { set: function(e4) {
      this.assertInitialized(), this._camera !== e4 && (this._camera = e4, this._altered.alter("camera"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "dispatch", { set: function(e4) {
      this.assertInitialized(), this._dispatch = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "layoutData", { set: function(e4) {
      this.assertInitialized(), this._layerIndex > 0 || (this._geometry.layout = e4, this._altered.alter("geometry"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "ids", { set: function(e4) {
      this.assertInitialized(), this._layerIndex > 0 || (this._geometry.ids = e4, this._altered.alter("geometry"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "areas", { set: function(e4) {
      this.assertInitialized(), this._layerIndex > 0 || (e4[0] && this._geometry.areasBegin(e4[0], void 0, 1), e4[1] && this._geometry.areasEnd(e4[1], void 0, 1), this._altered.alter("geometry"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "areaEasing", { set: function(e4) {
      this.assertInitialized(), this._areaEasing = e4, this._altered.alter("areaEasing");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "areaDelays", { set: function(e4) {
      this.assertInitialized(), this._geometry.areaDelays(e4, this._layerIndex), this._altered.alter("geometry");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "areaDuration", { set: function(e4) {
      this.assertInitialized(), this._areaDuration = e4, this._altered.alter("areaDuration");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colors", { set: function(e4) {
      this.assertInitialized(), this._layerIndex > 0 || (e4[0] && this._geometry.colorsBegin(e4[0], void 0, 1), e4[1] && this._geometry.colorsEnd(e4[1], void 0, 1), this._altered.alter("geometry"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colorEasing", { set: function(e4) {
      this.assertInitialized(), this._colorEasing = e4, this._altered.alter("colorEasing");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colorDelays", { set: function(e4) {
      this.assertInitialized(), this._geometry.colorDelays(e4, this._layerIndex), this._altered.alter("geometry");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colorDuration", { set: function(e4) {
      this.assertInitialized(), this._colorDuration = e4, this._altered.alter("colorDuration");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "emphases", { set: function(e4) {
      this.assertInitialized(), this._layerIndex > 0 || (this._geometry.emphases = e4, this._altered.alter("emphases"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "heights", { set: function(e4) {
      this.assertInitialized(), e4[0] && this._geometry.heightsBegin(e4[0], this._layerIndex), e4[1] && this._geometry.heightsEnd(e4[1], this._layerIndex), this._altered.alter("geometry");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "heightEasing", { set: function(e4) {
      this.assertInitialized(), this._heightEasing = e4, this._altered.alter("heightEasing");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "heightDelays", { set: function(e4) {
      this.assertInitialized(), this._geometry.heightDelays(e4, this._layerIndex), this._altered.alter("geometry");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "heightDuration", { set: function(e4) {
      this.assertInitialized(), this._heightDuration = e4, this._altered.alter("heightDuration");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colorTable", { set: function(e4) {
      this.assertInitialized(), this._colorTable = e4, this._altered.alter("colorTable");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "nodeCount", { set: function(e4) {
      this.assertInitialized(), this._nodeCount !== e4 && (this._nodeCount = e4, this._altered.alter("nodeCount"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "outlineWidth", { set: function(e4) {
      this.assertInitialized(), this._outlineWidth !== e4 && (this._outlineWidth = e4 === void 0 ? t3.OUTLINE_WIDTH_DEFAULT : Math.max(0, e4), this._altered.alter("outlineWidth"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "emphasisOutlineWidth", { set: function(e4) {
      this.assertInitialized(), this._emphasisOutlineWidth !== e4 && (this._emphasisOutlineWidth = e4 === void 0 ? t3.EMPHASIS_OUTLINE_WIDTH_DEFAULT : Math.max(0, e4), this._altered.alter("emphasisOutlineWidth"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "heightScale", { set: function(e4) {
      this.assertInitialized(), this._heightScale !== e4 && (this._heightScale = e4 === void 0 ? 0 : s.gl_matrix_extensions.clamp(e4, 0, 1), this._altered.alter("heightScale"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "levitate", { set: function(e4) {
      this.assertInitialized(), this._levitate !== e4 && (this._levitate = e4 === void 0 ? 0 : Math.max(0, e4), this._altered.alter("levitate"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "attachment", { set: function(e4) {
      s.auxiliaries.logIf(e4 !== f2.MultiRenderTarget.Attachment.Undefined && !this._drawRestricted, s.auxiliaries.LogLevel.Debug, "expected WEBGL_draw_buffers to be unsupported"), this._attachment = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "depthMask", { set: function(e4) {
      this._depthMask = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colorMode", { get: function() {
      return this._colorMode;
    }, set: function(e4) {
      this._colorMode = e4, this._altered.alter("colorMode");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "patternMode", { get: function() {
      return this._patternMode;
    }, set: function(e4) {
      this._patternMode = e4, this._altered.alter("patternMode");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "progressMode", { get: function() {
      return this._progressMode;
    }, set: function(e4) {
      this._progressMode = e4, this._altered.alter("progressMode");
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "mousePosition", { set: function(e4) {
      this._mousePosition = e4;
    }, enumerable: false, configurable: true }), t3.GEOMETRY_BY_CONTEXT = /* @__PURE__ */ new Map(), t3.CUBOID_LAYERS = 2, t3.REFCOUNT_BY_GEOMETRY = /* @__PURE__ */ new Map(), t3.MINIMUM_CUBOID_HEIGHT = 4, t3.OUTLINE_WIDTH_DEFAULT = 0.8, t3.EMPHASIS_OUTLINE_WIDTH_DEFAULT = 1.6, o([u2.Initializable.assert_initialized()], t3.prototype, "relink", null), o([u2.Initializable.assert_initialized()], t3.prototype, "optimizeFaceSequence", null), o([u2.Initializable.initialize()], t3.prototype, "initialize", null), o([u2.Initializable.uninitialize()], t3.prototype, "uninitialize", null), o([u2.Initializable.assert_initialized()], t3.prototype, "update", null), o([u2.Initializable.assert_initialized()], t3.prototype, "frame", null), t3;
  }(u2.Initializable);
  t2.AnimatedCuboidRenderPass = h2, function(e3) {
    !function(e4) {
      e4[e4.Top = 1] = "Top", e4[e4.Bottom = 2] = "Bottom", e4[e4.Front = 3] = "Front", e4[e4.Back = 4] = "Back", e4[e4.Left = 5] = "Left", e4[e4.Right = 6] = "Right";
    }(e3.Face || (e3.Face = {}));
  }(a = t2.CuboidRenderPass || (t2.CuboidRenderPass = {}));
}, function(e2, t2, r2) {
  var i2, n2 = this && this.__extends || (i2 = function(e3, t3) {
    return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t4) {
      e4.__proto__ = t4;
    } || function(e4, t4) {
      for (var r3 in t4)
        Object.prototype.hasOwnProperty.call(t4, r3) && (e4[r3] = t4[r3]);
    })(e3, t3);
  }, function(e3, t3) {
    if (typeof t3 != "function" && t3 !== null)
      throw new TypeError("Class extends value " + String(t3) + " is not a constructor or null");
    function r3() {
      this.constructor = e3;
    }
    i2(e3, t3), e3.prototype = t3 === null ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
  }), o = this && this.__decorate || function(e3, t3, r3, i3) {
    var n3, o2 = arguments.length, a2 = o2 < 3 ? t3 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t3, r3) : i3;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
      a2 = Reflect.decorate(e3, t3, r3, i3);
    else
      for (var s2 = e3.length - 1; s2 >= 0; s2--)
        (n3 = e3[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t3, r3, a2) : n3(t3, r3)) || a2);
    return o2 > 3 && a2 && Object.defineProperty(t3, r3, a2), a2;
  };
  Object.defineProperty(t2, "__esModule", { value: true }), t2.AnimatedCuboidGeometry = void 0;
  var a = r2(0), s = r2(0), u2 = function(e3) {
    function t3(r3, i3, n3) {
      var o2 = e3.call(this, r3, n3) || this;
      o2._areaOffsets = new Array(), o2._areaDelayOffsets = new Array(), o2._colorOffsets = new Array(), o2._colorDelayOffsets = new Array(), o2._heightOffsets = new Array(), o2._heightDelayOffsets = new Array(), o2._layers = Math.max(1, i3), n3 = n3 !== void 0 && n3 !== "" ? n3 : "CuboidGeometry", o2._vertices = t3.referenceVerticesVBO(r3), o2._buffers.push(o2._vertices), o2._layout = new s.Buffer(r3, n3 + "LayoutVBO"), o2._buffers.push(o2._layout), o2._ids = new s.Buffer(r3, n3 + "IdVBO"), o2._buffers.push(o2._ids), o2._emphases = new s.Buffer(r3, n3 + "EmphasisVBO"), o2._buffers.push(o2._emphases), o2._areasBegin = new s.Buffer(r3, n3 + "AreaBeginVBO"), o2._buffers.push(o2._areasBegin), o2._areasEnd = new s.Buffer(r3, n3 + "AreaEndVBO"), o2._buffers.push(o2._areasEnd), o2._areaOffsets.length = i3, o2._areasDelay = new s.Buffer(r3, n3 + "AreaDelaysVBO"), o2._buffers.push(o2._areasDelay), o2._areaDelayOffsets.length = i3, o2._colorsBegin = new s.Buffer(r3, n3 + "ColorBeginVBO"), o2._buffers.push(o2._colorsBegin), o2._colorsEnd = new s.Buffer(r3, n3 + "ColorEndVBO"), o2._buffers.push(o2._colorsEnd), o2._colorOffsets.length = i3, o2._colorsDelay = new s.Buffer(r3, n3 + "ColorDelaysVBO"), o2._buffers.push(o2._colorsDelay), o2._colorDelayOffsets.length = i3, o2._heightsBegin = new s.Buffer(r3, n3 + "HeightBeginVBO"), o2._buffers.push(o2._heightsBegin), o2._heightsEnd = new s.Buffer(r3, n3 + "HeightEndVBO"), o2._buffers.push(o2._heightsEnd), o2._heightOffsets.length = i3, o2._heightsDelay = new s.Buffer(r3, n3 + "HeightDelaysVBO"), o2._buffers.push(o2._heightsDelay), o2._heightDelayOffsets.length = i3;
      for (var a2 = 0; a2 < i3; ++a2)
        o2._areaOffsets[a2] = 0, o2._colorOffsets[a2] = 0, o2._heightOffsets[a2] = 0;
      return o2;
    }
    return n2(t3, e3), t3.referenceVerticesVBO = function(e4) {
      var r3;
      t3.VERTICES_BY_CONTEXT.has(e4) ? r3 = t3.VERTICES_BY_CONTEXT.get(e4) : (r3 = new s.Buffer(e4, "CuboidVertexVBO"), t3.VERTICES_BY_CONTEXT.set(e4, r3), t3.REFCOUNT_BY_TEMPLATE.set(r3, 0));
      var i3 = t3.REFCOUNT_BY_TEMPLATE.get(r3) + 1;
      return t3.REFCOUNT_BY_TEMPLATE.set(r3, i3), r3;
    }, t3.unreferenceTemplateVBO = function(e4) {
      if (t3.VERTICES_BY_CONTEXT.has(e4)) {
        var r3 = t3.VERTICES_BY_CONTEXT.get(e4), i3 = t3.REFCOUNT_BY_TEMPLATE.get(r3) - 1;
        t3.REFCOUNT_BY_TEMPLATE.set(r3, i3), i3 > 0 || (r3.uninitialize(), t3.VERTICES_BY_CONTEXT.delete(e4), t3.REFCOUNT_BY_TEMPLATE.delete(r3));
      }
    }, t3.prototype.bindBuffers = function(e4) {
      var t4 = this.context.gl, r3 = this.context.gl2facade;
      this._vertices.attribEnable(this._vertexLocation, 3, t4.FLOAT, false, 24, 0, true, false), r3.vertexAttribDivisor(this._vertexLocation, 0), this._vertices.attribEnable(this._texCoordLocation, 3, t4.FLOAT, false, 24, 12, true, false), r3.vertexAttribDivisor(this._texCoordLocation, 0), this._layout.attribEnable(this._layoutLocation, 4, t4.FLOAT, false, 0, 0, true, false), r3.vertexAttribDivisor(this._layoutLocation, 1), this._ids.attribEnable(this._idLocation, 4, t4.UNSIGNED_BYTE, false, 0, 0, true, false), r3.vertexAttribDivisor(this._idLocation, 1), this._emphases.attribEnable(this._emphasisLocation, 1, t4.UNSIGNED_BYTE, false, 0, 0, true, false), r3.vertexAttribDivisor(this._emphasisLocation, 1), this._areasBegin.attribEnable(this._areaBeginLocation, 1, t4.UNSIGNED_BYTE, false, 0, 0, true, false), r3.vertexAttribDivisor(this._areaBeginLocation, 1), this._areasEnd.attribEnable(this._areaEndLocation, 1, t4.UNSIGNED_BYTE, false, 0, 0, true, false), r3.vertexAttribDivisor(this._areaEndLocation, 1), this._areasDelay.attribEnable(this._areaDelayLocation, 1, t4.FLOAT, false, 0, 0, true, false), r3.vertexAttribDivisor(this._areaDelayLocation, 1), this._colorsBegin.attribEnable(this._colorBeginLocation, 1, t4.UNSIGNED_BYTE, false, 0, 0, true, false), r3.vertexAttribDivisor(this._colorBeginLocation, 1), this._colorsEnd.attribEnable(this._colorEndLocation, 1, t4.UNSIGNED_BYTE, false, 0, 0, true, false), r3.vertexAttribDivisor(this._colorEndLocation, 1), this._colorsDelay.attribEnable(this._colorDelayLocation, 1, t4.FLOAT, false, 0, 0, true, false), r3.vertexAttribDivisor(this._colorDelayLocation, 1), this._heightsBegin.attribEnable(this._heightBeginLocation, 2, t4.UNSIGNED_BYTE, false, 0, 0, true, false), r3.vertexAttribDivisor(this._heightBeginLocation, 1), this._heightsEnd.attribEnable(this._heightEndLocation, 2, t4.UNSIGNED_BYTE, false, 0, 0, true, false), r3.vertexAttribDivisor(this._heightEndLocation, 1), this._heightsDelay.attribEnable(this._heightDelayLocation, 1, t4.FLOAT, false, 0, 0, true, false), r3.vertexAttribDivisor(this._heightDelayLocation, 1);
    }, t3.prototype.unbindBuffers = function(e4) {
      this._vertices.attribDisable(this._vertexLocation, false, false), this._vertices.attribDisable(this._texCoordLocation, false, false), this._layout.attribDisable(this._layoutLocation, false, false), this._ids.attribDisable(this._idLocation, false, false), this._emphases.attribDisable(this._emphasisLocation, false, false), this._areasBegin.attribDisable(this._areaBeginLocation, false, false), this._areasEnd.attribDisable(this._areaEndLocation, false, false), this._areasDelay.attribDisable(this._areaDelayLocation, false, false), this._colorsBegin.attribDisable(this._colorBeginLocation, false, false), this._colorsEnd.attribDisable(this._colorEndLocation, false, false), this._colorsDelay.attribDisable(this._colorDelayLocation, false, false), this._heightsBegin.attribDisable(this._heightBeginLocation, false, false), this._heightsEnd.attribDisable(this._heightEndLocation, false, false), this._heightsDelay.attribDisable(this._heightDelayLocation, false, false);
    }, t3.prototype.initialize = function(r3, i3, n3, o2, a2, s2, u3, c2, l2, f2, h2, d2, p2, _2) {
      r3 === void 0 && (r3 = 0), i3 === void 0 && (i3 = 1), n3 === void 0 && (n3 = 2), o2 === void 0 && (o2 = 3), a2 === void 0 && (a2 = 4), s2 === void 0 && (s2 = 5), u3 === void 0 && (u3 = 6), c2 === void 0 && (c2 = 7), l2 === void 0 && (l2 = 8), f2 === void 0 && (f2 = 9), h2 === void 0 && (h2 = 10), d2 === void 0 && (d2 = 11), p2 === void 0 && (p2 = 12), _2 === void 0 && (_2 = 13), this._vertexLocation = r3, this._texCoordLocation = i3, this._idLocation = o2, this._layoutLocation = n3, this._emphasisLocation = a2, this._areaBeginLocation = s2, this._areaEndLocation = u3, this._areaDelayLocation = c2, this._colorBeginLocation = l2, this._colorEndLocation = f2, this._colorDelayLocation = h2, this._heightBeginLocation = d2, this._heightEndLocation = p2, this._heightDelayLocation = _2;
      var g2 = this.context.gl, m2 = e3.prototype.initialize.call(this, [g2.ARRAY_BUFFER, g2.ARRAY_BUFFER, g2.ARRAY_BUFFER, g2.ARRAY_BUFFER, g2.ARRAY_BUFFER, g2.ARRAY_BUFFER, g2.ARRAY_BUFFER, g2.ARRAY_BUFFER, g2.ARRAY_BUFFER, g2.ARRAY_BUFFER, g2.ARRAY_BUFFER, g2.ARRAY_BUFFER, g2.ARRAY_BUFFER, g2.ARRAY_BUFFER]);
      return this._vertices.data(t3.DATA, g2.STATIC_DRAW), m2 && this._vertices.valid;
    }, t3.prototype.uninitialize = function() {
      t3.unreferenceTemplateVBO(this.context), this._layout.uninitialize(), this._ids.uninitialize(), this._emphases.uninitialize(), this._areasBegin.uninitialize(), this._areasEnd.uninitialize(), this._colorsBegin.uninitialize(), this._colorsEnd.uninitialize(), this._heightsBegin.uninitialize(), this._heightsEnd.uninitialize(), e3.prototype.uninitialize.call(this);
    }, t3.prototype.update = function() {
      this.bind();
    }, t3.prototype.draw = function(e4, t4, r3, i3, n3, o2, a2) {
      e4 === void 0 && (e4 = 0), t4 === void 0 && (t4 = 0), r3 === void 0 && (r3 = 0), i3 === void 0 && (i3 = 0), n3 === void 0 && (n3 = false), o2 === void 0 && (o2 = false), a2 === void 0 && (a2 = false);
      var s2 = this.context.gl, u3 = this.context.gl2facade, c2 = n3 ? this._areaEndLocation : this._areaBeginLocation, l2 = n3 ? this._areaBeginLocation : this._areaEndLocation, f2 = o2 ? this._heightEndLocation : this._heightBeginLocation, h2 = o2 ? this._heightBeginLocation : this._heightEndLocation, d2 = a2 ? this._colorEndLocation : this._colorBeginLocation, p2 = a2 ? this._colorBeginLocation : this._colorEndLocation;
      this._vertices.attribEnable(this._vertexLocation, 3, s2.FLOAT, false, 24, r3, true, false), this._vertices.attribEnable(this._texCoordLocation, 3, s2.FLOAT, false, 24, 12 + r3, true, false), this._ids.attribEnable(this._idLocation, 4, s2.UNSIGNED_BYTE, false, 4, 4 * t4, true, false), this._layout.attribEnable(this._layoutLocation, 4, s2.FLOAT, false, 16, 16 * t4, true, false), this._emphases.attribEnable(this._emphasisLocation, 1, s2.UNSIGNED_BYTE, false, 1, 1 * t4, true, false), this._areasBegin.bytes > 0 ? (this._areasBegin.attribEnable(c2, 1, s2.UNSIGNED_BYTE, false, 1, 1 * t4 + this._areaOffsets[e4], true, false), this._areasEnd.attribEnable(l2, 1, s2.UNSIGNED_BYTE, false, 1, 1 * t4 + this._areaOffsets[e4], true, false), this._areasDelay.attribEnable(this._areaDelayLocation, 1, s2.FLOAT, false, 4, 4 * t4 + this._areaDelayOffsets[e4], true, false)) : (this._areasBegin.attribDisable(c2, true, false), s2.vertexAttrib1f(c2, 255), this._areasEnd.attribDisable(l2, true, false), s2.vertexAttrib1f(l2, 255)), this._colorsBegin.bytes > 0 ? (this._colorsBegin.attribEnable(d2, 1, s2.UNSIGNED_BYTE, false, 1, 1 * t4 + this._colorOffsets[e4], true, false), this._colorsEnd.attribEnable(p2, 1, s2.UNSIGNED_BYTE, false, 1, 1 * t4 + this._colorOffsets[e4], true, false), this._colorsDelay.attribEnable(this._colorDelayLocation, 1, s2.FLOAT, false, 4, 4 * t4 + this._colorDelayOffsets[e4], true, false)) : (this._colorsBegin.attribDisable(d2, true, false), this._colorsEnd.attribDisable(p2, true, false)), this._heightsBegin.bytes > 0 ? (this._heightsBegin.attribEnable(f2, 2, s2.UNSIGNED_BYTE, false, 2, 2 * t4 + this._heightOffsets[e4], true, false), this._heightsEnd.attribEnable(h2, 2, s2.UNSIGNED_BYTE, false, 2, 2 * t4 + this._heightOffsets[e4], true, false), this._heightsDelay.attribEnable(this._heightDelayLocation, 1, s2.FLOAT, false, 4, 4 * t4 + this._heightDelayOffsets[e4], true, false)) : (this._heightsBegin.attribDisable(f2, true, false), this._heightsEnd.attribDisable(h2, true, false)), u3.drawArraysInstanced(s2.TRIANGLE_STRIP, 0, 4, i3);
    }, Object.defineProperty(t3.prototype, "layout", { set: function(e4) {
      this._layout.data(e4, this.context.gl.STATIC_DRAW);
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "ids", { set: function(e4) {
      this._ids.data(e4, this.context.gl.STATIC_DRAW);
    }, enumerable: false, configurable: true }), t3.prototype.areasBegin = function(e4, t4, r3) {
      a.auxiliaries.assert(t4 === void 0 || t4 >= 0 && t4 <= this._layers, "expected layers to be within [0, " + this._layers + "], given " + t4), a.auxiliaries.assert(r3 === void 0 || r3 <= this._layers, "expected layers to be within [0, " + this._layers + "], given " + t4);
      var i3 = this.context.gl, n3 = e4.byteLength * (r3 || this._layers);
      this._areasBegin.bytes !== 0 && this._areasBegin.bytes === n3 || t4 === void 0 || this._areasBegin.data(n3, i3.STATIC_DRAW), t4 !== void 0 ? (this._areasBegin.subData(e4.byteLength * t4, e4), this._areaOffsets[t4] = e4.byteLength * t4) : this._areasBegin.data(e4, this.context.gl.STATIC_DRAW);
    }, t3.prototype.areasEnd = function(e4, t4, r3) {
      a.auxiliaries.assert(t4 === void 0 || t4 >= 0 && t4 <= this._layers, "expected layers to be within [0, " + this._layers + "], given " + t4), a.auxiliaries.assert(r3 === void 0 || r3 <= this._layers, "expected layers to be within [0, " + this._layers + "], given " + t4);
      var i3 = this.context.gl, n3 = e4.byteLength * (r3 || this._layers);
      this._areasEnd.bytes !== 0 && this._areasEnd.bytes === n3 || t4 === void 0 || this._areasEnd.data(n3, i3.STATIC_DRAW), t4 !== void 0 ? (this._areasEnd.subData(e4.byteLength * t4, e4), this._areaOffsets[t4] = e4.byteLength * t4) : this._areasEnd.data(e4, this.context.gl.STATIC_DRAW);
    }, t3.prototype.areaDelays = function(e4, t4) {
      a.auxiliaries.assert(t4 === void 0 || t4 >= 0 && t4 <= this._layers, "expected layers to be within [0, " + this._layers + "], given " + t4);
      var r3 = this.context.gl, i3 = e4.byteLength * this._layers;
      this._areasDelay.bytes !== 0 && this._areasDelay.bytes === i3 || t4 === void 0 || this._areasDelay.data(i3, r3.STATIC_DRAW), t4 !== void 0 ? (this._areasDelay.subData(e4.byteLength * t4, e4), this._areaDelayOffsets[t4] = e4.byteLength * t4) : this._areasDelay.data(e4, this.context.gl.STATIC_DRAW);
    }, t3.prototype.colorsBegin = function(e4, t4, r3) {
      a.auxiliaries.assert(t4 === void 0 || t4 >= 0 && t4 <= this._layers, "expected layers to be within [0, " + this._layers + "], given " + t4), a.auxiliaries.assert(r3 === void 0 || r3 <= this._layers, "expected layers to be within [0, " + this._layers + "], given " + t4);
      var i3 = this.context.gl, n3 = e4.byteLength * (r3 || this._layers);
      this._colorsBegin.bytes !== 0 && this._colorsBegin.bytes === n3 || t4 === void 0 || this._colorsBegin.data(n3, i3.STATIC_DRAW), t4 !== void 0 ? (this._colorsBegin.subData(e4.byteLength * t4, e4), this._colorOffsets[t4] = e4.byteLength * t4) : this._colorsBegin.data(e4, this.context.gl.STATIC_DRAW);
    }, t3.prototype.colorsEnd = function(e4, t4, r3) {
      a.auxiliaries.assert(t4 === void 0 || t4 >= 0 && t4 <= this._layers, "expected layers to be within [0, " + this._layers + "], given " + t4), a.auxiliaries.assert(r3 === void 0 || r3 <= this._layers, "expected layers to be within [0, " + this._layers + "], given " + t4);
      var i3 = this.context.gl, n3 = e4.byteLength * (r3 || this._layers);
      this._colorsEnd.bytes !== 0 && this._colorsEnd.bytes === n3 || t4 === void 0 || this._colorsEnd.data(n3, i3.STATIC_DRAW), t4 !== void 0 ? (this._colorsEnd.subData(e4.byteLength * t4, e4), this._colorOffsets[t4] = e4.byteLength * t4) : this._colorsEnd.data(e4, this.context.gl.STATIC_DRAW);
    }, t3.prototype.colorDelays = function(e4, t4) {
      a.auxiliaries.assert(t4 === void 0 || t4 >= 0 && t4 <= this._layers, "expected layers to be within [0, " + this._layers + "], given " + t4);
      var r3 = this.context.gl, i3 = e4.byteLength * this._layers;
      this._colorsDelay.bytes !== 0 && this._colorsDelay.bytes === i3 || t4 === void 0 || this._colorsDelay.data(i3, r3.STATIC_DRAW), t4 !== void 0 ? (this._colorsDelay.subData(e4.byteLength * t4, e4), this._colorDelayOffsets[t4] = e4.byteLength * t4) : this._colorsDelay.data(e4, this.context.gl.STATIC_DRAW);
    }, Object.defineProperty(t3.prototype, "emphases", { set: function(e4) {
      this._emphases.data(e4, this.context.gl.STATIC_DRAW);
    }, enumerable: false, configurable: true }), t3.prototype.heightsBegin = function(e4, t4) {
      a.auxiliaries.assert(t4 === void 0 || t4 >= 0 && t4 <= this._layers, "expected layers to be within [0, " + this._layers + "], given " + t4);
      var r3 = this.context.gl, i3 = e4.byteLength * this._layers;
      this._heightsBegin.bytes !== 0 && this._heightsBegin.bytes === i3 || t4 === void 0 || this._heightsBegin.data(i3, r3.STATIC_DRAW), t4 !== void 0 ? (this._heightsBegin.subData(e4.byteLength * t4, e4), this._heightOffsets[t4] = e4.byteLength * t4) : this._heightsBegin.data(e4, this.context.gl.STATIC_DRAW);
    }, t3.prototype.heightsEnd = function(e4, t4) {
      a.auxiliaries.assert(t4 === void 0 || t4 >= 0 && t4 <= this._layers, "expected layers to be within [0, " + this._layers + "], given " + t4);
      var r3 = this.context.gl, i3 = e4.byteLength * this._layers;
      this._heightsEnd.bytes !== 0 && this._heightsEnd.bytes === i3 || t4 === void 0 || this._heightsEnd.data(i3, r3.STATIC_DRAW), t4 !== void 0 ? (this._heightsEnd.subData(e4.byteLength * t4, e4), this._heightOffsets[t4] = e4.byteLength * t4) : this._heightsEnd.data(e4, this.context.gl.STATIC_DRAW);
    }, t3.prototype.heightDelays = function(e4, t4) {
      a.auxiliaries.assert(t4 === void 0 || t4 >= 0 && t4 <= this._layers, "expected layers to be within [0, " + this._layers + "], given " + t4);
      var r3 = this.context.gl, i3 = e4.byteLength * this._layers;
      this._heightsDelay.bytes !== 0 && this._heightsDelay.bytes === i3 || t4 === void 0 || this._heightsDelay.data(i3, r3.STATIC_DRAW), t4 !== void 0 ? (this._heightsDelay.subData(e4.byteLength * t4, e4), this._heightDelayOffsets[t4] = e4.byteLength * t4) : this._heightsDelay.data(e4, this.context.gl.STATIC_DRAW);
    }, Object.defineProperty(t3.prototype, "layers", { get: function() {
      return this._layers;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "valid", { get: function() {
      var e4 = this._layout && this._layout.valid, t4 = this._ids && this._ids.valid, r3 = this._areasBegin && this._areasBegin.valid, i3 = this._areasEnd && this._areasEnd.valid, n3 = this._areasDelay && this._areasDelay.valid, o2 = this._colorsBegin && this._colorsBegin.valid, a2 = this._colorsEnd && this._colorsEnd.valid, s2 = this._colorsDelay && this._colorsDelay.valid, u3 = this._emphases && this._emphases.valid, c2 = this._heightsBegin && this._heightsBegin.valid, l2 = this._heightsEnd && this._heightsEnd.valid, f2 = this._heightsDelay && this._heightsDelay.valid;
      return this.initialized && this._vertices.valid && e4 && t4 && r3 && i3 && n3 && o2 && a2 && s2 && u3 && c2 && l2 && f2;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "vertexLocation", { get: function() {
      return this._vertexLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "texCoordLocation", { get: function() {
      return this._texCoordLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "layoutLocation", { get: function() {
      return this._layoutLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "idLocation", { get: function() {
      return this._idLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "emphasisLocation", { get: function() {
      return this._emphasisLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "areaBeginLocation", { get: function() {
      return this._areaBeginLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "areaEndLocation", { get: function() {
      return this._areaEndLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "areaDelayLocation", { get: function() {
      return this._areaDelayLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colorBeginLocation", { get: function() {
      return this._colorBeginLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colorEndLocation", { get: function() {
      return this._colorEndLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colorDelayLocation", { get: function() {
      return this._colorDelayLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "heightBeginLocation", { get: function() {
      return this._heightBeginLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "heightEndLocation", { get: function() {
      return this._heightEndLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "heightDelayLocation", { get: function() {
      return this._heightDelayLocation;
    }, enumerable: false, configurable: true }), t3.VERTICES_BY_CONTEXT = /* @__PURE__ */ new Map(), t3.REFCOUNT_BY_TEMPLATE = /* @__PURE__ */ new Map(), t3.DATA = new Float32Array([0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1]), t3.BYTES_PER_VERTEX = t3.DATA.length / 6, o([s.Initializable.assert_initialized()], t3.prototype, "draw", null), t3;
  }(s.Geometry);
  t2.AnimatedCuboidGeometry = u2;
}, function(e2, t2) {
  e2.exports = `//*****************************************************************************
// seerene(tm) - A framework for analyzing and visualizing complex software systems.
// Copyright (C) 2005 - 2019 for all source codes:
// seerene(tm) GmbH, Potsdam, Germany
//*****************************************************************************

#if __VERSION__ == 100
    #extension GL_EXT_draw_buffers : enable
#endif

precision highp float;
precision lowp int;


// @todo this file will be included from webgl-operate soon

#if __VERSION__ == 100
#else 
    #define varying out
#endif


// @todo this file will be included from webgl-operate soon

void ndcOffset(inout vec4 vertex, in vec2 offset) {
    vertex.xy = offset * vec2(vertex.w) + vertex.xy;
}



#if __VERSION__ == 100

attribute vec3  a_vertex;
attribute vec3  a_texCoord;
attribute vec4  a_layout; /* [ position: vec2, extent: vec2 ] */
attribute vec4  a_id; /* encoded uint32 id in byte4 */
attribute float a_emphasis;
attribute float a_areaBegin;
attribute float a_areaEnd;
attribute float a_areaDelay;
attribute float a_colorBegin;
attribute float a_colorEnd;
attribute float a_colorDelay;
attribute vec2  a_heightsBegin; /* [ bottom: float, top: float ] */
attribute vec2  a_heightsEnd; /* [ bottom: float, top: float ] */
attribute float a_heightDelay;

#else

/* Note: do not use layout location specifier, since they take precedence over CPU managed locations. */
in vec3  a_vertex;
in vec3  a_texCoord;
in vec4  a_layout; /* [ position: vec2, extent: vec2 ] */
in vec4  a_id; /* encoded uint32 id in byte4 */
in float a_emphasis; /* [ bottom: float, top: float ] */
in float a_areaBegin;
in float a_areaEnd;
in float a_areaDelay;
in float a_colorBegin;
in float a_colorEnd;
in float a_colorDelay;
in vec2  a_heightsBegin; /* [ bottom: float, top: float ] */
in vec2  a_heightsEnd;
in float a_heightDelay;

#endif


uniform mat4 u_viewProjection;
uniform vec2 u_ndcOffset;

uniform vec4 u_colorTable[$ColorTableLength];

uniform int u_layer;
uniform int u_face;

uniform vec4 u_normalAndLambert;

uniform float u_heightScale;
uniform vec2 u_floatingGap; /* [ target gap size, minimum remaining cuboid size ] */
uniform float u_outlineWidth;
uniform float u_emphasisOutlineWidth;

uniform float u_time;
uniform float u_areaDuration;
uniform float u_heightDuration;
uniform float u_colorDuration;
uniform int u_areaEasing;
uniform int u_heightEasing;
uniform int u_colorEasing;
uniform int u_progressMode;
uniform ivec2 u_screenSize;
uniform ivec2 u_mousePosition;
uniform int u_patternMode;


varying vec4 v_baseColorBegin;
varying vec4 v_baseColorEnd;
varying vec4 v_outlineColorBegin;
varying vec4 v_outlineColorEnd;
varying vec4 v_patternColorBegin;
varying vec4 v_patternColorEnd;

varying vec4 v_id;

varying vec3 v_uv;
varying vec2 v_texCoord2D;
varying vec3 v_texCoord3D;
varying vec4 v_worldPos;

varying float v_relativeHeight;
#if __VERSION__ == 100
varying float v_absoluteHeight;
varying float v_colorProgress;
varying vec2 v_direction;
varying float v_usePattern;
#else
flat varying float v_absoluteHeight;
flat varying float v_colorProgress;
flat varying vec2 v_direction;
flat varying float v_usePattern;
#endif


const float ONE_OVER_255 = 1.0 / 255.0;
const int FACE_INDEX_TOP = 1; /* see CuboidRenderPass.FaceIndex.Top */

const vec3 AMBIENT = vec3(0.0, 0.0, 0.0); /* @todo expose to API */
const float OUTLINE_LAMBERT_SCALE = 0.88; /* @todo expose to API */

const int EMPHASIS_COLOR_INDEX = 0;

const int POSITIVE_COLOR_INDEX = 1;
const int NEGATIVE_COLOR_INDEX = 2;

const float PROGRESS_WIDTH = 0.2;


float ease(in float progress, in int easing)
{
    if (easing == 0) return progress;
    if (easing == 1) return smoothstep(0.0, 1.0, progress);

    return 0.0;
}

vec4 calculateOutlineColor(in vec4 baseColor, in vec4 emphasisColor)
{
    vec4 outlineColor;
    outlineColor.rgb = mix(baseColor.rgb, emphasisColor.rgb, step(1.0, a_emphasis));

    /* The default outline (emphasis = 0.0) should be a little bit darker, when in outline mode (emphasis = 1.0) the
    outline should remain unchanged (except for face lambda), and when highlighting (emphasis = 2.0) the outline is
    lightened a little bit (invere darkening lambda). The mix is utilized to create this. */
    outlineColor.rgb *= mix(OUTLINE_LAMBERT_SCALE, (1.0 / OUTLINE_LAMBERT_SCALE), a_emphasis * 0.5);

    /* The outline should be darkened based on the face orientation. */
    outlineColor.rgb = mix(AMBIENT, outlineColor.rgb, u_normalAndLambert[3]);
    /* The outline width is encoded within the alpha channel of the outline (special if emphasized). */
    outlineColor[3] = mix(u_emphasisOutlineWidth, u_outlineWidth, step(0.5, abs(a_emphasis - 1.0)));

    return outlineColor;
}

float calculateProgress(in float timeProgress, in vec2 worldSpacePos, in mat4 viewProjection, in int progressMode)
{
    if (progressMode == 0)
    {
        return timeProgress;
    }
    if (progressMode == 1)
    {
        float progress = timeProgress * (1.0 + 2.0 * PROGRESS_WIDTH) - PROGRESS_WIDTH;
        progress = 1.0 - smoothstep(progress - PROGRESS_WIDTH, progress + PROGRESS_WIDTH, worldSpacePos.x * 0.5 + 0.5);

        return progress;
    }
    else if (progressMode == 2)
    {
        vec4 screenSpace = u_viewProjection * vec4(worldSpacePos.x, 0.0, worldSpacePos.y, 1.0);
        screenSpace = screenSpace / screenSpace.w * 0.5 + vec4(0.5);

        vec2 progress = vec2(u_mousePosition) / vec2(u_screenSize) * (1.0 + 2.0 * PROGRESS_WIDTH) - PROGRESS_WIDTH;
        progress = vec2(1.0) - smoothstep(progress - vec2(PROGRESS_WIDTH), progress + vec2(PROGRESS_WIDTH), screenSpace.xy);

        return progress.x;
    }

    return 0.0;
}

vec2 calculate2DTexCoords(in vec3 texCoords3D, in int face)
{
    if (face == 1 || face == 2)
    {
        return texCoords3D.xz;
    }
    if (face == 3)
    {
        return texCoords3D.xy;
    }
    if (face == 4)
    {
        return vec2(1.0 - texCoords3D.x, texCoords3D.y);
    }
    if (face == 5)
    {
        return vec2(1.0 - texCoords3D.z, texCoords3D.y);
    }
    if (face == 6)
    {
        return texCoords3D.zy;
    }

    return vec2(0.0);
}


/**
 * Transforms the cuboid vertices based on the associated face and height mapping. An earlier implementation of this
 * used the same geometry template and transformed it to either orientation. The current implementation uses a pre-set
 * vertex sequence/orientation and has to adjust the height only.
 * Appart from that, each cuboid face is moved to its position and adjusted to the provided height values. ID, color,
 * and extent along the y-axis are encoded per vertex (or even per face/cuboid) to reduce per-fragment processing.
 */
void main(void)
{
    /* Assuming that cuboids of no relevant height mapping should still be visible on top of their parent nodes, zero-
       height nodes are rendered when associated to the first cuboid layer. Note that this might be unwanted behavior,
       e.g., when multiple layers are used and the top-most layer, even if the height is zero, a relevant color mapping
       might be stacked over all other cuboids of lower layers. */
    if (u_layer > 0 &&
        a_heightsBegin[1] - a_heightsBegin[0] == 0.0 &&
        a_heightsEnd[1] - a_heightsEnd[0] == 0.0)
    {
        return;
    }

    /* Calculate the animations progress. */
    float areaScaleProgress = (u_time - a_areaDelay) / u_areaDuration;
    areaScaleProgress = calculateProgress(areaScaleProgress, a_layout.xy, u_viewProjection, u_progressMode);
    float heightProgress = (u_time - a_heightDelay) / u_heightDuration;
    heightProgress = calculateProgress(heightProgress, a_layout.xy, u_viewProjection, u_progressMode);
    float colorProgress = (u_time - a_colorDelay) / u_colorDuration;
    colorProgress = calculateProgress(colorProgress, a_layout.xy, u_viewProjection, u_progressMode);

    areaScaleProgress = ease(clamp(areaScaleProgress, 0.0, 1.0), u_areaEasing);
    heightProgress = ease(clamp(heightProgress, 0.0, 1.0), u_heightEasing);
    v_colorProgress = ease(clamp(colorProgress, 0.0, 1.0), u_colorEasing);

    /* Interpolate the height depending on the progress */
    vec2 rawHeights = mix(a_heightsBegin, a_heightsEnd, heightProgress);
    float height = (rawHeights[1] - rawHeights[0]) * u_heightScale;

    /* Compute the position and extend of the cuboid based on the face. */
    vec4 pos = vec4(a_layout[0], u_face == FACE_INDEX_TOP ?
        rawHeights[1] * u_heightScale : rawHeights[0] * u_heightScale, a_layout[1], 0.0);
    vec4 ext = vec4(a_layout[2], height, a_layout[3], 1.0);

    /* Area scaling */
    float areaScale = mix(a_areaBegin, a_areaEnd, areaScaleProgress);
    float shrinkage = 1.0 - areaScale * ONE_OVER_255;
    pos.x += ext.x * shrinkage * 0.5;
    pos.z += ext.z * shrinkage * 0.5;
    ext.x -= ext.x * shrinkage;
    ext.z -= ext.z * shrinkage;

    v_relativeHeight = u_face == FACE_INDEX_TOP ? 1.0 : a_vertex.y;
    v_absoluteHeight = height;

    /* Compute the final vertex position and pass through texture coordinates and layout data. */
    vec4 vertex = vec4(a_vertex, 1.0) * ext + pos;

    /* Calculate 2D and 3D texture coordinates. */
    v_texCoord2D = calculate2DTexCoords(a_texCoord, u_face);
    v_texCoord3D = a_texCoord;
    v_worldPos.xy = vertex.xz * vec2(0.5) + vec2(0.5);
    v_worldPos.zw = pos.xz;
    v_id = a_id * ONE_OVER_255;

    /* "Interpolate" the color indices. Since we don't want to interpolate the color and instead use
       different techniques to show the progress we just take the color start and end */
    float colorIndexBegin = abs(a_colorBegin - 32.0);
    float colorIndexEnd = abs(a_colorEnd - 32.0);
    float colorIndexDiff = colorIndexEnd - colorIndexBegin;

    v_direction = vec2(sign(a_heightsEnd.y - a_heightsBegin.y), sign(colorIndexDiff));

    float gap = 0.0;
    /* Only if floating cuboids enabled, vertices of lower part of lateral faces, and not for first layer. */
    if(u_floatingGap[0] > 0.0 && u_layer > 0 && a_vertex.y == 0.0 && u_face > 2) {

        /* Compute screen space position for incoming vertex and an offseted one. */
        vec4 pos0 = u_viewProjection * vertex;
        vec4 pos1 = u_viewProjection * vec4(vertex.x, vertex.y + ext.y, vertex.z, vertex.w);
        /* Vector pointing from pos1 to pos0 in NDC. */
        vec3 pos0_dash = (pos1.xyz / pos1.w) - (pos0.xyz / pos0.w);
        /* Length of pos0' in NDC is the basis for gap scale. */
        gap = u_floatingGap[0] / length(pos0_dash);
        vertex = mix(pos0, pos1, min(1.0 - u_floatingGap[1] / length(pos0_dash), gap));

    } else {
        vertex = u_viewProjection * vertex;
    }

    /* The y-extent provides world-space height of the cuboid that can be used for fragment-processing. */
    v_uv[0] = (v_texCoord2D.x - 0.5);
    v_uv[1] = height / mix(a_layout[2], a_layout[3], step(5.0, float(u_face)));
    /* Compute color and direction of arrow pattern for fragment processing. Also account for the
       levitation gap, so the arrow pattern does not squish or stretch. */
    v_uv[1] *= (1.0 - v_texCoord3D.y) * (1.0 - gap);
    v_uv[2] = v_uv[1];

    if(v_direction[1] > 0.0) {
        v_uv[2] = (1.0 - v_uv[2]);
    }

    v_usePattern = abs(colorIndexDiff);

    if (u_layer > 0)
    {
        v_baseColorBegin = mix(u_colorTable[NEGATIVE_COLOR_INDEX], u_colorTable[POSITIVE_COLOR_INDEX], sign(a_colorBegin - 32.0) * 0.5 + 0.5);
        v_baseColorEnd = mix(u_colorTable[NEGATIVE_COLOR_INDEX], u_colorTable[POSITIVE_COLOR_INDEX], sign(a_colorEnd - 32.0) * 0.5 + 0.5);
    }
    else
    {
        v_baseColorBegin = u_colorTable[int(colorIndexBegin)];
        v_baseColorEnd = u_colorTable[int(colorIndexEnd)];
    }

    /* Calculate the various colors we need for coloration. */
    vec4 emphasisColor = u_colorTable[EMPHASIS_COLOR_INDEX];

    v_baseColorBegin = mix(v_baseColorBegin, emphasisColor, step(2.0, a_emphasis));
    v_baseColorEnd = mix(v_baseColorEnd, emphasisColor, step(2.0, a_emphasis));

    v_outlineColorBegin = calculateOutlineColor(v_baseColorBegin, emphasisColor);
    v_outlineColorEnd = calculateOutlineColor(v_baseColorEnd, emphasisColor);

    v_patternColorBegin = vec4(v_baseColorBegin.rgb, 1.0);
    v_patternColorBegin.rgb *= mix(OUTLINE_LAMBERT_SCALE, (1.0 / OUTLINE_LAMBERT_SCALE), 0.5);
    v_patternColorBegin.rgb = mix(AMBIENT, v_patternColorBegin.rgb, u_normalAndLambert[3]);
    v_patternColorBegin.rgb *= mix(OUTLINE_LAMBERT_SCALE, 1.0, 0.5);

    v_patternColorEnd = vec4(v_outlineColorEnd.rgb, 1.0);
    v_patternColorEnd.rgb *= mix(OUTLINE_LAMBERT_SCALE, 1.0, a_emphasis * 0.5);

    v_baseColorBegin = mix(vec4(AMBIENT, 1.0), v_baseColorBegin, u_normalAndLambert[3]);
    v_baseColorEnd = mix(vec4(AMBIENT, 1.0), v_baseColorEnd, u_normalAndLambert[3]);

    ndcOffset(vertex, u_ndcOffset);
    gl_Position = vertex;
}
`;
}, function(e2, t2) {
  e2.exports = "//*****************************************************************************\n// seerene(tm) - A framework for analyzing and visualizing complex software systems.\n// Copyright (C) 2005 - 2019 for all source codes:\n// seerene(tm) GmbH, Potsdam, Germany\n//*****************************************************************************\n\nprecision highp float;\nprecision lowp int;\n\n#if __VERSION__ == 100\n\n    #ifdef GL_EXT_draw_buffers\n        #extension GL_EXT_draw_buffers : enable\n        #define fragColor gl_FragData[0].rgba\n        #define fragId gl_FragData[1].xyzw\n    #else\n        #define DRAW_RESTRICTED\n        #define fragColor gl_FragColor.rgba\n        #define fragId gl_FragColor.xyzw\n        #define fragDepth gl_FragColor.xyz\n    #endif\n\n    #ifdef GL_OES_standard_derivatives\n        #extension GL_OES_standard_derivatives : enable\n        #define ANTIALIASED_CONTOUR\n    #endif\n\n#else\n    layout(location = 0) out vec4 fragColor;\n    layout(location = 1) out vec4 fragId;\n#endif\n\n\n// @todo this file will be included from webgl-operate soon\n\n#if __VERSION__ == 100\n    #define texture(sampler, coord) texture2D(sampler, coord)\n#else\n    #define varying in\n#endif\n\n\n\nuniform int u_face;\nuniform int u_layer;\nuniform int u_colorMode;\nuniform int u_patternMode;\nuniform int u_progressMode;\nuniform float u_nodeCountSqrt;\n\nuniform sampler2D u_ditheringTexture;\n\n#ifdef DRAW_RESTRICTED\n    \n// @todo this file will be included from webgl-operate soon\n\nconst float one255ths = 1.0 / 255.0;\n\nvec3 float24x1_to_uint8x3(const in float f) {\n    vec3 uint8x3 = vec3(f, fract(f * 256.0), fract(f * 65536.0));\n    return floor(uint8x3 * 256.0) * one255ths;\n}\n\nvec4 float24x1_to_uint8x4(const in float f) {\n    vec4 uint8x4 = vec4(f, fract(f * 256.0), fract(f * 65536.0), fract(f * 16777216.0));\n    return floor(uint8x4 * 256.0) * one255ths;\n}\n\nconst vec3 premultUint8x3 = vec3(255.0 / 256.0, 255.0 / 65536.0, 255.0 / 16777216.0);\nfloat uint8x3_to_float24x1(const in vec3 v) {\n    return dot(v, premultUint8x3); // a1 * b1 + a2 * b2 + a3 * b3  ;)\n}\n\nconst vec4 premultUint8x4 = vec4(255.0 / 256.0, 255.0 / 65536.0, 255.0 / 16777216.0, 255.0 / 4294967296.0);\nfloat uint8x4_to_float24x1(const in vec4 v) {\n    return dot(v, premultUint8x4); // a1 * b1 + a2 * b2 + a3 * b3 + a4 * b4  ;)\n}\n\n    uniform int u_attachment;\n#endif\n\n\nvarying vec4 v_baseColorBegin;\nvarying vec4 v_baseColorEnd;\nvarying vec4 v_outlineColorBegin;\nvarying vec4 v_outlineColorEnd;\nvarying vec4 v_patternColorBegin;\nvarying vec4 v_patternColorEnd;\n\nvarying vec4 v_id;\n\nvarying vec3 v_uv;\nvarying vec2 v_texCoord2D;\nvarying vec3 v_texCoord3D;\nvarying vec4 v_worldPos;\n\nvarying float v_relativeHeight;\n#if __VERSION__ == 100\nvarying float v_absoluteHeight;\nvarying float v_colorProgress;\nvarying vec2 v_direction;\nvarying float v_usePattern;\n#else\nflat varying float v_absoluteHeight;\nflat varying float v_colorProgress;\nflat varying vec2 v_direction;\nflat varying float v_usePattern;\n#endif\n\nstruct PatternConfig\n{\n    int mode;\n    float progress;\n    float inverse;\n};\n\nstruct PatternData\n{\n    int face;\n    float nodeCountSqrt;\n\n    vec2 texCoord2D;\n    vec3 texCoord3D;\n    vec3 uv;\n    vec4 worldPos;\n\n    float relativeHeight;\n    float absoluteHeight;\n};\n\n// taken from https://www.shadertoy.com/view/4ddXW4\nfloat hash(float h) {\n    return fract(sin(h) * 43758.5453123);\n}\n\n// taken from https://www.shadertoy.com/view/4ddXW4\nfloat noise(vec3 x) {\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f * f * (3.0 - 2.0 * f);\n\n    float n = p.x + p.y * 157.0 + 113.0 * p.z;\n    return mix(\n        mix(mix(hash(n + 0.0), hash(n + 1.0), f.x),\n            mix(hash(n + 157.0), hash(n + 158.0), f.x), f.y),\n        mix(mix(hash(n + 113.0), hash(n + 114.0), f.x),\n            mix(hash(n + 270.0), hash(n + 271.0), f.x), f.y), f.z);\n}\n\nfloat calculateColorDistance(in PatternData data, in PatternConfig config)\n{\n    const float epsilon = 0.001;\n\n    // Vertical\n    if (config.mode == 0)\n    {\n        float regular = config.progress - data.relativeHeight;\n        float reverse = config.progress - (1.0 - data.relativeHeight * 0.999);\n        return mix(regular, reverse, config.inverse);\n    }\n    // Arrows\n    if (config.mode == 1)\n    {\n        const float slices = 4.0;\n\n        float arrow = 1.0;\n\n        if (data.face > 2)\n        {\n            float d = abs(data.uv[0]) * slices;\n            arrow = config.progress - mod(data.uv[2] * slices + d, 1.0);\n        }\n        else\n        {\n            float regular = config.progress - 1.0;\n            float reverse = config.progress - 0.001;\n            arrow = mix(regular, reverse, config.inverse);\n        }\n\n        return arrow;\n    }\n    // Full Arrows\n    if (config.mode == 2)\n    {\n        const float slices = 4.0;\n        const float halfSlices = slices / 2.0;\n\n        float arrow = 1.0;\n\n        if (data.face > 2)\n        {\n            float d = abs(data.uv[0]) * slices;\n            arrow = config.progress - mod(data.uv[2] * slices + d, 1.0);\n        }\n        else\n        {\n            vec2 texCoord = data.texCoord2D * 2.0 - vec2(1.0);\n            float d = abs(texCoord.x) * slices;\n            float reverse = abs(texCoord.y) * slices + d;\n            reverse = config.progress - mod(reverse * 0.5, 1.0);\n\n            float diff = abs(texCoord.x ) - abs(texCoord.y);\n            float regular = 1.0 - fract(abs(diff) * halfSlices);\n            regular = config.progress - regular;\n\n            arrow = mix(regular, reverse, config.inverse);\n        }\n\n        return arrow;\n    }\n    // Divided Arrows Static\n    if (config.mode == 3)\n    {\n        const float slices = 4.0;\n        const float halfSlices = slices / 2.0;\n\n        float arrow = 1.0;\n        float ratio = mix(0.5, 1.0 - 0.5, config.inverse);\n        float topProgress = mix(max((config.progress - ratio) / (1.0 - ratio), 0.0), min(config.progress / ratio, 1.0), config.inverse);\n        float sideProgress = mix(min(config.progress / ratio, 1.0), max((config.progress - ratio) / (1.0 - ratio), 0.0), config.inverse);\n\n        if (data.face > 2)\n        {\n            float d = abs(data.uv[0]) * slices;\n            arrow = sideProgress - mod(data.uv[2] * slices + d, 1.0);\n        }\n        else\n        {\n            vec2 texCoord = data.texCoord2D * 2.0 - vec2(1.0);\n            float d = abs(texCoord.x) * slices;\n            float reverse = abs(texCoord.y) * slices + d;\n            reverse = topProgress - mod(reverse * 0.5, 1.0);\n\n            float diff = abs(texCoord.x) - abs(texCoord.y);\n            float regular = 1.0 - fract(abs(diff) * halfSlices);\n            regular = topProgress - regular;\n\n            arrow = mix(regular, reverse, config.inverse);\n        }\n\n        return arrow;\n    }\n    // Divided Arrows Dynamic\n    if (config.mode == 4)\n    {\n        const float slices = 4.0;\n        const float halfSlices = slices / 2.0;\n\n        float arrow = 1.0;\n        float ratio = mix(data.absoluteHeight, 1.0 - data.absoluteHeight, config.inverse);\n        float topProgress = mix(max((config.progress - ratio) / (1.0 - ratio), 0.0), min(config.progress / ratio, 1.0), config.inverse);\n        float sideProgress = mix(min(config.progress / ratio, 1.0), max((config.progress - ratio) / (1.0 - ratio), 0.0), config.inverse);\n\n        if (data.face > 2)\n        {\n            float d = abs(data.uv[0]) * slices;\n            arrow = sideProgress - mod(data.uv[2] * slices + d, 1.0);\n        }\n        else\n        {\n            vec2 texCoord = data.texCoord2D * 2.0 - vec2(1.0);\n            float d = abs(texCoord.x) * slices;\n            float reverse = abs(texCoord.y) * slices + d;\n            reverse = topProgress - mod(reverse * 0.5, 1.0);\n\n            float diff = abs(texCoord.x) - abs(texCoord.y);\n            float regular = 1.0 - fract(abs(diff) * halfSlices);\n            regular = topProgress - regular;\n\n            arrow = mix(regular, reverse, config.inverse);\n        }\n\n        return arrow;\n    }\n    // Screenspace Dithering\n    if (config.mode == 5)\n    {\n        float dither = texture(u_ditheringTexture, gl_FragCoord.xy / vec2(textureSize(u_ditheringTexture, 0))).r;\n        dither = min(dither + 0.001, 1.0);\n\n        return config.progress - dither;\n    }\n    // Pyramid\n    if (config.mode == 6)\n    {\n        float x = data.texCoord3D.x * 2.0 - 1.0;\n        float z = data.texCoord3D.z * 2.0 - 1.0;\n        float y = 1.0 - data.texCoord3D.y;\n\n        float ascendingCutOff =  min(y + config.progress - abs(x), y + config.progress - abs(z));\n        float descendingCutOff = min(y - config.progress + 1.0 - abs(x), y - config.progress + 1.0 - abs(z));\n\n        return mix(ascendingCutOff, -descendingCutOff, config.inverse);\n    }\n    // Noise\n    if (config.mode == 7)\n    {\n        vec3 position = vec3(data.worldPos.x, data.uv[1], data.worldPos.y);\n        float factor = data.nodeCountSqrt * 1.5;\n        return config.progress - noise(position * vec3(factor, 1.0, factor));\n    }\n    // Double Noise\n    if (config.mode == 8)\n    {\n        const float bandSize = 20.0;\n\n        vec3 position = vec3(data.worldPos.x, data.uv[1], data.worldPos.y);\n        float factor = data.nodeCountSqrt * 1.5;\n\n        float coarseNoise = noise(position * vec3(factor, 1.0, factor));\n        float fineNoise = noise(position * vec3(factor * 15.0, 1.0, factor * 15.0));\n\n        float dist = coarseNoise - config.progress;\n        float localDist = dist * bandSize;\n\n        float inner = step(dist, 0.0);\n        float band = step(localDist, 1.0) * (1.0 - step(fineNoise, localDist));\n\n        return mix(band, 1.0, inner) * 2.0 - 1.0;\n    }\n    // Quads\n    if (config.mode == 9)\n    {\n        vec4 texCoord = vec4(0.0);\n        texCoord.xy = vec2(data.texCoord2D.x, data.uv[1]);\n        texCoord.zw = data.texCoord2D;\n\n        float factor = data.nodeCountSqrt;\n        vec3 position = vec3(data.worldPos.z, float(data.face - 1) / 5.0, data.worldPos.w);\n        float n = noise(position * factor);\n        float nx = noise((position + vec3(0.1, 0.0, 0.0)) * factor);\n        float ny = noise((position + vec3(0.0, 0.0, 0.1)) * factor);\n\n        vec2 offset = vec2(nx - n, ny - n);\n\n        float sideValue = texture(u_ditheringTexture, texCoord.xy + offset).r;\n        float topValue = texture(u_ditheringTexture, texCoord.zw + offset).r;\n\n        float cutOff = data.face > 2 ? sideValue : topValue;\n        cutOff = fract(cutOff);\n\n        return config.progress - min(cutOff + 0.001, 1.0);\n    }\n\n    return 0.0;\n}\n\n\nvoid main(void)\n{\n#ifdef DRAW_RESTRICTED\n    if(u_attachment == 0) {\n#endif\n\n    /* Compute the actual outline of a cuboid face based on texture coordinates. */\n    vec2 awidth = fwidth(v_texCoord2D) * v_outlineColorBegin[3];\n    vec2 awidth2 = fwidth(v_uv.xz);\n\n    vec4 ctest; /* Used for countour/ctest testing. */\n    ctest.xy = step(v_texCoord2D - awidth.xy, vec2(0.0));\n    ctest.zw = step(vec2(1.0), v_texCoord2D + awidth.xy);\n    float outline = clamp(dot(ctest, vec4(1.0)), 0.0, 1.0);\n\n    float inverse = step(v_direction.y, 0.0);\n\n    PatternData patternData = PatternData(\n        u_face,\n        u_nodeCountSqrt,\n\n        v_texCoord2D,\n        v_texCoord3D,\n        v_uv,\n        v_worldPos,\n\n        v_relativeHeight,\n        v_absoluteHeight\n    );\n\n    PatternConfig patternConfig = PatternConfig(\n        u_patternMode,\n        0.5,\n        inverse\n    );\n\n    PatternConfig colorConfig = PatternConfig(\n        u_colorMode,\n        v_colorProgress,\n        inverse\n    );\n\n    float baseColorDecider = 0.0;\n    if (u_patternMode != -1)\n    {\n        float colorDistance = calculateColorDistance(patternData, patternConfig);\n        baseColorDecider = step(0.01, v_usePattern) * smoothstep(0.0, 0.5, v_colorProgress) * step(0.0, colorDistance);\n    }\n\n    float colorDistance = calculateColorDistance(patternData, colorConfig);\n    float colorDecider = step(0.0, colorDistance);\n\n    vec4 baseColorBegin = mix(v_baseColorBegin, v_patternColorBegin, baseColorDecider);\n    vec4 baseColor = mix(baseColorBegin, v_baseColorEnd, colorDecider);\n    vec4 outlineColor = mix(v_outlineColorBegin, v_outlineColorEnd, colorDecider);\n\n    fragColor = mix(baseColor, vec4(outlineColor.rgb, 1.0), outline);\n\n#ifdef DRAW_RESTRICTED\n    } else if(u_attachment == 1) {\n#endif\n\n    fragId = v_id;\n\n#ifdef DRAW_RESTRICTED\n    } else if(u_attachment == 2) {\n        fragDepth = float24x1_to_uint8x3(gl_FragCoord.z);\n    }\n#endif\n}\n";
}, function(e2, t2, r2) {
  var i2, n2 = this && this.__extends || (i2 = function(e3, t3) {
    return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t4) {
      e4.__proto__ = t4;
    } || function(e4, t4) {
      for (var r3 in t4)
        Object.prototype.hasOwnProperty.call(t4, r3) && (e4[r3] = t4[r3]);
    })(e3, t3);
  }, function(e3, t3) {
    if (typeof t3 != "function" && t3 !== null)
      throw new TypeError("Class extends value " + String(t3) + " is not a constructor or null");
    function r3() {
      this.constructor = e3;
    }
    i2(e3, t3), e3.prototype = t3 === null ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
  }), o = this && this.__decorate || function(e3, t3, r3, i3) {
    var n3, o2 = arguments.length, a2 = o2 < 3 ? t3 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t3, r3) : i3;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
      a2 = Reflect.decorate(e3, t3, r3, i3);
    else
      for (var s2 = e3.length - 1; s2 >= 0; s2--)
        (n3 = e3[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t3, r3, a2) : n3(t3, r3)) || a2);
    return o2 > 3 && a2 && Object.defineProperty(t3, r3, a2), a2;
  };
  Object.defineProperty(t2, "__esModule", { value: true }), t2.FXAAPass = void 0;
  var a = r2(0), s = r2(0), u2 = a.auxiliaries.assert, c2 = function(e3) {
    function t3(r3) {
      var i3 = e3.call(this) || this;
      return i3._altered = Object.assign(new s.ChangeLookup(), { any: true, lumaThreshold: true, reduceMultiplier: true, reduceMinimum: true, spanMaximum: true }), i3._textureSize = [0, 0], i3._lumaThreshold = t3.DEFAULT_LUMA_THRESHOLD, i3._reduceMultiplier = t3.DEFAULT_REDUCE_MULTIPLIER, i3._reduceMinimum = t3.DEFAULT_REDUCE_MINIMUM, i3._spanMaximum = t3.DEFAULT_SPAN_MAXIMUM, i3._ndcTriangleShared = false, i3._context = r3, i3;
    }
    return n2(t3, e3), t3.prototype.initialize = function(e4) {
      var t4 = this._context.gl;
      e4 === void 0 ? this._ndcTriangle = new s.NdcFillingTriangle(this._context, "FXAATriangle") : (this._ndcTriangle = e4, this._ndcTriangleShared = true), this._ndcTriangle.initialized || this._ndcTriangle.initialize();
      var i3 = new s.Shader(this._context, t4.VERTEX_SHADER, "fxaa.vert");
      i3.initialize(r2(41), false);
      var n3 = new s.Shader(this._context, t4.FRAGMENT_SHADER, "fxaa.frag");
      return n3.initialize(r2(42), false), i3.compile(), n3.compile(), this._program = new s.Program(this._context, "FXAAProgram"), this._program.initialize([n3, i3], false), this._program.attribute("a_vertex", this._ndcTriangle.vertexLocation), this._program.link(), this._uTextureSize = this._program.uniform("u_textureSize"), this._uLumaTreshold = this._program.uniform("u_lumaThreshold"), this._uReduceMultiplier = this._program.uniform("u_reduceMultiplier"), this._uReduceMinimum = this._program.uniform("u_reduceMinimum"), this._uSpanMaximum = this._program.uniform("u_spanMaximum"), true;
    }, t3.prototype.uninitialize = function() {
      this._program.uninitialize(), !this._ndcTriangleShared && this._ndcTriangle.initialized && this._ndcTriangle.uninitialize(), this._uTextureSize = void 0, this._uLumaTreshold = void 0, this._uReduceMultiplier = void 0, this._uReduceMinimum = void 0, this._uSpanMaximum = void 0;
    }, t3.prototype.frame = function() {
      u2(this._target !== void 0 && this._target.valid, "Expected valid target."), u2(this._framebuffer !== void 0 && this._framebuffer.valid, "Expected valid framebuffer.");
      var e4 = this._context.gl, t4 = this._framebuffer.texture(this._readBuffer);
      this._target.bind(e4.DRAW_FRAMEBUFFER), this._program.bind(), t4.bind(e4.TEXTURE0), t4.size !== this._textureSize && (this._textureSize = t4.size, e4.uniform2fv(this._uTextureSize, this._textureSize)), this._altered.lumaThreshold && e4.uniform1f(this._uLumaTreshold, this._lumaThreshold), this._altered.reduceMultiplier && e4.uniform1f(this._uReduceMultiplier, this._reduceMultiplier), this._altered.reduceMinimum && e4.uniform1f(this._uReduceMinimum, this._reduceMinimum), this._altered.spanMaximum && e4.uniform1f(this._uSpanMaximum, this._spanMaximum), this._ndcTriangle.bind(), this._ndcTriangle.draw(), this._ndcTriangle.unbind(), t4.unbind(e4.TEXTURE0), this._program.unbind(), this._target.unbind(e4.DRAW_FRAMEBUFFER), this._altered.reset();
    }, Object.defineProperty(t3.prototype, "target", { set: function(e4) {
      this.assertInitialized(), this._target = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "framebuffer", { set: function(e4) {
      this.assertInitialized(), this._framebuffer = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "readBuffer", { set: function(e4) {
      this.assertInitialized(), this._readBuffer = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "lumaThreshold", { set: function(e4) {
      e4 !== this._lumaThreshold && (this._lumaThreshold = e4, this._altered.alter("lumaThreshold"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "reduceMultiplier", { set: function(e4) {
      e4 !== this._reduceMultiplier && (this._reduceMultiplier = e4, this._altered.alter("reduceMultiplier"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "reduceMinimum", { set: function(e4) {
      e4 !== this._reduceMinimum && (this._reduceMinimum = e4, this._altered.alter("reduceMinimum"));
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "spanMaximum", { set: function(e4) {
      e4 !== this._spanMaximum && (this._spanMaximum = e4, this._altered.alter("spanMaximum"));
    }, enumerable: false, configurable: true }), t3.DEFAULT_LUMA_THRESHOLD = 0.1, t3.DEFAULT_REDUCE_MULTIPLIER = 1 / 8, t3.DEFAULT_REDUCE_MINIMUM = 1 / 128, t3.DEFAULT_SPAN_MAXIMUM = 8, o([s.Initializable.initialize()], t3.prototype, "initialize", null), o([s.Initializable.uninitialize()], t3.prototype, "uninitialize", null), o([s.Initializable.assert_initialized()], t3.prototype, "frame", null), t3;
  }(s.Initializable);
  t2.FXAAPass = c2;
}, function(e2, t2) {
  e2.exports = "\nprecision lowp float;\nprecision lowp int;\n\n\n// @todo this file will be included from webgl-operate soon\n\n#if __VERSION__ == 100\n#else \n    #define varying out\n#endif\n\n\n#if __VERSION__ == 100\n  attribute vec2 a_vertex;\n#else\n  layout(location = 0) in vec2 a_vertex;\n#endif\n\n\nvarying vec2 v_texCoords;\n\n\nvoid main()\n{\n    v_texCoords = a_vertex * 0.5 + 0.5;\n    gl_Position = vec4(a_vertex, 0.0, 1.0);\n}\n";
}, function(e2, t2) {
  e2.exports = "\nprecision lowp float;\nprecision lowp int;\n\n\n// @todo this file will be included from webgl-operate soon\n\n#if __VERSION__ == 100\n    #define texture(sampler, coord) texture2D(sampler, coord)\n#else\n    #define varying in\n#endif\n\n\n#if __VERSION__ == 100\n  #define fragColor gl_FragColor\n#else\n  layout(location = 0) out vec4 fragColor;\n#endif\n\nuniform vec2 u_textureSize;\n\nuniform float u_lumaThreshold;\nuniform float u_reduceMultiplier;\nuniform float u_reduceMinimum;\nuniform float u_spanMaximum;\n\nuniform sampler2D u_texture;\n\nvarying vec2 v_texCoords;\n\n\n// Adapted from https://www.geeks3d.com/20110405/fxaa-fast-approximate-anti-aliasing-demo-glsl-opengl-test-radeon-geforce/3/\nvoid main()\n{\n  vec2 delta = 1.0 / u_textureSize;\n\n  vec3 rgbM = texture(u_texture, v_texCoords).rgb;\n  vec3 rgbNW = texture(u_texture, v_texCoords + delta * vec2(-1.0,  1.0)).rgb;\n  vec3 rgbNE = texture(u_texture, v_texCoords + delta * vec2( 1.0,  1.0)).rgb;\n  vec3 rgbSW = texture(u_texture, v_texCoords + delta * vec2(-1.0, -1.0)).rgb;\n  vec3 rgbSE = texture(u_texture, v_texCoords + delta * vec2( 1.0, -1.0)).rgb;\n\n  vec3 toLuma = vec3(0.299, 0.587, 0.114);\n\n  float lumaM = dot(rgbM, toLuma);\n  float lumaNW = dot(rgbNW, toLuma);\n  float lumaNE = dot(rgbNE, toLuma);\n  float lumaSW = dot(rgbSW, toLuma);\n  float lumaSE = dot(rgbSE, toLuma);\n\n  float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n  float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n\n  float applyFXAA = step(u_lumaThreshold, lumaMax - lumaMin);\n\n  vec2 gradient = vec2(0.0);\n  gradient.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n  gradient.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n\n  float reduce = max((lumaNW + lumaNE + lumaSW + lumaSE) * 0.25 * u_reduceMultiplier, u_reduceMinimum);\n  float factor = 1.0 / (min(abs(gradient.x), abs(gradient.y)) + reduce);\n\n  gradient = clamp(gradient * factor, vec2(0.0), vec2(u_spanMaximum)) * delta;\n\n  vec3 rgbNegative = texture(u_texture, v_texCoords + gradient * (1.0 / 3.0 - 0.5)).rgb;\n  vec3 rgbPositive = texture(u_texture, v_texCoords + gradient * (2.0 / 3.0 - 0.5)).rgb;\n\n  vec3 twoSampled = (rgbNegative + rgbPositive) * 0.5;\n\n  rgbNegative = texture(u_texture, v_texCoords + gradient * (0.0 / 3.0 - 0.5)).rgb;\n  rgbPositive = texture(u_texture, v_texCoords + gradient * (3.0 / 3.0 - 0.5)).rgb;\n\n  vec3 fourSampled = (rgbNegative + rgbPositive) * 0.25 + twoSampled * 0.5;\n  float lumaFourSampled = dot(fourSampled, toLuma);\n\n  vec3 color = (lumaFourSampled < lumaMin || lumaFourSampled > lumaMax) ? twoSampled : fourSampled;\n\n  fragColor = vec4(mix(rgbM, color, applyFXAA), 1.0);\n}\n";
}, function(e2, t2, r2) {
  var i2, n2 = this && this.__extends || (i2 = function(e3, t3) {
    return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t4) {
      e4.__proto__ = t4;
    } || function(e4, t4) {
      for (var r3 in t4)
        Object.prototype.hasOwnProperty.call(t4, r3) && (e4[r3] = t4[r3]);
    })(e3, t3);
  }, function(e3, t3) {
    if (typeof t3 != "function" && t3 !== null)
      throw new TypeError("Class extends value " + String(t3) + " is not a constructor or null");
    function r3() {
      this.constructor = e3;
    }
    i2(e3, t3), e3.prototype = t3 === null ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
  });
  Object.defineProperty(t2, "__esModule", { value: true }), t2.SeereneModifier = void 0;
  var o = r2(0), a = r2(0), s = o.gl_matrix_extensions.v2, u2 = o.gl_matrix_extensions.v3, c2 = o.gl_matrix_extensions.sign, l2 = o.gl_matrix_extensions.clamp, f2 = o.gl_matrix_extensions.clamp3, h2 = o.auxiliaries.DEG2RAD, d2 = o.auxiliaries.assert, p2 = function() {
    this.screen = o.vec2.create(), this.world = o.vec3.create();
  }, _2 = function(e3) {
    function t3() {
      var t4 = e3 !== null && e3.apply(this, arguments) || this;
      return t4.initialPoints = [new p2(), new p2()], t4.currentPoints = [new p2(), new p2()], t4.initialEye = o.vec3.create(), t4.initialCenter = o.vec3.create(), t4.initialViewProjectionInverse = o.mat4.create(), t4._xAxisScreenSpace = o.vec3.create(), t4._maxAngles = [0.6666 * +Math.PI - Math.PI, 60 * h2 - Math.PI], t4._minAngles = [0.6666 * -Math.PI - Math.PI, -Math.PI + 1 * h2], t4.referencePlane = [o.vec3.create(), o.vec3.create(), 0], t4;
    }
    return n2(t3, e3), Object.defineProperty(t3.prototype, "valid", { get: function() {
      return this.initialPoints[0].world !== void 0;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "camera", { set: function(e4) {
      this._camera = e4;
    }, enumerable: false, configurable: true }), t3.prototype.needStart = function() {
      return this._maxAngles === void 0 || this._minAngles === void 0;
    }, Object.defineProperty(t3.prototype, "coordsAccess", { set: function(e4) {
      this._coordsAccess = e4;
    }, enumerable: false, configurable: true }), t3.rayY0SquareIntersection = function(e4, r3) {
      var i3 = o.ray_math.rayPlaneIntersection(e4, r3);
      if (i3 !== void 0) {
        var n3 = o.vec2.fromValues(i3[0], i3[2]);
        return o.ray_math.isPointWithinSquare(n3, t3.HALF_SQUARE_LENGTH) ? i3 : void 0;
      }
    }, t3.prototype.assert_valid = function() {
    }, t3.prototype.invalidate = function() {
      this.initialPoints[0].world = void 0, this.currentPoints[0].world = void 0, this.initialPoints[1].world = void 0, this.currentPoints[1].world = void 0;
    }, t3.prototype.initiateTranslateConstraints = function(e4) {
      if (e4)
        return this._maxNegativeTranslate = void 0, void (this._maxPositiveTranslate = void 0);
      var t4 = o.vec3.fromValues(-1, 0, -1), r3 = o.vec3.fromValues(1, 0, 1);
      this._maxNegativeTranslate = o.vec3.sub(u2(), t4, this.initialCenter), this._maxPositiveTranslate = o.vec3.sub(u2(), r3, this.initialCenter);
    }, t3.prototype.initiateScaleConstraints = function(e4) {
      var r3 = o.vec3.sub(u2(), this.initialEye, this.initialCenter), i3 = 1 / o.vec3.length(r3);
      if (e4)
        return this._minScale = this._camera.near * i3 - 1, void (this._maxScale = this._camera.far * i3 - 1);
      o.ray_math.rayPlaneIntersection(this.initialEye, this.initialCenter, [0, 0, 0], [0, 1, 0]) && (this._minScale = this._camera.near * t3.MIN_NEAR_PLANE_FACTOR * i3 - 1, this._maxScale = t3.MAX_DISTANCE_TO_SQUARE * i3 - 1);
    }, t3.prototype.initiateRotateConstraints = function(e4) {
      var t4 = o.vec3.normalize(u2(), o.vec3.sub(u2(), this.initialEye, this.initialCenter));
      this._xAxisScreenSpace = o.vec3.cross(u2(), [0, 1, 0], t4);
      var r3 = Math.acos(o.vec3.dot(t4, [0, 1, 0]));
      if (this._maxAngles = [void 0, 89.99 * h2 - r3], this._minAngles = [void 0, 0.01 * h2 - r3], !e4) {
        var i3 = o.vec2.normalize(s(), [t4[0], t4[2]]), n3 = Math.asin(o.vec2.dot(i3, [1, 0]));
        i3[1] < 0 && (n3 = c2(n3) * Math.PI - n3), this._maxAngles = [0.6666 * +Math.PI - n3, 60 * h2 - r3], this._minAngles = [0.6666 * -Math.PI - n3, 1 * h2 - r3];
      }
    }, t3.prototype.initiate = function(e4, t4, r3, i3) {
      r3 === void 0 && (r3 = [false, false, false]), i3 === void 0 && (i3 = false), this._override = i3;
      var n3 = this._camera.viewProjectionInverse;
      return !!n3 && (o.mat4.copy(this.initialViewProjectionInverse, n3), o.vec3.copy(this.initialEye, this._camera.eye), o.vec3.copy(this.initialCenter, this._camera.center), o.vec2.copy(this.initialPoints[0].screen, e4), this.initialPoints[0].world = this.coordsAt(e4, false), this.initialPoints[0].world === void 0 ? (this.invalidate(), false) : (this.initialPoints[1].screen = t4 === void 0 ? void 0 : o.vec2.copy(s(), t4), this.initialPoints[1].world = this.coordsAt(t4, false), this.referencePlane[0] = this.initialPoints[0].world, this.referencePlane[1] = o.vec3.fromValues(0, 1, 0), this.referencePlane[2] = o.vec3.length(this.initialPoints[0].world), d2(this.initialCenter[1] === 0, "camera center is expected to be on y = 0 (ground plane)"), r3[0] && this.initiateTranslateConstraints(i3), r3[1] && this.initiateScaleConstraints(i3), r3[2] && this.initiateRotateConstraints(i3), true));
    }, t3.prototype.update_positions = function(e4, t4) {
      return this.assert_valid(), this.currentPoints[0].world = this.coordsAt(e4), this._override && this.currentPoints[0].world === void 0 ? (this.invalidate(), false) : (o.vec2.copy(this.currentPoints[0].screen, e4), t4 === void 0 || (this.currentPoints[1].world = this.coordsAt(t4), this._override && this.currentPoints[1].world === void 0 ? (this.invalidate(), false) : (this.currentPoints[1].screen = t4 === void 0 ? void 0 : o.vec2.copy(s(), t4), true)));
    }, t3.prototype.translate = function() {
      this.assert_valid();
      var e4 = this.initialPoints[0].world, t4 = this.currentPoints[0].world;
      if (e4 && t4) {
        var r3 = o.vec3.subtract(u2(), e4, t4);
        this._maxNegativeTranslate && this._maxPositiveTranslate && f2(r3, r3, this._maxNegativeTranslate, this._maxPositiveTranslate), this._camera.eye = o.vec3.add(u2(), this.initialEye, r3);
        var i3 = o.vec3.add(u2(), this.initialCenter, r3), n3 = o.ray_math.rayPlaneIntersection(this._camera.eye, i3);
        n3 && (this._camera.center = n3);
      }
    }, t3.prototype.scale = function(e4) {
      var r3;
      if (this.assert_valid(), d2(this._minScale !== void 0 && this._maxScale !== void 0, "valid scale constraints expected"), e4 === void 0) {
        var i3 = this.currentPoints[0].screen, n3 = this.initialPoints[0].screen;
        if (!n3 || !i3)
          return;
        r3 = o.vec2.subtract(s(), n3, i3)[1] / window.devicePixelRatio;
      } else
        r3 = -c2(e4) * t3.SCALE_STEP_FACTOR;
      r3 = l2(r3 * t3.SCALE_FACTOR, this._minScale, this._maxScale);
      var a2 = this.initialPoints[0].world;
      if (a2) {
        var h3 = o.vec3.sub(u2(), this.initialEye, a2), p3 = o.vec3.sub(u2(), this.initialCenter, a2), _3 = o.vec3.add(u2(), this.initialEye, o.vec3.scale(u2(), h3, r3)), g2 = o.vec3.add(u2(), this.initialCenter, o.vec3.scale(u2(), p3, r3)), m2 = o.ray_math.rayPlaneIntersection(this._camera.eye, g2);
        m2 && (this._camera.center = this._override ? m2 : f2(u2(), m2, [-1, 0, -1], [1, 0, 1]), this._camera.eye = o.vec3.add(u2(), _3, o.vec3.sub(u2(), this._camera.center, m2)));
      }
    }, t3.prototype.rotate = function() {
      this.assert_valid();
      var e4 = this.currentPoints[0].screen, r3 = this.initialPoints[0].screen;
      if (r3 && e4) {
        var i3 = o.vec2.subtract(s(), r3, e4);
        o.vec2.scale(i3, i3, window.devicePixelRatio * t3.ROTATE_FACTOR), this._minAngles[1] && this._maxAngles[1] && (i3[1] = l2(i3[1], this._minAngles[1], this._maxAngles[1]));
        var n3 = this._override ? this.initialCenter : f2(u2(), this.initialCenter, [-1, 0, -1], [1, 0, 1]), a2 = o.mat4.translate(o.mat4.create(), o.mat4.create(), n3);
        o.mat4.rotateY(a2, a2, i3[0]), o.mat4.rotate(a2, a2, i3[1], this._xAxisScreenSpace), o.mat4.translate(a2, a2, o.vec3.negate(u2(), n3)), this._camera.center = n3;
        var c3 = o.vec3.transformMat4(u2(), this.initialEye, a2);
        c3 && (this._camera.eye = c3);
      }
    }, t3.prototype.coordsAt = function(e4, r3) {
      if (r3 === void 0 && (r3 = true), e4 !== void 0) {
        var i3 = r3 ? this.initialViewProjectionInverse : this._camera.viewProjectionInverse;
        if (r3) {
          d2(this.referencePlane[0] !== void 0 && this.referencePlane[1] !== void 0, "valid reference plane expected for reference coordinate retrieval");
          var n3 = this._coordsAccess(e4[0], e4[1], 0, i3), a2 = this._coordsAccess(e4[0], e4[1], 1, i3);
          return o.ray_math.rayPlaneIntersection(n3, a2, this.referencePlane[0], this.referencePlane[1]);
        }
        var s2 = this._coordsAccess(e4[0], e4[1], void 0, i3);
        if (s2 !== void 0)
          return s2;
        var u3 = this._coordsAccess(e4[0], e4[1], 0, i3), c3 = this._coordsAccess(e4[0], e4[1], 1, i3);
        return t3.rayY0SquareIntersection(u3, c3);
      }
    }, t3.prototype.update = function() {
    }, t3.HALF_SQUARE_LENGTH = 2, t3.SCALE_FACTOR = 4e-3, t3.SCALE_STEP_FACTOR = 16, t3.ROTATE_FACTOR = 2e-3, t3.MAX_DISTANCE_TO_SQUARE = 4, t3.MIN_NEAR_PLANE_FACTOR = 4, t3;
  }(a.CameraModifier);
  t2.SeereneModifier = _2;
}, function(e2, t2, r2) {
  var i2, n2 = this && this.__extends || (i2 = function(e3, t3) {
    return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t4) {
      e4.__proto__ = t4;
    } || function(e4, t4) {
      for (var r3 in t4)
        Object.prototype.hasOwnProperty.call(t4, r3) && (e4[r3] = t4[r3]);
    })(e3, t3);
  }, function(e3, t3) {
    if (typeof t3 != "function" && t3 !== null)
      throw new TypeError("Class extends value " + String(t3) + " is not a constructor or null");
    function r3() {
      this.constructor = e3;
    }
    i2(e3, t3), e3.prototype = t3 === null ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
  }), o = this && this.__decorate || function(e3, t3, r3, i3) {
    var n3, o2 = arguments.length, a2 = o2 < 3 ? t3 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t3, r3) : i3;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
      a2 = Reflect.decorate(e3, t3, r3, i3);
    else
      for (var s2 = e3.length - 1; s2 >= 0; s2--)
        (n3 = e3[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t3, r3, a2) : n3(t3, r3)) || a2);
    return o2 > 3 && a2 && Object.defineProperty(t3, r3, a2), a2;
  };
  Object.defineProperty(t2, "__esModule", { value: true }), t2.PointGeometry = void 0;
  var a = r2(0), s = function(e3) {
    function t3(t4, r3) {
      var i3 = e3.call(this, t4, r3) || this;
      return r3 = r3 !== void 0 && r3 !== "" ? r3 : "PointGeometry", i3._vertices = new a.Buffer(t4, r3 + "VertexVBO"), i3._buffers.push(i3._vertices), i3._colors = new a.Buffer(t4, r3 + "ColorVBO"), i3._buffers.push(i3._colors), i3;
    }
    return n2(t3, e3), t3.prototype.bindBuffers = function(e4) {
      var t4 = this.context.gl, r3 = this.context.gl2facade;
      this._vertices.attribEnable(this._vertexLocation, 3, t4.FLOAT, false, 0, 0, true, false), r3.vertexAttribDivisor(this._vertexLocation, 0), this._colors.attribEnable(this._colorLocation, 4, t4.FLOAT, false, 0, 0, true, false), r3.vertexAttribDivisor(this._colorLocation, 0);
    }, t3.prototype.unbindBuffers = function(e4) {
      this._vertices.attribDisable(this._vertexLocation, false, false), this._colors.attribDisable(this._colorLocation, false, false);
    }, t3.prototype.initialize = function(t4, r3) {
      t4 === void 0 && (t4 = 0), r3 === void 0 && (r3 = 1), this._vertexLocation = t4, this._colorLocation = r3;
      var i3 = this.context.gl;
      return e3.prototype.initialize.call(this, [i3.ARRAY_BUFFER, i3.ARRAY_BUFFER]) && this._vertices.valid;
    }, t3.prototype.update = function() {
      this.bind();
    }, t3.prototype.draw = function(e4) {
      if (e4 === void 0 && (e4 = 0), this._count) {
        var t4 = this.context.gl;
        this._vertices.attribEnable(this._vertexLocation, 3, t4.FLOAT, false, 0, 4 * e4, true, false), this._colors.attribEnable(this._colorLocation, 4, t4.FLOAT, false, 0, 4 * e4, true, false), t4.drawArrays(t4.POINTS, 0, this._count);
      }
    }, Object.defineProperty(t3.prototype, "vertices", { set: function(e4) {
      this._count = e4.length / 3, this._vertices.data(e4, this.context.gl.STATIC_DRAW);
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colors", { set: function(e4) {
      this._colors.data(e4, this.context.gl.STATIC_DRAW);
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "valid", { get: function() {
      return this.initialized && this._vertices.valid && this._colors && this._colors.valid;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "vertexLocation", { get: function() {
      return this._vertexLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colorLocation", { get: function() {
      return this._colorLocation;
    }, enumerable: false, configurable: true }), o([a.Initializable.assert_initialized()], t3.prototype, "draw", null), t3;
  }(a.Geometry);
  t2.PointGeometry = s;
}, function(e2, t2) {
  e2.exports = "//*****************************************************************************\n// seerene(tm) - A framework for analyzing and visualizing complex software systems.\n// Copyright (C) 2005 - 2019 for all source codes:\n// seerene(tm) GmbH, Potsdam, Germany\n//*****************************************************************************\n\n#if __VERSION__ == 100\n    #extension GL_EXT_draw_buffers : enable\n#endif\n\nprecision highp float;\nprecision lowp int;\n\n\n// @todo this file will be included from webgl-operate soon\n\n#if __VERSION__ == 100\n#else \n    #define varying out\n#endif\n\n\n// @todo this file will be included from webgl-operate soon\n\nvoid ndcOffset(inout vec4 vertex, in vec2 offset) {\n    vertex.xy = offset * vec2(vertex.w) + vertex.xy;\n}\n\n\n\n#if __VERSION__ == 100\nattribute vec3 a_vertex;\nattribute vec4 a_color;\n#else\n/* Note: do not use layout location specifier, since they take precedence over CPU managed locations. */\nin vec3 a_vertex;\nin vec4 a_color;\n#endif\n\nuniform mat4 u_viewProjection;\nuniform vec2 u_ndcOffset;\nuniform float u_pointSize;\n\nvarying vec4 v_color;\n\nvoid main(void)\n{\n    vec4 vertex = u_viewProjection * vec4(a_vertex, 1.0);\n\n    v_color = a_color;\n\n    ndcOffset(vertex, u_ndcOffset);\n    gl_Position = vertex;\n    gl_PointSize = u_pointSize;\n}\n";
}, function(e2, t2) {
  e2.exports = "//*****************************************************************************\n// seerene(tm) - A framework for analyzing and visualizing complex software systems.\n// Copyright (C) 2005 - 2019 for all source codes:\n// seerene(tm) GmbH, Potsdam, Germany\n//*****************************************************************************\n\nprecision highp float;\nprecision lowp int;\n\n#if __VERSION__ == 100\n\n    #ifdef GL_EXT_draw_buffers\n        #extension GL_EXT_draw_buffers : enable\n        #define fragColor gl_FragData[0].rgba\n    #else\n        #define DRAW_RESTRICTED\n        #define fragColor gl_FragColor.rgba\n    #endif\n#else\n    layout(location = 0) out vec4 fragColor;\n#endif\n\n\n// @todo this file will be included from webgl-operate soon\n\n#if __VERSION__ == 100\n    #define texture(sampler, coord) texture2D(sampler, coord)\n#else\n    #define varying in\n#endif\n\n\nvarying vec4 v_color;\n\nvoid main(void)\n{\n    // Make points round (instead of squares).\n    // gl_PointCoord.st ranges from 0.0 to 1.0 across the point horizontally from left to right and\n    // vertically from top to bottom.\n\n    float dist = distance(gl_PointCoord, vec2(0.5, 0.5));\n    float alpha = v_color.a - step(0.5, dist);\n\n    fragColor = vec4(v_color.xyz, alpha);\n}\n";
}, function(e2, t2, r2) {
  var i2, n2 = this && this.__extends || (i2 = function(e3, t3) {
    return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t4) {
      e4.__proto__ = t4;
    } || function(e4, t4) {
      for (var r3 in t4)
        Object.prototype.hasOwnProperty.call(t4, r3) && (e4[r3] = t4[r3]);
    })(e3, t3);
  }, function(e3, t3) {
    if (typeof t3 != "function" && t3 !== null)
      throw new TypeError("Class extends value " + String(t3) + " is not a constructor or null");
    function r3() {
      this.constructor = e3;
    }
    i2(e3, t3), e3.prototype = t3 === null ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
  }), o = this && this.__decorate || function(e3, t3, r3, i3) {
    var n3, o2 = arguments.length, a2 = o2 < 3 ? t3 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t3, r3) : i3;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
      a2 = Reflect.decorate(e3, t3, r3, i3);
    else
      for (var s2 = e3.length - 1; s2 >= 0; s2--)
        (n3 = e3[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t3, r3, a2) : n3(t3, r3)) || a2);
    return o2 > 3 && a2 && Object.defineProperty(t3, r3, a2), a2;
  };
  Object.defineProperty(t2, "__esModule", { value: true }), t2.CuboidGeometry = void 0;
  var a = r2(0), s = r2(0), u2 = function(e3) {
    function t3(r3, i3, n3) {
      var o2 = e3.call(this, r3, n3) || this;
      o2._areaScaleOffsets = new Array(), o2._colorOffsets = new Array(), o2._heightOffsets = new Array(), o2._layers = Math.max(1, i3), n3 = n3 !== void 0 && n3 !== "" ? n3 : "CuboidGeometry", o2._vertices = t3.referenceVerticesVBO(r3), o2._buffers.push(o2._vertices), o2._layout = new s.Buffer(r3, n3 + "LayoutVBO"), o2._buffers.push(o2._layout), o2._ids = new s.Buffer(r3, n3 + "IdVBO"), o2._buffers.push(o2._ids), o2._emphases = new s.Buffer(r3, n3 + "EmphasisVBO"), o2._buffers.push(o2._emphases), o2._areaScales = new s.Buffer(r3, n3 + "AreaScaleVBO"), o2._buffers.push(o2._areaScales), o2._areaScaleOffsets.length = i3, o2._colors = new s.Buffer(r3, n3 + "ColorVBO"), o2._buffers.push(o2._colors), o2._colorOffsets.length = i3, o2._heights = new s.Buffer(r3, n3 + "HeightVBO"), o2._buffers.push(o2._heights), o2._heightOffsets.length = i3;
      for (var a2 = 0; a2 < i3; ++a2)
        o2._areaScaleOffsets[a2] = 0, o2._colorOffsets[a2] = 0, o2._heightOffsets[a2] = 0;
      return o2;
    }
    return n2(t3, e3), t3.referenceVerticesVBO = function(e4) {
      var r3;
      t3.VERTICES_BY_CONTEXT.has(e4) ? r3 = t3.VERTICES_BY_CONTEXT.get(e4) : (r3 = new s.Buffer(e4, "CuboidVertexVBO"), t3.VERTICES_BY_CONTEXT.set(e4, r3), t3.REFCOUNT_BY_TEMPLATE.set(r3, 0));
      var i3 = t3.REFCOUNT_BY_TEMPLATE.get(r3) + 1;
      return t3.REFCOUNT_BY_TEMPLATE.set(r3, i3), r3;
    }, t3.unreferenceTemplateVBO = function(e4) {
      if (t3.VERTICES_BY_CONTEXT.has(e4)) {
        var r3 = t3.VERTICES_BY_CONTEXT.get(e4), i3 = t3.REFCOUNT_BY_TEMPLATE.get(r3) - 1;
        t3.REFCOUNT_BY_TEMPLATE.set(r3, i3), i3 > 0 || (r3.uninitialize(), t3.VERTICES_BY_CONTEXT.delete(e4), t3.REFCOUNT_BY_TEMPLATE.delete(r3));
      }
    }, t3.prototype.bindBuffers = function(e4) {
      var t4 = this.context.gl, r3 = this.context.gl2facade;
      this._vertices.attribEnable(this._vertexLocation, 3, t4.FLOAT, false, 20, 0, true, false), r3.vertexAttribDivisor(this._vertexLocation, 0), this._vertices.attribEnable(this._texCoordLocation, 2, t4.FLOAT, false, 20, 12, true, false), r3.vertexAttribDivisor(this._texCoordLocation, 0), this._layout.attribEnable(this._layoutLocation, 4, t4.FLOAT, false, 0, 0, true, false), r3.vertexAttribDivisor(this._layoutLocation, 1), this._ids.attribEnable(this._idLocation, 4, t4.UNSIGNED_BYTE, false, 0, 0, true, false), r3.vertexAttribDivisor(this._idLocation, 1), this._emphases.attribEnable(this._emphasisLocation, 1, t4.UNSIGNED_BYTE, false, 0, 0, true, false), r3.vertexAttribDivisor(this._emphasisLocation, 1), this._areaScales.attribEnable(this._areaScaleLocation, 1, t4.UNSIGNED_BYTE, false, 0, 0, true, false), r3.vertexAttribDivisor(this._areaScaleLocation, 1), this._colors.attribEnable(this._colorLocation, 1, t4.UNSIGNED_BYTE, false, 0, 0, true, false), r3.vertexAttribDivisor(this._colorLocation, 1), this._heights.attribEnable(this._heightLocation, 2, t4.UNSIGNED_BYTE, false, 0, 0, true, false), r3.vertexAttribDivisor(this._heightLocation, 1);
    }, t3.prototype.unbindBuffers = function(e4) {
      this._vertices.attribDisable(this._vertexLocation, false, false), this._vertices.attribDisable(this._texCoordLocation, false, false), this._layout.attribDisable(this._layoutLocation, false, false), this._ids.attribDisable(this._idLocation, false, false), this._emphases.attribDisable(this._emphasisLocation, false, false), this._areaScales.attribDisable(this._areaScaleLocation, false, false), this._colors.attribDisable(this._colorLocation, false, false), this._heights.attribDisable(this._heightLocation, false, false);
    }, t3.prototype.initialize = function(r3, i3, n3, o2, a2, s2, u3, c2) {
      r3 === void 0 && (r3 = 0), i3 === void 0 && (i3 = 1), n3 === void 0 && (n3 = 2), o2 === void 0 && (o2 = 3), a2 === void 0 && (a2 = 4), s2 === void 0 && (s2 = 5), u3 === void 0 && (u3 = 6), c2 === void 0 && (c2 = 7), this._vertexLocation = r3, this._texCoordLocation = i3, this._idLocation = o2, this._layoutLocation = n3, this._emphasisLocation = a2, this._areaScaleLocation = s2, this._colorLocation = u3, this._heightLocation = c2;
      var l2 = this.context.gl, f2 = e3.prototype.initialize.call(this, [l2.ARRAY_BUFFER, l2.ARRAY_BUFFER, l2.ARRAY_BUFFER, l2.ARRAY_BUFFER, l2.ARRAY_BUFFER, l2.ARRAY_BUFFER, l2.ARRAY_BUFFER, l2.ARRAY_BUFFER]);
      return this._vertices.data(t3.DATA, l2.STATIC_DRAW), f2 && this._vertices.valid;
    }, t3.prototype.uninitialize = function() {
      t3.unreferenceTemplateVBO(this.context), this._layout.uninitialize(), this._ids.uninitialize(), this._emphases.uninitialize(), this._areaScales.uninitialize(), this._colors.uninitialize(), this._heights.uninitialize(), e3.prototype.uninitialize.call(this);
    }, t3.prototype.update = function() {
      this.bind();
    }, t3.prototype.draw = function(e4, t4, r3, i3) {
      e4 === void 0 && (e4 = 0), t4 === void 0 && (t4 = 0), r3 === void 0 && (r3 = 0), i3 === void 0 && (i3 = 0);
      var n3 = this.context.gl, o2 = this.context.gl2facade;
      this._vertices.attribEnable(this._vertexLocation, 3, n3.FLOAT, false, 20, r3, true, false), this._vertices.attribEnable(this._texCoordLocation, 2, n3.FLOAT, false, 20, 12 + r3, true, false), this._ids.attribEnable(this._idLocation, 4, n3.UNSIGNED_BYTE, false, 4, 4 * t4, true, false), this._layout.attribEnable(this._layoutLocation, 4, n3.FLOAT, false, 16, 16 * t4, true, false), this._emphases.attribEnable(this._emphasisLocation, 1, n3.UNSIGNED_BYTE, false, 1, 1 * t4, true, false), this._areaScales.attribEnable(this._areaScaleLocation, 1, n3.UNSIGNED_BYTE, false, 1, 1 * t4 + this._areaScaleOffsets[e4], true, false), this._colors.attribEnable(this._colorLocation, 1, n3.UNSIGNED_BYTE, false, 1, 1 * t4 + this._colorOffsets[e4], true, false), this._heights.attribEnable(this._heightLocation, 2, n3.UNSIGNED_BYTE, false, 2, 2 * t4 + this._heightOffsets[e4], true, false), o2.drawArraysInstanced(n3.TRIANGLE_STRIP, 0, 4, i3);
    }, Object.defineProperty(t3.prototype, "layout", { set: function(e4) {
      this._layout.data(e4, this.context.gl.STATIC_DRAW);
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "ids", { set: function(e4) {
      this._ids.data(e4, this.context.gl.STATIC_DRAW);
    }, enumerable: false, configurable: true }), t3.prototype.areaScales = function(e4, t4, r3) {
      a.auxiliaries.assert(t4 === void 0 || t4 >= 0 && t4 <= this._layers, "expected layers to be within [0, " + this._layers + "], given " + t4), a.auxiliaries.assert(r3 === void 0 || r3 <= this._layers, "expected layers to be within [0, " + this._layers + "], given " + t4);
      var i3 = this.context.gl, n3 = e4.byteLength * (r3 || this._layers);
      this._areaScales.bytes !== 0 && this._areaScales.bytes === n3 || t4 === void 0 || this._areaScales.data(n3, i3.STATIC_DRAW), t4 !== void 0 ? (this._areaScales.subData(e4.byteLength * t4, e4), this._areaScaleOffsets[t4] = e4.byteLength * t4) : this._areaScales.data(e4, this.context.gl.STATIC_DRAW);
    }, t3.prototype.colors = function(e4, t4, r3) {
      a.auxiliaries.assert(t4 === void 0 || t4 >= 0 && t4 <= this._layers, "expected layers to be within [0, " + this._layers + "], given " + t4), a.auxiliaries.assert(r3 === void 0 || r3 <= this._layers, "expected layers to be within [0, " + this._layers + "], given " + t4);
      var i3 = this.context.gl, n3 = e4.byteLength * (r3 || this._layers);
      this._colors.bytes !== 0 && this._colors.bytes === n3 || t4 === void 0 || this._colors.data(n3, i3.STATIC_DRAW), t4 !== void 0 ? (this._colors.subData(e4.byteLength * t4, e4), this._colorOffsets[t4] = e4.byteLength * t4) : this._colors.data(e4, this.context.gl.STATIC_DRAW);
    }, Object.defineProperty(t3.prototype, "emphases", { set: function(e4) {
      this._emphases.data(e4, this.context.gl.STATIC_DRAW);
    }, enumerable: false, configurable: true }), t3.prototype.heights = function(e4, t4) {
      a.auxiliaries.assert(t4 === void 0 || t4 >= 0 && t4 <= this._layers, "expected layers to be within [0, " + this._layers + "], given " + t4);
      var r3 = this.context.gl, i3 = e4.byteLength * this._layers;
      this._heights.bytes !== 0 && this._heights.bytes === i3 || t4 === void 0 || this._heights.data(i3, r3.STATIC_DRAW), t4 !== void 0 ? (this._heights.subData(e4.byteLength * t4, e4), this._heightOffsets[t4] = e4.byteLength * t4) : this._heights.data(e4, this.context.gl.STATIC_DRAW);
    }, Object.defineProperty(t3.prototype, "layers", { get: function() {
      return this._layers;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "valid", { get: function() {
      var e4 = this._layout && this._layout.valid, t4 = this._ids && this._ids.valid, r3 = this._areaScales && this._areaScales.valid, i3 = this._colors && this._colors.valid, n3 = this._emphases && this._emphases.valid, o2 = this._heights && this._heights.valid;
      return this.initialized && this._vertices.valid && e4 && t4 && r3 && i3 && n3 && o2;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "vertexLocation", { get: function() {
      return this._vertexLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "texCoordLocation", { get: function() {
      return this._texCoordLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "layoutLocation", { get: function() {
      return this._layoutLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "idLocation", { get: function() {
      return this._idLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "emphasisLocation", { get: function() {
      return this._emphasisLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "areaScaleLocation", { get: function() {
      return this._areaScaleLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colorLocation", { get: function() {
      return this._colorLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "heightLocation", { get: function() {
      return this._heightLocation;
    }, enumerable: false, configurable: true }), t3.VERTICES_BY_CONTEXT = /* @__PURE__ */ new Map(), t3.REFCOUNT_BY_TEMPLATE = /* @__PURE__ */ new Map(), t3.DATA = new Float32Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1]), t3.BYTES_PER_VERTEX = t3.DATA.length / 6, o([s.Initializable.assert_initialized()], t3.prototype, "draw", null), t3;
  }(s.Geometry);
  t2.CuboidGeometry = u2;
}, function(e2, t2) {
  e2.exports = "//*****************************************************************************\n// seerene(tm) - A framework for analyzing and visualizing complex software systems.\n// Copyright (C) 2005 - 2019 for all source codes:\n// seerene(tm) GmbH, Potsdam, Germany\n//*****************************************************************************\n\n#if __VERSION__ == 100\n    #extension GL_EXT_draw_buffers : enable\n#endif\n\nprecision highp float;\nprecision lowp int;\n\n\n// @todo this file will be included from webgl-operate soon\n\n#if __VERSION__ == 100\n#else \n    #define varying out\n#endif\n\n\n// @todo this file will be included from webgl-operate soon\n\nvoid ndcOffset(inout vec4 vertex, in vec2 offset) {\n    vertex.xy = offset * vec2(vertex.w) + vertex.xy;\n}\n\n\n\n#if __VERSION__ == 100\n\nattribute vec3  a_vertex;\nattribute vec4  a_layout; /* [ position: vec2, extent: vec2 ] */\nattribute vec4  a_id; /* encoded uint32 id in byte4 */\nattribute float a_areaScale;\nattribute float a_color;\nattribute float a_emphasis;\nattribute vec2  a_heights; /* [ bottom: float, top: float ] */\nattribute vec2  a_texCoord;\n\n#else\n\n/* Note: do not use layout location specifier, since they take precedence over CPU managed locations. */\nin vec3  a_vertex;\nin vec4  a_layout; /* [ position: vec2, extent: vec2 ] */\nin vec4  a_id; /* encoded uint32 id in byte4 */\nin float a_areaScale;\nin float a_color;\nin float a_emphasis;\nin vec2  a_heights; /* [ bottom: float, top: float ] */\nin vec2  a_texCoord;\n\n#endif\n\n\nuniform mat4 u_viewProjection;\nuniform vec2 u_ndcOffset;\n\nuniform vec4 u_colorTable[$ColorTableLength];\n\nuniform int u_layer;\nuniform int u_face;\nuniform int u_arrows;\n\nuniform vec4 u_normalAndLambert;\n\nuniform float u_heightScale;\nuniform vec2 u_floatingGap; /* [ target gap size, minimum remaining cuboid size ] */\nuniform float u_outlineWidth;\nuniform float u_emphasisOutlineWidth;\n\n\nvarying vec4 v_baseColor;\nvarying vec4 v_outlineColor;\nvarying vec4 v_id;\n\nvarying vec4 v_uv;\nvarying vec4 v_arrowColor;\n\n\nconst float ONE_OVER_255 = 1.0 / 255.0;\nconst int FACE_INDEX_TOP = 1; /* see CuboidRenderPass.FaceIndex.Top */\n\nconst vec3 AMBIENT = vec3(0.0, 0.0, 0.0); /* @todo expose to API */\nconst float OUTLINE_LAMBERT_SCALE = 0.88; /* @todo expose to API */\n\nconst int EMPHASIS_COLOR_INDEX = 0;\n\nconst int POSITIVE_COLOR_INDEX = 1;\nconst int NEGATIVE_COLOR_INDEX = 2;\n\n\n/**\n * Transforms the cuboid vertices based on the associated face and height mapping. An earlier implementation of this\n * used the same geometry template and transformed it to either orientation. The current implementation uses a pre-set\n * vertex sequence/orientation and has to adjust the height only.\n * Appart from that, each cuboid face is moved to its position and adjusted to the provided height values. ID, color,\n * and extent along the y-axis are encoded per vertex (or even per face/cuboid) to reduce per-fragment processing.\n */\nvoid main(void)\n{\n    vec4 emphasisColor = u_colorTable[EMPHASIS_COLOR_INDEX];\n\n    float height = (a_heights[1] - a_heights[0]) * u_heightScale;\n    /* Assuming that cuboids of no relevant height mapping should still be visible on top of their parent nodes, zero-\n       height nodes are rendered when associated to the first cuboid layer. Note that this might be unwanted behavior,\n       e.g., when multiple layers are used and tha top-most layer, even if the height is zero, a relevant color mapping\n       might be stacked over all other cuboids of lower layers. */\n    if (height <= 0.0 && u_layer > 0) {\n        return;\n    }\n\n    /* Compute the position and extend of the cuboid based on the face. */\n    vec4 pos = vec4(a_layout[0], u_face == FACE_INDEX_TOP ?\n        a_heights[1] * u_heightScale : a_heights[0] * u_heightScale, a_layout[1], 0.0);\n    vec4 ext = vec4(a_layout[2], height, a_layout[3], 1.0);\n\n    /* Area scaling */\n    float shrinkage = 1.0 - a_areaScale * ONE_OVER_255;\n    pos.x += ext.x * shrinkage * 0.5;\n    pos.z += ext.z * shrinkage * 0.5;\n    ext.x -= ext.x * shrinkage;\n    ext.z -= ext.z * shrinkage;\n\n    /* Compute the final vertex position and pass through texture coordinates and layout data. */\n    vec4 vertex = vec4(a_vertex, 1.0) * ext + pos;\n\n    v_uv.st = a_texCoord.st;\n    v_id = a_id * ONE_OVER_255;\n\n    /* The y-extent provides world-space height of the cuboid that can be used for fragment-processing. */\n    v_uv[2] = 1.0; //mix(a_layout[2], a_layout[3], step(5.0, float(u_face)));\n    v_uv[3] = height / mix(a_layout[2], a_layout[3], step(5.0, float(u_face)));\n\n\n    /* REVIEW AND SIMPLIFY THE FOLLOWING COLOR COMPUTATION (probably to many states) */\n\n    /* If emphasis is < 2 use the color lookup, else apply outline color. */\n    int colorIndex = int(abs(a_color - 32.0));\n    v_baseColor = mix(u_colorTable[colorIndex], emphasisColor, step(2.0, a_emphasis));\n\n\n    float gap = 0.0;\n    /* Only if floating cuboids enabled, vertices of lower part of lateral faces, and not for first layer. */\n    if(u_floatingGap[0] > 0.0 && u_layer > 0 && a_vertex.y == 0.0 && u_face > 2) {\n\n        /* Compute screen space position for incoming vertex and an offseted one. */\n        vec4 pos0 = u_viewProjection * vertex;\n        vec4 pos1 = u_viewProjection * vec4(vertex.x, vertex.y + ext.y, vertex.z, vertex.w);\n        /* Vector pointing from pos1 to pos0 in NDC. */\n        vec3 pos0_dash = (pos1.xyz / pos1.w) - (pos0.xyz / pos0.w);\n        /* Length of pos0' in NDC is the basis for gap scale. */\n        gap = u_floatingGap[0] / length(pos0_dash);\n        vertex = mix(pos0, pos1, min(1.0 - u_floatingGap[1] / length(pos0_dash), gap));\n\n    } else {\n        vertex = u_viewProjection * vertex;\n    }\n\n\n    /* Compute color and direction of arrow pattern for fragment processing. Also account for the\n    levitation gap, so the arrow pattern does not squish or stretch. */\n    float arrow = sign(a_color - 32.0);\n    v_uv[2] *= (a_texCoord.x - 0.5);\n    v_uv[3] *= (1.0 - a_texCoord.y) * (1.0 - gap);\n\n    if(arrow > 0.0) {\n        v_uv[3] = (1.0 - v_uv[3]);\n    }\n\n\n    if(u_arrows == 0 && u_layer > 0) {\n        v_baseColor = mix(u_colorTable[POSITIVE_COLOR_INDEX], u_colorTable[NEGATIVE_COLOR_INDEX], arrow * 0.5 + 0.5);\n    } else {\n        v_baseColor = u_colorTable[colorIndex];\n    }\n\n    v_baseColor = mix(v_baseColor, emphasisColor, step(2.0, a_emphasis));\n\n    v_outlineColor.rgb = mix(v_baseColor.rgb, emphasisColor.rgb, step(1.0, a_emphasis));\n\n    /* The default outline (emphasis = 0.0) should be a little bit darker, when in outline mode (emphasis = 1.0) the\n    outline should remain unchanged (except for face lambda), and when highlighting (emphasis = 2.0) the outline is\n    lightened a little bit (invere darkening lambda). The mix is utilized to create this. */\n    v_outlineColor.rgb *= mix(OUTLINE_LAMBERT_SCALE, (1.0 / OUTLINE_LAMBERT_SCALE), a_emphasis * 0.5);\n\n    /* The outline should be darkened based on the face orientation. */\n    v_outlineColor.rgb = mix(AMBIENT, v_outlineColor.rgb, u_normalAndLambert[3]);\n    /* The outline width is encoded within the alpha channel of the outline (special if emphasized). */\n    v_outlineColor[3] = mix(u_emphasisOutlineWidth, u_outlineWidth, step(0.5, abs(a_emphasis - 1.0)));\n\n\n    v_baseColor = mix(vec4(AMBIENT, 1.0), v_baseColor, u_normalAndLambert[3]);\n\n\n    v_arrowColor = vec4(v_outlineColor.rgb, 1.0);\n    v_arrowColor.rgb *= mix(OUTLINE_LAMBERT_SCALE, 1.0, a_emphasis * 0.5);\n\n\n    ndcOffset(vertex, u_ndcOffset);\n    gl_Position = vertex;\n}\n";
}, function(e2, t2) {
  e2.exports = "//*****************************************************************************\n// seerene(tm) - A framework for analyzing and visualizing complex software systems.\n// Copyright (C) 2005 - 2019 for all source codes:\n// seerene(tm) GmbH, Potsdam, Germany\n//*****************************************************************************\n\nprecision highp float;\nprecision lowp int;\n\n#if __VERSION__ == 100\n\n    #ifdef GL_EXT_draw_buffers\n        #extension GL_EXT_draw_buffers : enable\n        #define fragColor gl_FragData[0].rgba\n        #define fragId gl_FragData[1].xyzw\n    #else\n        #define DRAW_RESTRICTED\n        #define fragColor gl_FragColor.rgba\n        #define fragId gl_FragColor.xyzw\n        #define fragDepth gl_FragColor.xyz\n    #endif\n\n    #ifdef GL_OES_standard_derivatives\n        #extension GL_OES_standard_derivatives : enable\n        #define ANTIALIASED_CONTOUR\n    #endif\n\n#else\n    layout(location = 0) out vec4 fragColor;\n    layout(location = 1) out vec4 fragId;\n#endif\n\n\n// @todo this file will be included from webgl-operate soon\n\n#if __VERSION__ == 100\n    #define texture(sampler, coord) texture2D(sampler, coord)\n#else\n    #define varying in\n#endif\n\n\n\nuniform int u_face;\nuniform int u_layer;\nuniform int u_arrows;\n\n#ifdef DRAW_RESTRICTED\n    \n// @todo this file will be included from webgl-operate soon\n\nconst float one255ths = 1.0 / 255.0;\n\nvec3 float24x1_to_uint8x3(const in float f) {\n    vec3 uint8x3 = vec3(f, fract(f * 256.0), fract(f * 65536.0));\n    return floor(uint8x3 * 256.0) * one255ths;\n}\n\nvec4 float24x1_to_uint8x4(const in float f) {\n    vec4 uint8x4 = vec4(f, fract(f * 256.0), fract(f * 65536.0), fract(f * 16777216.0));\n    return floor(uint8x4 * 256.0) * one255ths;\n}\n\nconst vec3 premultUint8x3 = vec3(255.0 / 256.0, 255.0 / 65536.0, 255.0 / 16777216.0);\nfloat uint8x3_to_float24x1(const in vec3 v) {\n    return dot(v, premultUint8x3); // a1 * b1 + a2 * b2 + a3 * b3  ;)\n}\n\nconst vec4 premultUint8x4 = vec4(255.0 / 256.0, 255.0 / 65536.0, 255.0 / 16777216.0, 255.0 / 4294967296.0);\nfloat uint8x4_to_float24x1(const in vec4 v) {\n    return dot(v, premultUint8x4); // a1 * b1 + a2 * b2 + a3 * b3 + a4 * b4  ;)\n}\n\n    uniform int u_attachment;\n#endif\n\n\nvarying vec4 v_baseColor;\nvarying vec4 v_outlineColor;\nvarying vec4 v_arrowColor;\n\nvarying vec4 v_id;\nvarying vec4 v_uv;\n\n\nvoid main(void)\n{\n#ifdef DRAW_RESTRICTED\n    if(u_attachment == 0) {\n#endif\n\n    /* Compute the actual outline of a cuboid face based on texture coordinates. */\n    vec2 awidth = fwidth(v_uv.st) * v_outlineColor[3];\n    vec2 awidth2 = fwidth(v_uv.zw);\n\n    vec4 ctest; /* Used for countour/ctest testing. */\n    ctest.xy = step(v_uv.st - awidth.xy, vec2(0.0));\n    ctest.zw = step(vec2(1.0), v_uv.st + awidth.xy);\n    float outline = clamp(dot(ctest, vec4(1.0)), 0.0, 1.0);\n\n    /* @todo optimize all this arrow pattern code. */\n    float arrow = 0.0;\n    if(u_arrows == 1 && u_face > 2 && u_layer > 0) {\n        float d = abs(v_uv[2]) * 4.0;\n        //outline = max(outline, step(1.0, mod(v_uv[3] * 4.0 + d, 2.0)));\n        arrow = step(1.0, mod(v_uv[3] * 4.0 + d, 2.0));\n        //outline = max(outline, step(1.0, mod(v_uv[3] * 250.0, 2.0)));\n    } else {\n        arrow = 0.0; //step(0.5, float(u_layer));\n    }\n\n    fragColor = mix(mix(v_baseColor, v_arrowColor, arrow), vec4(v_outlineColor.rgb, 1.0), outline);\n\n#ifdef DRAW_RESTRICTED\n    } else if(u_attachment == 1) {\n#endif\n\n    fragId = v_id;\n\n#ifdef DRAW_RESTRICTED\n    } else if(u_attachment == 2) {\n        fragDepth = float24x1_to_uint8x3(gl_FragCoord.z);\n    }\n#endif\n}\n";
}, function(e2, t2, r2) {
  var i2, n2 = this && this.__extends || (i2 = function(e3, t3) {
    return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t4) {
      e4.__proto__ = t4;
    } || function(e4, t4) {
      for (var r3 in t4)
        Object.prototype.hasOwnProperty.call(t4, r3) && (e4[r3] = t4[r3]);
    })(e3, t3);
  }, function(e3, t3) {
    if (typeof t3 != "function" && t3 !== null)
      throw new TypeError("Class extends value " + String(t3) + " is not a constructor or null");
    function r3() {
      this.constructor = e3;
    }
    i2(e3, t3), e3.prototype = t3 === null ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
  }), o = this && this.__decorate || function(e3, t3, r3, i3) {
    var n3, o2 = arguments.length, a2 = o2 < 3 ? t3 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t3, r3) : i3;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
      a2 = Reflect.decorate(e3, t3, r3, i3);
    else
      for (var s2 = e3.length - 1; s2 >= 0; s2--)
        (n3 = e3[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t3, r3, a2) : n3(t3, r3)) || a2);
    return o2 > 3 && a2 && Object.defineProperty(t3, r3, a2), a2;
  };
  Object.defineProperty(t2, "__esModule", { value: true }), t2.QuadGeometry = void 0;
  var a = r2(0), s = function(e3) {
    function t3(t4, r3) {
      var i3 = e3.call(this, t4, r3) || this;
      return r3 = r3 !== void 0 && r3 !== "" ? r3 : "QuadGeometry", i3._vertices = new a.Buffer(t4, r3 + "VertexVBO"), i3._buffers.push(i3._vertices), i3._layout = new a.Buffer(t4, r3 + "LayoutVBO"), i3._buffers.push(i3._layout), i3._ids = new a.Buffer(t4, r3 + "IdVBO"), i3._buffers.push(i3._ids), i3._emphases = new a.Buffer(t4, r3 + "EmphasisVBO"), i3._buffers.push(i3._emphases), i3._colors = new a.Buffer(t4, r3 + "ColorVBO"), i3._buffers.push(i3._colors), i3;
    }
    return n2(t3, e3), t3.prototype.bindBuffers = function(e4) {
      var t4 = this.context.gl, r3 = this.context.gl2facade;
      this._vertices.attribEnable(this._vertexLocation, 2, t4.FLOAT, false, 0, 0, true, false), r3.vertexAttribDivisor(this._vertexLocation, 0), this._layout.attribEnable(this._layoutLocation, 4, t4.FLOAT, false, 0, 0, true, false), r3.vertexAttribDivisor(this._layoutLocation, 1), this._ids.attribEnable(this._idLocation, 4, t4.UNSIGNED_BYTE, false, 0, 0, true, false), r3.vertexAttribDivisor(this._idLocation, 1), this._emphases.attribEnable(this._emphasisLocation, 1, t4.UNSIGNED_BYTE, false, 0, 0, true, false), r3.vertexAttribDivisor(this._emphasisLocation, 1), this._colors.attribEnable(this._colorLocation, 1, t4.UNSIGNED_BYTE, false, 0, 0, true, false), r3.vertexAttribDivisor(this._colorLocation, 1);
    }, t3.prototype.unbindBuffers = function(e4) {
      this._vertices.attribDisable(this.vertexLocation, false, false), this._layout.attribDisable(this._layoutLocation, false, false), this._ids.attribDisable(this._idLocation, false, false), this._emphases.attribDisable(this._emphasisLocation, false, false), this._colors.attribDisable(this._colorLocation, false, false);
    }, t3.prototype.initialize = function(r3, i3, n3, o2, a2) {
      r3 === void 0 && (r3 = 0), i3 === void 0 && (i3 = 2), n3 === void 0 && (n3 = 3), o2 === void 0 && (o2 = 4), a2 === void 0 && (a2 = 5), this._vertexLocation = r3, this._idLocation = n3, this._layoutLocation = i3, this._colorLocation = a2, this._emphasisLocation = o2;
      var s2 = this.context.gl, u2 = e3.prototype.initialize.call(this, [s2.ARRAY_BUFFER, s2.ARRAY_BUFFER, s2.ARRAY_BUFFER, s2.ARRAY_BUFFER, s2.ARRAY_BUFFER]);
      return this._vertices.data(t3.DATA, s2.STATIC_DRAW), u2 && this._vertices.valid;
    }, t3.prototype.update = function() {
      this.bind();
    }, t3.prototype.draw = function(e4, t4) {
      e4 === void 0 && (e4 = 0), t4 === void 0 && (t4 = 0);
      var r3 = this.context.gl, i3 = this.context.gl2facade;
      this._ids.attribEnable(this._idLocation, 4, r3.UNSIGNED_BYTE, false, 4, 4 * e4, true, false), this._layout.attribEnable(this._layoutLocation, 4, r3.FLOAT, false, 16, 16 * e4, true, false), this._colors.attribEnable(this._colorLocation, 1, r3.UNSIGNED_BYTE, false, 1, 1 * e4, true, false), this._emphases.attribEnable(this._emphasisLocation, 1, r3.UNSIGNED_BYTE, false, 1, 1 * e4, true, false), i3.drawArraysInstanced(r3.TRIANGLE_STRIP, 0, 4, t4);
    }, Object.defineProperty(t3.prototype, "layout", { set: function(e4) {
      this._layout.data(e4, this.context.gl.STATIC_DRAW);
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "ids", { set: function(e4) {
      this._ids.data(e4, this.context.gl.STATIC_DRAW);
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colors", { set: function(e4) {
      this._colors.data(e4, this.context.gl.STATIC_DRAW);
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "emphases", { set: function(e4) {
      this._emphases.data(e4, this.context.gl.STATIC_DRAW);
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "valid", { get: function() {
      var e4 = this._layout && this._layout.valid, t4 = this._ids && this._ids.valid, r3 = this._colors && this._colors.valid, i3 = this._emphases && this._emphases.valid;
      return this.initialized && this._vertices.valid && e4 && t4 && r3 && i3;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "vertexLocation", { get: function() {
      return this._vertexLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "layoutLocation", { get: function() {
      return this._layoutLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "idLocation", { get: function() {
      return this._idLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "emphasisLocation", { get: function() {
      return this._emphasisLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "colorLocation", { get: function() {
      return this._colorLocation;
    }, enumerable: false, configurable: true }), t3.DATA = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]), o([a.Initializable.assert_initialized()], t3.prototype, "draw", null), t3;
  }(a.Geometry);
  t2.QuadGeometry = s;
}, function(e2, t2) {
  e2.exports = "//*****************************************************************************\n// seerene(tm) - A framework for analyzing and visualizing complex software systems.\n// Copyright (C) 2005 - 2019 for all source codes:\n// seerene(tm) GmbH, Potsdam, Germany\n//*****************************************************************************\n\n#if __VERSION__ == 100\n    #extension GL_EXT_draw_buffers : enable\n#endif\n\nprecision highp float;\nprecision lowp int;\n\n\n// @todo this file will be included from webgl-operate soon\n\n#if __VERSION__ == 100\n#else \n    #define varying out\n#endif\n\n\n// @todo this file will be included from webgl-operate soon\n\nvoid ndcOffset(inout vec4 vertex, in vec2 offset) {\n    vertex.xy = offset * vec2(vertex.w) + vertex.xy;\n}\n\n\n\n#if __VERSION__ == 100\n\nattribute vec2 a_vertex;\nattribute vec4 a_layout; /* [ position: vec2, extent: vec2 ] */\nattribute vec4 a_id; /* encoded uint32 id in byte4 */\nattribute float a_color; /* color index as unsigned byte */\nattribute float a_emphasis; /* emphasis mode as unsigned byte */\n\n#else\n\n/* Note: do not use layout location specifier, since they take precedence over CPU managed locations. */\nin vec2 a_vertex;\nin vec4 a_layout; /* [ position: vec2, extent: vec2 ] */\nin vec4 a_id; /* encoded uint32 id in byte4 */\nin float a_color; /* color index as unsigned byte */\nin float a_emphasis; /* emphasis mode as unsigned byte */\n\n#endif\n\n\nuniform mat4 u_viewProjection;\nuniform vec2 u_ndcOffset;\n\nuniform vec4 u_colorTable[$ColorTableLength];\n\nuniform float u_outlineWidth;\nuniform float u_emphasisOutlineWidth;\n\n\nvarying vec4 v_baseColor;\nvarying vec4 v_outlineColor;\nvarying vec4 v_id;\n\nvarying vec2 v_uv;\nvarying vec4 v_layout;\n\n\nconst float ONE_OVER_255 = 1.0 / 255.0;\n\nconst float OUTLINE_LAMBERT_SCALE = 0.88; /* @todo expose to API */\n\nconst int EMPHASIS_COLOR_INDEX = 0;\n\n\nvoid main(void)\n{\n    vec4 emphasisColor = u_colorTable[EMPHASIS_COLOR_INDEX];\n\n    vec4 pos = vec4(a_layout[0], 0.0, a_layout[1], 0.0);\n    vec4 ext = vec4(a_layout[2], 0.0, a_layout[3], 1.0);\n\n    vec4 vertex = vec4(a_vertex.x, 0.0, a_vertex.y, 1.0) * ext + pos;\n\n    v_uv = vertex.xz;\n    v_layout = a_layout;\n    v_id = a_id * ONE_OVER_255;\n\n    vertex = u_viewProjection * vertex;\n\n    /* If emphasis is < 2 use the color lookup, else apply outline color. */\n    v_baseColor = mix(u_colorTable[int(a_color)], emphasisColor, step(2.0, a_emphasis));\n    v_outlineColor.rgb = mix(v_baseColor.rgb, emphasisColor.rgb, step(1.0, a_emphasis));\n\n    /* The default outline (emphasis = 0.0) should be a little bit darker, when in outline mode (emphasis = 1.0) the\n    outline should remain unchanged (except for face lambda), and when highlighting (emphasis = 2.0) the outline is\n    lightened a little bit (invere darkening lambda). The mix is utilized to create this. */\n    v_outlineColor.rgb *= mix(OUTLINE_LAMBERT_SCALE, (1.0 / OUTLINE_LAMBERT_SCALE), a_emphasis * 0.5);\n\n    /* The outline width is encoded within the alpha channel of the outline (special if emphasized). */\n    v_outlineColor[3] = mix(u_emphasisOutlineWidth, u_outlineWidth, step(0.5, abs(a_emphasis - 1.0)));\n\n    ndcOffset(vertex, u_ndcOffset);\n    gl_Position = vertex;\n}\n";
}, function(e2, t2) {
  e2.exports = "//*****************************************************************************\n// seerene(tm) - A framework for analyzing and visualizing complex software systems.\n// Copyright (C) 2005 - 2019 for all source codes:\n// seerene(tm) GmbH, Potsdam, Germany\n//*****************************************************************************\n\nprecision highp float;\nprecision lowp int;\n\n#if __VERSION__ == 100\n\n    #ifdef GL_EXT_draw_buffers\n        #extension GL_EXT_draw_buffers : enable\n        #define fragColor gl_FragData[0].rgba\n        #define fragId gl_FragData[1].xyzw\n    #else\n        #define DRAW_RESTRICTED\n        #define fragColor gl_FragColor.rgba\n        #define fragId gl_FragColor.xyzw\n        #define fragDepth gl_FragColor.xyz\n    #endif\n\n    #ifdef GL_OES_standard_derivatives\n        #extension GL_OES_standard_derivatives : enable\n        #define ANTIALIASED_CONTOUR\n    #endif\n\n#else\n    layout(location = 0) out vec4 fragColor;\n    layout(location = 1) out vec4 fragId;\n#endif\n\n\n// @todo this file will be included from webgl-operate soon\n\n#if __VERSION__ == 100\n    #define texture(sampler, coord) texture2D(sampler, coord)\n#else\n    #define varying in\n#endif\n\n\n\n#ifdef DRAW_RESTRICTED\n    \n// @todo this file will be included from webgl-operate soon\n\nconst float one255ths = 1.0 / 255.0;\n\nvec3 float24x1_to_uint8x3(const in float f) {\n    vec3 uint8x3 = vec3(f, fract(f * 256.0), fract(f * 65536.0));\n    return floor(uint8x3 * 256.0) * one255ths;\n}\n\nvec4 float24x1_to_uint8x4(const in float f) {\n    vec4 uint8x4 = vec4(f, fract(f * 256.0), fract(f * 65536.0), fract(f * 16777216.0));\n    return floor(uint8x4 * 256.0) * one255ths;\n}\n\nconst vec3 premultUint8x3 = vec3(255.0 / 256.0, 255.0 / 65536.0, 255.0 / 16777216.0);\nfloat uint8x3_to_float24x1(const in vec3 v) {\n    return dot(v, premultUint8x3); // a1 * b1 + a2 * b2 + a3 * b3  ;)\n}\n\nconst vec4 premultUint8x4 = vec4(255.0 / 256.0, 255.0 / 65536.0, 255.0 / 16777216.0, 255.0 / 4294967296.0);\nfloat uint8x4_to_float24x1(const in vec4 v) {\n    return dot(v, premultUint8x4); // a1 * b1 + a2 * b2 + a3 * b3 + a4 * b4  ;)\n}\n\n    uniform int u_attachment;\n#endif\n\n\nvarying vec4 v_baseColor;\nvarying vec4 v_outlineColor;\nvarying vec4 v_id;\n\nvarying mediump vec2 v_uv;\nvarying mediump vec4 v_layout;\n\n\nvoid main(void)\n{\n#ifdef DRAW_RESTRICTED\n    if(u_attachment == 0) {\n#endif\n\n    /* Compute the actual outline of a cuboid face based on texture coordinates. */\n    vec2 awidth = fwidth(v_uv.st) * v_outlineColor[3];\n\n    vec4 ctest; /* Used for countour/ctest testing. */\n    ctest.xy = step((v_uv.st - v_layout.xy) - awidth.xy, vec2(0.0));\n    ctest.zw = step(vec2(0.0), (v_uv.st - v_layout.xy) - v_layout.zw + awidth.xy);\n    float outline = clamp(dot(ctest, vec4(1.0)), 0.0, 1.0);\n\n    fragColor = mix(v_baseColor, vec4(v_outlineColor.rgb, 1.0), outline);\n\n#ifdef DRAW_RESTRICTED\n    } else if(u_attachment == 1) {\n#endif\n\n    fragId = v_id;\n\n#ifdef DRAW_RESTRICTED\n    } else if(u_attachment == 2) {\n        fragDepth = float24x1_to_uint8x3(gl_FragCoord.z);\n    }\n#endif\n}\n";
}, function(e2, t2, r2) {
  var i2, n2 = this && this.__extends || (i2 = function(e3, t3) {
    return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t4) {
      e4.__proto__ = t4;
    } || function(e4, t4) {
      for (var r3 in t4)
        Object.prototype.hasOwnProperty.call(t4, r3) && (e4[r3] = t4[r3]);
    })(e3, t3);
  }, function(e3, t3) {
    if (typeof t3 != "function" && t3 !== null)
      throw new TypeError("Class extends value " + String(t3) + " is not a constructor or null");
    function r3() {
      this.constructor = e3;
    }
    i2(e3, t3), e3.prototype = t3 === null ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
  }), o = this && this.__decorate || function(e3, t3, r3, i3) {
    var n3, o2 = arguments.length, a2 = o2 < 3 ? t3 : i3 === null ? i3 = Object.getOwnPropertyDescriptor(t3, r3) : i3;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
      a2 = Reflect.decorate(e3, t3, r3, i3);
    else
      for (var s2 = e3.length - 1; s2 >= 0; s2--)
        (n3 = e3[s2]) && (a2 = (o2 < 3 ? n3(a2) : o2 > 3 ? n3(t3, r3, a2) : n3(t3, r3)) || a2);
    return o2 > 3 && a2 && Object.defineProperty(t3, r3, a2), a2;
  };
  Object.defineProperty(t2, "__esModule", { value: true }), t2.ScreenAlignedQuadGeometry = void 0;
  var a = r2(0), s = r2(0).auxiliaries.assert, u2 = function(e3) {
    function t3(t4, r3) {
      var i3 = e3.call(this, t4, r3) || this;
      return s(t4.isWebGL2 || t4.supportsInstancedArrays, "expected extension 'ANGLE_instanced_arrays' to be supported"), r3 = r3 !== void 0 && r3 !== "" ? r3 : "ScreenAlignedQuadGeometry", i3._vertices = new a.Buffer(t4, r3 + "VertexVBO"), i3._buffers.push(i3._vertices), i3._origins = new a.Buffer(t4, r3 + "OriginVBO"), i3._buffers.push(i3._origins), i3._extents = new a.Buffer(t4, r3 + "ExtentVBO"), i3._buffers.push(i3._extents), i3._offsets = new a.Buffer(t4, r3 + "OffsetVBO"), i3._buffers.push(i3._offsets), i3._pointyCorners = new a.Buffer(t4, r3 + "PointyCornerVBO"), i3._buffers.push(i3._pointyCorners), i3;
    }
    return n2(t3, e3), t3.prototype.bindBuffers = function(e4) {
      var t4 = this.context.gl, r3 = this.context.gl2facade;
      this._vertices.attribEnable(this._vertexLocation, 2, t4.FLOAT, false, 8, 0, true, false), r3.vertexAttribDivisor(this._vertexLocation, 0), this._origins.attribEnable(this._originLocation, 3, t4.FLOAT, false, 12, 0, true, false), r3.vertexAttribDivisor(this._originLocation, 1), this._extents.attribEnable(this._extentLocation, 2, t4.FLOAT, false, 8, 0, true, false), r3.vertexAttribDivisor(this._extentLocation, 1), this._offsets.attribEnable(this._offsetLocation, 2, t4.FLOAT, false, 8, 0, true, false), r3.vertexAttribDivisor(this._offsetLocation, 1), this._pointyCorners.attribEnable(this._pointyCornerLocation, 1, t4.UNSIGNED_BYTE, false, 1, 0, true, false), r3.vertexAttribDivisor(this._pointyCornerLocation, 1);
    }, t3.prototype.unbindBuffers = function(e4) {
      this._vertices.attribDisable(this._vertexLocation, false, false), this._origins.attribDisable(this._originLocation, false, false), this._extents.attribDisable(this._extentLocation, false, false), this._offsets.attribDisable(this._offsetLocation, false, false), this._pointyCorners.attribDisable(this._pointyCornerLocation, false, false);
    }, t3.prototype.initialize = function(r3, i3, n3, o2, a2) {
      r3 === void 0 && (r3 = 0), i3 === void 0 && (i3 = 1), n3 === void 0 && (n3 = 2), o2 === void 0 && (o2 = 3), a2 === void 0 && (a2 = 4), this._vertexLocation = r3, this._originLocation = i3, this._extentLocation = n3, this._offsetLocation = o2, this._pointyCornerLocation = a2;
      var s2 = this.context.gl, u3 = e3.prototype.initialize.call(this, [s2.ARRAY_BUFFER, s2.ARRAY_BUFFER, s2.ARRAY_BUFFER, s2.ARRAY_BUFFER, s2.ARRAY_BUFFER]);
      return this._vertices.data(t3.VERTICES, s2.STATIC_DRAW), u3 && this._vertices.valid;
    }, t3.prototype.updateData = function(e4, t4, r3, i3) {
      this.bind(), this._count = e4.length / 3, this._origins.data(e4, this.context.gl.STATIC_DRAW), this._extents.data(t4, this.context.gl.STATIC_DRAW), this._offsets.data(r3, this.context.gl.STATIC_DRAW), this._pointyCorners.data(i3, this.context.gl.STATIC_DRAW);
    }, t3.prototype.update = function() {
      this.bind();
    }, t3.prototype.draw = function(e4) {
      if (e4 === void 0 && (e4 = 0), this._count) {
        var t4 = this.context.gl, r3 = this.context.gl2facade;
        this._vertices.attribEnable(this._vertexLocation, 2, t4.FLOAT, false, 8, 0, true, false), this._origins.attribEnable(this._originLocation, 3, t4.FLOAT, false, 12, 12 * e4, true, false), this._extents.attribEnable(this._extentLocation, 2, t4.FLOAT, false, 8, 8 * e4, true, false), this._offsets.attribEnable(this._offsetLocation, 2, t4.FLOAT, false, 8, 8 * e4, true, false), this._pointyCorners.attribEnable(this._pointyCornerLocation, 1, t4.UNSIGNED_BYTE, false, 1, 1 * e4, true, false), r3.drawArraysInstanced(t4.TRIANGLE_STRIP, 0, 4, this._count);
      }
    }, Object.defineProperty(t3.prototype, "valid", { get: function() {
      return this.initialized && this._vertices.valid && this._origins && this._origins.valid && this._offsets && this._offsets.valid && this._extents && this._extents.valid && this._pointyCorners && this._pointyCorners.valid;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "vertexLocation", { get: function() {
      return this._vertexLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "originLocation", { get: function() {
      return this._originLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "extentLocation", { get: function() {
      return this._extentLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "offsetLocation", { get: function() {
      return this._offsetLocation;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "pointyCornerLocation", { get: function() {
      return this._pointyCornerLocation;
    }, enumerable: false, configurable: true }), t3.VERTICES = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]), o([a.Initializable.assert_initialized()], t3.prototype, "draw", null), t3;
  }(a.Geometry);
  t2.ScreenAlignedQuadGeometry = u2;
}, function(e2, t2) {
  e2.exports = "//*****************************************************************************\n// seerene(tm) - A framework for analyzing and visualizing complex software systems.\n// Copyright (C) 2005 - 2019 for all source codes:\n// seerene(tm) GmbH, Potsdam, Germany\n//*****************************************************************************\n\nprecision highp float;\nprecision lowp int;\n\n\n// @todo this file will be included from webgl-operate soon\n\n#if __VERSION__ == 100\n#else \n    #define varying out\n#endif\n\n\n// @todo this file will be included from webgl-operate soon\n\nvoid ndcOffset(inout vec4 vertex, in vec2 offset) {\n    vertex.xy = offset * vec2(vertex.w) + vertex.xy;\n}\n\n\n\n#if __VERSION__ == 100\n\n#extension GL_EXT_draw_buffers : enable\nattribute vec2 a_vertex;\nattribute vec3 a_origin;\nattribute vec2 a_extent;\nattribute vec2 a_offset;\nattribute float a_pointyCorner;\n\n#else\n\nin vec2 a_vertex;\nin vec3 a_origin;\nin vec2 a_extent;\nin vec2 a_offset;\nin float a_pointyCorner; // pointy corner number as 1: ll, 2: ul, 3: lr, 4: ur\n\n#endif\n\nuniform vec2 u_ndcOffset;\nuniform mat4 u_viewProjection;\nuniform float u_aspectRatio;\n\nvarying float v_radius;\nvarying vec2 v_uv; // values in range [0, v_extent]\nvarying vec2 v_extent;\nvarying float v_pointyCornerLeft; // 0 for right, 1 for left\nvarying float v_pointyCornerBottom; // 0 for top, 1 for bottom\n\n/**\n * Returns accurate MOD when arguments are approximate integers.\n * Source: https://stackoverflow.com/a/36078859\n */\nfloat modI(float a, float b) {\n    float m = a - floor((a + 0.5) / b) * b;\n    return floor(m + 0.5);\n}\n\nvoid main(void)\n{\n    v_pointyCornerLeft = step(a_pointyCorner, 2.0);\n    v_pointyCornerBottom = modI(a_pointyCorner, 2.0);\n\n    /* POSITIONING */\n    /* quad data as flat array: [0, 0,  0, 1,  1, 0,  1, 1] (a_vertex), which translates to ll, lr, ul, ur corners.\n     * 2-------4\n     * |  \\    |\n     * |    \\  |\n     * 1-------3\n     * The current vertex is calculated based on the current quad corners and the extent attributes.\n     */\n\n    vec2 extent = a_extent;\n    vec2 offset = a_offset;\n\n    // apply more extent to make space for rounded corners (see fragment shader for more information)\n    float radius = extent.y * u_aspectRatio * 0.5;\n    extent.x += radius;\n    offset.x -= mix(radius, 0.0, step(a_pointyCorner, 2.0));\n\n    v_extent = vec2(extent.x, extent.y * u_aspectRatio);\n    v_uv = a_vertex * vec2(extent.x, extent.y * u_aspectRatio);\n    v_radius = radius;\n\n    vec4 origin = u_viewProjection * vec4(a_origin, 1.0);\n    vec2 originNDC = vec2(origin.x / origin.w, origin.y / origin.w);\n    vec4 vertex = vec4(originNDC + a_vertex * extent + offset, origin.z/origin.w, 1.0);\n\n    ndcOffset(vertex, u_ndcOffset);\n    gl_Position = vertex;\n}\n";
}, function(e2, t2) {
  e2.exports = '//*****************************************************************************\n// seerene(tm) - A framework for analyzing and visualizing complex software systems.\n// Copyright (C) 2005 - 2019 for all source codes:\n// seerene(tm) GmbH, Potsdam, Germany\n//*****************************************************************************\n\nprecision highp float;\nprecision lowp int;\n\n#if __VERSION__ == 100\n    #define fragColor gl_FragColor\n#else\n    layout(location = 0) out vec4 fragColor;\n#endif\n\n\n// @todo this file will be included from webgl-operate soon\n\n#if __VERSION__ == 100\n    #define texture(sampler, coord) texture2D(sampler, coord)\n#else\n    #define varying in\n#endif\n\n\nvarying float v_radius;\nvarying vec2 v_uv; // values in range [0, v_extent]\nvarying vec2 v_extent;\nvarying float v_pointyCornerLeft; // 0 for right, 1 for left\nvarying float v_pointyCornerBottom; // 0 for top, 1 for bottom\n\nconst float ALPHA = 0.8;\nconst vec3 COLOR = vec3(1.0);\n\nvoid main(void)\n{\n    /* Instead of rendering normal quads, we want to render each quad with rounded corners, so that the\n     * quads have the shape of a 2D "pill". Moreover, there will be one corner that retains its pointy\n     * shape (in summary, a quad will look like a very simplified speech bubble.)\n     * To get the rounded sides of the pill, we will use 2 circles (one left, one right) with the radius\n     * `v_radius`, which is half of the quads\'s vertical extent.\n     * This code is optimized to avoid conditioned branching (if-else), and uses * and + instead of\n     * && and ||, respectively.\n     */\n\n    // middle points of the circle we use to calculate the rounded corners\n    vec2 mLeft =  vec2(v_radius);\n    vec2 mRight = vec2(v_extent.x - v_radius, v_radius);\n\n    // define where the borders start, so that we use the correct half of the circle\n    float borderLeft =   step(v_uv.x, mLeft.x);\n    float borderBottom = step(v_uv.y, mLeft.y);\n    float borderRight =  step(mRight.x, v_uv.x);\n    float borderTop =    step(mRight.y, v_uv.y);\n\n    float alphaLeft =  step(v_radius, distance(v_uv, mLeft))  * borderLeft;\n    float alphaRight = step(v_radius, distance(v_uv, mRight)) * borderRight;\n\n    // If we combine both alphaLeft and alphaRight, we get the pill shape. However, we want one corner\n    // to stay pointy, so we separate the alpha by the 4 border areas:\n    float alphaLeftBottom =  alphaLeft  * borderBottom;\n    float alphaLeftTop =     alphaLeft  * borderTop;\n    float alphaRightBottom = alphaRight * borderBottom;\n    float alphaRightTop =    alphaRight * borderTop;\n\n    // don\'t apply the rounded corner where the pointy corner should be\n    float pointyLeftBottom =         v_pointyCornerLeft  *        v_pointyCornerBottom;\n    float pointyLeftTop =            v_pointyCornerLeft  * (1.0 - v_pointyCornerBottom);\n    float pointyRightBottom = (1.0 - v_pointyCornerLeft) *        v_pointyCornerBottom;\n    float pointyRightTop =    (1.0 - v_pointyCornerLeft) * (1.0 - v_pointyCornerBottom);\n\n    // based on where the 3 rounded corners should be, we want to "cut away" certain fragments\n    float shouldBeCutAway = sign(\n          alphaLeftBottom  * (1.0 - pointyLeftBottom)\n        + alphaLeftTop     * (1.0 - pointyLeftTop)\n        + alphaRightBottom * (1.0 - pointyRightBottom)\n        + alphaRightTop    * (1.0 - pointyRightTop));\n\n    float alpha = mix(ALPHA, 0.0, shouldBeCutAway);\n    fragColor = vec4(COLOR, alpha);\n}\n';
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.Timer = void 0;
  var i2 = function() {
    function e3(e4) {
      e4 === void 0 && (e4 = 1), this._deltaTime = 0, this._totalTime = 0, this._paused = false, this._pauseStart = 0, this._timeMultiplier = 1, this._timeMultiplier = e4, this._updateCallback = function() {
      };
    }
    return e3.prototype.pause = function() {
      this._paused || (this._pauseStart = window.performance.now(), this._paused = true);
    }, e3.prototype.unpause = function() {
      if (this._paused) {
        var e4 = window.performance.now() - this._pauseStart;
        this._lastUpdate && (this._lastUpdate += e4), this._paused = false;
      }
    }, Object.defineProperty(e3.prototype, "isPaused", { get: function() {
      return this._paused;
    }, enumerable: false, configurable: true }), e3.prototype.update = function() {
      if (this._paused)
        return 0;
      var e4 = window.performance.now();
      return this._deltaTime = this._lastUpdate ? (e4 - this._lastUpdate) * this._timeMultiplier : 0, this._totalTime += this._deltaTime, this._lastUpdate = e4, this._updateCallback(), this._deltaTime;
    }, e3.prototype.updateFixed = function(e4) {
      if (!this._paused) {
        var t3 = window.performance.now();
        this._deltaTime = e4 * this._timeMultiplier, this._totalTime += this._deltaTime, this._lastUpdate = t3, this._updateCallback();
      }
    }, e3.prototype.reset = function() {
      this.updateFixed(0), this.totalTime = 0;
    }, Object.defineProperty(e3.prototype, "deltaTime", { get: function() {
      return this._deltaTime;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "totalTime", { get: function() {
      return this._totalTime;
    }, set: function(e4) {
      this._totalTime = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "timeMultiplier", { get: function() {
      return this._timeMultiplier;
    }, set: function(e4) {
      this._timeMultiplier = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "onUpdate", { set: function(e4) {
      this._updateCallback = e4;
    }, enumerable: false, configurable: true }), e3;
  }();
  t2.Timer = i2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.AttributeTransformations = void 0;
  var i2 = r2(0), n2 = i2.auxiliaries.assert, o = i2.auxiliaries.log, a = i2.auxiliaries.logIf, s = i2.auxiliaries.LogLevel, u2 = r2(1), c2 = r2(7), l2 = r2(3);
  !function(e3) {
    e3.normalization_backup = function(e4, t3) {
      var r3, i3 = new Array(e4.numberOfNodes);
      if (t3.topology.format === l2.Topology.InputFormat.Interleaved) {
        var o2 = t3.topology.edges, u3 = 2 * (e4.numberOfNodes - 1);
        a(o2.length !== u3, s.Warning, "expected an edgelist of size " + u3 + " instead of " + o2.length), r3 = function(e5) {
          var t4 = 2 * (e5 - 1);
          return n2(t4 < o2.length, "expected an index within the ranges of edges but got " + e5), t4 < o2.length ? [o2[t4 + 0], o2[t4 + 1]] : [c2.Node.INVALID_INDEX, c2.Node.INVALID_INDEX];
        };
      } else {
        var f2 = t3.topology.edges;
        u3 = e4.numberOfNodes - 1;
        a(f2.length !== u3, s.Warning, "expected an edgelist of size " + u3 + " instead of " + f2.length), r3 = function(e5) {
          return n2(e5 - 1 < f2.length, "expected an index within the ranges of edges but got" + e5), e5 - 1 < f2.length ? f2[e5 - 1] : [c2.Node.INVALID_INDEX, c2.Node.INVALID_INDEX];
        };
      }
      i3[0] = 0;
      for (var h2 = 1; h2 < e4.numberOfNodes; h2++) {
        var d2 = void 0, p2 = r3(h2);
        if (h2 + 1 < e4.numberOfNodes)
          d2 = r3(h2 + 1)[0] === p2[1] ? e4.innerNodeIndexById(p2[1]) : e4.leafNodeIndexById(p2[1]);
        else
          d2 = e4.leafNodeIndexById(p2[1]);
        n2(d2 !== void 0, "expected a valid index, given " + d2 + " for " + p2[1]), i3[h2] = d2;
      }
      return i3;
    }, e3.renormalize = function(e4, t3) {
      var r3 = new Float32Array(t3.length);
      a(t3.length !== e4.length, s.Warning, "expected value buffer to be sized with the number of nodes but got " + e4.length + " instead of " + t3.length);
      for (var i3 = 0; i3 < r3.length; ++i3)
        r3[t3[i3]] = e4[i3];
      return r3;
    }, e3.renormalize_using_intermediate_linearization = function(e4, t3, r3) {
      var i3 = new Float32Array(r3.length);
      switch (i3.fill(NaN), t3.type) {
        case u2.AttributeBuffer.LinearizationMapping.IdMapping:
          n2(false, "Id-Mapping not yet implemented");
          break;
        case u2.AttributeBuffer.LinearizationMapping.IndexMapping:
          for (var o2 = 0; o2 < e4.length; ++o2) {
            var a2 = t3.mapping[o2];
            a2 !== void 0 && (i3[r3[a2]] = e4[o2]);
          }
      }
      return i3;
    }, e3.applyTransformations = function(t3, r3, i3, n3, o2) {
      for (var a2 = 0, s2 = n3; a2 < s2.length; a2++) {
        var u3 = s2[a2];
        switch (u3.type) {
          case "normalize":
            e3.applyNormalization(t3, i3, u3);
            break;
          case "range-transform":
            e3.applyRangeTransform(t3, i3, u3);
            break;
          case "propagate-up":
            e3.applyPropagation(t3, i3, u3);
            break;
          case "fill-invalid":
            e3.applyFill(t3, i3, u3);
            break;
          case "mask":
            e3.applyMask(t3, i3, u3);
            break;
          case "clamp":
            e3.applyClamp(t3, i3, u3);
            break;
          case "threshold":
            e3.applyThreshold(t3, i3, u3);
            break;
          case "compare":
            e3.applyCompare(t3, i3, u3);
            break;
          case "transform":
            e3.applyTransform(t3, r3, i3, u3, o2);
            break;
          case "discretize":
            e3.applyDiscretization(t3, i3, u3);
            break;
          case "callback":
            e3.applyCallback(t3, i3, u3);
        }
      }
      return i3;
    }, e3.applyNormalization = function(e4, t3, r3) {
      if (e4.numberOfLeafNodes !== 0) {
        var i3 = 0, o2 = 1;
        switch (r3.operation) {
          case "zero-to-max":
            var a2;
            e4.forEachLeafNode(function(e5) {
              var r4 = t3[e5.index];
              a2 = a2 === void 0 ? r4 : Math.max(a2, r4);
            }), n2(a2 !== void 0, "Valid max expected"), a2 === void 0 && (a2 = 1), i3 = 0, o2 = 1 / a2;
            break;
          case "min-to-max":
            var s2, u3;
            e4.forEachLeafNode(function(e5) {
              var r4 = t3[e5.index];
              s2 = s2 === void 0 ? r4 : Math.max(s2, r4), u3 = u3 === void 0 ? r4 : Math.min(u3, r4);
            }), n2(s2 !== void 0, "Valid max expected"), n2(u3 !== void 0, "Valid min expected"), u3 === void 0 && (u3 = 0), s2 === void 0 && (s2 = 1), i3 = -u3, o2 = 1 / (s2 - u3);
            break;
          case "sign-agnostic-max":
            var c3;
            e4.forEachLeafNode(function(e5) {
              var r4 = Math.abs(t3[e5.index]);
              c3 = c3 === void 0 ? r4 : Math.max(c3, r4);
            }), n2(c3 !== void 0, "Valid max expected"), c3 === void 0 && (c3 = 1), i3 = 0, o2 = 1 / c3;
        }
        t3.forEach(function(e5, r4) {
          t3[r4] = (t3[r4] + i3) * o2;
        });
      }
    }, e3.applyRangeTransform = function(e4, t3, r3) {
      if (e4.numberOfLeafNodes !== 0 && r3.sourceRange !== void 0 && r3.targetRange !== void 0)
        for (var i3 = r3.sourceRange, n3 = r3.targetRange, o2 = -i3[0], a2 = n3[0], s2 = i3[1] === i3[0] ? 0 : (n3[1] - n3[0]) / (i3[1] - i3[0]), u3 = 0; u3 < t3.length; u3++)
          t3[u3] < i3[0] ? t3[u3] = -1 : t3[u3] = a2 + (t3[u3] + o2) * s2;
    }, e3.applyPropagation = function(e4, t3, r3) {
      if (e4.numberOfLeafNodes !== 0)
        switch (r3.operation) {
          case "average":
            e4.reverseParentsDo(function(r4) {
              var i3 = 0, n3 = 0;
              e4.childrenDo(r4, function(e5) {
                var r5 = t3[e5.index];
                i3 += r5, ++n3;
              }), t3[r4.index] = n3 === 0 ? 0 : i3 / n3;
            });
            break;
          case "sum":
            e4.reverseParentsDo(function(r4) {
              var i3 = 0;
              e4.childrenDo(r4, function(e5) {
                var r5 = t3[e5.index];
                i3 += r5;
              }), t3[r4.index] = i3;
            });
            break;
          case "min":
            e4.reverseParentsDo(function(r4) {
              var i3;
              e4.childrenDo(r4, function(e5) {
                var r5 = t3[e5.index];
                i3 = i3 === void 0 ? r5 : Math.min(r5, i3);
              }), i3 === void 0 && (i3 = 0), t3[r4.index] = i3;
            });
            break;
          case "max":
            e4.reverseParentsDo(function(r4) {
              var i3;
              e4.childrenDo(r4, function(e5) {
                var r5 = t3[e5.index];
                i3 = i3 === void 0 ? r5 : Math.max(r5, i3);
              }), i3 === void 0 && (i3 = 0), t3[r4.index] = i3;
            });
            break;
          case "median":
            e4.reverseParentsDo(function(r4) {
              var i3 = new Array();
              e4.childrenDo(r4, function(e5) {
                var r5 = t3[e5.index];
                i3.push(r5);
              }), i3.sort(), i3.length % 2 == 0 ? t3[r4.index] = (i3[i3.length / 2] + i3[i3.length / 2]) / 2 : t3[r4.index] = i3[i3.length / 2];
            });
            break;
          case "closest-to-zero":
            e4.reverseParentsDo(function(r4) {
              var i3;
              e4.childrenDo(r4, function(e5) {
                var r5 = t3[e5.index];
                (i3 === void 0 || Math.abs(r5) < Math.abs(i3)) && (i3 = r5);
              }), i3 === void 0 && (i3 = 0), t3[r4.index] = i3;
            });
            break;
          case "closest-to-infinity":
            e4.reverseParentsDo(function(r4) {
              var i3;
              e4.childrenDo(r4, function(e5) {
                var r5 = t3[e5.index];
                (i3 === void 0 || Math.abs(r5) > Math.abs(i3)) && (i3 = r5);
              }), i3 === void 0 && (i3 = 0), t3[r4.index] = i3;
            });
            break;
          default:
            o(s.Warning, "Transformation type not recognized.");
        }
    }, e3.applyFill = function(e4, t3, r3) {
      var i3 = r3.value, n3 = "invalidValue" in r3 ? r3.invalidValue : void 0;
      e4.nodesDo(function(e5) {
        t3[e5.index] === n3 && (t3[e5.index] = i3);
      });
    }, e3.applyClamp = function(e4, t3, r3) {
      var i3, o2;
      "range" in r3 ? (i3 = r3.range[0], o2 = r3.range[0]) : (i3 = r3.min, o2 = r3.max), n2(i3 <= o2, "Require valid min-max range."), e4.nodesDo(function(e5) {
        var r4 = t3[e5.index];
        r4 !== void 0 && (t3[e5.index] = Math.min(o2, Math.max(i3, r4)));
      });
    }, e3.applyMask = function(e4, t3, r3) {
      var i3 = r3.value;
      e4.nodesDo(function(e5) {
        t3[e5.index] = t3[e5.index] === i3 ? 1 : 0;
      });
    }, e3.applyThreshold = function(e4, t3, r3) {
      var i3 = r3.value;
      e4.nodesDo(function(e5) {
        t3[e5.index] = t3[e5.index] >= i3 ? 1 : 0;
      });
    }, e3.applyCompare = function(e4, t3, r3) {
      var i3 = r3.value;
      e4.nodesDo(function(e5) {
        t3[e5.index] = t3[e5.index] > i3 ? 1 : t3[e5.index] < i3 ? -1 : 0;
      });
    }, e3.applyTransform = function(e4, t3, r3, i3, n3) {
      var o2 = i3.operation, a2 = i3.parameter, s2 = i3.buffer, c3 = function(e5) {
        return a2;
      };
      if (s2 !== void 0) {
        var l3 = u2.AttributeBuffer.create(e4, t3, s2, n3);
        l3 !== void 0 && (c3 = function(e5) {
          return l3[e5.index];
        });
      }
      switch (o2) {
        case "min":
          e4.nodesDo(function(e5) {
            r3[e5.index] = Math.min(r3[e5.index], c3(e5));
          });
          break;
        case "max":
          e4.nodesDo(function(e5) {
            r3[e5.index] = Math.max(r3[e5.index], c3(e5));
          });
          break;
        case "add":
          e4.nodesDo(function(e5) {
            r3[e5.index] = r3[e5.index] + c3(e5);
          });
          break;
        case "subtract":
          e4.nodesDo(function(e5) {
            r3[e5.index] = r3[e5.index] - c3(e5);
          });
          break;
        case "multiply":
          e4.nodesDo(function(e5) {
            r3[e5.index] = r3[e5.index] * c3(e5);
          });
          break;
        case "divide":
          e4.nodesDo(function(e5) {
            r3[e5.index] = r3[e5.index] / c3(e5);
          });
          break;
        case "inverse":
          e4.nodesDo(function(e5) {
            r3[e5.index] = 1 / r3[e5.index];
          });
          break;
        case "pow":
          e4.nodesDo(function(e5) {
            r3[e5.index] = Math.pow(r3[e5.index], c3(e5));
          });
          break;
        case "nth-root":
          e4.nodesDo(function(e5) {
            var t4 = 1 / c3(e5);
            r3[e5.index] = Math.pow(r3[e5.index], t4);
          });
          break;
        case "log":
          a2 !== void 0 && a2 !== 0 ? e4.nodesDo(function(e5) {
            var t4 = Math.log(c3(e5));
            r3[e5.index] = Math.log(r3[e5.index]) / t4;
          }) : e4.nodesDo(function(e5) {
            r3[e5.index] = Math.log(r3[e5.index]);
          });
          break;
        case "square":
          e4.nodesDo(function(e5) {
            r3[e5.index] = Math.pow(r3[e5.index], 2);
          });
          break;
        case "square-root":
          e4.nodesDo(function(e5) {
            r3[e5.index] = Math.sqrt(r3[e5.index]);
          });
          break;
        case "as-multiplier":
          e4.nodesDo(function(e5) {
            r3[e5.index] = Math.abs(r3[e5.index]);
          });
          break;
        case "as-remainder":
          e4.nodesDo(function(e5) {
            r3[e5.index] = 1 - Math.abs(r3[e5.index]);
          });
          break;
        case "abs":
          e4.nodesDo(function(e5) {
            r3[e5.index] = Math.abs(r3[e5.index]);
          });
          break;
        case "compare":
          e4.nodesDo(function(e5) {
            var t4 = r3[e5.index], i4 = c3(e5);
            r3[e5.index] = t4 < i4 ? -1 : t4 > i4 ? 1 : 0;
          });
          break;
        default:
          return;
      }
    }, e3.applyDiscretization = function(e4, t3, r3) {
      n2(false, "Implementation missing");
    }, e3.applyCallback = function(e4, t3, r3) {
      var i3 = r3.operation;
      switch (r3.iteration) {
        case l2.Topology.IterationDirection.TopDown:
          e4.nodesDo(function(r4) {
            t3[r4.index] = i3(t3[r4.index], r4, t3, e4);
          });
          break;
        case l2.Topology.IterationDirection.DepthFirst:
          e4.reverseNodesDo(function(r4) {
            t3[r4.index] = i3(t3[r4.index], r4, t3, e4);
          });
          break;
        case l2.Topology.IterationDirection.BottomUp:
        default:
          e4.depthFirstDo(function(r4) {
            t3[r4.index] = i3(t3[r4.index], r4, t3, e4);
          });
      }
    };
  }(t2.AttributeTransformations || (t2.AttributeTransformations = {}));
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.Linearization = void 0;
  var i2 = function() {
    function e3() {
      this._slices = [];
    }
    return e3.prototype.clear = function() {
      this._slices = [];
    }, e3.prototype.slice = function(e4) {
      if (!(e4 < 0 || e4 >= this._slices.length))
        return this._slices[e4];
    }, e3.prototype.startSlice = function(e4) {
      this._slices.push([e4, e4]);
    }, e3.prototype.endSlice = function(e4) {
      this._slices[this._slices.length - 1][1] = e4;
    }, e3.prototype.nextSlice = function(e4) {
      this.endSlice(e4 - 1), this.startSlice(e4);
    }, e3.prototype.addSliceByRange = function(e4, t3) {
      this._slices.push([e4, t3]);
    }, e3.prototype.addSliceByLength = function(e4) {
      if (this.length !== 0) {
        var t3 = this._slices[this._slices.length - 1][1];
        this._slices.push([t3 + 1, t3 + e4]);
      } else
        this._slices.push([0, e4 - 1]);
    }, e3.prototype.sliceDo = function(e4, t3) {
      if (!(e4 < 0 || e4 >= this._slices.length)) {
        var r3 = this._slices[e4];
        t3(r3[0], r3[1]);
      }
    }, e3.prototype.slicesDo = function(e4) {
      for (var t3 = 0, r3 = this._slices; t3 < r3.length; t3++) {
        var i3 = r3[t3];
        e4(i3[0], i3[1]);
      }
    }, Object.defineProperty(e3.prototype, "slices", { get: function() {
      return this._slices;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "numberOfInnerNodes", { get: function() {
      return this._slices[this._slices.length - 1][0];
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "numberOfLeafNodes", { get: function() {
      return this.numberOfNodes - this.numberOfInnerNodes;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "numberOfNodes", { get: function() {
      return this._slices[this._slices.length - 1][1] + 1;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "length", { get: function() {
      return this._slices.length;
    }, enumerable: false, configurable: true }), e3;
  }();
  t2.Linearization = i2;
}, function(e2) {
  e2.exports = JSON.parse(`{"$schema":"http://json-schema.org/draft-06/schema#","title":"Treemap Configuration Schema","description":"JSON schema for a treemap configuration object, targeting the treemap typescript module.","type":"object","properties":{"topology":{"type":"object","properties":{"format":{"type":"string","enum":["interleaved","tupled"],"default":"interleaved"},"semantics":{"type":"string","enum":["parent-id-id","parent-index-id"],"default":"parent-id-id"},"edges":{"type":"array","items":{"anyOf":[{"type":"integer","minimum":0},{"type":"array","items":{"type":"integer","minimum":0},"minItems":2,"maxItems":2,"uniqueItems":true}]}}},"required":["edges"],"additionalProperties":false},"buffers":{"type":"array","items":{"type":"object","properties":{"identifier":{"type":"string"},"type":{"type":"string","enum":["numbers","uint8","uint16","int16","uint32","int32","float32","float64"]},"encoding":{"type":"string","enum":["base64","native"],"default":"native"},"data":{"anyOf":[{"type":"array","items":{"type":"number"}},{"type":"Uint8Array"},{"type":"Uint16Array"},{"type":"Int16Array"},{"type":"Uint32Array"},{"type":"Int32Array"},{"type":"Float32Array"},{"type":"Float64Array"}]},"linearization":{"anyOf":[{"type":"string","enum":["topology","identity"]},{"type":"object","properties":{"type":{"type":"string","enum":["id-mapping","index-mapping"]},"mapping":{"type":"array","items":{"type":"integer"}}},"required":["type","mapping"],"additionalProperties":false}],"default":"topology"}},"required":["identifier","type","data"],"additionalProperties":false}},"bufferViews":{"type":"array","items":{"type":"object","properties":{"identifier":{"type":"string"},"source":{"$ref":"/BufferReference"},"transformations":{"type":"array","items":{"anyOf":[{"type":"object","properties":{"type":{"type":"string","enum":["propagate-up"]},"operation":{"type":"string","enum":["average","sum","min","max","median","closest-to-zero","closest-to-infinity"]},"weight":{"$ref":"/BufferReference"}},"required":["type","operation"],"additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["fill-invalid"]},"value":{"type":"number"},"invalidValue":{"anyOf":[{"type":"number"},{"type":"null"}]}},"required":["type","value"],"additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["mask"]},"value":{"type":"number"}},"required":["type","value"],"additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["clamp"]},"min":{"type":"number"},"max":{"type":"number"}},"required":["type","min","max"],"additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["clamp"]},"range":{"type":"array","items":{"type":"number"},"minItems":2,"maxItems":2}},"required":["type","range"],"additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["range-transform"]},"sourceRange":{"type":"array","items":{"type":"number"},"minItems":2,"maxItems":2},"targetRange":{"type":"array","items":{"type":"number"},"minItems":2,"maxItems":2}},"required":["type","sourceRange","targetRange"],"additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["normalize"]},"operation":{"type":"string","enum":["zero-to-max","min-to-max","sign-agnostic-max"]}},"required":["type","operation"],"additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["threshold"]},"value":{"type":"number"}},"required":["type","value"],"additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["compare"]},"value":{"type":"number"}},"required":["type","value"],"additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["transform"]},"operation":{"type":"string","enum":["add","subtract","multiply","divide","inverse","pow","nth-root","log","square","square-root","as-multiplier","as-remainder","abs"]},"parameter":{"type":"number","default":0},"buffer":{"$ref":"/BufferReference"}},"required":["type","operation"],"additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["discretize"]},"operation":{"type":"string","enum":["quantiles","quartiles"]}},"required":["type","operation"],"additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["discretize"]},"percentiles":{"type":"array","items":{"type":"number"}}},"required":["type","percentiles"],"additionalProperties":false},{"type":"object","properties":{"type":{"type":"string","enum":["callback"]}},"required":["type","operation"],"additionalProperties":true}]}}},"required":["identifier","source"],"additionalProperties":false}},"colors":{"type":"array","items":{"type":"object","properties":{"identifier":{"type":"string"},"space":{"type":"string","enum":["rgb","hsl","lab","cmyk","hex"],"description":"The color space is based on supported webgl-operate color spaces.","default":"hex"},"value":{"oneOf":[{"type":"array","minItems":3,"maxItems":5,"items":{"type":"number","minimum":0,"maximum":1}},{"type":"string","pattern":"^(#|0x)?(([0-9a-f]{3}){1,2}|([0-9a-f]{4}){1,2})$"}]},"values":{"type":"array","minItems":2,"items":{"oneOf":[{"type":"array","minItems":3,"maxItems":5,"items":{"type":"number","minimum":0,"maximum":1}},{"type":"string","pattern":"^(#|0x)?(([0-9a-f]{3}){1,2}|([0-9a-f]{4}){1,2})$"}]}}},"required":["identifier","space"],"oneOf":[{"type":"object","required":["value"]},{"type":"object","required":["values"]}],"additionalProperties":false}},"layout":{"type":"object","properties":{"algorithm":{"type":"string","enum":["strip","snake","codecity"]},"weight":{"$ref":"/BufferReference"},"aspectRatio":{"type":"number","exclusiveMinimum":0,"default":1},"sort":{"type":"object","properties":{"algorithm":{"type":"string","enum":["ascending","descending","keep"],"default":"keep"},"key":{"anyOf":[{"type":"string","enum":["identity","weight"]},{"$ref":"/BufferReference"}],"default":"identity"}},"required":["algorithm"],"additionalProperties":false},"siblingMargin":{"type":"object","properties":{"type":{"type":"string","enum":["relative","absolute"],"default":"relative"},"value":{"anyOf":[{"$ref":"/BufferReference"},{"type":"number","minimum":0}],"default":0}},"required":["type","value"],"additionalProperties":false},"parentPadding":{"type":"object","properties":{"type":{"type":"string","enum":["relative","absolute","mixed"],"default":"relative"},"value":{"anyOf":[{"$ref":"/BufferReference"},{"type":"number","minimum":0},{"type":"array","items":{"type":"number","minimum":0},"minItems":1}],"default":0}},"required":["type","value"],"additionalProperties":false},"accessoryPadding":{"type":"object","properties":{"type":{"type":"string","enum":["relative","absolute"],"default":"absolute"},"direction":{"type":"string","enum":["top","left","bottom","right"],"default":"bottom"},"value":{"anyOf":[{"type":"number","minimum":0},{"type":"array","items":{"type":"number","minimum":0},"minItems":1}]},"relativeAreaThreshold":{"anyOf":[{"type":"number","minimum":0},{"type":"array","items":{"type":"number","minimum":0},"minItems":1}],"default":0},"targetAspectRatio":{"anyOf":[{"type":"number","minimum":0},{"type":"null"}],"default":null}},"required":["value"],"additionalProperties":false},"cascade":{"type":"boolean","default":false},"flattenDirectories":{"type":"boolean","description":"Flatten directories while computing the layout. Also known as 'directory pruning'.","default":false}},"required":["algorithm","weight"],"additionalProperties":false},"geometry":{"type":"object","properties":{"parentLayer":{"type":"object","properties":{"colorMap":{"$ref":"/ColorReference","default":"color:inner"},"showRoot":{"type":"boolean","default":false}},"additionalProperties":false},"leafLayers":{"type":"array","items":{"type":"object","properties":{"colorMap":{"$ref":"/ColorReference","default":"color:leaf"},"colorScheme":{"$ref":"/ColorScheme"},"height":{"$ref":"/BufferReference"},"colors":{"$ref":"/BufferReference"},"areaScale":{"$ref":"/BufferReference"}},"additionalProperties":false}},"aggregation":{"type":"object","properties":{"buffer":{"$ref":"/BufferReference"},"depthThreshold":{"type":"number","minimum":0,"default":1},"valueThreshold":{"type":"number","default":0}},"required":["buffer"],"additionalProperties":false},"auxiliary":{"$ref":"/ColorReference","default":"color:auxiliary"},"emphasis":{"type":"object","properties":{"outline":{"type":"array","items":{"type":"integer","minimum":0},"uniqueItems":true},"highlight":{"type":"array","items":{"type":"integer","minimum":0},"uniqueItems":true},"color":{"$ref":"/ColorReference","default":"color:emphasis"},"outlineWidth":{"type":"number","minimum":0,"description":"unit: device-independent pixel","default":1.6}},"additionalProperties":false},"heightScale":{"anyOf":[{"type":"string","enum":["SomethingInverseSqrt"]},{"type":"number"}],"default":0.125},"levitate":{"type":"number","minimum":0,"default":0,"description":"unit: device-independent pixel"},"outlineWidth":{"type":"number","minimum":0,"description":"unit: native pixel","default":0.8}},"required":["parentLayer"],"additionalProperties":false},"labels":{"type":"object","properties":{"names":{"$ref":"/BufferReference"},"additionallyLabelSet":{"type":"array","items":{"type":"number","minimum":0}},"innerNodeLayerRange":{"type":"array","items":{"type":"number","minimum":0},"minItems":2,"maxItems":2,"default":[1,2]},"numTopInnerNodes":{"type":"number","minimum":0,"default":0},"numTopWeightNodes":{"type":"number","minimum":0,"default":0},"numTopHeightNodes":{"type":"number","minimum":0,"default":0},"numTopColorNodes":{"type":"number","minimum":0,"default":0}},"required":[]},"animations":{"type":"array","items":{"type":"object","properties":{"layer":{"type":"number","minimum":0,"maximum":1,"default":0},"height":{"type":"object","properties":{"buffers":{"type":"array","items":{"$ref":"/BufferReference"},"minItems":2},"delaySpread":{"type":"number","minimum":0},"timestamps":{"type":"array","items":{"type":"number","minimum":0},"minItems":2},"easing":{"type":"string","enum":["linear","smoothstep"],"default":"linear"},"order":{"type":"string","enum":["synchronous","height","height-change","color","color-change"],"default":"synchronous"}},"required":["buffers","timestamps","easing","order"],"additionalProperties":false},"color":{"type":"object","properties":{"buffers":{"type":"array","items":{"$ref":"/BufferReference"},"minItems":2},"delaySpread":{"type":"number","minimum":0},"timestamps":{"type":"array","items":{"type":"number","minimum":0},"minItems":2},"easing":{"type":"string","enum":["linear","smoothstep"],"default":"linear"},"order":{"type":"string","enum":["synchronous","height","height-change","color","color-change"],"default":"synchronous"}},"required":["buffers","timestamps","easing","order"],"additionalProperties":false},"areaScale":{"type":"object","properties":{"buffers":{"type":"array","items":{"$ref":"/BufferReference"},"minItems":2},"delaySpread":{"type":"number","minimum":0},"timestamps":{"type":"array","items":{"type":"number","minimum":0},"minItems":2},"easing":{"type":"string","enum":["linear","smoothstep"],"default":"linear"},"order":{"type":"string","enum":["synchronous","height","height-change","color","color-change"],"default":"synchronous"}},"required":["buffers","timestamps","easing","order"],"additionalProperties":false}},"required":["layer"],"additionalProperties":false}}},"required":["topology","layout"],"additionalProperties":false}`);
}, function(e2) {
  e2.exports = JSON.parse('{"id":"/BufferReference","type":"string","pattern":"^(buffer|bufferView):[_a-zA-Z][_a-zA-Z0-9\\\\-]*[_a-zA-Z0-9]+$","description":"Named identifier used to reference a buffer or buffer view throughout the treemap configuration."}');
}, function(e2) {
  e2.exports = JSON.parse('{"id":"/ColorReference","type":"string","pattern":"^(color):[_a-zA-Z][_a-zA-Z0-9\\\\-]*[_a-zA-Z0-9]+$","description":"Named identifier used to reference a color throughout the treemap configuration."}');
}, function(e2) {
  e2.exports = JSON.parse('{"id":"/ColorScheme","type":"object","properties":{"inverted":{"type":"boolean","default":false},"classBounds":{"type":"array","items":{"type":"number"}}}}');
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.Visualization = void 0;
  var i2 = r2(0), n2 = r2(0), o = i2.auxiliaries.assert, a = r2(64), s = r2(12), u2 = r2(10), c2 = r2(65), l2 = r2(66), f2 = r2(68), h2 = r2(69), d2 = r2(72), p2 = r2(1), _2 = r2(73), g2 = r2(74), m2 = r2(8), v2 = r2(26), b2 = r2(76), y2 = r2(23), E2 = r2(13), x2 = r2(77), T2 = r2(25), A2 = r2(9), O2 = r2(82), P2 = r2(5), L2 = r2(27), w2 = r2(22), S2 = function() {
    function e3(e4) {
      this._intermediaries = new x2.IntermediateResults(), this._labelsChanged = false, this._bufferResolver = new _2.BufferResolver(this._intermediaries.topology), this._geometry = new y2.Geometry(), this._animations = [new s.AnimationData(), new s.AnimationData()], this._skipLabeling = false, this._skipInnerLabeling = false, this._skipLeafLabeling = false, this._renderer = w2.RendererCapabilities.createRendererFromCapabilities(e4, this), this._renderer.geometry = this._geometry, this._renderer instanceof u2.AnimationRenderer && (this._renderer.animations = this._animations);
    }
    return Object.defineProperty(e3, "debug", { set: function(t3) {
      t3 && i2.auxiliaries.logVerbosity() < i2.auxiliaries.LogLevel.Debug && (i2.auxiliaries.logVerbosity(i2.auxiliaries.LogLevel.Debug), i2.auxiliaries.log(i2.auxiliaries.LogLevel.Debug, "changed log verbosity to " + i2.auxiliaries.LogLevel.Debug + " (debug)")), v2.DrawDispatch.debug = t3, e3._debug = t3;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "debug", { set: function(t3) {
      e3.debug = t3;
    }, enumerable: false, configurable: true }), e3.prototype.getNodeIndexFromId = function(e4, t3) {
      var r3 = this._intermediaries.topology;
      return t3 ? r3.leafNodeIndexById(e4) : r3.innerNodeIndexById(e4);
    }, e3.prototype.resolveMetricBuffers = function() {
      var e4 = this._configuration;
      this._decodedAreas || (this._decodedAreas = this._bufferResolver.resolve("bufferView:DecodedArea", e4, this._normalization)), this._decodedBaseHeights && this._decodedDeltaHeights && this._heightChange || (this._decodedBaseHeights = this._bufferResolver.resolve("bufferView:DecodedBaseHeight", e4, this._normalization) || this._bufferResolver.resolve("bufferView:DecodedHeight", e4, this._normalization), this._decodedDeltaHeights = this._bufferResolver.resolve("bufferView:DecodedDeltaHeight", e4, this._normalization), this._heightChange = this._bufferResolver.resolve("bufferView:HeightChange", e4, this._normalization));
    }, e3.prototype.applyInnerNodeColorMapping = function(t3) {
      var r3 = "color-mapping inners";
      i2.auxiliaries.logPerformanceStartIf(e3._debug, r3);
      var n3 = t3.geometry, a2 = t3.altered.geometry;
      if (o(this._geometry.innerNodeColors !== void 0 || a2.any, "expected any alteration when inner-node color mapping is yet to be defined"), a2.any || t3.altered.topology) {
        o(this._geometry !== void 0 && this._geometry.colorTable !== void 0, "expected color lookup-table to be specified (cached)");
        var s2 = this._intermediaries.topology;
        (t3.altered.topology || a2.emphasis.any) && (this._geometry.innerNodeEmphases = l2.NodeEmphases.innerNodes(s2, n3.emphasis ? new Set(n3.emphasis.outline) : void 0, n3.emphasis ? new Set(n3.emphasis.highlight) : void 0)), t3.altered.topology && (this._geometry.innerNodeColors = c2.NodeColors.innerNodes(s2, this._colorLUT.innerNodeColorOffset, this._colorLUT.innerNodeColorCount)), i2.auxiliaries.logPerformanceStopIf(e3._debug, r3, void 0, L2.PERF_LOG_INDENT);
      } else
        i2.auxiliaries.logPerformanceStopIf(e3._debug, r3, "skipped", L2.PERF_LOG_INDENT);
    }, e3.prototype.applyLeafNodeColorMapping = function(t3) {
      var r3 = "color-mapping leafs";
      i2.auxiliaries.logPerformanceStartIf(e3._debug, r3);
      var n3 = t3.geometry, a2 = t3.altered.geometry;
      if (a2.any || t3.altered.topology) {
        if (o(this._geometry !== void 0 && this._geometry.colorTable !== void 0, "expected color lookup-table to be specified (cached)"), (n3.leafLayers === void 0 ? 0 : n3.leafLayers.length) === 0)
          return this._intermediaries.aggregatedColors = void 0, this._intermediaries.colors = new Array(0), this._geometry.leafNodeColors[0] = E2.GeometryCreation.defaultLeafNodeColors(this._intermediaries.topology, this._colorLUT.leafColorOffset), void i2.auxiliaries.logPerformanceStopIf(e3._debug, r3, "defaulted", L2.PERF_LOG_INDENT);
        if ((t3.altered.topology || a2.emphasis.any) && (this._geometry.leafNodeEmphases = l2.NodeEmphases.leafNodes(this._intermediaries.topology, n3.emphasis ? new Set(n3.emphasis.outline) : void 0, n3.emphasis ? new Set(n3.emphasis.highlight) : void 0)), !a2.colors && this._intermediaries.colors !== void 0)
          return this._intermediaries.aggregatedColors === void 0 && (this._intermediaries.aggregatedColors = this._intermediaries.colors[0]), void i2.auxiliaries.logPerformanceStopIf(e3._debug, r3, "skipped", L2.PERF_LOG_INDENT);
        var s2 = this._bufferResolver.resolve(n3.leafLayers[0].colors, t3, this._normalization, this._bufferResolver.constBufferCallback(0));
        this._decodedColors = s2;
        for (var u3 = 0; u3 < 1; ++u3) {
          var c3 = n3.leafLayers[u3].colorScheme, f3 = c3 !== void 0 && c3.classBounds !== void 0 ? new Float32Array(c3.classBounds) : void 0, h3 = c3 !== void 0 && c3.inverted !== void 0 && c3.inverted, d3 = p2.AttributeBuffer.range(s2), _3 = this._colorLUT.leafColorCount, g3 = this._colorLUT.leafColorOffset, m3 = u3 === 0 ? void 0 : this._bufferResolver.resolve(n3.leafLayers[1].colors, t3, this._normalization, this._bufferResolver.constBufferCallback(0));
          this._geometry.leafNodeColors[u3] = E2.GeometryCreation.createLeafNodeColors(this._intermediaries.topology, s2, g3, _3, d3, this._colorLUT.unmodifiedColorIndex, f3, h3, m3), this._geometry.altered.alter("leafNodeColors");
        }
        this._intermediaries.aggregatedColors === void 0 && (this._intermediaries.aggregatedColors = s2), i2.auxiliaries.logPerformanceStopIf(e3._debug, r3, void 0, L2.PERF_LOG_INDENT);
      } else
        i2.auxiliaries.logPerformanceStopIf(e3._debug, r3, "skipped", L2.PERF_LOG_INDENT);
    }, e3.prototype.createLayout = function(e4, t3, r3, i3, n3, o2, a2) {
      var s2 = A2.Layout.createLayout(e4, t3, r3.layout, i3, n3, o2, a2);
      return r3.layout.cascade !== void 0 && r3.layout.cascade ? O2.LayoutCascade.applyCascade(e4, s2) : s2;
    }, e3.prototype.updateLabels = function() {
      var e4 = this._intermediaries.innerNodeLabels, t3 = this._intermediaries.leafLabels;
      if (this._geometry !== void 0 && this._geometry.valid && !this._skipLabeling && t3 !== void 0 && e4 !== void 0) {
        if (this._labelsChanged && (this._renderer.updateLabels(e4, t3), this._renderer.updateLeafLabelBackgrounds(t3), this._renderer.updatePoints(t3)), this._renderer.camera.altered || this._labelsChanged) {
          var r3 = h2.AdaptiveLabelPlacement.adaptPositionToPreventOverlapGreedy(t3, this._renderer.camera);
          r3.visibility || r3.positioning ? (this._renderer.updateLeafLabelBackgrounds(t3), this._renderer.updateLeafLabelPass()) : this._renderer.frameSizeAltered() && this._renderer.updateLeafLabelBackgrounds(t3), r3.visibility && this._renderer.updatePoints(t3);
        }
        this._labelsChanged && (this._labelsChanged = false);
      }
    }, e3.prototype.update = function() {
      var t3 = this;
      if (this._configuration === void 0 || this._configuration.topology === void 0)
        return this._geometry.initialized && this._geometry.uninitialize(), true;
      var r3 = this._configuration, s2 = r3.altered, c3 = e3._debug;
      if (!s2.any)
        return false;
      o(r3.topology !== void 0, "Valid topology expected");
      var l3 = s2.layout.sort;
      i2.auxiliaries.logPerformanceStartIf(c3, "tree");
      var h3 = this._intermediaries.topology;
      s2.topology && (i2.auxiliaries.logIf(c3, i2.auxiliaries.LogLevel.Debug, "vis topology changed |"), h3.initialize(r3.topology.format, r3.topology.semantics, r3.topology.edges), this._intermediaries.aggregatedWeights = void 0, this._intermediaries.accessorySpaces = void 0, this._intermediaries.labelRects = void 0, this._intermediaries.labelPaddingSpaces = void 0, this._intermediaries.layout = void 0, this._intermediaries.prunedNodes = void 0, this._geometry.initialized && this._geometry.uninitialize(), this._geometry.initialize(h3), l3 = true), i2.auxiliaries.logPerformanceStopIf(c3, "tree", void 0, L2.PERF_LOG_INDENT), this._normalization = p2.AttributeBuffer.createNormalization(h3, r3), i2.auxiliaries.logPerformanceStartIf(c3, "weights");
      var _3 = this._intermediaries.aggregatedWeights;
      (_3 === void 0 || s2.layout.weight) && (_3 = this._intermediaries.aggregatedWeights = this._bufferResolver.resolve(r3.layout.weight, r3, this._normalization), this._intermediaries.layout = void 0, l3 = true, this._decodedAreas = void 0), i2.auxiliaries.logPerformanceStopIf(c3, "weights", void 0, L2.PERF_LOG_INDENT), i2.auxiliaries.logPerformanceStartIf(c3, "sort"), l3 && (P2.NodeSort.sortNodes(h3, this._normalization, _3, r3), this._intermediaries.layout = void 0), i2.auxiliaries.logPerformanceStopIf(c3, "sort", void 0, L2.PERF_LOG_INDENT), i2.auxiliaries.logPerformanceStartIf(c3, "layout");
      var v3 = this._intermediaries.layout, y3 = this._intermediaries.accessorySpaces, x3 = this._intermediaries.labelRects, A3 = this._intermediaries.labelPaddingSpaces, O3 = this._intermediaries.prunedNodes;
      (v3 === void 0 || s2.layout.any) && (y3 = this._intermediaries.accessorySpaces = new Array(h3.numberOfInnerNodes), x3 = this._intermediaries.labelRects = new Array(h3.numberOfInnerNodes), A3 = this._intermediaries.labelPaddingSpaces = new Array(h3.numberOfInnerNodes), O3 = this._intermediaries.prunedNodes = new Array(h3.numberOfNodes), v3 = this._intermediaries.layout = this.createLayout(h3, _3, r3, y3, x3, A3, O3), this._geometry.innerNodeLayouts = void 0, this._geometry.leafNodeLayouts = void 0), i2.auxiliaries.logPerformanceStopIf(c3, "layout", void 0, L2.PERF_LOG_INDENT), i2.auxiliaries.logPerformanceStartIf(c3, "base geometry"), this._geometry.innerNodeIndices === void 0 && (this._geometry.innerNodeIndices = f2.NodeIndices.innerNodes(h3)), this._geometry.leafNodeIndices === void 0 && (this._geometry.leafNodeIndices = f2.NodeIndices.leafNodes(h3)), this._geometry.innerNodeLayouts === void 0 && (this._geometry.innerNodeLayouts = E2.GeometryCreation.createParentLayoutBuffer(h3, v3, this._configuration.geometry)), this._geometry.leafNodeLayouts === void 0 && (this._geometry.leafNodeLayouts = E2.GeometryCreation.createLeafLayoutBuffer(h3, v3, this._configuration.geometry));
      var w3 = r3.geometry.leafLayers === void 0 ? 0 : r3.geometry.leafLayers.length;
      if (this._geometry.leafNodeHeights.length = Math.max(w3, 1), this._geometry.leafNodeColors.length = 1, this._geometry.leafNodeAreaScales.length = 1, i2.auxiliaries.logPerformanceStopIf(c3, "base geometry", void 0, L2.PERF_LOG_INDENT), this._geometry.leafNodeAreaScales[0] === void 0) {
        var S3 = this._bufferResolver.resolve(this._configuration.geometry.leafLayers[0].areaScale, r3, this._normalization, this._bufferResolver.constBufferCallback(1));
        this._geometry.leafNodeAreaScales[0] = E2.GeometryCreation.createLeafAreaScalesBuffer(h3, S3);
      }
      i2.auxiliaries.logPerformanceStartIf(c3, "color table");
      var R2 = function(e4, t4) {
        switch (t4) {
          case n2.Color.Space.CMYK:
            var r4 = e4.fill(1, e4.length, 5);
            return new n2.Color().fromCMYK(r4[0], r4[1], r4[2], r4[3], r4[4]);
          case n2.Color.Space.LAB:
            r4 = e4.fill(1, e4.length, 4);
            return new n2.Color().fromLAB(r4[0], r4[1], r4[2], r4[3]);
          case n2.Color.Space.HSL:
            r4 = e4.fill(1, e4.length, 4);
            return new n2.Color().fromHSL(r4[0], r4[1], r4[2], r4[3]);
          case "hex":
            return new n2.Color().fromHex(e4);
          default:
          case n2.Color.Space.RGB:
            r4 = e4.fill(1, e4.length, 4);
            return new n2.Color().fromRGB(r4[0], r4[1], r4[2], r4[3]);
        }
      }, I2 = function(e4, t4, r4) {
        if (e4 === void 0 || t4 === void 0)
          return r4;
        var i3 = e4.find(function(e5) {
          return e5.identifier === t4.split(":")[1];
        });
        return i3 === void 0 ? r4 : i3.value !== void 0 ? R2(i3.value, i3.space) : function(e5, t5) {
          for (var r5 = new Array(e5.length), i4 = 0; i4 < r5.length; ++i4)
            r5[i4] = R2(e5[i4], t5);
          return r5;
        }(i3.values, i3.space);
      };
      if (r3.altered.colors) {
        var M2 = I2(r3.colors, r3.geometry.emphasis ? r3.geometry.emphasis.color : void 0, new n2.Color()), C2 = I2(r3.colors, r3.geometry.auxiliary, new n2.Color()), N2 = I2(r3.colors, r3.geometry.parentLayer.colorMap, [new n2.Color(), new n2.Color()]), D2 = I2(r3.colors, r3.geometry.leafLayers[0].colorMap, [new n2.Color(), new n2.Color()]);
        this._colorLUT = new g2.ColorTable(M2, C2, N2, D2), this._geometry.colorTable && this._geometry.colorTable.length === this._colorLUT.bits.length || (this._geometry.altered.alter("colorTableLength"), this._renderer.invalidate()), this._geometry.colorTable = this._colorLUT.bits;
      }
      i2.auxiliaries.logPerformanceStopIf(c3, "color table", void 0, L2.PERF_LOG_INDENT), this.applyInnerNodeColorMapping(r3), this.applyLeafNodeColorMapping(r3), i2.auxiliaries.logPerformanceStartIf(c3, "heights");
      var B2 = this._geometry.heightScale;
      if (B2 === void 0 || s2.geometry.heightScale) {
        var F2 = r3.geometry.heightScale;
        B2 = F2 !== void 0 && F2 in m2.ConfigurationAids.HeightScaleApproach ? this._geometry.heightScale = m2.ConfigurationAids.heightScale(h3, F2) : this._geometry.heightScale = F2 !== void 0 ? F2 : m2.ConfigurationAids.heightScale(h3, m2.ConfigurationAids.HeightScaleApproach.SomethingInverseSqrt), this._geometry.altered.alter("heightScale");
      }
      r3.altered.geometry.levitate && (this._geometry.levitate = r3.geometry.levitate, this._geometry.altered.alter("levitate")), r3.altered.geometry.outlineWidth && (this._geometry.outlineWidth = r3.geometry.outlineWidth, this._geometry.altered.alter("outlineWidth")), r3.geometry.emphasis && r3.altered.geometry.emphasis.outlineWidth && (this._geometry.emphasisOutlineWidth = r3.geometry.emphasis.outlineWidth, this._geometry.altered.alter("emphasisOutlineWidth"));
      var z2 = this._intermediaries.aggregatedHeights, j = this._intermediaries.heights;
      if (w3 > 0 && r3.geometry.leafLayers !== void 0) {
        if (s2.geometry.heights || s2.buffers || s2.bufferViews || z2 === void 0 || j === void 0) {
          this._intermediaries.aggregatedHeights = new Float32Array(h3.numberOfNodes), z2 = this._intermediaries.aggregatedHeights, this._intermediaries.heights = new Array(w3), j = this._intermediaries.heights;
          for (var U2 = void 0, G2 = function(e4) {
            var t4 = r3.geometry.leafLayers[e4];
            j[e4] = k2._bufferResolver.resolve(t4.height !== void 0 ? t4.height : "", r3, k2._normalization, k2._bufferResolver.constBufferCallback());
            var i3 = E2.GeometryCreation.createLayerHeightBuffer(h3, j[e4], U2, k2._configuration.geometry);
            U2 = i3, k2._geometry.leafNodeHeights[e4] = i3, h3.nodesDo(function(t5) {
              z2[t5.index] += j[e4][t5.index];
            });
          }, k2 = this, V2 = 0; V2 < w3; ++V2)
            G2(V2);
          this._decodedBaseHeights = void 0, this._decodedDeltaHeights = void 0, this._geometry.altered.alter("leafNodeHeights");
        }
      } else
        z2 = this._intermediaries.aggregatedHeights = void 0, j = this._intermediaries.heights = new Array(0), this._geometry.leafNodeHeights[0] = E2.GeometryCreation.createEmptyLayerHeightBuffer(h3);
      if (i2.auxiliaries.logPerformanceStopIf(c3, "heights", void 0, L2.PERF_LOG_INDENT), this._renderer instanceof u2.AnimationRenderer) {
        if (i2.auxiliaries.logPerformanceStartIf(c3, "animation"), s2.animations || s2.geometry.heights || s2.buffers || s2.bufferViews)
          for (var H2 = this._colorLUT.leafColorCount, W2 = void 0, X2 = 0; X2 < 2; X2++) {
            this._animations[X2].reset();
            var q2 = a.AnimationCreation.createAreaBuffers(X2, r3, this._normalization, h3, this._bufferResolver), Y2 = a.AnimationCreation.getAreaEasing(X2, r3), K2 = a.AnimationCreation.getAreaDurations(X2, r3), Z = a.AnimationCreation.getAreaDelay(X2, r3), $ = a.AnimationCreation.getAreaDelaySpread(X2, r3), Q2 = a.AnimationCreation.getAreaOrder(X2, r3), J2 = a.AnimationCreation.createHeightBuffers(X2, r3, this._normalization, h3, this._bufferResolver, W2), ee2 = a.AnimationCreation.getHeightEasing(X2, r3), te2 = a.AnimationCreation.getHeightDurations(X2, r3), re2 = a.AnimationCreation.getHeightDelay(X2, r3), ie2 = a.AnimationCreation.getHeightDelaySpread(X2, r3), ne2 = a.AnimationCreation.getHeightOrder(X2, r3), oe2 = a.AnimationCreation.createColorBuffers(X2, r3, this._normalization, h3, this._bufferResolver, this._colorLUT), ae2 = a.AnimationCreation.getColorEasing(X2, r3), se2 = a.AnimationCreation.getColorDurations(X2, r3), ue2 = a.AnimationCreation.getColorDelay(X2, r3), ce2 = a.AnimationCreation.getColorDelaySpread(X2, r3), le2 = a.AnimationCreation.getColorOrder(X2, r3), fe2 = a.AnimationCreation.createDelayBuffers(h3, re2, ie2, H2, te2, ne2, J2, oe2, q2), he2 = a.AnimationCreation.createDelayBuffers(h3, Z, $, H2, K2, Q2, q2, oe2, q2), de2 = a.AnimationCreation.createDelayBuffers(h3, ue2, ce2, H2, se2, le2, J2, oe2, q2);
            this._animations[X2].areas = q2, this._animations[X2].areaEasing = a.AnimationCreation.convertEasing(Y2), this._animations[X2].areaDurations = K2, this._animations[X2].areaDelays = he2, this._animations[X2].heights = J2, this._animations[X2].heightEasing = a.AnimationCreation.convertEasing(ee2), this._animations[X2].heightDurations = te2, this._animations[X2].heightDelays = fe2, this._animations[X2].colors = oe2, this._animations[X2].colorEasing = a.AnimationCreation.convertEasing(ae2), this._animations[X2].colorDurations = se2, this._animations[X2].colorDelays = de2, W2 = this._geometry.leafNodeHeights[X2];
          }
        i2.auxiliaries.logPerformanceStopIf(c3, "animation", void 0, L2.PERF_LOG_INDENT);
      }
      i2.auxiliaries.logPerformanceStartIf(c3, "filter");
      var pe2 = r3.geometry.aggregation, _e = this._intermediaries.aggregationMask;
      if (s2.geometry.aggregation || _e === void 0)
        if (pe2 !== void 0) {
          var ge2 = this._bufferResolver.resolve(pe2.buffer, r3, this._normalization, this._bufferResolver.constBufferCallback(1)), me2 = pe2.valueThreshold !== void 0 ? pe2.valueThreshold : 1, ve2 = pe2.depthThreshold !== void 0 ? pe2.depthThreshold : 1;
          this._intermediaries.aggregationMask = d2.Aggregation.createAggregationMask(h3, _3, ge2, me2, ve2, O3), _e = this._intermediaries.aggregationMask, this._geometry.innerNodeDrawDispatch = void 0, this._geometry.leafNodeDrawDispatch = void 0;
        } else
          this._intermediaries.aggregationMask = d2.Aggregation.createEmptyAggregationMask(h3), _e = this._intermediaries.aggregationMask, this._geometry.innerNodeDrawDispatch = void 0, this._geometry.leafNodeDrawDispatch = void 0;
      if (i2.auxiliaries.logPerformanceStopIf(c3, "filter", void 0, L2.PERF_LOG_INDENT), i2.auxiliaries.logPerformanceStartIf(c3, "draw dispatch setup"), (this._geometry.innerNodeDrawDispatch === void 0 || s2.geometry.parentLayer) && (this._geometry.innerNodeDrawDispatch = b2.DrawDispatchComputation.computeParentDrawDispatch(h3, _e, r3.geometry.parentLayer.showRoot)), this._geometry.leafNodeDrawDispatch === void 0 && (this._geometry.leafNodeDrawDispatch = b2.DrawDispatchComputation.computeLeafDrawDispatch(h3, _e)), i2.auxiliaries.logPerformanceStopIf(c3, "draw dispatch setup", void 0, L2.PERF_LOG_INDENT), i2.auxiliaries.logPerformanceStartIf(c3, "label creation"), (this._intermediaries.leafLabels === void 0 || this._intermediaries.innerNodeLabels === void 0 || r3.altered.labels) && r3.labels !== void 0)
        if (r3.labels.names !== void 0) {
          var be2 = p2.AttributeBuffer.create(h3, this._normalization, r3.labels.names, r3);
          be2 !== void 0 && (this._intermediaries.leafLabels = T2.LabelManagement.fillLeafLabelArrayByExplicitNames(h3, be2, this._geometry.heightScale, this._geometry.leafNodeLayouts, this._geometry.leafNodeHeights[this._geometry.leafLayerCount - 1]), this._intermediaries.innerNodeLabels = T2.LabelManagement.fillInnerNodeLabelArrayOnAccessoryByExplicitNames(h3, be2, this._intermediaries.accessorySpaces), this._labelsChanged = true, this._renderer.invalidate());
        } else {
          var ye2 = T2.LabelManagement.createLabelSelection(h3, _3, z2, this._intermediaries.aggregatedColors, new Uint8Array(h3.numberOfNodes), /* @__PURE__ */ new Set(), r3.labels.innerNodeLayerRange, r3.labels.numTopInnerNodes, r3.labels.numTopWeightNodes, r3.labels.numTopHeightNodes, r3.labels.numTopColorNodes), Ee2 = r3.labels.callback || this._nameRequestCallback;
          Ee2 && Ee2(ye2, function(e4) {
            e4.forEach(function(t4, r4, i3) {
              if (t4 !== void 0) {
                var n3 = t4.replace(/\uff0f/g, "/");
                e4.set(r4, n3);
              }
            }), t3._intermediaries.innerNodeLabels = T2.LabelManagement.fillInnerNodeLabelArrayOnAccessory(h3, e4, ye2, t3._intermediaries.accessorySpaces), t3._intermediaries.leafLabels = T2.LabelManagement.fillLeafLabelArray(h3, e4, ye2, t3._geometry.heightScale, t3._geometry.leafNodeLayouts, t3._geometry.leafNodeHeights[t3._geometry.leafLayerCount - 1]), t3._labelsChanged = true, t3._renderer.initialized && t3._renderer.invalidate();
          });
        }
      return i2.auxiliaries.logPerformanceStopIf(c3, "label creation", void 0, L2.PERF_LOG_INDENT), r3.altered.reset(), true;
    }, e3.prototype.prepare = function() {
      i2.auxiliaries.logPerformanceStartIf(e3._debug, "label placement"), this.updateLabels(), i2.auxiliaries.logPerformanceStopIf(e3._debug, "label placement", void 0, L2.PERF_LOG_INDENT);
    }, e3.prototype.nodeIndexById = function(e4) {
      return this._intermediaries.topology.leafNodeIndexById(e4) || this._intermediaries.topology.innerNodeIndexById(e4);
    }, e3.prototype.decodedMetricDataDelta = function(e4, t3, r3) {
      r3 === void 0 && (r3 = false);
      var i3 = this.getNodeIndexFromId(e4, t3);
      if (i3 !== void 0) {
        this.resolveMetricBuffers();
        var n3 = this._decodedBaseHeights[i3], o2 = this._decodedDeltaHeights && this._decodedDeltaHeights[i3], a2 = this._heightChange && this._heightChange[i3];
        return a2 === void 0 || o2 === void 0 ? o2 = 0 : r3 && a2 > 0 || !r3 && a2 <= 0 ? o2 *= -1 : n3 += o2, { color: { value: this._decodedColors[i3] }, area: { value: this._decodedAreas[i3] }, height: { value: n3, delta: o2 } };
      }
    }, e3.prototype.decodedMetricDataCompareValue = function(e4, t3) {
      var r3 = this.getNodeIndexFromId(e4, t3);
      if (r3 !== void 0) {
        this.resolveMetricBuffers();
        var i3, n3, o2 = this._decodedBaseHeights && this._decodedBaseHeights[r3], a2 = this._decodedDeltaHeights && this._decodedDeltaHeights[r3], s2 = this._heightChange && this._heightChange[r3];
        if (o2 !== void 0)
          return s2 === void 0 || a2 === void 0 ? (i3 = o2, n3 = o2) : s2 > 0 ? (i3 = o2 + a2, n3 = o2) : (i3 = o2, n3 = o2 + a2), { color: { value: this._decodedColors[r3] }, area: { value: this._decodedAreas[r3] }, height: { value: i3, compareValue: n3 } };
      }
    }, Object.defineProperty(e3.prototype, "renderer", { get: function() {
      return this._renderer;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "configuration", { get: function() {
      return this._configuration;
    }, set: function(e4) {
      this._configuration = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "skipLabeling", { set: function(e4) {
      this._skipLabeling = e4, this._renderer.skipInnerLabelPass = e4, this._renderer.skipLeafLabelPass = e4, this._skipLabeling || (this.updateLabels(), this._renderer.invalidate());
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "skipInnerLabeling", { set: function(e4) {
      this._skipInnerLabeling = e4, this._renderer.skipInnerLabelPass = e4, this._skipInnerLabeling || (this.updateLabels(), this._renderer.invalidate());
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "skipLeafLabeling", { set: function(e4) {
      this._skipLeafLabeling = e4, this._renderer.skipLeafLabelPass = e4, this._skipLeafLabeling || (this.updateLabels(), this._renderer.invalidate());
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "nameRequest", { set: function(e4) {
      this._nameRequestCallback = e4;
    }, enumerable: false, configurable: true }), e3._debug = false, e3;
  }();
  t2.Visualization = S2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.AnimationCreation = void 0;
  var i2 = r2(0), n2 = r2(12), o = r2(1), a = r2(13), s = i2.auxiliaries.assert, u2 = function() {
    function e3() {
    }
    return e3.findAreaAnimation = function(e4, t3) {
      return t3.animations.find(function(t4) {
        return t4.layer === e4 && t4.areaScale !== void 0;
      });
    }, e3.findHeightAnimation = function(e4, t3) {
      return t3.animations.find(function(t4) {
        return t4.layer === e4 && t4.height !== void 0;
      });
    }, e3.findColorAnimation = function(e4, t3) {
      return t3.animations.find(function(t4) {
        return t4.layer === e4 && t4.color !== void 0;
      });
    }, e3.isAreaAnimated = function(e4, t3) {
      return t3.animations.findIndex(function(t4) {
        return t4.layer === e4;
      }) !== -1;
    }, e3.isHeightAnimated = function(e4, t3) {
      return t3.animations.findIndex(function(t4) {
        return t4.layer === e4;
      }) !== -1;
    }, e3.isColorAnimated = function(e4, t3) {
      return t3.animations.findIndex(function(t4) {
        return t4.layer === e4;
      }) !== -1;
    }, e3.createAreaBuffers = function(t3, r3, i3, n3, o2) {
      var s2 = e3.findAreaAnimation(t3, r3), u3 = Array();
      s2 !== void 0 ? u3 = s2.height.buffers : r3.geometry.leafLayers !== void 0 && r3.geometry.leafLayers[t3] !== void 0 && r3.geometry.leafLayers[t3].areaScale !== void 0 && (u3 = [r3.geometry.leafLayers[t3].areaScale, r3.geometry.leafLayers[t3].areaScale]);
      for (var c2 = Array(), l2 = 0, f2 = u3; l2 < f2.length; l2++) {
        var h2 = f2[l2], d2 = o2.resolve(h2, r3, i3, o2.constBufferCallback());
        c2.push(a.GeometryCreation.createLeafAreaScalesBuffer(n3, d2));
      }
      return c2;
    }, e3.createHeightBuffers = function(t3, r3, i3, n3, o2, s2) {
      var u3 = e3.findHeightAnimation(t3, r3), c2 = Array();
      u3 !== void 0 ? c2 = u3.height.buffers : r3.geometry.leafLayers !== void 0 && r3.geometry.leafLayers[t3] !== void 0 && r3.geometry.leafLayers[t3].height !== void 0 && (c2 = [r3.geometry.leafLayers[t3].height, r3.geometry.leafLayers[t3].height]);
      for (var l2 = Array(), f2 = 0, h2 = c2; f2 < h2.length; f2++) {
        var d2 = h2[f2], p2 = o2.resolve(d2, r3, i3, o2.constBufferCallback());
        l2.push(a.GeometryCreation.createLayerHeightBuffer(n3, p2, s2, r3.geometry));
      }
      return l2;
    }, e3.createColorBuffers = function(t3, r3, i3, n3, s2, u3) {
      var c2 = e3.findColorAnimation(t3, r3), l2 = Array();
      if (c2 !== void 0)
        l2 = c2.color.buffers;
      else {
        if (r3.geometry.leafLayers === void 0 || r3.geometry.leafLayers[t3] === void 0 || r3.geometry.leafLayers[t3].colors === void 0) {
          var f2 = a.GeometryCreation.defaultLeafNodeColors(n3, u3.leafColorOffset);
          return [f2, f2];
        }
        l2 = [r3.geometry.leafLayers[t3].colors, r3.geometry.leafLayers[t3].colors];
      }
      for (var h2 = r3.geometry, d2 = h2.leafLayers[t3].colorScheme, p2 = d2 !== void 0 && d2.classBounds !== void 0 ? new Float32Array(d2.classBounds) : void 0, _2 = d2 !== void 0 && d2.inverted !== void 0 && d2.inverted, g2 = u3.leafColorCount, m2 = u3.leafColorOffset, v2 = t3 === 0 ? void 0 : s2.resolve(h2.leafLayers[t3].colors, r3, i3, s2.constBufferCallback(0)), b2 = Array(), y2 = 0, E2 = l2; y2 < E2.length; y2++) {
        var x2 = E2[y2], T2 = s2.resolve(x2, r3, i3, s2.constBufferCallback(0)), A2 = o.AttributeBuffer.range(T2);
        b2.push(a.GeometryCreation.createLeafNodeColors(n3, T2, m2, g2, A2, u3.unmodifiedColorIndex, p2, _2, v2));
      }
      return b2;
    }, e3.getAreaDelaySpread = function(t3, r3) {
      var i3 = e3.findAreaAnimation(t3, r3);
      return i3 === void 0 ? 0 : i3.areaScale.delaySpread;
    }, e3.getHeightDelaySpread = function(t3, r3) {
      var i3 = e3.findHeightAnimation(t3, r3);
      return i3 === void 0 ? 0 : i3.height.delaySpread;
    }, e3.getColorDelaySpread = function(t3, r3) {
      var i3 = e3.findColorAnimation(t3, r3);
      return i3 === void 0 ? 0 : i3.color.delaySpread;
    }, e3.getAreaDelay = function(t3, r3) {
      var i3 = e3.findAreaAnimation(t3, r3);
      return i3 === void 0 ? 0 : i3.areaScale.timestamps[0];
    }, e3.getHeightDelay = function(t3, r3) {
      var i3 = e3.findHeightAnimation(t3, r3);
      return i3 === void 0 ? 0 : i3.height.timestamps[0];
    }, e3.getColorDelay = function(t3, r3) {
      var i3 = e3.findColorAnimation(t3, r3);
      return i3 === void 0 ? 0 : i3.color.timestamps[0];
    }, e3.getAreaDurations = function(t3, r3) {
      var i3 = e3.findAreaAnimation(t3, r3);
      if (i3 === void 0)
        return [1];
      for (var n3 = i3.areaScale.timestamps, o2 = Array(n3.length - 1), a2 = 0; a2 < o2.length; a2++)
        o2[a2] = n3[a2 + 1] - n3[a2];
      return o2;
    }, e3.getHeightDurations = function(t3, r3) {
      var i3 = e3.findHeightAnimation(t3, r3);
      if (i3 === void 0)
        return [1];
      for (var n3 = i3.height.timestamps, o2 = Array(n3.length - 1), a2 = 0; a2 < o2.length; a2++)
        o2[a2] = n3[a2 + 1] - n3[a2];
      return o2;
    }, e3.getColorDurations = function(t3, r3) {
      var i3 = e3.findColorAnimation(t3, r3);
      if (i3 === void 0)
        return [1];
      for (var n3 = i3.color.timestamps, o2 = Array(n3.length - 1), a2 = 0; a2 < o2.length; a2++)
        o2[a2] = n3[a2 + 1] - n3[a2];
      return o2;
    }, e3.getAreaEasing = function(t3, r3) {
      var i3 = e3.findAreaAnimation(t3, r3);
      return i3 === void 0 ? "linear" : i3.areaScale.easing;
    }, e3.getHeightEasing = function(t3, r3) {
      var i3 = e3.findHeightAnimation(t3, r3);
      return i3 === void 0 ? "linear" : i3.height.easing;
    }, e3.getColorEasing = function(t3, r3) {
      var i3 = e3.findColorAnimation(t3, r3);
      return i3 === void 0 ? "linear" : i3.color.easing;
    }, e3.convertEasing = function(e4) {
      switch (e4) {
        case "linear":
          return n2.AnimationData.Easing.LINEAR;
        case "smoothstep":
          return n2.AnimationData.Easing.SMOOTHSTEP;
        default:
          return s(false, "Easing conversion for this easing not implemented."), n2.AnimationData.Easing.UNIMPLEMENTED;
      }
    }, e3.getAreaOrder = function(t3, r3) {
      var i3 = e3.findAreaAnimation(t3, r3);
      return i3 === void 0 ? "synchronous" : i3.areaScale.order;
    }, e3.getHeightOrder = function(t3, r3) {
      var i3 = e3.findHeightAnimation(t3, r3);
      return i3 === void 0 ? "synchronous" : i3.height.order;
    }, e3.getColorOrder = function(t3, r3) {
      var i3 = e3.findColorAnimation(t3, r3);
      return i3 === void 0 ? "synchronous" : i3.color.order;
    }, e3.createDelayBuffers = function(e4, t3, r3, i3, n3, o2, a2, u3, c2) {
      for (var l2 = new Array(n3.length), f2 = 0; f2 < l2.length; f2++)
        l2[f2] = new Float32Array(e4.numberOfLeafNodes);
      return o2 === "synchronous" ? (l2.forEach(function(e5, r4) {
        var i4 = n3.slice(0, r4).reduce(function(e6, t4) {
          return e6 + t4;
        }, 0), o3 = t3 + (r4 === 0 ? 0 : i4);
        e5.fill(o3);
      }), l2) : (o2 === "height" ? (s(a2 !== void 0, "Can not create delay buffer ordered by height without a height buffer"), s(a2.length > 0, "Height buffers have to contain at least 1 element")) : o2 === "height-change" ? (s(a2 !== void 0, "Can not create delay buffer ordered by height-change without a height buffer"), s(a2.length > 1, "Height buffers have to contain at least 2 elements")) : o2 === "color" ? (s(u3 !== void 0, "Can not create delay buffer ordered by color without a color buffer"), s(u3.length > 0, "Color buffers have to contain at least 1 element")) : o2 === "color-change" && (s(u3 !== void 0, "Can not create delay buffer ordered by color without a color buffer"), s(u3.length > 1, "Color buffers have to contain at least 2 elements")), l2.forEach(function(c3, l3) {
        var f3 = new Array();
        o2 === "height" ? e4.forEachLeafNode(function(t4) {
          for (var r4 = t4.index - e4.numberOfInnerNodes, i4 = -1 / 0, n4 = 0, o3 = a2; n4 < o3.length; n4++) {
            var s2 = o3[n4];
            i4 = Math.max(i4, s2[2 * r4 + 1]);
          }
          f3.push({ value: i4, index: r4 });
        }) : o2 === "height-change" ? e4.forEachLeafNode(function(t4) {
          for (var r4 = t4.index - e4.numberOfInnerNodes, i4 = 1 / 0, n4 = -1 / 0, o3 = 0, s2 = a2; o3 < s2.length; o3++) {
            var u4 = s2[o3];
            i4 = Math.min(i4, u4[2 * r4 + 1]), n4 = Math.max(n4, u4[2 * r4 + 1]);
          }
          f3.push({ value: n4 - i4, index: r4 });
        }) : o2 === "color" ? e4.forEachLeafNode(function(t4) {
          for (var r4 = t4.index - e4.numberOfInnerNodes, i4 = -1 / 0, n4 = 0, o3 = u3; n4 < o3.length; n4++) {
            var a3 = o3[n4];
            i4 = Math.max(i4, a3[r4]);
          }
          f3.push({ value: i4, index: r4 });
        }) : o2 === "color-change" ? e4.forEachLeafNode(function(t4) {
          for (var r4 = t4.index - e4.numberOfInnerNodes, i4 = 1 / 0, n4 = -1 / 0, o3 = 0, a3 = u3; o3 < a3.length; o3++) {
            var s2 = a3[o3];
            i4 = Math.min(i4, s2[r4]), n4 = Math.max(n4, s2[r4]);
          }
          f3.push({ value: n4 - i4, index: r4 });
        }) : s(false, "Unimplemented order."), f3.sort(function(e5, t4) {
          return t4.value - e5.value;
        });
        var h2 = n3.slice(0, l3).reduce(function(e5, t4) {
          return e5 + t4;
        }, 0), d2 = t3 + (l3 === 0 ? 0 : h2);
        if (i3 === void 0)
          f3.forEach(function(e5, t4) {
            var i4 = t4 / f3.length * r3;
            c3[e5.index] = d2 + i4 + r3 * l3;
          });
        else {
          var p2 = f3[0].value, _2 = f3[f3.length - 1].value, g2 = p2 - _2;
          f3.forEach(function(e5) {
            var t4 = Math.floor((p2 - e5.value) / (g2 + 0.01) * i3) * (r3 / i3);
            c3[e5.index] = d2 + t4 + r3 * l3;
          });
        }
      }), l2);
    }, e3;
  }();
  t2.AnimationCreation = u2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.NodeColors = void 0;
  var i2 = function() {
    function e3() {
    }
    return e3.innerNodes = function(e4, t3, r3) {
      var i3 = new Uint8Array(e4.numberOfInnerNodes);
      return e4.forEachInnerNode(function(e5) {
        i3[e5.index] = t3 + e5.depth % r3;
      }), i3;
    }, e3;
  }();
  t2.NodeColors = i2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.NodeEmphases = void 0;
  var i2 = r2(23), n2 = function() {
    function e3() {
    }
    return e3.innerNodes = function(e4, t3, r3) {
      var n3 = new Uint8Array(e4.numberOfInnerNodes);
      return e4.forEachInnerNode(function(e5) {
        r3 && r3.has(e5.id) ? n3[e5.index] = i2.Geometry.Emphasis.Highlight : t3 && t3.has(e5.id) ? n3[e5.index] = i2.Geometry.Emphasis.Outline : n3[e5.index] = i2.Geometry.Emphasis.None;
      }), n3;
    }, e3.leafNodes = function(e4, t3, r3) {
      var n3 = new Uint8Array(e4.numberOfLeafNodes);
      return e4.forEachLeafNode(function(o) {
        var a = o.index - e4.numberOfInnerNodes;
        r3 && r3.has(o.id) ? n3[a] = i2.Geometry.Emphasis.Highlight : t3 && t3.has(o.id) ? n3[a] = i2.Geometry.Emphasis.Outline : n3[a] = i2.Geometry.Emphasis.None;
      }), n3;
    }, e3;
  }();
  t2.NodeEmphases = n2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.ObjExport = void 0;
  var i2 = r2(0), n2 = i2.gl_matrix_extensions.v3, o = function() {
    function e3() {
    }
    return e3.inner = function(t3, r3, o2, a) {
      var s = t3.innerNodeLayouts, u2 = e3.SLICE_STENCIL_COMPENSATION * a, c2 = i2.vec3.fromValues(s[4 * r3 + 0], u2, s[4 * r3 + 1]), l2 = i2.vec3.fromValues(s[4 * r3 + 2], 0, s[4 * r3 + 3]), f2 = Array(c2, i2.vec3.add(n2(), c2, i2.vec3.fromValues(l2[0], l2[1], 0)), i2.vec3.add(n2(), c2, l2), i2.vec3.add(n2(), c2, i2.vec3.fromValues(0, l2[1], l2[2]))), h2 = e3.VERTEX_PRECISION, d2 = "g inner-" + r3 + " slice-" + a + "\n";
      return d2 += "v " + f2[0][0].toFixed(h2) + " " + f2[0][1].toFixed(h2) + " " + f2[0][2].toFixed(h2) + "\n", d2 += "v " + f2[1][0].toFixed(h2) + " " + f2[1][1].toFixed(h2) + " " + f2[1][2].toFixed(h2) + "\n", d2 += "v " + f2[2][0].toFixed(h2) + " " + f2[2][1].toFixed(h2) + " " + f2[2][2].toFixed(h2) + "\n", d2 += "v " + f2[3][0].toFixed(h2) + " " + f2[3][1].toFixed(h2) + " " + f2[3][2].toFixed(h2) + "\n", d2 += "f " + (o2 + 0) + " " + (o2 + 1) + " " + (o2 + 2) + "\n", d2 += "f " + (o2 + 2) + " " + (o2 + 3) + " " + (o2 + 0) + "\n";
    }, e3.leaf = function(t3, r3, o2, a) {
      var s = t3.leafNodeLayouts, u2 = t3.leafNodeHeights[a], c2 = t3.heightScale / 255, l2 = i2.vec3.fromValues(s[4 * r3 + 0], u2[2 * r3 + 0] * c2, s[4 * r3 + 1]), f2 = i2.vec3.fromValues(s[4 * r3 + 2], (u2[2 * r3 + 1] - u2[2 * r3 + 0]) * c2, s[4 * r3 + 3]), h2 = Array(i2.vec3.add(n2(), l2, i2.vec3.fromValues(0, 0, 0)), i2.vec3.add(n2(), l2, i2.vec3.fromValues(f2[0], 0, 0)), i2.vec3.add(n2(), l2, i2.vec3.fromValues(f2[0], 0, f2[2])), i2.vec3.add(n2(), l2, i2.vec3.fromValues(0, 0, f2[2])), i2.vec3.add(n2(), l2, i2.vec3.fromValues(0, f2[1], 0)), i2.vec3.add(n2(), l2, i2.vec3.fromValues(f2[0], f2[1], 0)), i2.vec3.add(n2(), l2, i2.vec3.fromValues(f2[0], f2[1], f2[2])), i2.vec3.add(n2(), l2, i2.vec3.fromValues(0, f2[1], f2[2]))), d2 = e3.VERTEX_PRECISION;
      if (f2[1] <= 0)
        return ["", 0];
      var p2 = "g leaf-" + r3 + " layer-" + a + "\n";
      p2 += "v " + h2[0][0].toFixed(d2) + " " + h2[0][1].toFixed(d2) + " " + h2[0][2].toFixed(d2) + "\n", p2 += "v " + h2[1][0].toFixed(d2) + " " + h2[1][1].toFixed(d2) + " " + h2[1][2].toFixed(d2) + "\n", p2 += "v " + h2[2][0].toFixed(d2) + " " + h2[2][1].toFixed(d2) + " " + h2[2][2].toFixed(d2) + "\n", p2 += "v " + h2[3][0].toFixed(d2) + " " + h2[3][1].toFixed(d2) + " " + h2[3][2].toFixed(d2) + "\n", p2 += "v " + h2[4][0].toFixed(d2) + " " + h2[4][1].toFixed(d2) + " " + h2[4][2].toFixed(d2) + "\n", p2 += "v " + h2[5][0].toFixed(d2) + " " + h2[5][1].toFixed(d2) + " " + h2[5][2].toFixed(d2) + "\n", p2 += "v " + h2[6][0].toFixed(d2) + " " + h2[6][1].toFixed(d2) + " " + h2[6][2].toFixed(d2) + "\n", p2 += "v " + h2[7][0].toFixed(d2) + " " + h2[7][1].toFixed(d2) + " " + h2[7][2].toFixed(d2) + "\n";
      for (var _2 = o2, g2 = 0, m2 = [[5, 6, 4], [4, 6, 7], [1, 5, 0], [0, 5, 4], [3, 7, 2], [2, 7, 6], [2, 6, 1], [1, 6, 5], [0, 4, 3], [3, 4, 7]]; g2 < m2.length; g2++) {
        var v2 = m2[g2];
        p2 += "f " + (_2 + v2[0]) + " " + (_2 + v2[1]) + " " + (_2 + v2[2]) + "\n";
      }
      return [p2, e3.VERTICES_PER_LEAF_NODE];
    }, e3.blob = function(t3, r3, n3) {
      i2.auxiliaries.assert(t3.valid, "expected geometry to be valid"), i2.auxiliaries.assert(t3.innerNodeDrawDispatch !== void 0, "expected geometry to have valid inner node draw dispatch"), i2.auxiliaries.assert(t3.leafNodeDrawDispatch !== void 0, "expected geometry to have valid leaf node draw dispatch");
      var o2 = t3.innerNodeDrawDispatch, a = t3.leafNodeDrawDispatch, s = r3 !== void 0 && r3.length > 0, u2 = new Array(), c2 = 0;
      if (s)
        for (var l2 = 0, f2 = r3; l2 < f2.length; l2++) {
          var h2 = f2[l2];
          c2 = o2.filteredCount(h2), u2 = u2.concat(o2.filtered(h2));
        }
      else
        c2 = o2.unfilteredCount(), u2 = u2.concat(o2.unfiltered());
      var d2 = n3 !== void 0 && n3.length > 0, p2 = new Array(0), _2 = 0;
      if (d2)
        for (var g2 = 0, m2 = n3; g2 < m2.length; g2++) {
          h2 = m2[g2];
          _2 += a.filteredCount(h2), p2 = p2.concat(a.filtered(h2));
        }
      else
        _2 = a.unfilteredCount(), p2 = p2.concat(a.unfiltered());
      for (var v2 = e3.VERTICES_PER_INNER_NODE * c2, b2 = e3.VERTICES_PER_LEAF_NODE * t3.leafLayerCount * _2, y2 = "# vertices " + v2 + "\n# faces " + 2 * c2 + "\n# objects " + c2 + "\n", E2 = "# vertices " + b2 + "\n# faces " + 10 * _2 + "\n# objects " + _2 + "\n", x2 = 1, T2 = o2.slices !== void 0 ? o2.slices : [0, 0], A2 = T2.length / 2, O2 = function(r4) {
        for (var i3 = A2 - T2.findIndex(function(e4, t4) {
          return e4 <= u2[r4] && t4 % 2 == 0;
        }) / 2, n4 = u2[r4]; n4 < u2[r4] + u2[r4 + 1]; ++n4)
          y2 += P2.inner(t3, n4, x2, i3), x2 += e3.VERTICES_PER_INNER_NODE;
      }, P2 = this, L2 = 0; L2 < u2.length; L2 += 2)
        O2(L2);
      for (L2 = 0; L2 < p2.length; L2 += 2)
        for (var w2 = p2[L2]; w2 < p2[L2] + p2[L2 + 1]; ++w2)
          for (var S2 = 0; S2 < t3.leafLayerCount; ++S2) {
            var R2 = this.leaf(t3, w2, x2, S2);
            E2 += R2[0], x2 += R2[1];
          }
      return new Blob(["# seerene(tm) treemap\n\n# inner nodes " + c2 + (s ? " (filtered)" : "") + "\n# leaf nodes " + _2 + (d2 ? " (filtered)" : "") + "\n# vertices " + v2 + " (inner) + " + b2 + " (leaf)\n\n" + y2 + "\n" + E2], { type: "text/plain" });
    }, e3.VERTICES_PER_INNER_NODE = 4, e3.VERTICES_PER_LEAF_NODE = 8, e3.SLICE_STENCIL_COMPENSATION = 1e-4, e3.VERTEX_PRECISION = 8, e3;
  }();
  t2.ObjExport = o;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.NodeIndices = void 0;
  var i2 = r2(0), n2 = function() {
    function e3() {
    }
    return e3.innerNodes = function(e4) {
      var t3 = new Uint8Array(4 * e4.numberOfInnerNodes);
      return e4.forEachInnerNode(function(e5) {
        var r3 = e5.index, n3 = i2.vec4.create();
        i2.gl_matrix_extensions.encode_uint32_to_rgba8(n3, e5.index), t3[4 * r3 + 0] = n3[0], t3[4 * r3 + 1] = n3[1], t3[4 * r3 + 2] = n3[2], t3[4 * r3 + 3] = n3[3];
      }), t3;
    }, e3.leafNodes = function(e4) {
      var t3 = new Uint8Array(4 * e4.numberOfLeafNodes), r3 = e4.numberOfInnerNodes;
      return e4.forEachLeafNode(function(e5) {
        var n3 = e5.index - r3, o = i2.vec4.create();
        i2.gl_matrix_extensions.encode_uint32_to_rgba8(o, e5.index), t3[4 * n3 + 0] = o[0], t3[4 * n3 + 1] = o[1], t3[4 * n3 + 2] = o[2], t3[4 * n3 + 3] = o[3];
      }), t3;
    }, e3;
  }();
  t2.NodeIndices = n2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.AdaptiveLabelPlacement = t2.PenaltyFunction = void 0;
  var i2, n2 = r2(0), o = n2.auxiliaries.assert, a = n2.gl_matrix_extensions.v2, s = r2(0), u2 = r2(70), c2 = r2(71), l2 = r2(25), f2 = r2(24);
  !function(e3) {
    e3.leafLabelsTreemap = function(e4, t3, r3, i3) {
      var n3 = 0;
      switch (r3) {
        case f2.RelativeLabelPosition.Type.UpperRight:
          n3 = 0 * i3;
          break;
        case f2.RelativeLabelPosition.Type.LowerRight:
        case f2.RelativeLabelPosition.Type.UpperLeft:
          n3 = 1 * i3;
          break;
        case f2.RelativeLabelPosition.Type.LowerLeft:
          n3 = 3 * i3;
          break;
        case f2.RelativeLabelPosition.Type.Hidden:
          n3 = 60 * i3;
          break;
        default:
          o(false, "No valid relative position type, given " + r3);
      }
      return 15 * t3 + 0.3 * n3;
    };
  }(i2 = t2.PenaltyFunction || (t2.PenaltyFunction = {}));
  var h2 = function() {
    function e3() {
    }
    return e3.getNDCExtentForLeafLabel = function(e4, t3) {
      o(t3.width !== 0 && t3.height !== 0, "camera viewport is invalid: " + t3.width + " " + t3.height);
      var r3 = e4.label.extent[0] / t3.width, i3 = e4.label.extent[1] / t3.height;
      return n2.vec2.fromValues(r3, i3);
    }, e3.placementFor = function(e4, t3) {
      var r3 = n2.vec2.sub(a(), e4.origin, t3), i3 = true, u3 = s.Label.Alignment.Left, c3 = s.Label.LineAnchor.Bottom;
      switch (e4.position) {
        case f2.RelativeLabelPosition.Type.UpperRight:
          break;
        case f2.RelativeLabelPosition.Type.LowerRight:
          c3 = s.Label.LineAnchor.Top;
          break;
        case f2.RelativeLabelPosition.Type.UpperLeft:
          u3 = s.Label.Alignment.Right;
          break;
        case f2.RelativeLabelPosition.Type.LowerLeft:
          c3 = s.Label.LineAnchor.Top, u3 = s.Label.Alignment.Right;
          break;
        case f2.RelativeLabelPosition.Type.Hidden:
          i3 = false;
          break;
        default:
          o(false, "No valid type for relative label position, given" + r3);
      }
      return { offset: r3, alignment: u3, lineAnchor: c3, display: i3 };
    }, e3.createCollisionGraph = function(e4, t3) {
      t3 || (t3 = n2.vec2.fromValues(1, 1));
      for (var r3 = [], i3 = 0; i3 < e4.length; i3++) {
        r3.push([]);
        for (var a2 = 0, s2 = e4[i3]; a2 < s2.length; a2++) {
          s2[a2];
          r3[i3].push([]);
        }
      }
      for (var c3 = new u2.Index2D(); !c3.end(e4); c3.next(e4))
        for (var l3 = c3.element(r3), f3 = c3.element(e4), h3 = new u2.Index2D(); !h3.end(e4); h3.next(e4))
          if (c3.outer !== h3.outer) {
            var d2 = h3.element(e4);
            if (f3.paddedOverlaps(d2, t3)) {
              var p2 = f3.paddedOverlapArea(d2, t3);
              l3.push({ index: h3.outer, position: h3.inner, overlapArea: p2 });
              var _2 = c3.element(r3).length;
              o(_2 > 0, "Size expected to be greater than zero, given " + _2.length);
            }
          }
      return r3;
    }, e3.computeLabelAreas = function(e4, t3, r3) {
      for (var i3 = [], n3 = 0, o2 = e4; n3 < o2.length; n3++) {
        var a2 = o2[n3];
        i3.push([]);
        for (var s2 = this.getNDCExtentForLeafLabel(a2, r3), u3 = 0, l3 = t3; u3 < l3.length; u3++) {
          var h3 = l3[u3], d2 = f2.RelativeLabelPosition.labelOrigin(h3, a2.pointLocation, s2);
          i3[i3.length - 1].push(new c2.LabelArea(d2, s2, h3));
        }
      }
      return i3;
    }, e3.getRandomInt = function(e4) {
      return Math.floor(Math.random() * Math.floor(e4));
    }, e3.randomIndexExcept = function(e4, t3) {
      var r3 = this.getRandomInt(t3 - 1);
      return r3 === e4 ? t3 - 1 : r3;
    }, e3.randomStartLabelAreas = function(e4) {
      for (var t3 = [], r3 = 0, i3 = e4; r3 < i3.length; r3++) {
        var n3 = i3[r3];
        t3.push(this.getRandomInt(n3.length));
      }
      return t3;
    }, e3.computePenalty = function(e4, t3, r3, i3, n3) {
      if (e4.extent[0] === 0 || e4.extent[1] === 0)
        return 0;
      for (var o2 = 0, a2 = 0, s2 = 0, u3 = t3; s2 < u3.length; s2++) {
        var c3 = u3[s2];
        n3[c3.index] === c3.position && (o2 += c3.overlapArea, ++a2);
      }
      return i3(a2, o2 /= e4.area(), e4.position, r3);
    }, e3.simulatedAnnealing = function(e4, t3, r3, i3) {
      for (var n3 = [f2.RelativeLabelPosition.Type.UpperRight, f2.RelativeLabelPosition.Type.UpperLeft, f2.RelativeLabelPosition.Type.LowerLeft, f2.RelativeLabelPosition.Type.LowerRight, f2.RelativeLabelPosition.Type.Hidden], o2 = this.computeLabelAreas(e4, n3, i3), a2 = this.randomStartLabelAreas(o2), s2 = this.createCollisionGraph(o2, r3), u3 = 5 * e4.length, c3 = 20 * e4.length, l3 = 0.91023922662, h3 = 0, d2 = 0, p2 = 0; ; ) {
        var _2 = this.getRandomInt(e4.length), g2 = a2[_2], m2 = this.randomIndexExcept(g2, o2[_2].length), v2 = this.computePenalty(o2[_2][g2], s2[_2][g2], e4[_2].priority, t3, a2) - this.computePenalty(o2[_2][m2], s2[_2][m2], e4[_2].priority, t3, a2), b2 = Math.exp(v2 / l3), y2 = Math.max(0, Math.min(b2, 1)), E2 = Math.random() < y2;
        if ((v2 > 0 || E2) && (a2[_2] = m2, ++d2), ++p2, d2 > u3 || p2 > c3) {
          if (d2 === 0 || h3 === 50)
            break;
          l3 *= 0.9, d2 = 0, p2 = 0, ++h3;
        }
      }
      for (var x2 = 0; x2 < e4.length; ++x2)
        e4[x2].placement = this.placementFor(o2[x2][a2[x2]], e4[x2].pointLocation);
    }, e3.greedy = function(e4, t3, r3, i3) {
      for (var o2 = [], a2 = [f2.RelativeLabelPosition.Type.UpperRight, f2.RelativeLabelPosition.Type.UpperLeft, f2.RelativeLabelPosition.Type.LowerLeft, f2.RelativeLabelPosition.Type.LowerRight, f2.RelativeLabelPosition.Type.Hidden], s2 = 0, u3 = e4; s2 < u3.length; s2++) {
        for (var l3 = u3[s2], h3 = this.getNDCExtentForLeafLabel(l3, i3), d2 = Number.POSITIVE_INFINITY, p2 = new c2.LabelArea(n2.vec2.create(), n2.vec2.create(), f2.RelativeLabelPosition.Type.LowerLeft), _2 = 0, g2 = a2; _2 < g2.length; _2++) {
          for (var m2 = g2[_2], v2 = f2.RelativeLabelPosition.labelOrigin(m2, l3.pointLocation, h3), b2 = new c2.LabelArea(v2, h3, m2), y2 = 0, E2 = 0, x2 = 0, T2 = o2; x2 < T2.length; x2++) {
            var A2 = T2[x2];
            y2 += b2.paddedOverlapArea(A2, r3), E2 += b2.paddedOverlaps(A2, r3) ? 1 : 0;
          }
          var O2 = t3(E2, y2 /= b2.area(), m2, l3.priority);
          O2 < d2 && (d2 = O2, p2 = b2);
        }
        l3.placement = this.placementFor(p2, l3.pointLocation), o2.push(p2);
      }
    }, e3.prepareLeafLabels = function(e4, t3) {
      for (var r3 = [], i3 = 0, o2 = e4; i3 < o2.length; i3++) {
        var a2 = o2[i3];
        if (a2) {
          var s2 = n2.vec4.fromValues(a2.position[0], a2.position[1], a2.position[2], 1);
          n2.vec4.transformMat4(s2, s2, t3.viewProjection);
          var u3 = s2[3], c3 = n2.vec2.fromValues(s2[0] / u3, s2[1] / u3);
          r3.push({ label: a2, pointLocation: c3, priority: 9 * a2.position[1] + 1, placement: { offset: n2.vec2.create(), alignment: a2.alignment, lineAnchor: a2.lineAnchor, display: true } });
        }
      }
      return r3;
    }, e3.applyNewPlacements = function(e4) {
      for (var t3 = false, r3 = false, i3 = 0, n3 = e4; i3 < n3.length; i3++) {
        var o2 = n3[i3], a2 = o2.label.alignment !== o2.placement.alignment, s2 = o2.label.lineAnchor !== o2.placement.lineAnchor;
        o2.label.alignment = o2.placement.alignment, o2.label.lineAnchor = o2.placement.lineAnchor;
        var u3 = o2.placement.display ? l2.LabelManagement.leafLabelColor[3] : 0;
        o2.label.color.fromRGB(o2.label.color.r, o2.label.color.g, o2.label.color.b, u3), t3 = !!t3 || o2.label.color.altered, r3 = !!r3 || (a2 || s2);
      }
      return { visibility: t3, positioning: r3 };
    }, e3.adaptPositionToPreventOverlapGreedy = function(e4, t3) {
      var r3 = this.prepareLeafLabels(e4, t3);
      r3.sort(function(e5, t4) {
        return t4.priority - e5.priority;
      });
      var o2 = n2.vec2.fromValues(1, 1);
      return this.greedy(r3, i2.leafLabelsTreemap, o2, t3), this.applyNewPlacements(r3);
    }, e3.adaptPositionToPreventOverlapSimulatedAnnealing = function(e4, t3) {
      var r3 = this.prepareLeafLabels(e4, t3), o2 = n2.vec2.fromValues(1, 1);
      return this.simulatedAnnealing(r3, i2.leafLabelsTreemap, o2, t3), this.applyNewPlacements(r3);
    }, e3;
  }();
  t2.AdaptiveLabelPlacement = h2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.Index2D = void 0;
  var i2 = function() {
    function e3() {
      this.outer = 0, this.inner = 0;
    }
    return e3.prototype.next = function(e4) {
      ++this.inner, this.inner === e4[this.outer].length && (++this.outer, this.inner = 0);
    }, e3.prototype.end = function(e4) {
      return this.outer === e4.length;
    }, e3.prototype.element = function(e4) {
      return e4[this.outer][this.inner];
    }, e3;
  }();
  t2.Index2D = i2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.LabelArea = void 0;
  var i2 = r2(0), n2 = i2.gl_matrix_extensions.v2, o = r2(24), a = function() {
    function e3(e4, t3, r3) {
      this.origin = e4, this.extent = t3, this.position = r3;
    }
    return e3.prototype.areBothPositionsHidden = function(e4) {
      return this.position === o.RelativeLabelPosition.Type.Hidden || e4 === o.RelativeLabelPosition.Type.Hidden;
    }, e3.prototype.overlaps = function(e4) {
      if (this.areBothPositionsHidden(e4.position))
        return false;
      var t3 = i2.vec2.add(n2(), this.origin, this.extent), r3 = i2.vec2.add(n2(), e4.origin, e4.extent);
      return this.origin[0] < r3[0] && t3[0] > e4.origin[0] && this.origin[1] < r3[1] && t3[1] > e4.origin[1];
    }, e3.prototype.paddedOverlaps = function(e4, t3) {
      if (this.areBothPositionsHidden(e4.position))
        return false;
      var r3 = i2.vec2.fromValues(t3[0] + 1, t3[1] + 1), o2 = i2.vec2.sub(n2(), this.origin, i2.vec2.mul(n2(), this.extent, t3)), a2 = i2.vec2.sub(n2(), e4.origin, i2.vec2.mul(n2(), e4.extent, t3)), s = i2.vec2.add(n2(), this.origin, i2.vec2.mul(n2(), this.extent, r3)), u2 = i2.vec2.add(n2(), e4.origin, i2.vec2.mul(n2(), e4.extent, r3));
      return o2[0] < u2[0] && s[0] > a2[0] && o2[1] < u2[1] && s[1] > a2[1];
    }, e3.prototype.overlapArea = function(e4) {
      if (this.areBothPositionsHidden(e4.position))
        return 0;
      var t3 = i2.vec2.max(n2(), this.origin, e4.origin), r3 = i2.vec2.min(n2(), i2.vec2.add(n2(), this.origin, this.extent), i2.vec2.add(n2(), e4.origin, e4.extent));
      return Math.max(0, r3[0] - t3[0]) * Math.max(0, r3[1] - t3[1]);
    }, e3.prototype.paddedOverlapArea = function(e4, t3) {
      if (this.areBothPositionsHidden(e4.position))
        return 0;
      var r3 = i2.vec2.max(n2(), i2.vec2.sub(n2(), this.origin, i2.vec2.mul(n2(), this.extent, t3)), i2.vec2.sub(n2(), e4.origin, i2.vec2.mul(n2(), e4.extent, t3))), o2 = i2.vec2.fromValues(t3[0] + 1, t3[1] + 1), a2 = i2.vec2.min(n2(), i2.vec2.add(n2(), this.origin, i2.vec2.mul(n2(), this.extent, o2)), i2.vec2.add(n2(), e4.origin, i2.vec2.mul(n2(), e4.extent, o2)));
      return Math.max(0, a2[0] - r3[0]) * Math.max(0, a2[1] - r3[1]);
    }, e3.prototype.area = function() {
      return this.extent[0] * this.extent[1];
    }, e3;
  }();
  t2.LabelArea = a;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.Aggregation = void 0, function(e3) {
    e3.createAggregationMask = function(e4, t3, r3, i2, n2, o) {
      var a = new Uint8Array(e4.numberOfNodes), s = new Uint8Array(e4.numberOfNodes);
      return e4.forEachInnerNode(function(e5) {
        var t4 = n2 < e5.depth;
        o && (t4 = t4 && !o[e5.index]), s[e5.index] = t4 ? 1 : 0;
      }), e4.forEachLeafNode(function(e5) {
        var n3 = t3[e5.index] > 0 && (r3 === void 0 || r3[e5.index] < i2);
        s[e5.index] = n3 ? 0 : 1;
      }), e4.reverseNodesDo(function(e5) {
        e5.isRoot || (s[e5.parent] &= s[e5.index]);
      }), e4.nodesDo(function(e5) {
        e5.isRoot ? a[e5.index] = 0 : a[e5.index] = s[e5.parent];
      }), a;
    }, e3.createEmptyAggregationMask = function(e4) {
      var t3 = new Uint8Array(e4.numberOfNodes);
      return t3.fill(0, 0, e4.numberOfNodes), t3;
    };
  }(t2.Aggregation || (t2.Aggregation = {}));
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.BufferResolver = void 0;
  var i2 = r2(1), n2 = function() {
    function e3(e4) {
      this._topology = e4;
    }
    return e3.prototype.resolve = function(e4, t3, r3, n3) {
      if (n3 && (e4 === void 0 || e4 === ""))
        return n3();
      var o = i2.AttributeBuffer.create(this._topology, r3, e4, t3);
      return n3 && o === void 0 ? n3() : o;
    }, e3.prototype.constBufferCallback = function(e4) {
      var t3 = this;
      return e4 === void 0 && (e4 = 0), function() {
        var r3 = new Float32Array(t3._topology.numberOfNodes);
        return r3.fill(e4), r3;
      };
    }, e3;
  }();
  t2.BufferResolver = n2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.ColorTable = void 0;
  var i2 = function() {
    function e3(e4, t3, r3, i3) {
      this._emphasis = e4.rgbaF32, this._auxiliary = new Float32Array(4 * t3.length);
      for (var n2 = 0; n2 < t3.length; ++n2)
        this._auxiliary.set(t3[n2].rgbaF32, 4 * n2);
      this._inner = new Float32Array(4 * r3.length);
      for (n2 = 0; n2 < r3.length; ++n2)
        this._inner.set(r3[n2].rgbaF32, 4 * n2);
      this._leaf = new Float32Array(4 * i3.length);
      for (n2 = 0; n2 < i3.length; ++n2)
        this._leaf.set(i3[n2].rgbaF32, 4 * n2);
    }
    return Object.defineProperty(e3.prototype, "innerNodeColorOffset", { get: function() {
      return this.auxiliaryColorCount;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "innerNodeColorCount", { get: function() {
      return this._inner.length / 4;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "leafColorOffset", { get: function() {
      return this.innerNodeColorOffset + this.innerNodeColorCount;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "leafColorCount", { get: function() {
      return this._leaf.length / 4;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "auxiliaryColorOffset", { get: function() {
      return 0;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "auxiliaryColorCount", { get: function() {
      return this._auxiliary.length / 4 + 1;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "unmodifiedColorIndex", { get: function() {
      return this.innerNodeColorOffset;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "selectionColorIndex", { get: function() {
      return 0;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "bits", { get: function() {
      var e4 = new Float32Array(4 * (this.auxiliaryColorCount + this.innerNodeColorCount + this.leafColorCount));
      return e4.set(this._emphasis, 0), e4.set(this._auxiliary, 4), e4.set(this._inner, 4 * this.innerNodeColorOffset), e4.set(this._leaf, 4 * this.leafColorOffset), e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(e3.prototype, "length", { get: function() {
      return this.auxiliaryColorCount + this.leafColorCount + this.innerNodeColorCount;
    }, enumerable: false, configurable: true }), e3;
  }();
  t2.ColorTable = i2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.IS_EDGE = t2.IS_IE11 = void 0, t2.IS_IE11 = typeof navigator == "undefined" ? void 0 : /MSIE 11/i.test(navigator.userAgent), t2.IS_EDGE = typeof navigator == "undefined" ? void 0 : /Edge\/\d./i.test(navigator.userAgent);
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.DrawDispatchComputation = void 0;
  var i2 = r2(26), n2 = function() {
    function e3() {
    }
    return e3.computeParentDrawDispatch = function(e4, t3, r3) {
      var n3 = new i2.DrawDispatch(), o = new Uint32Array(e4.numberOfInnerNodes);
      e4.forEachInnerNode(function(e5) {
        return o[e5.index] = e5.id;
      });
      for (var a = o.filter(function(e5, r4) {
        return !t3[r4];
      }), s = e4.linearization.slices, u2 = new Array(), c2 = r3 === false ? 1 : 0, l2 = s.length - 2; l2 >= c2; --l2)
        u2.push(s[l2][0]), u2.push(s[l2][1]);
      return n3.ids = o, n3.slices = u2, n3.filter(0, a), n3;
    }, e3.computeLeafDrawDispatch = function(e4, t3) {
      var r3 = new i2.DrawDispatch(), n3 = new Uint32Array(e4.numberOfLeafNodes);
      e4.forEachLeafNode(function(t4) {
        return n3[t4.index - e4.numberOfInnerNodes] = t4.id;
      });
      var o = n3.filter(function(r4, i3) {
        return !t3[i3 + e4.numberOfInnerNodes];
      });
      return r3.ids = n3, r3.filter(0, o), r3;
    }, e3;
  }();
  t2.DrawDispatchComputation = n2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.IntermediateResults = void 0;
  var i2 = r2(3), n2 = function() {
    this.topology = new i2.Topology();
  };
  t2.IntermediateResults = n2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.CodeCityLayout = void 0;
  var i2 = r2(4), n2 = function() {
    function e3() {
    }
    return e3.compute = function(t3, r3, n3, o, a, s, u2, c2) {
      var l2 = r3[t3.root.index];
      t3.nodesDo(function(e4) {
        var t4 = r3[e4.index], a2 = Math.sqrt(t4 / l2);
        o[e4.index] = new i2.Rect(0, 0, a2 * n3, a2);
      });
      var f2 = new Array();
      f2[t3.root.index] = [0, 0], t3.reverseParentsDo(function(r4) {
        var n4 = 0, l3 = 0, h3 = n4, d3 = l3, p2 = e3.Direction.Y;
        t3.childrenDo(r4, function(t4) {
          var i3 = o[t4.index] = a.siblingMarginAfterCallback(o[t4.index], o[r4.index], o[r4.index], t4);
          switch (p2) {
            case e3.Direction.X:
              n4 + i3.width >= h3 && (n4 = h3, l3 = 0, p2 = e3.Direction.Y);
              break;
            default:
            case e3.Direction.Y:
              l3 + i3.height >= d3 && (n4 = 0, l3 = d3, p2 = e3.Direction.X);
          }
          switch (f2[t4.index] = [n4, l3], p2) {
            case e3.Direction.X:
              n4 += i3.width, h3 = Math.max(h3, n4), d3 = Math.max(d3, Math.max(l3 + i3.height, i3.top));
              break;
            default:
            case e3.Direction.Y:
              l3 += i3.height, h3 = Math.max(h3, Math.max(n4 + i3.width, i3.right)), d3 = Math.max(d3, l3);
          }
        });
        var _2 = a.parentPaddingCallback(new i2.Rect(0, 0, h3, d3), r4, t3, o, u2, c2);
        o[r4.index] = a.accessoryPaddingCallback(_2, r4, t3, o, s);
      }), t3.nodesDo(function(e4) {
        var r4 = o[e4.index], i3 = f2[e4.index];
        r4.applyOffset(i3[0], i3[1]), t3.childrenDo(e4, function(e5) {
          var t4 = f2[e5.index];
          t4[0] += i3[0], t4[1] += i3[1];
        });
      });
      var h2 = o[t3.root.index], d2 = new i2.Rect(0, 0, h2.aspectRatio, 1);
      d2.centerAround([0.5, 0.5]), t3.reverseNodesDo(function(e4) {
        o[e4.index] = o[e4.index].map(h2, d2);
      });
    }, e3;
  }();
  t2.CodeCityLayout = n2, function(e3) {
    !function(e4) {
      e4[e4.X = 0] = "X", e4[e4.Y = 1] = "Y";
    }(e3.Direction || (e3.Direction = {}));
  }(n2 = t2.CodeCityLayout || (t2.CodeCityLayout = {})), t2.CodeCityLayout = n2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.SnakeLayout = void 0;
  var i2 = r2(80), n2 = r2(7), o = r2(4), a = function() {
    function e3() {
    }
    return e3.compute = function(e4, t3, r3, a2, s, u2, c2, l2, f2, h2) {
      a2[e4.root.index] = new o.Rect(0, 0, r3, 1), a2[e4.root.index].centerAround([0.5, 0.5]), e4.forEachInnerNode(function(r4) {
        if (h2) {
          var d2 = e4.node(r4.firstChild);
          if (d2.nextSibling === n2.Node.INVALID_INDEX && d2.firstChild !== n2.Node.INVALID_INDEX)
            return a2[d2.index] = a2[r4.index], a2[r4.index] = new o.Rect(0, 0, 0, 0), void (f2[r4.index] = true);
        }
        var p2 = s.accessoryPaddingCallback(a2[r4.index], r4, e4, a2, u2);
        p2 = s.parentPaddingCallback(p2, r4, e4, a2, c2, l2);
        var _2 = s.siblingMarginBeforeCallback(p2, r4, e4, a2, c2, l2), g2 = _2.isReversed, m2 = g2, v2 = new i2.DirectionalRow(e4, t3, _2, t3[r4.index], _2.isVertical, m2, g2);
        e4.childrenDo(r4, function(e5) {
          var r5 = t3[e5.index];
          v2.increasesAverageAspectRatio(r5) && (v2.layoutNodes(a2), v2.next(_2.isVertical)), v2.insert(e5, r5);
        }), v2.layoutNodes(a2), e4.childrenDo(r4, function(e5) {
          a2[e5.index] = s.siblingMarginAfterCallback(a2[e5.index], _2, p2, e5);
        });
      });
    }, e3;
  }();
  t2.SnakeLayout = a;
}, function(e2, t2, r2) {
  var i2, n2 = this && this.__extends || (i2 = function(e3, t3) {
    return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e4, t4) {
      e4.__proto__ = t4;
    } || function(e4, t4) {
      for (var r3 in t4)
        Object.prototype.hasOwnProperty.call(t4, r3) && (e4[r3] = t4[r3]);
    })(e3, t3);
  }, function(e3, t3) {
    if (typeof t3 != "function" && t3 !== null)
      throw new TypeError("Class extends value " + String(t3) + " is not a constructor or null");
    function r3() {
      this.constructor = e3;
    }
    i2(e3, t3), e3.prototype = t3 === null ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
  });
  Object.defineProperty(t2, "__esModule", { value: true }), t2.DirectionalRow = void 0;
  var o = r2(0).auxiliaries.assert, a = r2(4), s = function(e3) {
    function t3(t4, r3, i3, n3, o2, a2, s2) {
      var u2 = e3.call(this, t4, r3, i3, n3, o2) || this;
      return u2._reverse = a2, u2._parentReverse = s2, u2;
    }
    return n2(t3, e3), Object.defineProperty(t3.prototype, "reverse", { get: function() {
      return this._reverse;
    }, set: function(e4) {
      this._reverse = e4;
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "parentReverse", { get: function() {
      return this._parentReverse;
    }, set: function(e4) {
      this._parentReverse = e4;
    }, enumerable: false, configurable: true }), t3.prototype.layoutNodes = function(e4) {
      var t4 = this;
      if (this._firstChild !== void 0)
        if (this.isDisabled)
          this._tree.siblingsRangeDo(this._firstChild, this._lastChild, function(r4) {
            e4[r4.index] = new a.Rect(t4._availableSpace.left, t4._availableSpace.bottom, t4._availableSpace.left, t4._availableSpace.bottom);
          });
        else {
          var r3 = this.currentSpace, i3 = this._reverse ? a.Rect.Orientation.DC : a.Rect.Orientation.CD;
          if (this._horizontal)
            if (this._parentReverse) {
              var n3 = r3.right;
              this._tree.siblingsRangeDo(this._firstChild, this._lastChild, function(s3) {
                var u3 = t4._weights[s3.index], c3 = r3.width * u3 / t4._childrenWeight, l2 = Math.max(n3 - c3, r3.left);
                e4[s3.index] = new a.Rect(l2, r3.bottom, n3, r3.top, i3), o(t4._availableSpace.comprises(e4[s3.index]), "Expect that child rect is within parent rect"), n3 = l2;
              });
            } else {
              var s2 = r3.left;
              this._tree.siblingsRangeDo(this._firstChild, this._lastChild, function(n4) {
                var u3 = t4._weights[n4.index], c3 = r3.width * u3 / t4._childrenWeight, l2 = Math.min(s2 + c3, r3.right);
                e4[n4.index] = new a.Rect(s2, r3.bottom, l2, r3.top, i3), o(t4._availableSpace.comprises(e4[n4.index]), "Expect that child rect is within parent rect"), s2 = l2;
              });
            }
          else if (this._parentReverse) {
            var u2 = r3.top;
            this._tree.siblingsRangeDo(this._firstChild, this._lastChild, function(n4) {
              var s3 = t4._weights[n4.index], c3 = r3.height * s3 / t4._childrenWeight, l2 = Math.max(u2 - c3, r3.bottom);
              e4[n4.index] = new a.Rect(r3.left, l2, r3.right, u2, i3), o(t4._availableSpace.comprises(e4[n4.index]), "Expect that child rect is within parent rect"), u2 = l2;
            });
          } else {
            var c2 = r3.bottom;
            this._tree.siblingsRangeDo(this._firstChild, this._lastChild, function(n4) {
              var s3 = t4._weights[n4.index], u3 = r3.height * s3 / t4._childrenWeight, l2 = Math.min(c2 + u3, r3.top);
              e4[n4.index] = new a.Rect(r3.left, c2, r3.right, l2, i3), o(t4._availableSpace.comprises(e4[n4.index]), "Expect that child rect is within parent rect"), c2 = l2;
            });
          }
        }
    }, Object.defineProperty(t3.prototype, "currentSpace", { get: function() {
      if (this.isDisabled)
        return this._availableSpace.truncateBottom(this._availableSpace.top);
      if (this._childrenWeight >= this._availableWeight || this._lastChild === void 0)
        return a.Rect.clone(this.availableSpace);
      var e4 = this._childrenWeight / this._availableWeight;
      if (this._horizontal) {
        if (this._parentReverse) {
          var t4 = this._availableSpace.top - e4 * this._availableSpace.height;
          return this._availableSpace.truncateBottom(t4);
        }
        t4 = this._availableSpace.bottom + e4 * this._availableSpace.height;
        return this._availableSpace.truncateTop(t4);
      }
      if (this._parentReverse) {
        t4 = this._availableSpace.right - e4 * this._availableSpace.width;
        return this._availableSpace.truncateLeft(t4);
      }
      t4 = this._availableSpace.left + e4 * this._availableSpace.width;
      return this._availableSpace.truncateRight(t4);
    }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "remainingSpace", { get: function() {
      if (this.isDisabled)
        return this._availableSpace.truncateBottom(this._availableSpace.top);
      var e4 = Math.min(this._childrenWeight / this._availableWeight, 1);
      if (this._horizontal) {
        if (this._parentReverse) {
          var t4 = this._availableSpace.top - e4 * this._availableSpace.height;
          return this._availableSpace.truncateTop(t4);
        }
        t4 = this._availableSpace.bottom + e4 * this._availableSpace.height;
        return this._availableSpace.truncateBottom(t4);
      }
      if (this._parentReverse) {
        t4 = this._availableSpace.right - e4 * this._availableSpace.width;
        return this._availableSpace.truncateRight(t4);
      }
      t4 = this._availableSpace.left + e4 * this._availableSpace.width;
      return this._availableSpace.truncateLeft(t4);
    }, enumerable: false, configurable: true }), t3.prototype.next = function(t4) {
      e3.prototype.next.call(this, t4), this._reverse = !this._reverse;
    }, t3;
  }(r2(28).Row);
  t2.DirectionalRow = s;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.StripLayout = void 0;
  var i2 = r2(7), n2 = r2(4), o = r2(28), a = function() {
    function e3() {
    }
    return e3.compute = function(e4, t3, r3, a2, s, u2, c2, l2, f2, h2) {
      a2[e4.root.index] = new n2.Rect(0, 0, r3, 1), a2[e4.root.index].centerAround([0.5, 0.5]), e4.forEachInnerNode(function(r4) {
        if (h2) {
          var d2 = e4.node(r4.firstChild);
          if (d2.nextSibling === i2.Node.INVALID_INDEX && d2.firstChild !== i2.Node.INVALID_INDEX)
            return a2[d2.index] = a2[r4.index], a2[r4.index] = new n2.Rect(0, 0, 0, 0), void (f2[r4.index] = true);
          f2[r4.index] = false;
        }
        var p2 = s.accessoryPaddingCallback(a2[r4.index], r4, e4, a2, u2);
        p2 = s.parentPaddingCallback(p2, r4, e4, a2, c2, l2);
        var _2 = s.siblingMarginBeforeCallback(p2, r4, e4, a2, c2, l2), g2 = new o.Row(e4, t3, _2, t3[r4.index], p2.isVertical);
        e4.childrenDo(r4, function(e5) {
          var r5 = t3[e5.index];
          g2.increasesAverageAspectRatio(r5) && (g2.layoutNodes(a2), g2.next(_2.isVertical)), g2.insert(e5, r5);
        }), g2.layoutNodes(a2), e4.childrenDo(r4, function(e5) {
          a2[e5.index] = s.siblingMarginAfterCallback(a2[e5.index], _2, p2, e5);
        });
      });
    }, e3;
  }();
  t2.StripLayout = a;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.LayoutCascade = void 0;
  var i2 = r2(4), n2 = function() {
    function e3() {
    }
    return e3.applyCascade = function(e4, t3) {
      var r3 = new Array();
      return r3.length = e4.numberOfNodes, e4.forEachLeafNode(function(e5) {
        r3[e5.index] = i2.Rect.clone(t3[e5.index]);
      }), e4.reverseParentsDo(function(n3) {
        var o, a = t3[n3.index];
        if (e4.childrenDo(n3, function(e5) {
          var t4 = r3[e5.index];
          o === void 0 ? o = i2.Rect.clone(t4) : o.enclose(t4);
        }), o !== void 0) {
          o.applyOffset(a.left - o.left, a.top - o.top);
          var s = o.left, u2 = o.bottom, c2 = s + o.width, l2 = u2 + o.height;
          r3[n3.index] = new i2.Rect(s, u2, c2, l2);
        } else
          r3[n3.index] = new i2.Rect(0, 0, 0, 0);
      }), r3;
    }, e3;
  }();
  t2.LayoutCascade = n2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.AnimatedServiceData = void 0;
  var i2 = r2(29), n2 = function() {
    function e3() {
    }
    return e3.fetchAsync = function(e4, t3, r3, n3, o, a) {
      var s = function(e5, t4) {
        return "fetching '" + e5 + "' failed (" + t4.status + "): " + t4.statusText;
      };
      return new Promise(function(u2, c2) {
        for (var l2 = [void 0, void 0, void 0, void 0], f2 = [new XMLHttpRequest(), new XMLHttpRequest(), new XMLHttpRequest(), new XMLHttpRequest()], h2 = [e4, t3, r3, n3], d2 = function(e5) {
          var t4 = f2[e5], r4 = h2[e5];
          t4.open("GET", r4, true), t4.responseType = e5 === 3 ? "json" : "arraybuffer", t4.onload = function() {
            if (t4.status < 200 || t4.status >= 300)
              c2(s(r4, t4));
            else if (l2[e5] = t4.response, e5 === 3 && typeof t4.response == "string" && (l2[e5] = JSON.parse(t4.response)), l2[0] !== void 0 && l2[1] !== void 0 && l2[2] !== void 0 && l2[3] !== void 0) {
              var n4 = new i2.AnimatedServiceAdapter();
              n4.loadAll(l2[0], l2[1], l2[2], l2[3], o, a), u2(n4.config);
            }
          }, t4.onerror = function() {
            return c2(s(r4, t4));
          }, t4.ontimeout = function() {
            return c2(s(r4, t4));
          }, t4.send();
        }, p2 = 0; p2 < h2.length; p2++)
          d2(p2);
      });
    }, e3.fetchAsyncCombined = function(e4, t3) {
      var r3 = function(e5, t4) {
        return "fetching '" + e5 + "' failed (" + t4.status + "): " + t4.statusText;
      };
      return new Promise(function(n3, o) {
        for (var a = [void 0, void 0], s = [new XMLHttpRequest(), new XMLHttpRequest()], u2 = [e4, t3], c2 = function(e5) {
          var t4 = s[e5], c3 = u2[e5];
          t4.open("GET", c3, true), t4.responseType = e5 === 1 ? "json" : "arraybuffer", t4.onload = function() {
            if (t4.status < 200 || t4.status >= 300)
              o(r3(c3, t4));
            else if (a[e5] = t4.response, e5 === 1 && typeof t4.response == "string" && (a[e5] = JSON.parse(t4.response)), a[0] !== void 0 && a[1] !== void 0) {
              var s2 = new i2.AnimatedServiceAdapter();
              s2.loadCombinedFormat(a[0]), s2.loadNames(a[1]), n3(s2.config);
            }
          }, t4.onerror = function() {
            return o(r3(c3, t4));
          }, t4.ontimeout = function() {
            return o(r3(c3, t4));
          }, t4.send();
        }, l2 = 0; l2 < u2.length; l2++)
          c2(l2);
      });
    }, e3;
  }();
  t2.AnimatedServiceData = n2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.JSONData = void 0;
  var i2 = r2(2), n2 = function() {
    function e3() {
    }
    return e3.parseCommitHeader = function(t3) {
      var r3 = t3.split(e3.DELIMITER), i3 = /* @__PURE__ */ new Map();
      return r3.forEach(function(e4, t4) {
        i3.set(e4, t4);
      }), i3;
    }, e3.parseCommitData = function(t3, r3, i3) {
      for (var n3 = /* @__PURE__ */ new Map(), o = function(t4) {
        var o2 = t4.split(e3.DELIMITER), a2 = r3.map(function(e4) {
          return Number(o2[e4]);
        }), s2 = parseInt(o2[i3], 10);
        n3.set(s2, a2);
      }, a = 0, s = t3; a < s.length; a++) {
        o(s[a]);
      }
      return n3;
    }, e3.convertAndPadCommitData = function(e4, t3) {
      var r3 = e4.values().next().value.length, i3 = new Array();
      return t3.forEach(function(t4, n3) {
        var o = e4.get(n3);
        o !== void 0 ? i3.push(o) : i3.push(new Array(r3).fill(0));
      }), i3;
    }, e3.fetchCommitsAsync = function(t3, r3) {
      return new Promise(function(i3, n3) {
        var o = new XMLHttpRequest();
        o.open("GET", t3, true), o.responseType = "text", o.onload = function() {
          if (o.status < 200 || o.status >= 300)
            n3(e3.FAILED(t3, o));
          else {
            var a = o.response.split("\n").slice(0, r3);
            i3(a);
          }
        }, o.onerror = function() {
          return n3(e3.FAILED(t3, o));
        }, o.ontimeout = function() {
          return n3(e3.FAILED(t3, o));
        }, o.send();
      });
    }, e3.fetchCommitDataAsync = function(t3, r3) {
      return new Promise(function(i3, n3) {
        for (var o = new Array(), a = 0; a < r3.length; ++a)
          o.push(new XMLHttpRequest());
        var s = new Array(r3.length).fill(""), u2 = function(a2) {
          var u3 = o[a2];
          u3.open("GET", t3 + "/" + r3[0] + ".metrics.csv", true), u3.responseType = "text", u3.onload = function() {
            u3.status < 200 || u3.status >= 300 ? n3(e3.FAILED(t3, u3)) : (s[a2] = u3.response, s.some(function(e4) {
              return e4 === "";
            }) || i3(s));
          }, u3.onerror = function() {
            return n3(e3.FAILED(t3, u3));
          }, u3.ontimeout = function() {
            return n3(e3.FAILED(t3, u3));
          }, u3.send();
        };
        for (a = 0; a < o.length; a++)
          u2(a);
      });
    }, e3.fetchIdentitiesAsync = function(t3) {
      return new Promise(function(r3, i3) {
        var n3 = new XMLHttpRequest();
        n3.open("GET", t3, true), n3.responseType = "json", n3.onload = function() {
          if (n3.status < 200 || n3.status >= 300)
            i3(e3.FAILED(t3, n3));
          else {
            var o = n3.response.identities;
            r3(o);
          }
        }, n3.onerror = function() {
          return i3(e3.FAILED(t3, n3));
        }, n3.ontimeout = function() {
          return i3(e3.FAILED(t3, n3));
        }, n3.send();
      });
    }, e3.fetchAsync = function(t3, r3, n3, o, a) {
      return new Promise(function(s, u2) {
        var c2, l2;
        e3.fetchCommitsAsync(t3 + "/" + r3, o).then(function(r4) {
          return c2 = r4, e3.fetchIdentitiesAsync(t3 + "/" + n3);
        }).then(function(e4) {
          l2 = e4;
        }).then(function() {
          return e3.fetchCommitDataAsync(t3, c2);
        }).then(function(t4) {
          for (var r4 = function(t5) {
            var r5 = t5.split("\n"), i4 = e3.parseCommitHeader(r5[0]), n5 = new Array();
            i4.forEach(function(e4, t6) {
              a.includes(t6) && n5.push(e4);
            });
            var o2 = i4.get("identity");
            o2 === void 0 && u2("Could not find identity row in commit."), r5 = r5.slice(1);
            var s2 = e3.parseCommitData(r5.slice(1), n5, o2);
            e3.convertAndPadCommitData(s2, l2);
          }, i3 = 0, n4 = t4; i3 < n4.length; i3++) {
            r4(n4[i3]);
          }
        }), s(new i2.Configuration());
      });
    }, e3.DELIMITER = ";", e3.FAILED = function(e4, t3) {
      return "fetching '" + e4 + "' failed (" + t3.status + "): " + t3.statusText;
    }, e3;
  }();
  t2.JSONData = n2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.ServiceData = void 0;
  var i2 = r2(14), n2 = function() {
    function e3() {
    }
    return e3.fetchAsync = function(e4, t3, r3, n3, o, a) {
      var s = function(e5, t4) {
        return "fetching '" + e5 + "' failed (" + t4.status + "): " + t4.statusText;
      };
      return new Promise(function(u2, c2) {
        for (var l2 = [void 0, void 0, void 0, void 0], f2 = [new XMLHttpRequest(), new XMLHttpRequest(), new XMLHttpRequest(), new XMLHttpRequest()], h2 = [e4, t3, r3, n3], d2 = function(e5) {
          var t4 = f2[e5], r4 = h2[e5];
          t4.open("GET", r4, true), t4.responseType = e5 === 3 ? "json" : "arraybuffer", t4.onload = function() {
            if (t4.status < 200 || t4.status >= 300)
              c2(s(r4, t4));
            else if (l2[e5] = t4.response, e5 === 3 && typeof t4.response == "string" && (l2[e5] = JSON.parse(t4.response)), l2[0] !== void 0 && l2[1] !== void 0 && l2[2] !== void 0 && l2[3] !== void 0) {
              var n4 = new i2.ServiceAdapter();
              n4.loadAll(l2[0], l2[1], l2[2], l2[3], o, a), u2(n4.config);
            }
          }, t4.onerror = function() {
            return c2(s(r4, t4));
          }, t4.ontimeout = function() {
            return c2(s(r4, t4));
          }, t4.send();
        }, p2 = 0; p2 < h2.length; p2++)
          d2(p2);
      });
    }, e3.fetchAsyncCombined = function(e4, t3) {
      var r3 = function(e5, t4) {
        return "fetching '" + e5 + "' failed (" + t4.status + "): " + t4.statusText;
      };
      return new Promise(function(n3, o) {
        for (var a = [void 0, void 0], s = [new XMLHttpRequest(), new XMLHttpRequest()], u2 = [e4, t3], c2 = function(e5) {
          var t4 = s[e5], c3 = u2[e5];
          t4.open("GET", c3, true), t4.responseType = e5 === 1 ? "json" : "arraybuffer", t4.onload = function() {
            if (t4.status < 200 || t4.status >= 300)
              o(r3(c3, t4));
            else if (a[e5] = t4.response, e5 === 1 && typeof t4.response == "string" && (a[e5] = JSON.parse(t4.response)), a[0] !== void 0 && a[1] !== void 0) {
              var s2 = new i2.ServiceAdapter();
              s2.loadCombinedFormat(a[0]), s2.loadNames(a[1]), n3(s2.config);
            }
          }, t4.onerror = function() {
            return o(r3(c3, t4));
          }, t4.ontimeout = function() {
            return o(r3(c3, t4));
          }, t4.send();
        }, l2 = 0; l2 < u2.length; l2++)
          c2(l2);
      });
    }, e3;
  }();
  t2.ServiceData = n2;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.TestData = void 0;
  var i2 = r2(0), n2 = r2(87), o = r2(14), a = function() {
    function e3() {
    }
    return e3.config = function(e4) {
      var t3 = new o.ServiceAdapter();
      return t3.loadAll(n2.decode(e4.values[0].response), n2.decode(e4.values[1].response), n2.decode(e4.heights.response), e4.labels[0].response, e4.heights.include_hierarchy, e4.heights.compare), t3.config;
    }, e3.fetchAsync = function(t3) {
      var r3 = function(e4, t4) {
        return "fetching '" + e4 + "' failed (" + t4.status + "): " + t4.statusText;
      };
      return new Promise(function(n3, o2) {
        var a2 = new XMLHttpRequest();
        a2.open("GET", t3, true), a2.onload = function() {
          if (a2.status < 200 || a2.status >= 300)
            o2(r3(t3, a2));
          else {
            var s = a2.responseText;
            if (i2.properties.validate(s, e3.SCHEMA.properties, [])) {
              var u2 = JSON.parse(s);
              n3(e3.config(u2));
            }
          }
        }, a2.onerror = function() {
          return o2(r3(t3, a2));
        }, a2.ontimeout = function() {
          return o2(r3(t3, a2));
        }, a2.send();
      });
    }, e3.SCHEMA = r2(89), e3;
  }();
  t2.TestData = a;
}, function(e2, t2, r2) {
  var i2, n2 = r2(88);
  (i2 || (i2 = {})).decode = function(e3) {
    return n2.decode(e3);
  }, e2.exports = i2;
}, function(e2, t2) {
  !function() {
    for (var e3 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", r2 = new Uint8Array(256), i2 = 0; i2 < e3.length; i2++)
      r2[e3.charCodeAt(i2)] = i2;
    t2.encode = function(t3) {
      var r3, i3 = new Uint8Array(t3), n2 = i3.length, o = "";
      for (r3 = 0; r3 < n2; r3 += 3)
        o += e3[i3[r3] >> 2], o += e3[(3 & i3[r3]) << 4 | i3[r3 + 1] >> 4], o += e3[(15 & i3[r3 + 1]) << 2 | i3[r3 + 2] >> 6], o += e3[63 & i3[r3 + 2]];
      return n2 % 3 == 2 ? o = o.substring(0, o.length - 1) + "=" : n2 % 3 == 1 && (o = o.substring(0, o.length - 2) + "=="), o;
    }, t2.decode = function(e4) {
      var t3, i3, n2, o, a, s = 0.75 * e4.length, u2 = e4.length, c2 = 0;
      e4[e4.length - 1] === "=" && (s--, e4[e4.length - 2] === "=" && s--);
      var l2 = new ArrayBuffer(s), f2 = new Uint8Array(l2);
      for (t3 = 0; t3 < u2; t3 += 4)
        i3 = r2[e4.charCodeAt(t3)], n2 = r2[e4.charCodeAt(t3 + 1)], o = r2[e4.charCodeAt(t3 + 2)], a = r2[e4.charCodeAt(t3 + 3)], f2[c2++] = i3 << 2 | n2 >> 4, f2[c2++] = (15 & n2) << 4 | o >> 2, f2[c2++] = (3 & o) << 6 | 63 & a;
      return l2;
    };
  }();
}, function(e2) {
  e2.exports = JSON.parse('{"title":"Treemap Test Data Schema","description":"JSON schema for a softwaremap test data, as used in the treemap typescript module.","type":"object","properties":{"api":{"type":"string","enum":["v2"]},"topic":{"type":"number"},"analyses":{"type":"number"},"apps":{"type":"number"},"tags":{"type":"object","properties":{"selection_mode":{"type":"number"},"untagged_selected":{"type":"boolean"},"bitmask":{"type":"number"}}},"values":{"type":"array","items":{"type":"object","properties":{"metric":{"type":"number"},"response":{"type":"string"}},"required":["metric","response"],"additionalProperties":false}},"heights":{"type":"object","properties":{"metric":{"type":"number"},"include_hierarchy":{"type":"boolean"},"mark_unmodified_items":{"type":"boolean"},"compare":{"type":"boolean"},"response":{"type":"string"}},"required":["metric","include_hierarchy","mark_unmodified_items","compare","response"],"additionalProperties":false},"labels":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string"},"ids":{"type":"array","items":{"type":"number"}},"response":{"type":"object"}},"required":["metric","ids","response"],"additionalProperties":false}}},"required":["api","values","heights","labels"],"additionalProperties":false}');
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.MRHData = void 0;
  var i2 = r2(0), n2 = r2(2), o = r2(5), a = r2(3), s = function() {
    function e3() {
    }
    return e3.createConfigAnimation = function(e4, t3, r3, i3) {
      var s2, u2, c2, l2, f2, h2, d2, p2, _2 = new n2.Configuration(), g2 = new a.Topology();
      g2.initialize(a.Topology.InputFormat.Interleaved, ((s2 = i3 == null ? void 0 : i3.topology) === null || s2 === void 0 ? void 0 : s2.semantics) ? (u2 = i3 == null ? void 0 : i3.topology) === null || u2 === void 0 ? void 0 : u2.semantics : a.Topology.InputSemantics.ParentIndexId, e4.edges);
      var m2 = new a.Topology();
      m2.initialize(a.Topology.InputFormat.Interleaved, ((c2 = i3 == null ? void 0 : i3.topology) === null || c2 === void 0 ? void 0 : c2.semantics) ? (l2 = i3 == null ? void 0 : i3.topology) === null || l2 === void 0 ? void 0 : l2.semantics : a.Topology.InputSemantics.ParentIndexId, t3.edges);
      var v2 = new Array(), b2 = new Array(), y2 = new Array(), E2 = new a.Topology();
      E2.initialize(a.Topology.InputFormat.Interleaved, ((f2 = i3 == null ? void 0 : i3.topology) === null || f2 === void 0 ? void 0 : f2.semantics) ? (h2 = i3 == null ? void 0 : i3.topology) === null || h2 === void 0 ? void 0 : h2.semantics : a.Topology.InputSemantics.ParentIndexId, r3.edges);
      for (var x2 = new Array(), T2 = new Array(), A2 = new Array(), O2 = 0, P2 = [[t3.weights, v2, m2], [t3.heights, b2, m2], [t3.colors, y2, m2], [r3.weights, x2, E2], [r3.heights, T2, E2], [r3.colors, A2, E2]]; O2 < P2.length; O2++) {
        var L2 = P2[O2], w2 = L2[0], S2 = L2[1], R2 = L2[2];
        S2.length = g2.numberOfNodes, S2.fill(-1);
        for (var I2 = 0, M2 = R2.nodes; I2 < M2.length; I2++) {
          var C2 = M2[I2], N2 = C2.id, D2 = C2.index in R2.topologyIndexToEdgeIndexMap ? R2.topologyIndexToEdgeIndexMap[C2.index] : void 0;
          if (D2 !== void 0) {
            var B2 = void 0;
            (B2 = C2.isLeaf ? g2.leafNodeIndexById(N2) : g2.innerNodeIndexById(N2)) !== void 0 && (B2 = B2 in g2.topologyIndexToEdgeIndexMap ? g2.topologyIndexToEdgeIndexMap[B2] : void 0) !== void 0 && (S2[B2] = w2[D2]);
          }
        }
      }
      if (_2.topology = { edges: e4.edges, semantics: ((d2 = i3 == null ? void 0 : i3.topology) === null || d2 === void 0 ? void 0 : d2.semantics) ? (p2 = i3 == null ? void 0 : i3.topology) === null || p2 === void 0 ? void 0 : p2.semantics : a.Topology.InputSemantics.ParentIndexId, format: a.Topology.InputFormat.Interleaved }, _2.buffers = [{ identifier: "mrh-weights", type: "numbers", data: e4.weights, linearization: "topology" }, { identifier: "mrh-heights", type: "numbers", data: e4.heights, linearization: "topology" }, { identifier: "mrh-colors", type: "numbers", data: e4.colors, linearization: "topology" }, { identifier: "prev-weights", type: "numbers", data: v2, linearization: "topology" }, { identifier: "prev-heights", type: "numbers", data: b2, linearization: "topology" }, { identifier: "prev-colors", type: "numbers", data: y2, linearization: "topology" }, { identifier: "next-weights", type: "numbers", data: x2, linearization: "topology" }, { identifier: "next-heights", type: "numbers", data: T2, linearization: "topology" }, { identifier: "next-colors", type: "numbers", data: A2, linearization: "topology" }], _2.bufferViews = [{ identifier: "weights", source: "buffer:mrh-weights", transformations: [{ type: "fill-invalid", value: 0, invalidValue: -1 }, { type: "propagate-up", operation: "sum" }] }, { identifier: "heights-normalized", source: "buffer:mrh-heights", transformations: [{ type: "fill-invalid", value: 0, invalidValue: -1 }, { type: "normalize", operation: "zero-to-max" }] }, { identifier: "colors-normalized", source: "buffer:mrh-colors", transformations: [{ type: "fill-invalid", value: 0, invalidValue: -1 }, { type: "normalize", operation: "zero-to-max" }] }, { identifier: "prev-weights", source: "buffer:prev-weights", transformations: [{ type: "fill-invalid", value: 0, invalidValue: -1 }, { type: "propagate-up", operation: "sum" }] }, { identifier: "prev-weights-ratio", source: "bufferView:prev-weights", transformations: [{ type: "transform", operation: "divide", buffer: "bufferView:weights" }] }, { identifier: "prev-heights-normalized", source: "buffer:prev-heights", transformations: [{ type: "fill-invalid", value: 0, invalidValue: -1 }, { type: "normalize", operation: "zero-to-max" }] }, { identifier: "prev-colors-normalized", source: "buffer:prev-colors", transformations: [{ type: "fill-invalid", value: 0, invalidValue: -1 }, { type: "normalize", operation: "zero-to-max" }] }, { identifier: "next-weights", source: "buffer:next-weights", transformations: [{ type: "fill-invalid", value: 0, invalidValue: -1 }, { type: "propagate-up", operation: "sum" }] }, { identifier: "next-weights-ratio", source: "bufferView:next-weights", transformations: [{ type: "transform", operation: "divide", buffer: "bufferView:weights" }] }, { identifier: "next-heights-normalized", source: "buffer:next-heights", transformations: [{ type: "fill-invalid", value: 0, invalidValue: -1 }, { type: "normalize", operation: "zero-to-max" }] }, { identifier: "next-colors-normalized", source: "buffer:next-colors", transformations: [{ type: "fill-invalid", value: 0, invalidValue: -1 }, { type: "normalize", operation: "zero-to-max" }] }], _2.colors = [{ identifier: "emphasis", space: "hex", value: "#00b0ff" }, { identifier: "auxiliary", space: "hex", values: ["#00aa5e", "#71237c"] }, { identifier: "inner", space: "hex", values: ["#e8eaee", "#eef0f4"] }, { identifier: "leaf", space: "hex", values: ["#4575b4", "#91bfdb", "#e0f3f8", "#ffffbf", "#fee090", "#fc8d59", "#d73027"] }], _2.layout = { algorithm: "snake", weight: "bufferView:weights", sort: { key: "bufferView:weights", algorithm: o.NodeSort.Algorithm.Descending }, parentPadding: { type: "absolute", value: 2e-3 }, siblingMargin: { type: "relative", value: 1e-3 }, accessoryPadding: { type: "absolute", direction: "bottom", value: [0.02, 0.01, 0.01, 0.01, 0.01, 0.01], relativeAreaThreshold: 0.4, targetAspectRatio: 8 } }, _2.geometry = { parentLayer: { showRoot: false }, leafLayers: [{ colorMap: "color:leaf", height: "bufferView:heights-normalized", colors: "bufferView:colors-normalized" }], emphasis: { outline: new Array(), highlight: new Array() }, heightScale: 0.5 }, _2.animations = [{ layer: 0, height: { buffers: ["bufferView:prev-heights-normalized", "bufferView:next-heights-normalized"], delaySpread: 2e3, timestamps: [0, 4e3], easing: "linear", order: "color" }, color: { buffers: ["bufferView:prev-colors-normalized", "bufferView:next-colors-normalized"], delaySpread: 2e3, timestamps: [0, 4e3], easing: "smoothstep", order: "color" }, areaScale: { buffers: ["bufferView:prev-weights-ratio", "bufferView:next-weights-ratio"], delaySpread: 2e3, timestamps: [0, 4e3], easing: "smoothstep", order: "color" } }], e4.labels) {
        var F2 = /* @__PURE__ */ new Map();
        Object.keys(e4.labels).forEach(function(t4) {
          if (e4.labels !== void 0) {
            var r4 = parseInt(t4, 10), i4 = e4.labels[r4];
            F2.set(r4, i4);
          }
        }), _2.labels = { innerNodeLayerRange: [1, 3], numTopInnerNodes: 4, callback: function(e5, t4) {
          return t4(F2);
        } };
      } else
        _2.labels = {};
      return _2;
    }, e3.createConfig = function(e4) {
      var t3 = new n2.Configuration();
      if (t3.topology = { edges: e4.edges, semantics: a.Topology.InputSemantics.ParentIndexId, format: a.Topology.InputFormat.Interleaved }, t3.buffers = [{ identifier: "source-weights", type: "numbers", data: e4.weights, linearization: "topology" }, { identifier: "source-heights", type: "numbers", data: e4.heights, linearization: "topology" }, { identifier: "source-colors", type: "numbers", data: e4.colors, linearization: "topology" }], t3.bufferViews = [{ identifier: "weights", source: "buffer:source-weights", transformations: [{ type: "fill-invalid", value: 0, invalidValue: -1 }, { type: "propagate-up", operation: "sum" }] }, { identifier: "heights-normalized", source: "buffer:source-heights", transformations: [{ type: "fill-invalid", value: 0, invalidValue: -1 }, { type: "normalize", operation: "zero-to-max" }] }, { identifier: "colors-normalized", source: "buffer:source-colors", transformations: [{ type: "fill-invalid", value: 0, invalidValue: -1 }, { type: "normalize", operation: "zero-to-max" }] }], t3.colors = [{ identifier: "emphasis", space: "hex", value: "#00b0ff" }, { identifier: "auxiliary", space: "hex", values: ["#00aa5e", "#71237c"] }, { identifier: "inner", space: "hex", values: ["#e8eaee", "#eef0f4"] }, { identifier: "leaf", space: "hex", values: ["#4575b4", "#91bfdb", "#e0f3f8", "#ffffbf", "#fee090", "#fc8d59", "#d73027"] }], t3.layout = { algorithm: "snake", weight: "bufferView:weights", sort: { key: "bufferView:weights", algorithm: o.NodeSort.Algorithm.Descending }, parentPadding: { type: "absolute", value: 2e-3 }, siblingMargin: { type: "relative", value: 1e-3 }, accessoryPadding: { type: "absolute", direction: "bottom", value: [0.02, 0.01, 0.01, 0.01, 0.01, 0.01], relativeAreaThreshold: 0.4, targetAspectRatio: 8 } }, t3.geometry = { parentLayer: { showRoot: false }, leafLayers: [{ colorMap: "color:leaf", height: "bufferView:heights-normalized", colors: "bufferView:colors-normalized" }], emphasis: { outline: new Array(), highlight: new Array() }, heightScale: 0.2 }, e4.labels) {
        var r3 = /* @__PURE__ */ new Map();
        Object.keys(e4.labels).forEach(function(t4) {
          if (e4.labels !== void 0) {
            var i3 = parseInt(t4, 10), n3 = e4.labels[i3];
            r3.set(i3, n3);
          }
        }), t3.labels = { innerNodeLayerRange: [1, 3], numTopInnerNodes: 4, callback: function(e5, t4) {
          return t4(r3);
        } };
      } else
        t3.labels = {};
      return t3;
    }, e3.fetchAsyncAnimation = function(t3, r3, n3) {
      var o2 = function(e4, t4) {
        return "fetching '" + e4 + "' failed (" + t4.status + "): " + t4.statusText;
      };
      return new Promise(function(a2, s2) {
        var u2 = [t3, r3, n3].map(function(t4) {
          return new Promise(function(r4, n4) {
            var a3 = new XMLHttpRequest();
            a3.open("GET", t4, true), a3.responseType = "json", a3.onload = function() {
              if (a3.status < 200 || a3.status >= 300)
                n4(o2(t4, a3));
              else {
                var s3 = a3.response;
                if (typeof a3.response == "string" && (s3 = JSON.parse(a3.response)), !i2.properties.validate(s3, e3.SCHEMA.properties, []))
                  return n4(function(e4) {
                    return "validating JSON in '" + e4 + "' failed.";
                  }(t4)), void console.log("Validation error");
                r4(s3);
              }
            }, a3.onerror = function() {
              return n4(o2(t4, a3));
            }, a3.ontimeout = function() {
              return n4(o2(t4, a3));
            }, a3.send();
          });
        });
        Promise.all(u2).then(function(t4) {
          var r4 = e3.createConfigAnimation(t4[0], t4[1], t4[2]);
          a2(r4);
        });
      });
    }, e3.fetchAsync = function(t3) {
      var r3 = function(e4, t4) {
        return "fetching '" + e4 + "' failed (" + t4.status + "): " + t4.statusText;
      };
      return new Promise(function(n3, o2) {
        return new Promise(function(n4, o3) {
          var a2 = new XMLHttpRequest();
          a2.open("GET", t3, true), a2.responseType = "json", a2.onload = function() {
            if (a2.status < 200 || a2.status >= 300)
              o3(r3(t3, a2));
            else {
              var s2 = a2.response;
              if (typeof a2.response == "string" && (s2 = JSON.parse(a2.response)), !i2.properties.validate(s2, e3.SCHEMA.properties, []))
                return o3(function(e4) {
                  return "validating JSON in '" + e4 + "' failed.";
                }(t3)), void console.log("Validation error");
              n4(s2);
            }
          }, a2.onerror = function() {
            return o3(r3(t3, a2));
          }, a2.ontimeout = function() {
            return o3(r3(t3, a2));
          }, a2.send();
        }).then(function(t4) {
          var r4 = e3.createConfig(t4);
          n3(r4);
        });
      });
    }, e3.SCHEMA = r2(91), e3;
  }();
  t2.MRHData = s;
}, function(e2) {
  e2.exports = JSON.parse('{"title":"Treemap MRH Data Schema","description":"JSON schema for a softwaremap MRH data, as used in the treemap typescript module for TASAM.","type":"object","properties":{"edges":{"type":"array","items":{"type":"number"}},"weights":{"type":"array","items":{"type":"number"}},"heights":{"type":"array","items":{"type":"number"}},"colors":{"type":"array","items":{"type":"number"}}},"required":["edges","weights","heights","colors"],"additionalProperties":false}');
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.CSVData = void 0;
  var i2 = r2(93), n2 = r2(2), o = r2(3), a = r2(5), s = function() {
  }, u2 = function() {
    function e3() {
    }
    return e3.initialize = function(e4, t3) {
      e4.id_column = "ids", e4.parent_column = "parents", t3.colors = [{ identifier: "emphasis", space: "hex", value: "#00b0ff" }, { identifier: "auxiliary", space: "hex", values: ["#00aa5e", "#71237c"] }, { identifier: "inner", space: "hex", values: ["#e8eaee", "#eef0f4"] }, { identifier: "leaf", space: "hex", values: ["#4575b4", "#91bfdb", "#e0f3f8", "#ffffbf", "#fee090", "#fc8d59", "#d73027"] }], t3.layout = { algorithm: "snake", weight: "bufferView:weights", sort: { key: "bufferView:weights", algorithm: a.NodeSort.Algorithm.Keep }, parentPadding: { type: "relative", value: 0.05 }, siblingMargin: { type: "relative", value: 0.05 }, accessoryPadding: { type: "absolute", direction: "bottom", value: [0, 0.02, 0.01, 0], relativeAreaThreshold: 0.4, targetAspectRatio: 8 } }, t3.geometry = { parentLayer: { showRoot: true }, leafLayers: [{ colorMap: "color:leaf", height: "bufferView:heights-normalized", colors: "bufferView:colors-normalized" }], emphasis: { outline: new Array(), highlight: new Array() }, heightScale: 0.5 }, t3.labels = { innerNodeLayerRange: [1, 2], numTopInnerNodes: 50, numTopWeightNodes: 50, numTopHeightNodes: 50, numTopColorNodes: 50 };
    }, e3.parseHeader = function(e4, t3, r3) {
      for (; e4.length >= 1 && e4[0].startsWith("#"); ) {
        var i3 = e4.shift().substring(1).trim().split("=").map(function(e5) {
          return e5.trim();
        }), n3 = i3[0], o2 = i3[1];
        n3 == "ids" ? t3.id_column = o2 : n3 == "parents" ? t3.parent_column = o2 : n3 == "weights" ? t3.weight_column = o2 : n3 == "heights" ? t3.height_column = o2 : n3 == "colors" ? t3.color_column = o2 : n3 == "labels" ? t3.label_column = o2 : console.log("Unparsed header", n3, "=", o2);
      }
    }, e3.parsePapaparseResult = function(e4, t3, r3) {
      for (var i3, n3 = function(e5, t4) {
        if (e5.meta.fields.indexOf(t4) < 0)
          return new Uint32Array(e5.data.length);
        var r4 = e5.data.map(function(e6) {
          return e6[t4] ? e6[t4] : 0;
        });
        return Uint32Array.from(r4);
      }, a2 = function(e5, t4) {
        if (e5.meta.fields.indexOf(t4) < 0)
          return new Float32Array(e5.data.length);
        var r4 = e5.data.map(function(e6) {
          return e6[t4] ? e6[t4] : -1;
        });
        return Float32Array.from([0].concat(r4));
      }, s2 = n3(e4, t3.id_column), u3 = n3(e4, t3.parent_column), c2 = a2(e4, t3.weight_column), l2 = a2(e4, t3.height_column), f2 = a2(e4, t3.color_column), h2 = function(e5, t4) {
        return e5.meta.fields.indexOf(t4) < 0 ? new Array(e5.data.length) : e5.data.map(function(e6) {
          return e6[t4] ? e6[t4] : "";
        });
      }(e4, t3.label_column), d2 = new Array(), p2 = 0; p2 < s2.length; p2++) {
        var _2 = s2[p2], g2 = u3[p2];
        d2.push(g2), d2.push(_2);
      }
      if (r3.topology = { edges: d2, semantics: o.Topology.InputSemantics.ParentIdId, format: o.Topology.InputFormat.Interleaved }, r3.buffers = [{ identifier: "source-weights", type: "numbers", data: c2, linearization: "topology" }, { identifier: "source-heights", type: "numbers", data: l2, linearization: "topology" }, { identifier: "source-colors", type: "numbers", data: f2, linearization: "topology" }], r3.bufferViews = [{ identifier: "weights", source: "buffer:source-weights", transformations: [{ type: "fill-invalid", value: 0, invalidValue: -1 }, { type: "propagate-up", operation: "sum" }] }, { identifier: "heights-normalized", source: "buffer:source-heights", transformations: [{ type: "fill-invalid", value: 0, invalidValue: -1 }, { type: "normalize", operation: "zero-to-max" }] }, { identifier: "colors-normalized", source: "buffer:source-colors", transformations: [{ type: "fill-invalid", value: 0, invalidValue: -1 }, { type: "normalize", operation: "zero-to-max" }] }], i3 = t3.label_column, e4.meta.fields.indexOf(i3) >= 0) {
        var m2 = /* @__PURE__ */ new Map();
        for (p2 = 0; p2 < h2.length; ++p2)
          m2.set(s2[p2], h2[p2]);
        r3.labels.callback = function(e5, t4) {
          return t4(m2);
        };
      }
      r3.altered.alter("any");
    }, e3.fetchAsync = function(t3) {
      return new Promise(function(r3, i3) {
        var n3 = new XMLHttpRequest();
        n3.open("GET", t3, true), n3.responseType = "text", n3.onload = function() {
          n3.status < 200 || n3.status >= 300 ? i3(e3.FAILED(t3, n3)) : e3.loadAsync(n3.response).then(function(e4) {
            return r3(e4);
          });
        }, n3.onerror = function() {
          return i3(e3.FAILED(t3, n3));
        }, n3.ontimeout = function() {
          return i3(e3.FAILED(t3, n3));
        }, n3.send();
      });
    }, e3.loadAsync = function(t3) {
      return new Promise(function(r3, o2) {
        var a2 = new n2.Configuration(), u3 = new s();
        e3.initialize(u3, a2);
        var c2 = t3.split("\n");
        e3.parseHeader(c2, u3, a2);
        var l2 = c2.join("\n");
        i2.parse(l2, { error: function(e4) {
          return o2(e4);
        }, complete: function(t4) {
          e3.parsePapaparseResult(t4, u3, a2), r3(a2);
        }, delimiter: e3.CSV_FIELD_DELIMITER, quoteChar: '"', escapeChar: '"', header: true, comments: "#", skipEmptyLines: true });
      });
    }, e3.CSV_FIELD_DELIMITER = ";", e3.FAILED = function(e4, t3) {
      return "fetching '" + e4 + "' failed (" + t3.status + "): " + t3.statusText;
    }, e3;
  }();
  t2.CSVData = u2;
}, function(e2, t2, r2) {
  var i2, n2, o;
  /* @license
  Papa Parse
  v5.3.2
  https://github.com/mholt/PapaParse
  License: MIT
  */
  n2 = [], (o = typeof (i2 = function e3() {
    var t3 = typeof self != "undefined" ? self : typeof window != "undefined" ? window : t3 !== void 0 ? t3 : {}, r3 = !t3.document && !!t3.postMessage, i3 = r3 && /blob:/i.test((t3.location || {}).protocol), n3 = {}, o2 = 0, a = { parse: function(r4, i4) {
      var s2 = (i4 = i4 || {}).dynamicTyping || false;
      if (E2(s2) && (i4.dynamicTypingFunction = s2, s2 = {}), i4.dynamicTyping = s2, i4.transform = !!E2(i4.transform) && i4.transform, i4.worker && a.WORKERS_SUPPORTED) {
        var u3 = function() {
          if (!a.WORKERS_SUPPORTED)
            return false;
          var r5, i5, s3 = (r5 = t3.URL || t3.webkitURL || null, i5 = e3.toString(), a.BLOB_URL || (a.BLOB_URL = r5.createObjectURL(new Blob(["(", i5, ")();"], { type: "text/javascript" })))), u4 = new t3.Worker(s3);
          return u4.onmessage = g2, u4.id = o2++, n3[u4.id] = u4;
        }();
        return u3.userStep = i4.step, u3.userChunk = i4.chunk, u3.userComplete = i4.complete, u3.userError = i4.error, i4.step = E2(i4.step), i4.chunk = E2(i4.chunk), i4.complete = E2(i4.complete), i4.error = E2(i4.error), delete i4.worker, void u3.postMessage({ input: r4, config: i4, workerId: u3.id });
      }
      var d3 = null;
      return a.NODE_STREAM_INPUT, typeof r4 == "string" ? d3 = i4.download ? new c2(i4) : new f2(i4) : r4.readable === true && E2(r4.read) && E2(r4.on) ? d3 = new h2(i4) : (t3.File && r4 instanceof File || r4 instanceof Object) && (d3 = new l2(i4)), d3.stream(r4);
    }, unparse: function(e4, t4) {
      var r4 = false, i4 = true, n4 = ",", o3 = "\r\n", s2 = '"', u3 = s2 + s2, c3 = false, l3 = null, f3 = false;
      !function() {
        if (typeof t4 == "object") {
          if (typeof t4.delimiter != "string" || a.BAD_DELIMITERS.filter(function(e5) {
            return t4.delimiter.indexOf(e5) !== -1;
          }).length || (n4 = t4.delimiter), (typeof t4.quotes == "boolean" || typeof t4.quotes == "function" || Array.isArray(t4.quotes)) && (r4 = t4.quotes), typeof t4.skipEmptyLines != "boolean" && typeof t4.skipEmptyLines != "string" || (c3 = t4.skipEmptyLines), typeof t4.newline == "string" && (o3 = t4.newline), typeof t4.quoteChar == "string" && (s2 = t4.quoteChar), typeof t4.header == "boolean" && (i4 = t4.header), Array.isArray(t4.columns)) {
            if (t4.columns.length === 0)
              throw new Error("Option columns is empty");
            l3 = t4.columns;
          }
          t4.escapeChar !== void 0 && (u3 = t4.escapeChar + s2), (typeof t4.escapeFormulae == "boolean" || t4.escapeFormulae instanceof RegExp) && (f3 = t4.escapeFormulae instanceof RegExp ? t4.escapeFormulae : /^[=+\-@\t\r].*$/);
        }
      }();
      var h3 = new RegExp(p2(s2), "g");
      if (typeof e4 == "string" && (e4 = JSON.parse(e4)), Array.isArray(e4)) {
        if (!e4.length || Array.isArray(e4[0]))
          return d3(null, e4, c3);
        if (typeof e4[0] == "object")
          return d3(l3 || Object.keys(e4[0]), e4, c3);
      } else if (typeof e4 == "object")
        return typeof e4.data == "string" && (e4.data = JSON.parse(e4.data)), Array.isArray(e4.data) && (e4.fields || (e4.fields = e4.meta && e4.meta.fields || l3), e4.fields || (e4.fields = Array.isArray(e4.data[0]) ? e4.fields : typeof e4.data[0] == "object" ? Object.keys(e4.data[0]) : []), Array.isArray(e4.data[0]) || typeof e4.data[0] == "object" || (e4.data = [e4.data])), d3(e4.fields || [], e4.data || [], c3);
      throw new Error("Unable to serialize unrecognized input");
      function d3(e5, t5, r5) {
        var a2 = "";
        typeof e5 == "string" && (e5 = JSON.parse(e5)), typeof t5 == "string" && (t5 = JSON.parse(t5));
        var s3 = Array.isArray(e5) && 0 < e5.length, u4 = !Array.isArray(t5[0]);
        if (s3 && i4) {
          for (var c4 = 0; c4 < e5.length; c4++)
            0 < c4 && (a2 += n4), a2 += _3(e5[c4], c4);
          0 < t5.length && (a2 += o3);
        }
        for (var l4 = 0; l4 < t5.length; l4++) {
          var f4 = s3 ? e5.length : t5[l4].length, h4 = false, d4 = s3 ? Object.keys(t5[l4]).length === 0 : t5[l4].length === 0;
          if (r5 && !s3 && (h4 = r5 === "greedy" ? t5[l4].join("").trim() === "" : t5[l4].length === 1 && t5[l4][0].length === 0), r5 === "greedy" && s3) {
            for (var p3 = [], g3 = 0; g3 < f4; g3++) {
              var m3 = u4 ? e5[g3] : g3;
              p3.push(t5[l4][m3]);
            }
            h4 = p3.join("").trim() === "";
          }
          if (!h4) {
            for (var v3 = 0; v3 < f4; v3++) {
              0 < v3 && !d4 && (a2 += n4);
              var b3 = s3 && u4 ? e5[v3] : v3;
              a2 += _3(t5[l4][b3], v3);
            }
            l4 < t5.length - 1 && (!r5 || 0 < f4 && !d4) && (a2 += o3);
          }
        }
        return a2;
      }
      function _3(e5, t5) {
        if (e5 == null)
          return "";
        if (e5.constructor === Date)
          return JSON.stringify(e5).slice(1, 25);
        var i5 = false;
        f3 && typeof e5 == "string" && f3.test(e5) && (e5 = "'" + e5, i5 = true);
        var o4 = e5.toString().replace(h3, u3);
        return (i5 = i5 || r4 === true || typeof r4 == "function" && r4(e5, t5) || Array.isArray(r4) && r4[t5] || function(e6, t6) {
          for (var r5 = 0; r5 < t6.length; r5++)
            if (-1 < e6.indexOf(t6[r5]))
              return true;
          return false;
        }(o4, a.BAD_DELIMITERS) || -1 < o4.indexOf(n4) || o4.charAt(0) === " " || o4.charAt(o4.length - 1) === " ") ? s2 + o4 + s2 : o4;
      }
    } };
    if (a.RECORD_SEP = String.fromCharCode(30), a.UNIT_SEP = String.fromCharCode(31), a.BYTE_ORDER_MARK = "\uFEFF", a.BAD_DELIMITERS = ["\r", "\n", '"', a.BYTE_ORDER_MARK], a.WORKERS_SUPPORTED = !r3 && !!t3.Worker, a.NODE_STREAM_INPUT = 1, a.LocalChunkSize = 10485760, a.RemoteChunkSize = 5242880, a.DefaultDelimiter = ",", a.Parser = _2, a.ParserHandle = d2, a.NetworkStreamer = c2, a.FileStreamer = l2, a.StringStreamer = f2, a.ReadableStreamStreamer = h2, t3.jQuery) {
      var s = t3.jQuery;
      s.fn.parse = function(e4) {
        var r4 = e4.config || {}, i4 = [];
        return this.each(function(e5) {
          if (s(this).prop("tagName").toUpperCase() !== "INPUT" || s(this).attr("type").toLowerCase() !== "file" || !t3.FileReader || !this.files || this.files.length === 0)
            return true;
          for (var n5 = 0; n5 < this.files.length; n5++)
            i4.push({ file: this.files[n5], inputElem: this, instanceConfig: s.extend({}, r4) });
        }), n4(), this;
        function n4() {
          if (i4.length !== 0) {
            var t4, r5, n5, u3 = i4[0];
            if (E2(e4.before)) {
              var c3 = e4.before(u3.file, u3.inputElem);
              if (typeof c3 == "object") {
                if (c3.action === "abort")
                  return t4 = u3.file, r5 = u3.inputElem, n5 = c3.reason, void (E2(e4.error) && e4.error({ name: "AbortError" }, t4, r5, n5));
                if (c3.action === "skip")
                  return void o3();
                typeof c3.config == "object" && (u3.instanceConfig = s.extend(u3.instanceConfig, c3.config));
              } else if (c3 === "skip")
                return void o3();
            }
            var l3 = u3.instanceConfig.complete;
            u3.instanceConfig.complete = function(e5) {
              E2(l3) && l3(e5, u3.file, u3.inputElem), o3();
            }, a.parse(u3.file, u3.instanceConfig);
          } else
            E2(e4.complete) && e4.complete();
        }
        function o3() {
          i4.splice(0, 1), n4();
        }
      };
    }
    function u2(e4) {
      this._handle = null, this._finished = false, this._completed = false, this._halted = false, this._input = null, this._baseIndex = 0, this._partialLine = "", this._rowCount = 0, this._start = 0, this._nextChunk = null, this.isFirstChunk = true, this._completeResults = { data: [], errors: [], meta: {} }, function(e5) {
        var t4 = b2(e5);
        t4.chunkSize = parseInt(t4.chunkSize), e5.step || e5.chunk || (t4.chunkSize = null), this._handle = new d2(t4), (this._handle.streamer = this)._config = t4;
      }.call(this, e4), this.parseChunk = function(e5, r4) {
        if (this.isFirstChunk && E2(this._config.beforeFirstChunk)) {
          var n4 = this._config.beforeFirstChunk(e5);
          n4 !== void 0 && (e5 = n4);
        }
        this.isFirstChunk = false, this._halted = false;
        var o3 = this._partialLine + e5;
        this._partialLine = "";
        var s2 = this._handle.parse(o3, this._baseIndex, !this._finished);
        if (!this._handle.paused() && !this._handle.aborted()) {
          var u3 = s2.meta.cursor;
          this._finished || (this._partialLine = o3.substring(u3 - this._baseIndex), this._baseIndex = u3), s2 && s2.data && (this._rowCount += s2.data.length);
          var c3 = this._finished || this._config.preview && this._rowCount >= this._config.preview;
          if (i3)
            t3.postMessage({ results: s2, workerId: a.WORKER_ID, finished: c3 });
          else if (E2(this._config.chunk) && !r4) {
            if (this._config.chunk(s2, this._handle), this._handle.paused() || this._handle.aborted())
              return void (this._halted = true);
            s2 = void 0, this._completeResults = void 0;
          }
          return this._config.step || this._config.chunk || (this._completeResults.data = this._completeResults.data.concat(s2.data), this._completeResults.errors = this._completeResults.errors.concat(s2.errors), this._completeResults.meta = s2.meta), this._completed || !c3 || !E2(this._config.complete) || s2 && s2.meta.aborted || (this._config.complete(this._completeResults, this._input), this._completed = true), c3 || s2 && s2.meta.paused || this._nextChunk(), s2;
        }
        this._halted = true;
      }, this._sendError = function(e5) {
        E2(this._config.error) ? this._config.error(e5) : i3 && this._config.error && t3.postMessage({ workerId: a.WORKER_ID, error: e5, finished: false });
      };
    }
    function c2(e4) {
      var t4;
      (e4 = e4 || {}).chunkSize || (e4.chunkSize = a.RemoteChunkSize), u2.call(this, e4), this._nextChunk = r3 ? function() {
        this._readChunk(), this._chunkLoaded();
      } : function() {
        this._readChunk();
      }, this.stream = function(e5) {
        this._input = e5, this._nextChunk();
      }, this._readChunk = function() {
        if (this._finished)
          this._chunkLoaded();
        else {
          if (t4 = new XMLHttpRequest(), this._config.withCredentials && (t4.withCredentials = this._config.withCredentials), r3 || (t4.onload = y2(this._chunkLoaded, this), t4.onerror = y2(this._chunkError, this)), t4.open(this._config.downloadRequestBody ? "POST" : "GET", this._input, !r3), this._config.downloadRequestHeaders) {
            var e5 = this._config.downloadRequestHeaders;
            for (var i4 in e5)
              t4.setRequestHeader(i4, e5[i4]);
          }
          if (this._config.chunkSize) {
            var n4 = this._start + this._config.chunkSize - 1;
            t4.setRequestHeader("Range", "bytes=" + this._start + "-" + n4);
          }
          try {
            t4.send(this._config.downloadRequestBody);
          } catch (e6) {
            this._chunkError(e6.message);
          }
          r3 && t4.status === 0 && this._chunkError();
        }
      }, this._chunkLoaded = function() {
        t4.readyState === 4 && (t4.status < 200 || 400 <= t4.status ? this._chunkError() : (this._start += this._config.chunkSize ? this._config.chunkSize : t4.responseText.length, this._finished = !this._config.chunkSize || this._start >= function(e5) {
          var t5 = e5.getResponseHeader("Content-Range");
          return t5 === null ? -1 : parseInt(t5.substring(t5.lastIndexOf("/") + 1));
        }(t4), this.parseChunk(t4.responseText)));
      }, this._chunkError = function(e5) {
        var r4 = t4.statusText || e5;
        this._sendError(new Error(r4));
      };
    }
    function l2(e4) {
      var t4, r4;
      (e4 = e4 || {}).chunkSize || (e4.chunkSize = a.LocalChunkSize), u2.call(this, e4);
      var i4 = typeof FileReader != "undefined";
      this.stream = function(e5) {
        this._input = e5, r4 = e5.slice || e5.webkitSlice || e5.mozSlice, i4 ? ((t4 = new FileReader()).onload = y2(this._chunkLoaded, this), t4.onerror = y2(this._chunkError, this)) : t4 = new FileReaderSync(), this._nextChunk();
      }, this._nextChunk = function() {
        this._finished || this._config.preview && !(this._rowCount < this._config.preview) || this._readChunk();
      }, this._readChunk = function() {
        var e5 = this._input;
        if (this._config.chunkSize) {
          var n4 = Math.min(this._start + this._config.chunkSize, this._input.size);
          e5 = r4.call(e5, this._start, n4);
        }
        var o3 = t4.readAsText(e5, this._config.encoding);
        i4 || this._chunkLoaded({ target: { result: o3 } });
      }, this._chunkLoaded = function(e5) {
        this._start += this._config.chunkSize, this._finished = !this._config.chunkSize || this._start >= this._input.size, this.parseChunk(e5.target.result);
      }, this._chunkError = function() {
        this._sendError(t4.error);
      };
    }
    function f2(e4) {
      var t4;
      u2.call(this, e4 = e4 || {}), this.stream = function(e5) {
        return t4 = e5, this._nextChunk();
      }, this._nextChunk = function() {
        if (!this._finished) {
          var e5, r4 = this._config.chunkSize;
          return r4 ? (e5 = t4.substring(0, r4), t4 = t4.substring(r4)) : (e5 = t4, t4 = ""), this._finished = !t4, this.parseChunk(e5);
        }
      };
    }
    function h2(e4) {
      u2.call(this, e4 = e4 || {});
      var t4 = [], r4 = true, i4 = false;
      this.pause = function() {
        u2.prototype.pause.apply(this, arguments), this._input.pause();
      }, this.resume = function() {
        u2.prototype.resume.apply(this, arguments), this._input.resume();
      }, this.stream = function(e5) {
        this._input = e5, this._input.on("data", this._streamData), this._input.on("end", this._streamEnd), this._input.on("error", this._streamError);
      }, this._checkIsFinished = function() {
        i4 && t4.length === 1 && (this._finished = true);
      }, this._nextChunk = function() {
        this._checkIsFinished(), t4.length ? this.parseChunk(t4.shift()) : r4 = true;
      }, this._streamData = y2(function(e5) {
        try {
          t4.push(typeof e5 == "string" ? e5 : e5.toString(this._config.encoding)), r4 && (r4 = false, this._checkIsFinished(), this.parseChunk(t4.shift()));
        } catch (e6) {
          this._streamError(e6);
        }
      }, this), this._streamError = y2(function(e5) {
        this._streamCleanUp(), this._sendError(e5);
      }, this), this._streamEnd = y2(function() {
        this._streamCleanUp(), i4 = true, this._streamData("");
      }, this), this._streamCleanUp = y2(function() {
        this._input.removeListener("data", this._streamData), this._input.removeListener("end", this._streamEnd), this._input.removeListener("error", this._streamError);
      }, this);
    }
    function d2(e4) {
      var t4, r4, i4, n4 = Math.pow(2, 53), o3 = -n4, s2 = /^\s*-?(\d+\.?|\.\d+|\d+\.\d+)([eE][-+]?\d+)?\s*$/, u3 = /^(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))$/, c3 = this, l3 = 0, f3 = 0, h3 = false, d3 = false, g3 = [], m3 = { data: [], errors: [], meta: {} };
      if (E2(e4.step)) {
        var v3 = e4.step;
        e4.step = function(t5) {
          if (m3 = t5, T2())
            x2();
          else {
            if (x2(), m3.data.length === 0)
              return;
            l3 += t5.data.length, e4.preview && l3 > e4.preview ? r4.abort() : (m3.data = m3.data[0], v3(m3, c3));
          }
        };
      }
      function y3(t5) {
        return e4.skipEmptyLines === "greedy" ? t5.join("").trim() === "" : t5.length === 1 && t5[0].length === 0;
      }
      function x2() {
        return m3 && i4 && (O2("Delimiter", "UndetectableDelimiter", "Unable to auto-detect delimiting character; defaulted to '" + a.DefaultDelimiter + "'"), i4 = false), e4.skipEmptyLines && (m3.data = m3.data.filter(function(e5) {
          return !y3(e5);
        })), T2() && function() {
          if (m3)
            if (Array.isArray(m3.data[0])) {
              for (var t5 = 0; T2() && t5 < m3.data.length; t5++)
                m3.data[t5].forEach(r5);
              m3.data.splice(0, 1);
            } else
              m3.data.forEach(r5);
          function r5(t6, r6) {
            E2(e4.transformHeader) && (t6 = e4.transformHeader(t6, r6)), g3.push(t6);
          }
        }(), function() {
          if (!m3 || !e4.header && !e4.dynamicTyping && !e4.transform)
            return m3;
          function t5(t6, r6) {
            var i5, n5 = e4.header ? {} : [];
            for (i5 = 0; i5 < t6.length; i5++) {
              var o4 = i5, a2 = t6[i5];
              e4.header && (o4 = i5 >= g3.length ? "__parsed_extra" : g3[i5]), e4.transform && (a2 = e4.transform(a2, o4)), a2 = A2(o4, a2), o4 === "__parsed_extra" ? (n5[o4] = n5[o4] || [], n5[o4].push(a2)) : n5[o4] = a2;
            }
            return e4.header && (i5 > g3.length ? O2("FieldMismatch", "TooManyFields", "Too many fields: expected " + g3.length + " fields but parsed " + i5, f3 + r6) : i5 < g3.length && O2("FieldMismatch", "TooFewFields", "Too few fields: expected " + g3.length + " fields but parsed " + i5, f3 + r6)), n5;
          }
          var r5 = 1;
          return !m3.data.length || Array.isArray(m3.data[0]) ? (m3.data = m3.data.map(t5), r5 = m3.data.length) : m3.data = t5(m3.data, 0), e4.header && m3.meta && (m3.meta.fields = g3), f3 += r5, m3;
        }();
      }
      function T2() {
        return e4.header && g3.length === 0;
      }
      function A2(t5, r5) {
        return i5 = t5, e4.dynamicTypingFunction && e4.dynamicTyping[i5] === void 0 && (e4.dynamicTyping[i5] = e4.dynamicTypingFunction(i5)), (e4.dynamicTyping[i5] || e4.dynamicTyping) === true ? r5 === "true" || r5 === "TRUE" || r5 !== "false" && r5 !== "FALSE" && (function(e5) {
          if (s2.test(e5)) {
            var t6 = parseFloat(e5);
            if (o3 < t6 && t6 < n4)
              return true;
          }
          return false;
        }(r5) ? parseFloat(r5) : u3.test(r5) ? new Date(r5) : r5 === "" ? null : r5) : r5;
        var i5;
      }
      function O2(e5, t5, r5, i5) {
        var n5 = { type: e5, code: t5, message: r5 };
        i5 !== void 0 && (n5.row = i5), m3.errors.push(n5);
      }
      this.parse = function(n5, o4, s3) {
        var u4 = e4.quoteChar || '"';
        if (e4.newline || (e4.newline = function(e5, t5) {
          e5 = e5.substring(0, 1048576);
          var r5 = new RegExp(p2(t5) + "([^]*?)" + p2(t5), "gm"), i5 = (e5 = e5.replace(r5, "")).split("\r"), n6 = e5.split("\n"), o5 = 1 < n6.length && n6[0].length < i5[0].length;
          if (i5.length === 1 || o5)
            return "\n";
          for (var a2 = 0, s4 = 0; s4 < i5.length; s4++)
            i5[s4][0] === "\n" && a2++;
          return a2 >= i5.length / 2 ? "\r\n" : "\r";
        }(n5, u4)), i4 = false, e4.delimiter)
          E2(e4.delimiter) && (e4.delimiter = e4.delimiter(n5), m3.meta.delimiter = e4.delimiter);
        else {
          var c4 = function(t5, r5, i5, n6, o5) {
            var s4, u5, c5, l5;
            o5 = o5 || [",", "	", "|", ";", a.RECORD_SEP, a.UNIT_SEP];
            for (var f4 = 0; f4 < o5.length; f4++) {
              var h4 = o5[f4], d4 = 0, p3 = 0, g4 = 0;
              c5 = void 0;
              for (var m4 = new _2({ comments: n6, delimiter: h4, newline: r5, preview: 10 }).parse(t5), v4 = 0; v4 < m4.data.length; v4++)
                if (i5 && y3(m4.data[v4]))
                  g4++;
                else {
                  var b3 = m4.data[v4].length;
                  p3 += b3, c5 !== void 0 ? 0 < b3 && (d4 += Math.abs(b3 - c5), c5 = b3) : c5 = b3;
                }
              0 < m4.data.length && (p3 /= m4.data.length - g4), (u5 === void 0 || d4 <= u5) && (l5 === void 0 || l5 < p3) && 1.99 < p3 && (u5 = d4, s4 = h4, l5 = p3);
            }
            return { successful: !!(e4.delimiter = s4), bestDelimiter: s4 };
          }(n5, e4.newline, e4.skipEmptyLines, e4.comments, e4.delimitersToGuess);
          c4.successful ? e4.delimiter = c4.bestDelimiter : (i4 = true, e4.delimiter = a.DefaultDelimiter), m3.meta.delimiter = e4.delimiter;
        }
        var l4 = b2(e4);
        return e4.preview && e4.header && l4.preview++, t4 = n5, r4 = new _2(l4), m3 = r4.parse(t4, o4, s3), x2(), h3 ? { meta: { paused: true } } : m3 || { meta: { paused: false } };
      }, this.paused = function() {
        return h3;
      }, this.pause = function() {
        h3 = true, r4.abort(), t4 = E2(e4.chunk) ? "" : t4.substring(r4.getCharIndex());
      }, this.resume = function() {
        c3.streamer._halted ? (h3 = false, c3.streamer.parseChunk(t4, true)) : setTimeout(c3.resume, 3);
      }, this.aborted = function() {
        return d3;
      }, this.abort = function() {
        d3 = true, r4.abort(), m3.meta.aborted = true, E2(e4.complete) && e4.complete(m3), t4 = "";
      };
    }
    function p2(e4) {
      return e4.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    }
    function _2(e4) {
      var t4, r4 = (e4 = e4 || {}).delimiter, i4 = e4.newline, n4 = e4.comments, o3 = e4.step, s2 = e4.preview, u3 = e4.fastMode, c3 = t4 = e4.quoteChar === void 0 || e4.quoteChar === null ? '"' : e4.quoteChar;
      if (e4.escapeChar !== void 0 && (c3 = e4.escapeChar), (typeof r4 != "string" || -1 < a.BAD_DELIMITERS.indexOf(r4)) && (r4 = ","), n4 === r4)
        throw new Error("Comment character same as delimiter");
      n4 === true ? n4 = "#" : (typeof n4 != "string" || -1 < a.BAD_DELIMITERS.indexOf(n4)) && (n4 = false), i4 !== "\n" && i4 !== "\r" && i4 !== "\r\n" && (i4 = "\n");
      var l3 = 0, f3 = false;
      this.parse = function(e5, a2, h3) {
        if (typeof e5 != "string")
          throw new Error("Input must be a string");
        var d3 = e5.length, _3 = r4.length, g3 = i4.length, m3 = n4.length, v3 = E2(o3), b3 = [], y3 = [], x2 = [], T2 = l3 = 0;
        if (!e5)
          return B2();
        if (u3 || u3 !== false && e5.indexOf(t4) === -1) {
          for (var A2 = e5.split(i4), O2 = 0; O2 < A2.length; O2++) {
            if (x2 = A2[O2], l3 += x2.length, O2 !== A2.length - 1)
              l3 += i4.length;
            else if (h3)
              return B2();
            if (!n4 || x2.substring(0, m3) !== n4) {
              if (v3) {
                if (b3 = [], M2(x2.split(r4)), F2(), f3)
                  return B2();
              } else
                M2(x2.split(r4));
              if (s2 && s2 <= O2)
                return b3 = b3.slice(0, s2), B2(true);
            }
          }
          return B2();
        }
        for (var P2 = e5.indexOf(r4, l3), L2 = e5.indexOf(i4, l3), w2 = new RegExp(p2(c3) + p2(t4), "g"), S2 = e5.indexOf(t4, l3); ; )
          if (e5[l3] !== t4)
            if (n4 && x2.length === 0 && e5.substring(l3, l3 + m3) === n4) {
              if (L2 === -1)
                return B2();
              l3 = L2 + g3, L2 = e5.indexOf(i4, l3), P2 = e5.indexOf(r4, l3);
            } else if (P2 !== -1 && (P2 < L2 || L2 === -1))
              x2.push(e5.substring(l3, P2)), l3 = P2 + _3, P2 = e5.indexOf(r4, l3);
            else {
              if (L2 === -1)
                break;
              if (x2.push(e5.substring(l3, L2)), D2(L2 + g3), v3 && (F2(), f3))
                return B2();
              if (s2 && b3.length >= s2)
                return B2(true);
            }
          else
            for (S2 = l3, l3++; ; ) {
              if ((S2 = e5.indexOf(t4, S2 + 1)) === -1)
                return h3 || y3.push({ type: "Quotes", code: "MissingQuotes", message: "Quoted field unterminated", row: b3.length, index: l3 }), N2();
              if (S2 === d3 - 1)
                return N2(e5.substring(l3, S2).replace(w2, t4));
              if (t4 !== c3 || e5[S2 + 1] !== c3) {
                if (t4 === c3 || S2 === 0 || e5[S2 - 1] !== c3) {
                  P2 !== -1 && P2 < S2 + 1 && (P2 = e5.indexOf(r4, S2 + 1)), L2 !== -1 && L2 < S2 + 1 && (L2 = e5.indexOf(i4, S2 + 1));
                  var R2 = C2(L2 === -1 ? P2 : Math.min(P2, L2));
                  if (e5.substr(S2 + 1 + R2, _3) === r4) {
                    x2.push(e5.substring(l3, S2).replace(w2, t4)), e5[l3 = S2 + 1 + R2 + _3] !== t4 && (S2 = e5.indexOf(t4, l3)), P2 = e5.indexOf(r4, l3), L2 = e5.indexOf(i4, l3);
                    break;
                  }
                  var I2 = C2(L2);
                  if (e5.substring(S2 + 1 + I2, S2 + 1 + I2 + g3) === i4) {
                    if (x2.push(e5.substring(l3, S2).replace(w2, t4)), D2(S2 + 1 + I2 + g3), P2 = e5.indexOf(r4, l3), S2 = e5.indexOf(t4, l3), v3 && (F2(), f3))
                      return B2();
                    if (s2 && b3.length >= s2)
                      return B2(true);
                    break;
                  }
                  y3.push({ type: "Quotes", code: "InvalidQuotes", message: "Trailing quote on quoted field is malformed", row: b3.length, index: l3 }), S2++;
                }
              } else
                S2++;
            }
        return N2();
        function M2(e6) {
          b3.push(e6), T2 = l3;
        }
        function C2(t5) {
          var r5 = 0;
          if (t5 !== -1) {
            var i5 = e5.substring(S2 + 1, t5);
            i5 && i5.trim() === "" && (r5 = i5.length);
          }
          return r5;
        }
        function N2(t5) {
          return h3 || (t5 === void 0 && (t5 = e5.substring(l3)), x2.push(t5), l3 = d3, M2(x2), v3 && F2()), B2();
        }
        function D2(t5) {
          l3 = t5, M2(x2), x2 = [], L2 = e5.indexOf(i4, l3);
        }
        function B2(e6) {
          return { data: b3, errors: y3, meta: { delimiter: r4, linebreak: i4, aborted: f3, truncated: !!e6, cursor: T2 + (a2 || 0) } };
        }
        function F2() {
          o3(B2()), b3 = [], y3 = [];
        }
      }, this.abort = function() {
        f3 = true;
      }, this.getCharIndex = function() {
        return l3;
      };
    }
    function g2(e4) {
      var t4 = e4.data, r4 = n3[t4.workerId], i4 = false;
      if (t4.error)
        r4.userError(t4.error, t4.file);
      else if (t4.results && t4.results.data) {
        var o3 = { abort: function() {
          i4 = true, m2(t4.workerId, { data: [], errors: [], meta: { aborted: true } });
        }, pause: v2, resume: v2 };
        if (E2(r4.userStep)) {
          for (var a2 = 0; a2 < t4.results.data.length && (r4.userStep({ data: t4.results.data[a2], errors: t4.results.errors, meta: t4.results.meta }, o3), !i4); a2++)
            ;
          delete t4.results;
        } else
          E2(r4.userChunk) && (r4.userChunk(t4.results, o3, t4.file), delete t4.results);
      }
      t4.finished && !i4 && m2(t4.workerId, t4.results);
    }
    function m2(e4, t4) {
      var r4 = n3[e4];
      E2(r4.userComplete) && r4.userComplete(t4), r4.terminate(), delete n3[e4];
    }
    function v2() {
      throw new Error("Not implemented.");
    }
    function b2(e4) {
      if (typeof e4 != "object" || e4 === null)
        return e4;
      var t4 = Array.isArray(e4) ? [] : {};
      for (var r4 in e4)
        t4[r4] = b2(e4[r4]);
      return t4;
    }
    function y2(e4, t4) {
      return function() {
        e4.apply(t4, arguments);
      };
    }
    function E2(e4) {
      return typeof e4 == "function";
    }
    return i3 && (t3.onmessage = function(e4) {
      var r4 = e4.data;
      if (a.WORKER_ID === void 0 && r4 && (a.WORKER_ID = r4.workerId), typeof r4.input == "string")
        t3.postMessage({ workerId: a.WORKER_ID, results: a.parse(r4.input, r4.config), finished: true });
      else if (t3.File && r4.input instanceof File || r4.input instanceof Object) {
        var i4 = a.parse(r4.input, r4.config);
        i4 && t3.postMessage({ workerId: a.WORKER_ID, results: i4, finished: true });
      }
    }), (c2.prototype = Object.create(u2.prototype)).constructor = c2, (l2.prototype = Object.create(u2.prototype)).constructor = l2, (f2.prototype = Object.create(f2.prototype)).constructor = f2, (h2.prototype = Object.create(u2.prototype)).constructor = h2, a;
  }) == "function" ? i2.apply(t2, n2) : i2) === void 0 || (e2.exports = o);
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.VideoCreator = void 0;
  var i2 = r2(0), n2 = r2(32), o = i2.auxiliaries.assert, a = function() {
    function e3(e4) {
      this._context = e4, this._screenshotCreator = new n2.ScreenshotCreator(this._context), this._images = new Array();
    }
    return e3.downloadVideo = function(e4) {
      var t3 = window.URL.createObjectURL(e4), r3 = document.createElement("a");
      r3.download = "video.webm", r3.href = t3, r3.click(), window.URL.revokeObjectURL(t3);
    }, e3.prototype.start = function(e4, t3) {
      this._fps = e4, this._rect = t3, this._images.length = 0;
    }, e3.prototype.addFrame = function(e4, t3) {
      o(this._fps !== void 0, "Video creator needs to be started before adding a frame.");
      var r3 = this._screenshotCreator.capture(e4, t3, this._rect);
      this._images.push(r3);
    }, e3.prototype.end = function() {
      return o(this._fps !== void 0, "Video creator needs to be started before ending it."), this._fps = void 0, this._images;
    }, e3;
  }();
  t2.VideoCreator = a;
}, function(e2, t2, r2) {
  Object.defineProperty(t2, "__esModule", { value: true }), t2.initialize = void 0;
  var i2 = r2(0), n2 = r2(0);
  t2.initialize = function(e3, t3, r3) {
    r3 === void 0 && (r3 = new n2.Color().fromHex("fafafa"));
    var o = e3 instanceof HTMLCanvasElement ? e3 : document.getElementById(e3), a = !(!window.chrome || !window.chrome.webstore && !window.chrome.runtime);
    navigator.appVersion.indexOf("Mac") !== -1 && a && (o.dataset.msqrdP = "no-WEBGL_draw_buffers", console.warn("detected Chrome on MacOS, disabling WEBGL_draw_buffers"));
    var s = new n2.Canvas(o, t3 || { alpha: false, antialias: false, depth: false, failIfMajorPerformanceCaveat: false, premultipliedAlpha: false, preserveDrawingBuffer: false, stencil: false });
    return new i2.viewer.EventBlocker(s.element).block("contextmenu"), s.clearColor = r3, s.framePrecision = n2.Wizard.Precision.byte, s.controller.multiFrameNumber = 64, s.context.gl.clearColor(r3.r, r3.g, r3.b, r3.a), s.context.gl.clear(s.context.gl.COLOR_BUFFER_BIT), s;
  };
}]);
function createFileTree(rows) {
  const rootNode = {
    name: "/",
    children: []
  };
  rows.forEach((row) => {
    const filenames = row.filename.replace("./", "").split("/");
    filenames.reduce((r2, name) => {
      if (!r2.children.find((c2) => c2.name === name)) {
        const child = {
          name,
          children: []
        };
        if (name === filenames[filenames.length - 1]) {
          child.metrics = row;
        }
        r2.children.push(child);
      }
      return r2.children.find((c2) => c2.name === name);
    }, rootNode);
  });
  console.log(rootNode);
  if (rootNode.children.length === 1) {
    return rootNode.children[0];
  }
  return rootNode;
}
function configFromFileTree(fileTreeRoot, valueMapping = {
  weights: "loc",
  heights: "nof",
  colors: "dc"
}) {
  const config2 = new treemap.Configuration();
  const edges = [];
  const names = /* @__PURE__ */ new Map();
  const weights = [0];
  const heights = [0];
  const colors = [0];
  function buildEdges(node2, parent = 0) {
    const index = edges.length + 1;
    names.set(index, node2.name);
    edges.push([parent, index]);
    if (node2.metrics) {
      weights.push(node2.metrics[valueMapping.weights]);
      heights.push(node2.metrics[valueMapping.heights]);
      colors.push(node2.metrics[valueMapping.colors]);
    } else {
      weights.push(0);
      heights.push(0);
      colors.push(0);
    }
    node2.children.forEach((child) => {
      buildEdges(child, index);
    });
  }
  buildEdges(fileTreeRoot);
  console.log("names", names);
  console.log("edges", edges);
  console.log("weights", weights);
  console.log("heights", heights);
  console.log("colors", colors);
  config2.colors = [
    { identifier: "emphasis", space: "hex", value: "#00b0ff" },
    { identifier: "auxiliary", space: "hex", values: ["#00aa5e", "#71237c"] },
    { identifier: "inner", space: "hex", values: ["#e8eaee", "#eef0f4"] },
    {
      identifier: "leaf",
      space: "hex",
      values: [
        "#4575b4",
        "#91bfdb",
        "#e0f3f8",
        "#ffffbf",
        "#fee090",
        "#fc8d59",
        "#d73027"
      ]
    }
  ];
  config2.layout = {
    algorithm: "snake",
    weight: "bufferView:weights",
    sort: {
      key: "bufferView:weights",
      algorithm: treemap.NodeSort.Algorithm.Keep
    },
    parentPadding: { type: "relative", value: 0.05 },
    siblingMargin: { type: "relative", value: 0.05 },
    accessoryPadding: {
      type: "absolute",
      direction: "bottom",
      value: [0, 0.02, 0.01, 0],
      relativeAreaThreshold: 0.4,
      targetAspectRatio: 8
    }
  };
  config2.geometry = {
    parentLayer: { showRoot: true },
    leafLayers: [
      {
        colorMap: "color:leaf",
        height: "bufferView:heights-normalized",
        colors: "bufferView:colors-normalized"
      }
    ],
    emphasis: { outline: new Array(), highlight: new Array() },
    heightScale: 0.5
  };
  config2.labels = {
    innerNodeLayerRange: [0, 4],
    numTopInnerNodes: 6,
    numTopWeightNodes: 6,
    numTopHeightNodes: 6,
    numTopColorNodes: 6
  };
  config2.labels.callback = (idsToLabel, callback) => callback(names);
  config2.altered.alter("labels");
  config2.topology = {
    edges,
    format: "tupled"
  };
  config2.buffers = [
    {
      identifier: "source-weights",
      type: "numbers",
      data: weights,
      linearization: "topology"
    },
    {
      identifier: "source-heights",
      type: "numbers",
      data: heights,
      linearization: "topology"
    },
    {
      identifier: "source-colors",
      type: "numbers",
      data: colors,
      linearization: "topology"
    }
  ];
  config2.bufferViews = [
    {
      identifier: "weights",
      source: "buffer:source-weights",
      transformations: [
        { type: "fill-invalid", value: 0, invalidValue: -1 },
        { type: "propagate-up", operation: "sum" }
      ]
    },
    {
      identifier: "heights-normalized",
      source: "buffer:source-heights",
      transformations: [
        { type: "fill-invalid", value: 0, invalidValue: -1 },
        { type: "normalize", operation: "zero-to-max" }
      ]
    },
    {
      identifier: "colors-normalized",
      source: "buffer:source-colors",
      transformations: [
        { type: "fill-invalid", value: 0, invalidValue: -1 },
        { type: "normalize", operation: "zero-to-max" }
      ]
    }
  ];
  console.log("Config", JSON.stringify(config2, null, 2));
  return config2;
}
function Treemap({
  header,
  rows
}) {
  const fileTree = createFileTree(rows);
  const [config2, setConfig] = react.exports.useState(configFromFileTree(fileTree));
  const [visualization, setVisualization] = react.exports.useState(new treemap.Visualization());
  let canvas = void 0;
  react.exports.useEffect(() => {
    window.SeereneConstants = {
      STATIC_DIRECTORY: `${"/"}assets`
    };
    canvas = treemap.initialize("canvasElement");
    canvas.renderer = visualization.renderer;
    console.log("cfg:", config2);
    loadConfig();
  }, []);
  function loadConfig() {
    console.log("loadConfig");
    if (config2 && visualization && canvas) {
      visualization.configuration = config2;
      console.log("Visualization:", visualization);
      console.log("Config:", visualization.configuration);
      console.log("Canvas:", canvas);
      canvas.controller.update();
    } else {
      throw Error("Visualization or config not initialized");
    }
  }
  return /* @__PURE__ */ jsxs("div", {
    style: {
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      height: "100%",
      width: "100%"
    },
    children: [/* @__PURE__ */ jsx("div", {
      id: "labelContainer",
      className: "label-overlay"
    }), /* @__PURE__ */ jsx("canvas", {
      id: "canvasElement",
      width: "1400",
      height: "700"
    })]
  });
}
function MetaMetrics({
  header,
  rows,
  size
}) {
  const totalLoc = rows.reduce((acc, row) => acc + row.loc, 0);
  return /* @__PURE__ */ jsx(Container$1, {
    children: /* @__PURE__ */ jsxs(Stack$1, {
      direction: "row",
      spacing: 2,
      children: [/* @__PURE__ */ jsx(Chip$1, {
        label: `${rows.length} files`,
        variant: "outlined"
      }), /* @__PURE__ */ jsx(Chip$1, {
        label: `${totalLoc} lines of code`,
        variant: "outlined"
      }), /* @__PURE__ */ jsx(Chip$1, {
        label: `${prettyBytes(size)} of metrics stored`,
        variant: "outlined"
      })]
    })
  });
}
function NoMetrics() {
  return /* @__PURE__ */ jsx(Box$1, {
    m: 4,
    children: /* @__PURE__ */ jsxs(Stack$1, {
      spacing: 2,
      mb: 4,
      children: [/* @__PURE__ */ jsx(Typography$1, {
        variant: "h4",
        children: "No Metrics found :("
      }), /* @__PURE__ */ jsx(Typography$1, {
        children: "There are no metrics for this commit on the repository."
      })]
    })
  });
}
function Metrics({
  owner,
  repo,
  commitSHA,
  branch
}) {
  const [data, setData] = react.exports.useState();
  const [size, setSize] = react.exports.useState();
  const [loading, setLoading] = react.exports.useState(true);
  const [error, setError] = react.exports.useState(false);
  react.exports.useEffect(() => {
    async function fetchData() {
      if (!owner || !repo)
        return;
      if (!commitSHA) {
        if (!branch)
          return;
        commitSHA = await getCommitSHA(owner, repo, branch);
      }
      try {
        const [metricsBlob] = await getMetricsBlob(owner, repo, commitSHA);
        const parsedData = parseMetrics(metricsBlob.content);
        console.log("parsedData:", parsedData);
        setData(parsedData);
        setSize(metricsBlob.size);
      } catch (e2) {
        console.error(e2);
        setError(true);
      } finally {
        setLoading(false);
      }
    }
    fetchData();
  }, []);
  return /* @__PURE__ */ jsxs(Stack$1, {
    spacing: 2,
    children: [loading && /* @__PURE__ */ jsx(LinearProgress$1, {}), error && /* @__PURE__ */ jsx(NoMetrics, {}), data && /* @__PURE__ */ jsx(Treemap, __spreadValues({}, data)), data && size && /* @__PURE__ */ jsx(MetaMetrics, __spreadValues({
      size
    }, data)), data && /* @__PURE__ */ jsx(MetricsTable, __spreadValues({}, data))]
  });
}
function Embed({
  owner,
  repo,
  commitSHA,
  branch
}) {
  return /* @__PURE__ */ jsx(Metrics, {
    owner,
    repo,
    commitSHA,
    branch
  });
}
function init() {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
  const container = document.createElement("div");
  (_b = (_a = document.currentScript) == null ? void 0 : _a.parentElement) == null ? void 0 : _b.append(container);
  const root = createRoot(container);
  const owner = (_d = (_c = document.currentScript) == null ? void 0 : _c.getAttribute("owner")) != null ? _d : void 0;
  const repo = (_f = (_e = document.currentScript) == null ? void 0 : _e.getAttribute("repo")) != null ? _f : void 0;
  const branch = (_h = (_g = document.currentScript) == null ? void 0 : _g.getAttribute("branch")) != null ? _h : void 0;
  const commitSHA = (_j = (_i = document.currentScript) == null ? void 0 : _i.getAttribute("commitSHA")) != null ? _j : void 0;
  root.render(/* @__PURE__ */ jsx(Embed, {
    owner,
    repo,
    branch,
    commitSHA
  }));
}
init();
//# sourceMappingURL=embed.es.js.map
